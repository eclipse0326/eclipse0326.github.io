<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Git</title>
    <url>/2024/11/19/Git%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<h1 id="Git版本控制工具学习"><a href="#Git版本控制工具学习" class="headerlink" title="Git版本控制工具学习"></a>Git版本控制工具学习</h1><h2 id="01-Git-初识"><a href="#01-Git-初识" class="headerlink" title="01.Git 初识"></a>01.Git 初识</h2><ol>
<li><p><a href="https://developer.mozilla.org/zh-CN/docs/Glossary/Git">概念</a>：一个免费开源，分布式的代码版本控制系统，帮助开发团队维护代码</p>
</li>
<li><p>作用：记录代码内容，切换代码版本，多人开发时高效合并代码内容</p>
</li>
<li><p>如何学：</p>
<p>个人本机使用：Git 基础命令和概念</p>
<p>多人共享使用：团队开发同一个项目的代码版本管理</p>
</li>
</ol>
<img data-src="/2024/11/19/Git%E5%AD%A6%E4%B9%A0/image-20230529122327389.png" class="" title="image-20230529122327389">

<p><a href="https://git-scm.com/">Windows</a><a href="https://git-scm.com/">系统</a>：exe 程序，默认下一步即可</p>
<p>Mac系统：dmg 程序，默认下一步即可</p>
<p>检验成功：</p>
<p>1.打开 bash 终端（git 专用）</p>
<p>2.命令：git -v（查看版本号）</p>
<img data-src="/2024/11/19/Git%E5%AD%A6%E4%B9%A0/image-20230529122438740.png" class="" title="image-20230529122438740">

<p>配置：用户名和邮箱，应用在每次提交代码版本时表明自己身份</p>
<p>命令：</p>
<p>git config –global user.name “itheima”</p>
<p>git config –global user.email “<a href="mailto:&#x69;&#x74;&#x68;&#x65;&#105;&#x6d;&#x61;&#x40;&#x69;&#116;&#99;&#x61;&#x73;&#x74;&#x2e;&#99;&#110;">&#x69;&#x74;&#x68;&#x65;&#105;&#x6d;&#x61;&#x40;&#x69;&#116;&#99;&#x61;&#x73;&#x74;&#x2e;&#99;&#110;</a>“</p>
<img data-src="/2024/11/19/Git%E5%AD%A6%E4%B9%A0/image-20230529122501504.png" class="" title="image-20230529122501504">

<p>1.为何学习 Git ？</p>
<p>ü 管理代码版本，记录，切换，合并代码</p>
<p>2.Git 学习：</p>
<p>ü 现在本机自己使用</p>
<p>ü 再学习多人共享使用</p>
<p>3.如何安装使用？</p>
<p>ü 程序双击安装</p>
<p>ü 在 VSCode 中使用 bash 终端以及 git 命令</p>
<h2 id="02-Git-仓库"><a href="#02-Git-仓库" class="headerlink" title="02.Git 仓库"></a>02.Git 仓库</h2><p>Git 仓库（repository）：记录文件状态内容的地方，存储着修改的历史记录</p>
<img data-src="/2024/11/19/Git%E5%AD%A6%E4%B9%A0/image-20230529122701516.png" class="" title="image-20230529122701516">

<p>创建：</p>
<p>1.把本地文件夹转换成 Git 仓库：命令 git init</p>
<p>2.从其他服务器上克隆 Git 仓库</p>
<img data-src="/2024/11/19/Git%E5%AD%A6%E4%B9%A0/image-20230529122712090.png" class="" title="image-20230529122712090">

<p>需求：创建一个空白的 Git 仓库</p>
<p>1.什么是 Git 仓库 ？</p>
<p>ü 记录文件状态内容和历史记录的地方（.git 文件夹）</p>
<p>2.如何创建 Git 仓库？</p>
<p>ü 把本地文件夹转换成 Git 仓库：命令 git init</p>
<p>ü 从其他服务器上克隆 Git 仓库</p>
<h2 id="03-Git-的三个区域"><a href="#03-Git-的三个区域" class="headerlink" title="03.Git 的三个区域"></a>03.Git 的三个区域</h2><p>Git 使用时：</p>
<p>工作区：实际开发时操作的文件夹</p>
<p>暂存区：保存之前的准备区域（暂存改动过的文件）</p>
<p>版本库：提交并保存暂存区中的内容，产生一个版本快照</p>
<table>
<thead>
<tr>
<th><strong>命令</strong></th>
<th><strong>作用</strong></th>
</tr>
</thead>
<tbody><tr>
<td>git add 文件名</td>
<td>暂存指定文件</td>
</tr>
<tr>
<td>git add .</td>
<td>暂存所有改动的文件</td>
</tr>
<tr>
<td>git commit -m “注释说明”</td>
<td>提交并保存，产生版本快照</td>
</tr>
</tbody></table>
<p>需求：把登录页面新增后，暂存并提交</p>
<img data-src="/2024/11/19/Git%E5%AD%A6%E4%B9%A0/image-20230529122806613.png" class="" title="image-20230529122806613">

<p>1.Git 使用时有哪些区域 ？</p>
<p>ü 工作区，暂存区，版本库</p>
<p>2.工作区的内容，最终要如何保存在版本库中？</p>
<p>ü git add 添加到暂存区</p>
<p>ü等待时机后 git commit 提交保存到版本库，产生一次版本快照记录</p>
<h2 id="04-Git-文件状态"><a href="#04-Git-文件状态" class="headerlink" title="04.Git 文件状态"></a>04.Git 文件状态</h2><p>Git 文件 2 种状态：</p>
<p>ü未跟踪：新文件，从未被 Git 管理过</p>
<p>ü已跟踪：Git 已经知道和管理的文件</p>
<table>
<thead>
<tr>
<th><strong>文件状态</strong></th>
<th><strong>概念</strong></th>
<th><strong>场景</strong></th>
</tr>
</thead>
<tbody><tr>
<td>未跟踪（U）</td>
<td>从未被 Git 管理过</td>
<td>新文件</td>
</tr>
<tr>
<td>新添加（A）</td>
<td>第一次被 Git 暂存</td>
<td>之前版本记录无此文件</td>
</tr>
<tr>
<td>未修改（’’）</td>
<td>三个区域统一</td>
<td>提交保存后</td>
</tr>
<tr>
<td>已修改（M）</td>
<td>工作区内容变化</td>
<td>修改了内容产生</td>
</tr>
</tbody></table>
<p>使用：修改文件，暂存，提交保存记录，如此反复</p>
<img data-src="/2024/11/19/Git%E5%AD%A6%E4%B9%A0/image-20230529123235160.png" class="" title="image-20230529123235160">

<p>需求：新增 css 文件，并使用 git status -s 查看文件状态，并最终提交</p>
<p>第一列是暂存区状态</p>
<p>第二列是工作区状态</p>
<img data-src="/2024/11/19/Git%E5%AD%A6%E4%B9%A0/image-20230529123220861.png" class="" title="image-20230529123220861">

<p>1.Git 文件状态分为哪 2 种 ？</p>
<p>ü 未跟踪和已跟踪（新添加，未修改，已修改）</p>
<p>2.如何查看暂存区和工作区文件状态？</p>
<p>ü git status -s</p>
<h2 id="05-Git-暂存区作用"><a href="#05-Git-暂存区作用" class="headerlink" title="05.Git 暂存区作用"></a>05.Git 暂存区作用</h2><p>暂存区：暂时存储，可以临时恢复代码内容，与版本库解耦</p>
<p>暂存区 -&gt; 覆盖 -&gt; 工作区，命令：git restore 目标文件（注意：完全确认覆盖时使用）</p>
<p>从暂存区移除文件，命令：git rm –cached 目标文件</p>
<img data-src="/2024/11/19/Git%E5%AD%A6%E4%B9%A0/image-20230529123430435.png" class="" title="image-20230529123430435">

<p>1.如何移除暂存区已暂存的文件？</p>
<p>ü git rm –cached 目标文件</p>
<h2 id="06-练习-登录页面"><a href="#06-练习-登录页面" class="headerlink" title="06.练习-登录页面"></a>06.练习-登录页面</h2><p>需求：新增 JS 代码并暂存提交产生新的版本快照</p>
<p>步骤</p>
<p>1.新增 js 文件和内容</p>
<p>2.临时存放在暂存区</p>
<p>3.提交保存到版本库</p>
<img data-src="/2024/11/19/Git%E5%AD%A6%E4%B9%A0/image-20230529123902303.png" class="" title="image-20230529123902303">

<h2 id="07-Git-切换版本"><a href="#07-Git-切换版本" class="headerlink" title="07.Git-切换版本"></a>07.Git-切换版本</h2><p>概念：把版本库某个版本对应的内容快照，恢复到工作区&#x2F;暂存区</p>
<p>查看提交历史：git log –oneline </p>
<img data-src="/2024/11/19/Git%E5%AD%A6%E4%B9%A0/image-20230529123927488.png" class="" title="image-20230529123927488">



<p>回退命令：</p>
<p>git reset –soft 版本号（其他文件未跟踪）</p>
<p>git reset –hard 版本号</p>
<p>git reset –mixed 版本号 （与 git reset 等价）</p>
<p>注意1：只有记录在版本库的提交记录才能恢复</p>
<p>注意2：回退后，继续修改-&gt;暂存-&gt;提交操作即可（产生新的提交记录过程）</p>
<img data-src="/2024/11/19/Git%E5%AD%A6%E4%B9%A0/image-20230529123953391.png" class="" title="image-20230529123953391">

<p>1.什么是 Git 回退版本？</p>
<p>ü 把版本库某个版本对应的内容快照，恢复到工作区&#x2F;暂存区</p>
<p>2.强制覆盖暂存区和工作区的命令？</p>
<p>ü git reset –hard 版本号</p>
<p>3.如何查看提交历史？</p>
<p>ü git log –oneline </p>
<p>ü git reflog –oneline</p>
<h2 id="08-删除文件"><a href="#08-删除文件" class="headerlink" title="08.删除文件"></a>08.删除文件</h2><p>需求：删除 editor.js 文件，并产生一次版本记录</p>
<p>步骤：</p>
<p>1.手动删除工作区文件</p>
<p>2.暂存变更&#x2F;手动删除暂存区文件造成变更</p>
<p>3.提交保存</p>
<p>总结：</p>
<p>工作区只要改变，都可以暂存提交产生新记录</p>
<img data-src="/2024/11/19/Git%E5%AD%A6%E4%B9%A0/image-20230529124024285.png" class="" title="image-20230529124024285">



<h2 id="09-忽略文件"><a href="#09-忽略文件" class="headerlink" title="09.忽略文件"></a>09.忽略文件</h2><p>概念：.gitignore 文件可以让 git 彻底忽略跟踪指定文件</p>
<p>目的：让 git 仓库更小更快，避免重复无意义的文件管理</p>
<p>例如：</p>
<p>1.系统或软件自动生成的文件</p>
<p>2.编译产生的结果文件</p>
<p>3.运行时生成的日志文件，缓存文件，临时文件等</p>
<p>4.涉密文件，密码，秘钥等文件</p>
<p>创建：</p>
<p>1.项目根目录新建 .gitignore 文件</p>
<p>2.填入相应配置来忽略指定文件</p>
<p>注意：如果文件已经被暂存区跟踪过，可以从暂存区移除即可</p>
<img data-src="/2024/11/19/Git%E5%AD%A6%E4%B9%A0/image-20230529124342264.png" class="" title="image-20230529124342264">



<h2 id="10-分支的概念"><a href="#10-分支的概念" class="headerlink" title="10.分支的概念"></a>10.分支的概念</h2><p>概念：本质上是指向提交节点的可变指针，默认名字是 master</p>
<p>注意：HEAD 指针影响工作区&#x2F;暂存区的代码状态</p>
<img data-src="/2024/11/19/Git%E5%AD%A6%E4%B9%A0/image-20230529124358139.png" class="" title="image-20230529124358139">

<img data-src="/2024/11/19/Git%E5%AD%A6%E4%B9%A0/image-20230529124411556.png" class="" title="image-20230529124411556">

<p>场景：开发新需求 &#x2F; 修复 Bug，保证主线代码随时可用，多人协同开发提高效率</p>
<p>例如：</p>
<p>在现有代码上创建新分支完成内容列表业务</p>
<p>突然需要紧急修复 Bug - 单独创建分支解决 Bug</p>
<img data-src="/2024/11/19/Git%E5%AD%A6%E4%B9%A0/image-20230529124440884.png" class="" title="image-20230529124440884">



<p>需求：创建内容列表 content 分支，并产生 3 次提交记录</p>
<p>步骤：</p>
<ol>
<li>创建分支命令：git branch 分支名</li>
</ol>
<img data-src="/2024/11/19/Git%E5%AD%A6%E4%B9%A0/image-20230529124522942.png" class="" title="image-20230529124522942">

<ol start="2">
<li>切换分支命令：git checkout 分支名</li>
</ol>
<img data-src="/2024/11/19/Git%E5%AD%A6%E4%B9%A0/image-20230529124555625.png" class="" title="image-20230529124555625">



<ol start="3">
<li><p>工作区准备代码并暂存提交，重复 3 次</p>
<img data-src="/2024/11/19/Git%E5%AD%A6%E4%B9%A0/image-20230529124624603.png" class="" title="image-20230529124624603"></li>
</ol>
<p>1.什么是 Git 分支？</p>
<p>ü 指针，指向提交记录</p>
<p>2.HEAD 指针的作用？</p>
<p>ü 影响暂存区和工作区的代码</p>
<p>3.如何创建和切换指针？</p>
<p>ü git branch 分支名</p>
<p>ü git checkout 分支名</p>
<h2 id="11-练习-登录-bug-修复"><a href="#11-练习-登录-bug-修复" class="headerlink" title="11.练习-登录 bug 修复"></a>11.练习-登录 bug 修复</h2><p>需求：新建 login-bug 分支，做 2 次提交记录（对手机号长度，验证码长度做判断）</p>
<p>步骤：</p>
<p>1.切回到主分支：git checkout master</p>
<p>2.创建新分支：git branch login-bug</p>
<p>3.切换新分支：git checkout login-bug</p>
<p>4.修改代码，暂存，提交产生版本记录</p>
<h2 id="12-分支-合并与删除"><a href="#12-分支-合并与删除" class="headerlink" title="12.分支-合并与删除"></a>12.分支-合并与删除</h2><p>需求：把 login-bug 合并回到 master 分支并删除 login-bug 分支</p>
<p>步骤：</p>
<p>1.切回到要合入的分支上：git checkout master</p>
<p>2.合并其他分支过来：git merge login-bug</p>
<p>3.删除合并后的分支指针：git branch -d login-bug</p>
<img data-src="/2024/11/19/Git%E5%AD%A6%E4%B9%A0/image-20230529124941866.png" class="" title="image-20230529124941866">



<h2 id="13-分支-合并与提交"><a href="#13-分支-合并与提交" class="headerlink" title="13.分支-合并与提交"></a>13.分支-合并与提交</h2><p>合并提交：发生于原分支产生了新的提交记录后，再合并回去时发生，自动使用多个快照记录合并后产生一次新的提交</p>
<p>步骤：</p>
<p>1.切回到要合入的分支上：git checkout master</p>
<p>2.合并其他分支过来：git merge content</p>
<p>3.删除合并后的分支：git branch -d content</p>
<img data-src="/2024/11/19/Git%E5%AD%A6%E4%B9%A0/image-20230529125317433.png" class="" title="image-20230529125317433">

<p>最后合并回到主分支上时，提交记录流程图：</p>
<p>注意：提交记录的顺序按照产生的先后顺序排列，而非合并的先后顺序</p>
<img data-src="/2024/11/19/Git%E5%AD%A6%E4%B9%A0/image-20230529125338535.png" class="" title="image-20230529125338535">



<h2 id="14-分支-合并冲突"><a href="#14-分支-合并冲突" class="headerlink" title="14.分支-合并冲突"></a>14.分支-合并冲突</h2><p>需求1：基于 master 新建 publish 分支，完成发布文章业务，然后修改内容页面的 html 文件的 title 标签，并提交一次</p>
<p>需求2：切换到 master，也在修改内容页面的 html 文件的 title 标签，并提交一次</p>
<p>冲突：把 publish 分支合并到 master 回来，产生合并冲突</p>
<p>概念：不同分支中，对同一个文件的同一部分修改，Git 无法干净的合并，产生合并冲突</p>
<p>解决：</p>
<p>1.打开 VSCode 找到冲突文件并手动解决</p>
<p>2.解决后需要提交一次记录</p>
<p>避免：（多交流）</p>
<p>1.按页面划分不同分支开发</p>
<p>2.公共代码在统一文件夹维护</p>
<p>3.Node等软件版本统一，npm 包统一下载</p>
<img data-src="/2024/11/19/Git%E5%AD%A6%E4%B9%A0/image-20230529125409357.png" class="" title="image-20230529125409357">

<h2 id="15-Git-常用命令"><a href="#15-Git-常用命令" class="headerlink" title="15.Git 常用命令"></a>15.Git 常用命令</h2><table>
<thead>
<tr>
<th><strong>命令</strong></th>
<th><strong>作用</strong></th>
<th><strong>注意</strong></th>
</tr>
</thead>
<tbody><tr>
<td>git -v</td>
<td>查看 git 版本</td>
<td></td>
</tr>
<tr>
<td>git init</td>
<td>初始化 git 仓库</td>
<td></td>
</tr>
<tr>
<td>git add 文件标识</td>
<td>暂存某个文件</td>
<td>文件标识以终端为起始的相对路径</td>
</tr>
<tr>
<td>git add .</td>
<td>暂存所有文件</td>
<td></td>
</tr>
<tr>
<td>git commit -m ‘说明注释’</td>
<td>提交产生版本记录</td>
<td>每次提交，把暂存区内容快照一份</td>
</tr>
<tr>
<td>git status</td>
<td>查看文件状态 - 详细信息</td>
<td></td>
</tr>
<tr>
<td>git status -s</td>
<td>查看文件状态 - 简略信息</td>
<td>第一列是暂存区状态，第二列是工作区状态</td>
</tr>
<tr>
<td>git ls-files</td>
<td>查看暂存区文件列表</td>
<td></td>
</tr>
<tr>
<td>git restore 文件标识</td>
<td>从暂存区恢复到工作区</td>
<td>如果文件标识为 . 则恢复所有文件</td>
</tr>
<tr>
<td>git rm –cached 文件标识</td>
<td>从暂存区移除文件</td>
<td>不让 git 跟踪文件变化</td>
</tr>
<tr>
<td>git log</td>
<td>查看提交记录 - 详细信息</td>
<td></td>
</tr>
<tr>
<td>git log –oneline</td>
<td>查看提交记录 - 简略信息</td>
<td>版本号 分支指针 提交时说明注释</td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th><strong>命令</strong></th>
<th><strong>作用</strong></th>
<th><strong>注意</strong></th>
</tr>
</thead>
<tbody><tr>
<td>git reflog –oneline</td>
<td>查看完整历史 - 简略消息</td>
<td>包括提交，切换，回退等所有记录</td>
</tr>
<tr>
<td>git reset 版本号</td>
<td>切换版本代码到暂存区和工作区</td>
<td>–soft 模式保留暂存区和工作区原本内容  –hard 模式不保留暂存区和工作区原本内容  –mixed 模式不保留暂存区，工作区保留（默认）  先覆盖到暂存区，再用暂存区对比覆盖工作区</td>
</tr>
<tr>
<td>git branch 分支名</td>
<td>创建分支</td>
<td></td>
</tr>
<tr>
<td>git branch</td>
<td>查看本地分支</td>
<td></td>
</tr>
<tr>
<td>git branch -d 分支名</td>
<td>删除分支</td>
<td>请确保记录已经合并到别的分支下，再删除分支</td>
</tr>
<tr>
<td>git checkout 分支名</td>
<td>切换分支</td>
<td></td>
</tr>
<tr>
<td>git checkout -b 分支名</td>
<td>创建并立刻切换分支</td>
<td></td>
</tr>
<tr>
<td>git merge 分支名</td>
<td>把分支提交历史记录合并到当前所在分支</td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
</tbody></table>
<h2 id="16-Git-远程仓库"><a href="#16-Git-远程仓库" class="headerlink" title="16.Git 远程仓库"></a>16.Git 远程仓库</h2><p>概念：托管在因特网或其他网络中的你的项目的版本库</p>
<p>作用：保存版本库的历史记录，多人协作</p>
<p>创建：公司自己服务器 &#x2F; 第三方托管平台（Gitee，GitLab，GitHub…）</p>
<img data-src="/2024/11/19/Git%E5%AD%A6%E4%B9%A0/image-20230529125501239.png" class="" title="image-20230529125501239">

<p>需求：创建远程版本库，并把本地 Git 仓库推送上去保存</p>
<p>步骤：</p>
<p>1.注册第三方托管平台网站账号</p>
<p>2.新建仓库得到远程仓库 Git 地址</p>
<p>3.本地 Git 仓库添加远程仓库原点地址</p>
<p>命令：git remote add 远程仓库别名 远程仓库地址</p>
<p>例如：git remote add origin <a href="https://gitee.com/lidongxu/work.git">https://gitee.com/lidongxu/work.git</a></p>
<p>4.本地 Git 仓库推送版本记录到远程仓库</p>
<p>命令：git push -u 远程仓库别名 本地和远程分支名</p>
<p>例如：git push -u origin master</p>
<p>完整写法：git push –set-upstream origin master:master</p>
<img data-src="/2024/11/19/Git%E5%AD%A6%E4%B9%A0/image-20230529125724051.png" class="" title="image-20230529125724051">



<p>1.远程版本库的作用？</p>
<p>ü 保存提交历史记录，多人共享</p>
<p>2.远程版本库使用步骤？</p>
<p>ü 创建远程版本库（自己服务器&#x2F;第三方托管平台）</p>
<p>ü 本地版本库设置远程地址</p>
<p>ü 推送本地版本库到远程</p>
<p>3.推送的命令？</p>
<p>ü git push -u origin master</p>
<h2 id="17-Git-远程仓库-克隆"><a href="#17-Git-远程仓库-克隆" class="headerlink" title="17.Git 远程仓库 - 克隆"></a>17.Git 远程仓库 - 克隆</h2><p>克隆：拷贝一个 Git 仓库到本地，进行使用</p>
<p>命令：git clone 远程仓库地址，例如：git clone <a href="https://gitee.com/lidongxu/work.git">https://gitee.com/lidongxu/work.git</a></p>
<p>效果：在运行命令所在文件夹，生成 work 项目文件夹（包含版本库，并映射到暂存区和工作区）</p>
<p>注意1：Git 本地仓库已经建立好和远程仓库的链接</p>
<p>注意2：仓库公开随意克隆，推送需要身为仓库团队成员</p>
<img data-src="/2024/11/19/Git%E5%AD%A6%E4%B9%A0/image-20230529125801013.png" class="" title="image-20230529125801013">



<h2 id="18-多人协同开发"><a href="#18-多人协同开发" class="headerlink" title="18.多人协同开发"></a>18.多人协同开发</h2><p>需求：小传新代码共享给小智</p>
<p>步骤：</p>
<p>1.小传开发代码 -&gt; 工作区 -&gt; 暂存区 -&gt; 提交 -&gt; 拉取（可选）-&gt; 推送</p>
<p>2.小智 -&gt; 拉取（后续也可以开发代码 -&gt; … -&gt; 推送）</p>
<p>3.想要看到别人同步上去的最新内容：git pull origin master 等价于 </p>
<p>git fetch origin master:master（获取远程分支记录到本地，未合并）</p>
<p>git merge origin&#x2F;master (把远程分支记录合并到所在分支下）</p>
<img data-src="/2024/11/19/Git%E5%AD%A6%E4%B9%A0/image-20230529130044971.png" class="" title="image-20230529130044971">



<h2 id="19-VSCode-中使用-Git"><a href="#19-VSCode-中使用-Git" class="headerlink" title="19.VSCode 中使用 Git"></a>19.VSCode 中使用 Git</h2><p>使用：源代码管理，进行暂存，撤销，对比差异，提交等操作</p>
<p>注意：VSCode 打开的项目文件夹下需要有 .git 仓库</p>
<img data-src="/2024/11/19/Git%E5%AD%A6%E4%B9%A0/image-20230529130105619.png" class="" title="image-20230529130105619">



<h2 id="20-案例-发布数据管理平台"><a href="#20-案例-发布数据管理平台" class="headerlink" title="20.案例-发布数据管理平台"></a>20.案例-发布数据管理平台</h2><p>需求：把 Webpack 压缩好的 dist 分发文件夹网页，部署到码云上，开启 Page 服务在互联网中浏览</p>
<p>步骤：</p>
<p>1.初始化本地 Git 仓库（这次是非空文件夹-配套素材 dist 文件夹）</p>
<p>2.初始化远程 Git 仓库（这一次也是非空的）</p>
<p>3.本地配置远程仓库链接</p>
<p>4.本地拉取合并一下（确认本地要包含远程内容时使用）</p>
<p>5.本地推送到远程 Git 仓库</p>
<p>6.开启 page 网页服务得到地址浏览</p>
<h2 id="21-Git-常用命令"><a href="#21-Git-常用命令" class="headerlink" title="21.Git 常用命令"></a>21.Git 常用命令</h2><table>
<thead>
<tr>
<th><strong>命令</strong></th>
<th><strong>作用</strong></th>
<th><strong>注意</strong></th>
</tr>
</thead>
<tbody><tr>
<td>git remote add 远程仓库别名 远程仓库地址</td>
<td>添加远程仓库地址</td>
<td>别名唯一，地址是 .git 结尾的网址</td>
</tr>
<tr>
<td>git remote -v</td>
<td>查看远程仓库地址</td>
<td></td>
</tr>
<tr>
<td>git remote remove 远程仓库别名</td>
<td>删除远程仓库地址</td>
<td></td>
</tr>
<tr>
<td>git pull 远程仓库别名 分支名</td>
<td>拉取</td>
<td>完整写法：git pull 远程仓库别名 远程分支名:本地分支名  等价于：git fetch 和 git merge</td>
</tr>
<tr>
<td>git push 远程仓库别名 分支名</td>
<td>推送</td>
<td>完整写法：git push 远程仓库别名 本地分支名:远程分支名  -u：建立通道后以后可以简写 git push</td>
</tr>
<tr>
<td>git pull –rebase 远程仓库别名 分支名</td>
<td>拉取合并</td>
<td>合并没有关系的记录</td>
</tr>
<tr>
<td>git clone 远程仓库地址</td>
<td>克隆</td>
<td>从0得到一个远程的Git仓库到本地使用</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>其他工具</category>
        <category>git</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>HTML基础</title>
    <url>/2024/11/18/HTML%E5%9F%BA%E7%A1%80/</url>
    <content><![CDATA[<span id="more"></span>

<h2 id="「学习笔记」HTML基础"><a href="#「学习笔记」HTML基础" class="headerlink" title="「学习笔记」HTML基础"></a>「学习笔记」HTML基础</h2><p>＃前端入门</p>
<p>4个</p>
<img data-src="/2024/11/18/HTML%E5%9F%BA%E7%A1%80/b06779d58b554c57.jpg" class="">

<h2 id="「学习笔记」HTML基础-1"><a href="#「学习笔记」HTML基础-1" class="headerlink" title="「学习笔记」HTML基础"></a>「学习笔记」HTML基础</h2><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>勤做笔记不仅可以让自己学的扎实，更重要的是可以让自己少走弯路。有人说：＂再次翻开笔记是什么感觉”，我的回答是：＂初恋般的感觉＂。或许笔记不一定十全十美，但肯定会让你有种初恋般的怦然心动。0</p>
<p>本章着重复习Html的基础内容，学习Html究竟要学些什么呢？主要是学习各种标签，来搭建网页的“结构”。</p>
<p>本篇文章主要由五个章节构成，从WEB标准到初识HTML，接着学习HTML常用标签，最后学习表格列表和表单。00开始充电之旅啦～～～</p>
<h3 id="一、认识WEB"><a href="#一、认识WEB" class="headerlink" title="一、认识WEB"></a>一、认识WEB</h3><p>「网页」主要是由文字、图像和超链接等元素构成，当然除了这些元素，网页中还可以包括音频、视频以及Flash等。</p>
<p>「浏览器」是网页显示、运行的平台。</p>
<p>「浏览器内核」（排版引擎、解释引擎、渲染引擎）</p>
<p>负责读取网页内容，整理讯息，计算网页的显示方式并显示页面。</p>
<p>浏览器内核备注IETridentIE、猎豹安全、360极速浏览器、百度浏览器firefoxGecko可惜这几年已经没落了，打开速度慢、升级频繁、猪一样的队友flash、神一样的对手chrome。Safariwebkit现在很多人错误地把 webkit 叫做 chrome内核（即使 chrome内核已经是 blink 了）。苹果感觉像被别人抢了媳妇，都哭晕在厕所里面了。chromeChromium／Blink在 Chromium 项目中研发Blink 渲染引擎（即浏览器核心），内置于 Chrome 浏览器之中。Blink 其实是 WebKit 的分支。大部分国产浏览器最新版都采用Blink 内核。二次开发 Operablink 现在跟随 chrome用blink内核。</p>
<h2 id="Web-标准"><a href="#Web-标准" class="headerlink" title="Web 标准"></a>Web 标准</h2><p>「构成」口结构标准，表现标准和行为标准</p>
<p>结构标准用于对网页元素进行整理和分类（HTML）</p>
<p>表现标准用于设置网页元素的版式、颜色、大小等外观属性（CSS）</p>
<p>行为标准用于对网页模型的定义及交互的编写（JavaScript）</p>
<p>「Web标准的优点」□</p>
<p>易于维护：只需更改CSS文件，就可以改变整站的样式</p>
<p>页面响应快：HTML文档体积变小，响应时间短</p>
<p>可访问性：语义化的HTML（结构和表现相分离的HTML）编写的网页文件，更容易被屏幕阅读器识别</p>
<p>设备兼容性：不同的样式表可以让网页在不同的设备上呈现不同的样式</p>
<p>搜索引擎：语义化的HTML能更容易被搜索引擎解析，提升排名</p>
<h3 id="二、HTML初识"><a href="#二、HTML初识" class="headerlink" title="二、HTML初识"></a>二、HTML初识</h3><h2 id="HTML初识"><a href="#HTML初识" class="headerlink" title="HTML初识"></a>HTML初识</h2><p>「HTML」（Hyper Text Markup Language）：超文本标记语言</p>
<p>「所谓超文本，有2层含义：</p>
<p>因为它可以加入图片、声音、动画、多媒体等内容（超越文本限制）</p>
<p>不仅如此，它还可以从一个文件跳转到另一个文件，与世界各地主机的文件连接（超级链接文本）。</p>
<p>「HTML骨架格式」</p>
<p>＜！–页面中最大的标签根标签–＞</p>
<p>&lt;html&gt;</p>
<p>&lt;1⋯头部标签–＞</p>
<p>&lt;head&gt;</p>
<p>&lt;1⋯标题标签–＞</p>
<p>&lt;title&gt;&lt;&#x2F;title&gt;</p>
<p>&lt;&#x2F;head&gt;</p>
<p>&lt;1⋯文档的主体–＞</p>
<p>&lt;body&gt;</p>
<p>&lt;&#x2F;body&gt;</p>
<p>&lt;&#x2F;htan|&gt;</p>
<p>「团队约定大小写」</p>
<p>HTML标签名、类名、标签属性和大部分属性值统一用小写</p>
<p>「HTML元素标签分类」</p>
<p>常规元素（双标签）</p>
<p>空元素（单标签）</p>
<p>常规元素（双标签）</p>
<p>＜标签名＞内容＜／标签名＞ 比如&lt;body&gt;我是文字&lt;&#x2F;body&gt;</p>
<p>空元素（单标签）</p>
<p>＜标签名／＞比如 ＜br／＞或＜br＞</p>
<p>「HTML标签关系」</p>
<p>嵌套关系父子级包含关系</p>
<p>并列关系兄弟级并列关系</p>
<p>如果两个标签之间的关系是嵌套关系，子元素最好缩进一个tab键的身位（一个tab是4个空格）。如果是并列关系，最好上下对齐。</p>
<h1 id="文档类型＜！DOCTYPE＞"><a href="#文档类型＜！DOCTYPE＞" class="headerlink" title="文档类型＜！DOCTYPE＞"></a>文档类型＜！DOCTYPE＞</h1><p>「文档类型」用来说明你用的XHTML或者HTML是什么版本。</p>
<p>＜！DOCTYPE html＞告诉浏览器按照HTML5标准解析页面。</p>
<h2 id="页面语言lang"><a href="#页面语言lang" class="headerlink" title="页面语言lang"></a>页面语言lang</h2><p>lang指定该html标签内容所用的语言</p>
<p>&lt;html lang&#x3D;”en”&gt;</p>
<p>en定义语言为英语 zh-CN定义语言为中文</p>
<p>「lang的作用」</p>
<p>根据根据lang属性来设定不同语言的css样式，或者字体</p>
<p>告诉搜索引擎做精确的识别</p>
<p>让语法检查程序做语言识别</p>
<p>帮助翻译工具做识别</p>
<p>帮助网页阅读程序做识别</p>
<h1 id="字符集"><a href="#字符集" class="headerlink" title="字符集"></a>字符集</h1><p>「字符集」（Character set）是多个字符的集合，计算机要准确的处理</p>
<p>各种字符集文字，需要进行字符编码，以便计算机能够识别和存储各种文字。</p>
<p>UTF-8是目前最常用的字符集编码方式</p>
<p>让 html 文件是以UTF-8 编码保存的，浏览器根据编码去解码对应的html内容。</p>
<p>&lt;meta cha$r \sec t &#x3D; ^ { n } \cup T F - 8 ^ { n }$1&gt;</p>
<h2 id="「meta-viewport的用法」"><a href="#「meta-viewport的用法」" class="headerlink" title="「meta viewport的用法」"></a>「meta viewport的用法」</h2><p>通常viewport是指视窗、视口。浏览器上（也可能是一个app 中的webview）用来显示网页的那部分区域。在移动端和 pc端视口是不同的，pc端的视口是浏览器窗口区域，而在移动端有三个不同的视口概念：布局视口、视觉视口、理想视口</p>
<p>meta 有两个属性 name 和 http-equiv</p>
<h2 id="name属性的取值"><a href="#name属性的取值" class="headerlink" title="name属性的取值"></a>name属性的取值</h2><p>keywords（关键字）告诉搜索引擎，该网页的关键字</p>
<p>description（网站内容描述）用于告诉搜索引擎，你网站的主要内容。</p>
<p>viewport（移动端的窗口）</p>
<p>robots（定义搜索引擎爬虫的索引方式）robots 用来告诉爬虫哪些页面需要索引，哪些页面不需要索引</p>
<p>author（作者）</p>
<p>generator（网页制作软件）</p>
<p>copyright（版权）</p>
<h2 id="http-equiv有以下参数"><a href="#http-equiv有以下参数" class="headerlink" title="http-equiv有以下参数"></a>http-equiv有以下参数</h2><p>http-equiv相当于http的文件头作用，它可以向浏览器传回一些有用的信息，以帮助正确和精确地显示网页内容</p>
<p>content-Type 设定网页字符集（Html4用法，不推荐）</p>
<p>Expires（期限），可以用于设定网页的到期时间。一旦网页过期，必须到服务器上重新传输。</p>
<p>Pragma（cache 模式），是用于设定禁止浏览器从本地机的缓存中调阅页面内容，设定后一旦离开网页就无法从Cache中再调出</p>
<p>Refresh（刷新），自动刷新并指向新页面。</p>
<p>cache-control（请求和响应遵循的缓存机制）</p>
<p>&lt;meta name&#x3D;”viewport”cotentent&#x3D;”width&#x3D;detevice-width,initial-$5 c a \vert e &#x3D; 1 . 0 ^ { \prime \prime } &gt;$</p>
<h2 id="HTML标签的语义化"><a href="#HTML标签的语义化" class="headerlink" title="HTML标签的语义化"></a>HTML标签的语义化</h2><p>方便代码的阅读和维护，样式丢失的时候能让页面呈现清晰的结构。</p>
<p>有利于SEO，搜索引擎根据标签来确定上下文和各个关键字的权重。</p>
<p>方便其他设备解析，如盲人阅读器根据语义渲染网页</p>
<p>「拓展」标签：规定页面上所有链接的默认 URL 和设置整体链接的打开状态</p>
<p>&lt;head&gt;</p>
<p>basehref&#x3D;”<a href="http://www.baidu.com"target="_blank/">http://www.baidu.com&quot;target=&quot;_blank</a>“&gt;</p>
<p>base$\tan ( \cot x ) &#x3D; \frac { \alpha } { 2 } , x + 1 + \frac { \alpha } { 2 }$</p>
<p>&lt;&#x2F;head&gt;</p>
<p>&lt;body&gt;</p>
<p>ahref&#x3D;”&gt;测试&lt;&#x2F;a&gt;跳转到百度</p>
<p>&lt;&#x2F;body&gt;</p>
<h2 id="HTML常用标签"><a href="#HTML常用标签" class="headerlink" title="HTML常用标签"></a>HTML常用标签</h2><h2 id="常用标签"><a href="#常用标签" class="headerlink" title="常用标签"></a>常用标签</h2><p>「1．排版标签」主要和css搭配使用，显示网页结构的标签，是网页布局最常用的标签。</p>
<p>标题标签h（h1～h6）</p>
<p>段落标签p，可以把 HTML 文档分割为若干段落</p>
<p>水平线标签hr</p>
<p>换行标签br</p>
<p>div和 span标签：是没有语义的，是我们网页布局最主要的2个盒子。</p>
<h3 id="「2．排版标签」"><a href="#「2．排版标签」" class="headerlink" title="「2．排版标签」"></a>「2．排版标签」</h3><p>b和 strong 文字以粗体显示</p>
<p>i和em 文字以斜体显示</p>
<p>s和 del 文字以加删除线显示</p>
<p>u和ins 文字以加下划线显示</p>
<h3 id="「3．标签属性（行内式）」"><a href="#「3．标签属性（行内式）」" class="headerlink" title="「3．标签属性（行内式）」"></a>「3．标签属性（行内式）」</h3><p>使用HTML制作网页时，如果想让HTML标签提供更多的信息，可以使用 HTML标签的属性加以设置。</p>
<p>＜标签名 属性1＝＂属性值1”属性2&#x3D;⋅属性值2＂．．．＞内容 ＜／标签名＞＜手机 颜色＝＂红色”大小&#x3D;”5寸”&gt; ＜／手机＞</p>
<h3 id="「4．图像标签img」"><a href="#「4．图像标签img」" class="headerlink" title="「4．图像标签img」"></a>「4．图像标签img」</h3><h2 id="＜img／＞标记属性"><a href="#＜img／＞标记属性" class="headerlink" title="＜img／＞标记属性"></a>＜img／＞标记属性</h2><table>
<thead>
<tr>
<th>属性</th>
<th>属性值</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>src</td>
<td>URL</td>
<td>图像的路径</td>
</tr>
<tr>
<td>alt</td>
<td>文本</td>
<td>图像不能显示时的替换文本</td>
</tr>
<tr>
<td>title</td>
<td>文本</td>
<td>鼠标悬停时显示的内容</td>
</tr>
<tr>
<td>width</td>
<td>像素（XHTML不支持％页面百分比）</td>
<td>设置图像的宽度</td>
</tr>
<tr>
<td>height</td>
<td>像素（XHTML不支持％页面百分比）</td>
<td>设置图像的高度</td>
</tr>
<tr>
<td>border</td>
<td>数字</td>
<td>设置图像边框的宽度</td>
</tr>
</tbody></table>
<h2 id="注意："><a href="#注意：" class="headerlink" title="注意："></a>注意：</h2><p>标签可以拥有多个属性，必须写在开始标签中，位于标签名后面。属性之间不分先后顺序，标签名与属性、属性与属性之间均以空格分开。</p>
<p>采取键值对的格式 $k e y &#x3D; ^ { n } v a l u e ^ { n }$ 的格式</p>
<p>&lt;img$S r C &#x3D; ^ { n } C z . j p g ^ { * }$ $w i d t h &#x3D; ^ { * } 3 0 0 ^ { * }$ $h e i g h t &#x3D; ^ { \prime } 3 0 0 ^ { n }$ $b o r d e r &#x3D; ^ { n } 3 ^ { n }$1title＝＂这是个小蒲公英＂／＞</p>
<p>「5．链接标签（重点）」</p>
<p>＜a href＝＂跳转目标＂target＝＂目标窗口的弹出方式＊＞文本或图像＜／a＞</p>
<p>target＝＂＿self＂ 默认窗口弹出方式</p>
<p>target＝＂＿blank＂新窗口弹出</p>
<p>属性作用href用于指定链接目标的url地址，（必须属性）当为标签应用href属性时，它就具有了超链接的功能target用于指定链接页面的打开方式，其取值有＿self和＿blank两种，其中＿self为默认值，＿blank为在新窗口中打开方式。</p>
<h2 id="src-和-href-的区别"><a href="#src-和-href-的区别" class="headerlink" title="src 和 href 的区别"></a>src 和 href 的区别</h2><p>一句话概括：src 是引入资源的 href 是跳转 url的</p>
<p>src用于替换当前元素，href用于在当前文档和引用资源之间确立联系。</p>
<p>src是 source的缩写，指向外部资源的位置，指向的内容将会嵌入到文档中当前标签所在位置；在请求src资源时会将其指向的资源下载并应用到文档内，例如js脚本，img图片和 frame 等元素。当浏览器解析到该元素时，会暂停其他资源的下载和处理，直到将该资源加载、编译、执行完毕，图片和框架等元素也如此，类似于将所指向资源嵌入当前标签内。这也是为什么将js脚本放在底部而不是头部。</p>
<p>href是 Hypertext Reference的缩写，指向网络资源所在位置，建立和当前元素（锚点）或当前文档（链接）之间的链接。如果我们在文档中添加那么浏览器会识别该文档为css文件，就会并行下载资源并且不会停止对当前文档的处理。这也是为什么建议使用link 方式来加载css，而不是使用＠import方式。</p>
<h2 id="注意：-1"><a href="#注意：-1" class="headerlink" title="注意："></a>注意：</h2><p>外部链接 需要添加 http：／／<a href="http://www.baidu.com/">www.baidu.com</a></p>
<p>内部链接 直接链接内部页面名称即可 比如＜a</p>
<p>href＝＂index.html＂＞ 首页</p>
<p>如果当时没有确定链接目标时，通常将链接标签的href属性值定义为“＃”（即 href＝＂＃＂），表示该链接暂时为一个空链接。</p>
<p>不仅可以创建文本超链接，在网页中各种网页元素，如图像、表格、音频、视频等都可以添加超链接。</p>
<h2 id="锚点定位：通过创建锚点链接，用户能够快速定位到目标内容。"><a href="#锚点定位：通过创建锚点链接，用户能够快速定位到目标内容。" class="headerlink" title="锚点定位：通过创建锚点链接，用户能够快速定位到目标内容。"></a>锚点定位：通过创建锚点链接，用户能够快速定位到目标内容。</h2><p>1．使用相应的id名标注跳转目标的位置。（找目标）</p>
<p>&lt;h3id&#x3D;”two”&gt;第2集&lt;&#x2F;h3&gt;</p>
<h2 id="2．使用-a-h-r-e-f-n-＃id名＂＞链接文本＜／a＞创建链接文本（被点击的）"><a href="#2．使用-a-h-r-e-f-n-＃id名＂＞链接文本＜／a＞创建链接文本（被点击的）" class="headerlink" title="2．使用$&lt; a h r e f &#x3D; ^ { n }$＃id名＂＞链接文本＜／a＞创建链接文本（被点击的）&lt;a$h r e f &#x3D; ^ { n }$*$t w o ^ { u } &gt;$"></a>2．使用$&lt; a h r e f &#x3D; ^ { n }$＃id名＂＞链接文本＜／a＞创建链接文本（被点击的）&lt;a$h r e f &#x3D; ^ { n }$*$t w o ^ { u } &gt;$</h2><h2 id="「6．注释标签」"><a href="#「6．注释标签」" class="headerlink" title="「6．注释标签」"></a>「6．注释标签」</h2><p>&lt;1– 注释语句 –&gt;</p>
<p>快捷键是： ctrl+&#x2F;</p>
<p>或者ctrl+shift+&#x2F;</p>
<p>团队约定：注释内容前后各一个空格字符，注释位于要注释代码的上面，单独占一行</p>
<h2 id="「7．路径」"><a href="#「7．路径」" class="headerlink" title="「7．路径」"></a>「7．路径」</h2><p>1亩</p>
<table>
<thead>
<tr>
<th>路径分类</th>
<th>符号</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>同一级路径</td>
<td></td>
<td>只需输入图像文件的名称即可，如＜img src＝＂baidu.gif＂／＞.codebaidu.png -图片文件indec.html HTML文件</td>
</tr>
<tr>
<td>下一级路径</td>
<td></td>
<td>图像文件位于HTML文件同级文件夹下（例如文件夹名称为：images） 如＜imgcodeimagessrc&#x3D;”images&#x2F;baidu.gif”&#x2F;&gt;。 baidu.png一图片文件indechtml HTML件</td>
</tr>
<tr>
<td>上一级路径</td>
<td>-</td>
<td>在文件名之前加入“厂，如果是上两级，则需要使用“／厂，以此类推， 如＜img src＝＂.／baidu.gif＂／＞。code1．通过1．．／”返回到html文件的所在的上一级文件 page（也就是返回到和图片文件所在的同级目录） index.html 找到目标图片</td>
</tr>
</tbody></table>
<h2 id="「8．其他知识」"><a href="#「8．其他知识」" class="headerlink" title="「8．其他知识」"></a>「8．其他知识」</h2><p>预格式化文本pre标签元素中的文本通常会保留空格和换行符。而文本也会呈现为等宽字体。格式化文本就是，按照我们预先写好的文字格式来显示页面，保留空格和换行等。</p>
<h2 id="特殊字符"><a href="#特殊字符" class="headerlink" title="特殊字符"></a>特殊字符</h2><p>HTML为这些特殊字符准备了专门的替代代码</p>
<table>
<thead>
<tr>
<th>特殊字符</th>
<th>描述</th>
<th>字符的代码</th>
</tr>
</thead>
<tbody><tr>
<td></td>
<td>空格符</td>
<td>&nbsp;</td>
</tr>
<tr>
<td>&lt;</td>
<td>小于号</td>
<td>&It;</td>
</tr>
<tr>
<td>&gt;</td>
<td>大于号</td>
<td>&gt;</td>
</tr>
<tr>
<td>&amp;</td>
<td>和号</td>
<td>&amp;</td>
</tr>
<tr>
<td>¥</td>
<td>人民币</td>
<td>&yen;</td>
</tr>
<tr>
<td>©</td>
<td>版权</td>
<td>&copy;</td>
</tr>
<tr>
<td>®</td>
<td>注册商标</td>
<td>&reg;</td>
</tr>
<tr>
<td>。</td>
<td>摄氏度</td>
<td>&deg;</td>
</tr>
<tr>
<td>±</td>
<td>正负号</td>
<td>&plusmn;</td>
</tr>
<tr>
<td>x</td>
<td>乘号</td>
<td>&times;</td>
</tr>
<tr>
<td></td>
<td>除号</td>
<td>&divide;</td>
</tr>
<tr>
<td></td>
<td>平方2（上标2）</td>
<td>&sup2;</td>
</tr>
<tr>
<td>3</td>
<td>立方3（上标3）</td>
<td>&sup3;</td>
</tr>
</tbody></table>
<h2 id="什么是XHTML"><a href="#什么是XHTML" class="headerlink" title="什么是XHTML"></a>什么是XHTML</h2><p>XHTML 指「可扩展超文本标签语言」（EXtensible HyperText Markup Language)。</p>
<p>XHTML 的目标是取代 HTML。</p>
<p>XHTML 与 HTML 4.01 几乎是相同的。</p>
<p>XHTML 是更严格更纯净的 HTML 版本。</p>
<p>XHTML 是作为一种 XML 应用被重新定义的 HTML，是严格版本的HTML。例如它要求标签必须小写，标签必须被正确关闭，标签顺序必须正确排列，对于属性都必须使用双引号等。</p>
<p>XHTML 是一个 W3C 标准。</p>
<h2 id="写HTML代码时应注意什么？"><a href="#写HTML代码时应注意什么？" class="headerlink" title="写HTML代码时应注意什么？"></a>写HTML代码时应注意什么？</h2><p>尽可能少的使用无语义的标签 div和span；</p>
<p>在语义不明显时，既可以使用div或者p时，尽量用p，因为p在默认情况下有上下间距，对兼容特殊终端有利；</p>
<p>不要使用纯样式标签，如：b、font、u等，改用css设置。</p>
<p>需要强调的文本，可以包含在strong或者em标签中（浏览器预设样式，能用CSS指定就不用他们），strong默认样式是加粗（不要用b），em是斜体（不用i）；</p>
<p>使用表格时，标题要用 caption，表头用 thead，主体部分用tbody 包围，尾部用tfoot包围。表头和一般单元格要区分开，表头用th，单元格用td；</p>
<p>表单域要用fieldset标签包起来，并用legend标签说明表单的用途；</p>
<p>每个input标签对应的说明文本都需要使用label标签，并且通过为input 设置id属性，在lable 标签中设置 for 来让说明文本和相对应的input关联起来。</p>
<h1 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h1><h2 id="「1．表格」"><a href="#「1．表格」" class="headerlink" title="「1．表格」"></a>「1．表格」</h2><p>现在还是较为常用的一种标签，但不是用来布局，常见显示、展示表格式数据。因为它可以让数据显示的非常的规整，可读性非常好。特别是后台展示数据的时候表格运用是否熟练就显得很重要，一个清爽简约的表格能够把繁杂的数据表现得很有条理。</p>
<h2 id="「2．创建表格」"><a href="#「2．创建表格」" class="headerlink" title="「2．创建表格」"></a>「2．创建表格」</h2><p>&lt;table&gt;</p>
<p>&lt;tr&gt;</p>
<p>＜td＞单元格内的文字＜／td＞</p>
<p>···</p>
<p>&lt;&#x2F;tr&gt;</p>
<hr>
<p>&lt;&#x2F;table&gt;</p>
<p>table、tr、td，他们是创建表格的基本标签，缺一不可</p>
<p>table用于定义一个表格标签。</p>
<p>tr标签 用于定义表格中的行，必须嵌套在 table标签中。</p>
<p>td 用于定义表格中的单元格，必须嵌套在＜tr＞＜／tr＞标签中。</p>
<p>字母 td 指表格数据（table data），即数据单元格的内容，现在我们明白，表格最合适的地方就是用来存储数据的。td像一个容器，可以容纳所有的元素。</p>
<!-- td，代表一个单元格 姓名 年龄 性别 tr，代表一行 小明 18 男 table，最外层的大盒子 小红 20 女  -->
<img data-src="/2024/11/18/HTML%E5%9F%BA%E7%A1%80/a21ed4c7e87b3046.jpg" class="">

<p>表头单元格标签th：一般表头单元格位于表格的第一行或第一列，并且文本加粗居中，只需用表头标签＜th＞＜／th＞替代相应的单元格标签＜td＞＜／td＞即可。</p>
<!-- 表头 姓名 性别 电话 小王 女 11122233 表头 小李 男 55566677 海淀区 小张 男 88899900  -->
<img data-src="/2024/11/18/HTML%E5%9F%BA%E7%A1%80/4447fb76e7ba8fbd.jpg" class="">

<p>表格标题caption通常这个标题会被居中且显示于表格之上。</p>
<p>caption 标签必须紧随 table 标签之后。这个标签只存在表格里面才有意义。你是风儿我是沙</p>
<p>&lt;table&gt;</p>
<p>＜caption＞我是表格标题＜／caption＞</p>
<p>&lt;&#x2F;table&gt;</p>
<h2 id="「3．表格属性」"><a href="#「3．表格属性」" class="headerlink" title="「3．表格属性」"></a>「3．表格属性」</h2><table>
<thead>
<tr>
<th>属性名</th>
<th>含义</th>
<th>常用属性值</th>
</tr>
</thead>
<tbody><tr>
<td>border</td>
<td>设置表格的边框（默认borde$\det &#x3D; “ 0 “$“无边框）</td>
<td>像素值</td>
</tr>
<tr>
<td>cellspacing</td>
<td>设置单元格与单元格边框之间的空白间距</td>
<td>像素值（默认为2像素）</td>
</tr>
<tr>
<td>cellpadding</td>
<td>设置单元格内容与单元格边框之间的空白间距</td>
<td>像素值（默认为1像素）</td>
</tr>
<tr>
<td>width</td>
<td>设置表格的宽度</td>
<td>像素值</td>
</tr>
<tr>
<td>height</td>
<td>设置表格的高度</td>
<td>像素值</td>
</tr>
<tr>
<td>align</td>
<td>设置表格在网页中的水平对齐方式</td>
<td>left、center、right</td>
</tr>
</tbody></table>
<h2 id="三参为0，平时开发的我们这三个参"><a href="#三参为0，平时开发的我们这三个参" class="headerlink" title="三参为0，平时开发的我们这三个参"></a>三参为0，平时开发的我们这三个参</h2><p>数 border cellpadding cellspacing 为0</p>
<p>「4．合并单元格」，合并的顺序我们按照 先上 后下 先左 后右的顺序，合并完之后需要删除多余的单元格。</p>
<p>跨行合并：rowspan＝＂合并单元格的个数＂</p>
<p>跨列合并：colspan＝＂合并单元格的个数”</p>
<h3 id="「5．总结表格」"><a href="#「5．总结表格」" class="headerlink" title="「5．总结表格」"></a>「5．总结表格」</h3><p>标签名定义说明＜table＞＜／table＞表格标签就是一个四方的盒子＜tr＞＜／tr＞表格行标签行标签要再table标签内部才有意义＜td＞＜／td＞单元格标签单元格标签是个容器级元素，可以放任何东西＜th＞＜／th＞表头单元格标签它还是一个单元格，但是里面的文字会居中且加粗＜caption＞＜／caption＞表格标题标签表格的标题，跟着表格一起走，和表格居中对齐 clospan 和 rowspan合并属性用来合并单元格的</p>
<h2 id="「6．表格划分结构」"><a href="#「6．表格划分结构」" class="headerlink" title="「6．表格划分结构」"></a>「6．表格划分结构」</h2><p>对于比较复杂的表格，表格的结构也就相对的复杂了，所以又将表格分割成三个部分：题头、正文和脚注。而这三部分分别用：thead，tbody，tfoot来标注，这样更好的分清表格结构。</p>
<h2 id="注意：-2"><a href="#注意：-2" class="headerlink" title="注意："></a>注意：</h2><p>1．＜thead＞＜／thead＞：用于定义表格的头部。用来放标题之类的东</p>
<h1 id="西。＜thead＞-内部必须拥有-标签！"><a href="#西。＜thead＞-内部必须拥有-标签！" class="headerlink" title="西。＜thead＞ 内部必须拥有&lt;tr&gt; 标签！"></a>西。＜thead＞ 内部必须拥有&lt;tr&gt; 标签！</h1><p>2．＜tbody＞＜／tbody＞：用于定义表格的主体。放数据本体。</p>
<p>3． ＜tfoot＞＜／tfoot＞放表格的脚注之类。</p>
<p>4．以上标签都是放到table标签中。</p>
<h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><p>「列表ul」容器里面装载着结构，样式一致的文字或图表的一种形式，叫列表。</p>
<p>列表最大的特点就是整齐、整洁、有序，跟表格类似，但是它可组合自由度会更高。</p>
<h2 id="「1．无序列表-ul」"><a href="#「1．无序列表-ul」" class="headerlink" title="「1．无序列表 ul」"></a>「1．无序列表 ul」</h2><p>＜ul＞＜／ul＞中只能嵌套&lt;li&gt;&lt;&#x2F;li&gt;，直接在＜ul＞＜／ul＞标签中输入其他标签或者文字的做法是不被允许的。</p>
<p>＜li＞与＜／li＞之间相当于一个容器，可以容纳所有元素。</p>
<p>&lt;ul&gt;</p>
<p>＜li＞列表项1&lt;&#x2F;1i&gt;</p>
<p>＜li＞列表项2&lt;&#x2F;1i&gt;</p>
<p>＜li＞列表项3&lt;&#x2F;1i&gt;</p>
<p>&lt;&#x2F;u|&gt;</p>
<h2 id="「2．有序列表-ol」"><a href="#「2．有序列表-ol」" class="headerlink" title="「2．有序列表 ol」"></a>「2．有序列表 ol」</h2><p>＜ol＞标签中的type属性值为排序的序列号，不添加 type属性时，有序列表默认从数字1开始排序。</p>
<p>常用的type属性值分别为是1，a，A，i，I</p>
<p>＜ol reversed＝＂reversed＂＞中的 reversed 属性能够让有序列表中的序列倒序排列。</p>
<p>＜ol start＝＂3＂＞中的 start 属性值为3，有序列表中的第一个序列号将从3开始排列。</p>
<p>&lt;0l$t y p e &#x3D; ^ { n } A ^ { n } &gt;$</p>
<p>＜li＞列表项1&lt;&#x2F;li&gt;</p>
<p>＜li＞列表二＜／li＞</p>
<p>＜li＞列表三＜／li＞</p>
<p>&lt;&#x2F;01&gt;</p>
<h2 id="［2．自定义列表-dl」"><a href="#［2．自定义列表-dl」" class="headerlink" title="［2．自定义列表 dl」"></a>［2．自定义列表 dl」</h2><p>定义列表常用于对术语或名词进行解释和描述，定义列表的列表项前没有任何项目符号。</p>
<p>&lt;d|&gt;</p>
<p>＜dt＞名词1&lt;&#x2F;dt&gt;</p>
<p>＜dd＞名词1解释1&lt;&#x2F;dd&gt;</p>
<p>＜dd＞名词1解释2&lt;&#x2F;dd&gt;</p>
<p>.–</p>
<p>＜dt＞名词2&lt;&#x2F;dt&gt;</p>
<p>＜dd＞名词2解释1&lt;&#x2F;dd&gt;</p>
<p>＜dd＞名词2解释2&lt;&#x2F;dd&gt;</p>
<hr>
<p>&lt;&#x2F;d|&gt;</p>
<!-- 预约维修服务 ⑦7天无理由退货 ⑮15天免费换货 满150元包邮 叫兽说，此处用dI会更合理一些 520余家售后网点 助中心 100-5678 户理 日 0：00-18.00 （收活） 信 订编作 计间域服  -->
<img data-src="/2024/11/18/HTML%E5%9F%BA%E7%A1%80/f6bce8e0cdf32c21.jpg" class="">


<table>
<thead>
<tr>
<th>服支持</th>
<th>统下名</th>
<th>关于小米</th>
<th>关注行</th>
<th>特色服务</th>
</tr>
</thead>
<tbody><tr>
<td>售量</td>
<td>小之</td>
<td>7＊小＊</td>
<td>新</td>
<td>F</td>
</tr>
<tr>
<td>自务</td>
<td>服务点</td>
<td>加小＊</td>
<td>小</td>
<td>小 动</td>
</tr>
<tr>
<td>相下</td>
<td>零网点</td>
<td>联票扣</td>
<td>贰微信</td>
<td>防售用</td>
</tr>
</tbody></table>
<p>小城MI解：城小路器小小天小店小网｜问票｜Select Region TRUST  销网 信站 网上易</p>
<p>0m．com京CP110507P10045444号公安 11010802020134号 网201410059-0009号 数 保中心</p>
<!-- MI  -->
<img data-src="/2024/11/18/HTML%E5%9F%BA%E7%A1%80/baa8d0663d2dca24.jpg" class="">

<p> 和不信电话：185-0130-123，本，，所试</p>
<p>探索黑科技，小米为发烧而生！</p>
<h6 id="表单"><a href="#表单" class="headerlink" title="表单"></a>表单</h6><p>在HTML中，一个完整的表单通常由表单控件（也称为表单元素）、提示信息和表单域3个部分构成。表单目的是为了收集用户信息。</p>
<p>表单域</p>
<!-- 欢迎注册无限容量的网易邮箱！邮件地址可以登录使用其他网易旗下产品。 注册字母邮箱 注册手机号码邮箱 注册VIP邮箱 ＊手机号码 @163.com 提示文本 请填写手机号码 ＊图片验证码 请填写图片中的字符，不区分大小写 看不清楚？换张图片 免费获取验证码 ＊短信验证码 表单 请查收手机短信，并填写短信中的验证码 ＊密码 6～16个字符，区分大小写 ＊确认密码 请再次填写密码 ☑同意“服务条款”和“用户须知”、“隐私权相关政策” 立即注册  -->
<img data-src="/2024/11/18/HTML%E5%9F%BA%E7%A1%80/64471ead9e5fa3c4.jpg" class="">

<h1 id="表单控件："><a href="#表单控件：" class="headerlink" title="表单控件："></a>表单控件：</h1><p>包含了具体的表单功能项，如单行文本输入框、密码输入框、复选框、提交按钮、重置按钮等。</p>
<h2 id="提示信息："><a href="#提示信息：" class="headerlink" title="提示信息："></a>提示信息：</h2><p>一个表单中通常还需要包含一些说明性的文字，提示用户进行填写和操作。</p>
<h6 id="表单域："><a href="#表单域：" class="headerlink" title="表单域："></a>表单域：</h6><p>它相当于一个容器，用来容纳所有的表单控件和提示信息，可以通过他定义处理表单数据所用程序的url地址，以及数据提交到服务器的方法。如果不定义表单域，表单中的数据就无法传送到后台服务器。</p>
<h2 id="「1．input-控件」"><a href="#「1．input-控件」" class="headerlink" title="「1．input 控件」"></a>「1．input 控件」</h2><h2 id="常用属性："><a href="#常用属性：" class="headerlink" title="常用属性："></a>常用属性：</h2><table>
<thead>
<tr>
<th>属性</th>
<th>属性值</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>type</td>
<td>text</td>
<td>单行文本输入框</td>
</tr>
<tr>
<td>type</td>
<td>password</td>
<td>密码输入框</td>
</tr>
<tr>
<td>type</td>
<td>radio</td>
<td>单选按钮</td>
</tr>
<tr>
<td>type</td>
<td>checkbox</td>
<td>复选框</td>
</tr>
<tr>
<td>type</td>
<td>button</td>
<td>普通按钮</td>
</tr>
<tr>
<td>type</td>
<td>submit</td>
<td>提交按钮</td>
</tr>
<tr>
<td>type</td>
<td>reset</td>
<td>重置按钮</td>
</tr>
<tr>
<td>type</td>
<td>image</td>
<td>图像形式的提交按钮</td>
</tr>
<tr>
<td>type</td>
<td>file</td>
<td>文件域</td>
</tr>
<tr>
<td>name</td>
<td>由用户自定义</td>
<td>控件的名称</td>
</tr>
<tr>
<td>value</td>
<td>由用户自定义</td>
<td>input控件中的默认文本值</td>
</tr>
<tr>
<td>size</td>
<td>正整数</td>
<td>input控件在页面中的显示宽度</td>
</tr>
<tr>
<td>checked</td>
<td>checked</td>
<td>定义选择控件默认被选中的项</td>
</tr>
<tr>
<td>maxlength</td>
<td>正整数</td>
<td>控件允许输入的最多字符数</td>
</tr>
</tbody></table>
<p>用户名：&lt;input$t y p e &#x3D; ^ { n } t e x t ^ { n } &#x2F; &gt;$</p>
<p>密码：＜input type＝＂password</p>
<h2 id="value属性"><a href="#value属性" class="headerlink" title="value属性"></a>value属性</h2><p>value 默认的文本值。有些表单想刚打开页面就默认显示几个文字，就可以通过这个 value 来设置。</p>
<p>用户名：＜input$t y p e &#x3D; ^ { n } t e x t ^ { n }$ $n a m e &#x3D; ^ { a } \cup S e r n a m e ^ { a } v a l u e &#x3D; ^ { a }$请输入用户名＊＞</p>
<h2 id="name属性"><a href="#name属性" class="headerlink" title="name属性"></a>name属性</h2><p>name 表单的名字， 这样，后台可以通过这个 name属性找到这个表单。页面中的表单很多，name主要作用就是用于区别不同的表单。</p>
<p>name属性后面的值，是我们自己定义的。</p>
<p>radio 如果是一组，我们必须给他们命名相同的名字 name 这样就可以多个选其中的一个啦</p>
<p>name属性，我们现在用的较少，但是，当我们学ajax 和后台的时候，是必须的。</p>
<p>&lt;input t$y p e &#x3D; ^ { u } r a d i o ^ { u }$ $n a m e &#x3D; ^ { n } \sec x ^ { n }$ 1&gt;男</p>
<p>&lt;input type&#x3D;”radio”$n a m e &#x3D; ^ { * } \sec x ^ { * } &#x2F; &gt;$女</p>
<h2 id="checked属性"><a href="#checked属性" class="headerlink" title="checked属性"></a>checked属性</h2><p>表示默认选中状态。较常见于 单选按钮和复选按钮。</p>
<p>性别：</p>
<p>&lt;input$t y p e &#x3D; ^ { n } r a d i o ^ { * }$ $n a m e &#x3D; ^ { a } \sec x ^ { a }$ $v a \vert u e &#x3D; ^ { u }$男”$c h e c k e d &#x3D; ^ { n } c h e c k e d ^ { * } &#x2F; &gt; $</p>
<p>&lt;input$t y p e &#x3D; ^ { n } r a d i o ^ { * }$ $n a m e &#x3D; ^ { * } \sec x ^ { n }$value&#x3D;”女”&#x2F;&gt;女</p>
<h2 id="input-属性小结"><a href="#input-属性小结" class="headerlink" title="input 属性小结"></a>input 属性小结</h2><p>属性说明作用type表单类型用来指定不同的控件类型value表单值表单里面默认显示的文本name表单名字页面中的表单很多，name 主要作用就是用于区别不同的表单。checked默认选中表示那个单选或者复选按钮一开始就被选中了</p>
<h2 id="「2．-label标签」"><a href="#「2．-label标签」" class="headerlink" title="「2． label标签」"></a>「2． label标签」</h2><p>label 标签为 input 元素定义标注（标签）。</p>
<p>label标签主要目的是为了提高用户体验。为用户提高最优秀的服务。</p>
<p>作用：用于绑定一个表单元素，当点击label标签的时候，被绑定的表单元素就会获得输入焦点。</p>
<h2 id="如何绑定元素呢"><a href="#如何绑定元素呢" class="headerlink" title="如何绑定元素呢"></a>如何绑定元素呢</h2><p>第一种用法就是用label标签直接包含input表单，适合单个表单选择</p>
<p>第二种用法 for 属性规定 label 与哪个表单元素绑定（通过id）。</p>
<h2 id="第一种"><a href="#第一种" class="headerlink" title="第一种"></a>第一种</h2><p>＜label＞用户名：</p>
<p>&lt;input$t y p e &#x3D; ^ { n } r a d i o ^ { n }$ $n a m e &#x3D; ^ { n } u s e n a m e ^ { n }$valuue&#x3D;请输入用户名＂＞&lt;&#x2F;|abe|&gt;</p>
<h2 id="第二种"><a href="#第二种" class="headerlink" title="第二种"></a>第二种</h2><p>&lt;label$f o r &#x3D; ^ { \prime \prime } \sec x ^ { n } &gt;$男&lt;&#x2F;|abe|&gt;</p>
<p>&lt;input$t y p e &#x3D; ^ { n } r a d i o ^ { n }$ $n a m e &#x3D; ^ { u } \sec x ^ { u }$ $i d &#x3D; ^ { * } \sec x ^ { * } &gt;$</p>
<h3 id="「3．-textarea控件（文本域）」"><a href="#「3．-textarea控件（文本域）」" class="headerlink" title="「3． textarea控件（文本域）」"></a>「3． textarea控件（文本域）」</h3><p>通过 textarea控件可以轻松地创建多行文本输入框.</p>
<p>cols＝＂每行中的字符数＂rows＝＂显示的行数”我们实际开发不用</p>
<table>
<thead>
<tr>
<th>文本域 textarea</th>
</tr>
</thead>
<tbody><tr>
<td>登录</td>
</tr>
</tbody></table>
<p>&lt;textarea&gt;</p>
<p>文本内容</p>
<p>&lt;&#x2F;textarea&gt;</p>
<h2 id="文本框和文本域区别"><a href="#文本框和文本域区别" class="headerlink" title="文本框和文本域区别"></a>文本框和文本域区别</h2><p>表单名称区别默认值显示用于场景 input type＝＂text＂文本框只能显示一行文本单标签，通过 value 显示默认值用户名、昵称、密码等textarea文本域可以显示多行文本双标签，默认值写到标签中间留言板</p>
<h3 id="「4．-select下拉列表」"><a href="#「4．-select下拉列表」" class="headerlink" title="「4． select下拉列表」"></a>「4． select下拉列表」</h3><p>如果有多个选项让用户选择，为了节约空间，我们可以使用select 控件定义下拉列表。</p>
<p>在 option 中定义 selected ＝＂selected“时，当前项即为默认选中项。</p>
<p>我们实际开发会用的比较少</p>
<table>
<thead>
<tr>
<th>高级</th>
<th>省（区市）政府网站</th>
</tr>
</thead>
<tbody><tr>
<td>高级</td>
<td>天津</td>
</tr>
<tr>
<td>高级</td>
<td>河北</td>
</tr>
<tr>
<td></td>
<td>山西</td>
</tr>
<tr>
<td></td>
<td>内蒙古</td>
</tr>
<tr>
<td></td>
<td>辽宁</td>
</tr>
<tr>
<td>市</td>
<td>吉林</td>
</tr>
<tr>
<td></td>
<td>黑龙江</td>
</tr>
<tr>
<td>市</td>
<td>上海</td>
</tr>
<tr>
<td></td>
<td>江苏</td>
</tr>
<tr>
<td>市</td>
<td>浙江</td>
</tr>
<tr>
<td></td>
<td>安徽</td>
</tr>
<tr>
<td>市</td>
<td>福建</td>
</tr>
<tr>
<td>市</td>
<td>江西</td>
</tr>
<tr>
<td></td>
<td>山东</td>
</tr>
<tr>
<td>市</td>
<td>河南</td>
</tr>
<tr>
<td></td>
<td>湖北</td>
</tr>
<tr>
<td>市</td>
<td>湖南</td>
</tr>
<tr>
<td></td>
<td>广东广西</td>
</tr>
<tr>
<td></td>
<td>省（区市）政府网站</td>
</tr>
</tbody></table>
<h2 id=""><a href="#" class="headerlink" title="&lt;select&gt;"></a>&lt;select&gt;</h2><p>＜option＞选项1&lt;&#x2F;option&gt;</p>
<p>＜option＞选项2&lt;&#x2F;option&gt;</p>
<p>＜option＞选项3&lt;&#x2F;option&gt;</p>
<p>···</p>
<p>&lt;&#x2F;select&gt;</p>
<h1 id="form-表单域"><a href="#form-表单域" class="headerlink" title="form 表单域"></a>form 表单域</h1><p>收集的用户信息怎么传递给服务器？</p>
<p>通过form表单域</p>
<p>目的：</p>
<p>在HTML中，form标签被用于定义表单域，以实现用户信息的收集和传递，form中的所有内容都会被提交给服务器。</p>
<p>&lt;form action&#x3D;”url地址＂method＝＂提交方式＂name＝＂表单名称＂＞各种表单控件</p>
<p>&lt;&#x2F;form&gt;</p>
<h2 id="常用属性：-1"><a href="#常用属性：-1" class="headerlink" title="常用属性："></a>常用属性：</h2><p>每个表单都应该有自己表单域。后面学 ajax 后台交互的时候，必须需要form表单域。</p>
<p>属性属性值作用 actionurl地址用于指定接收并处理表单数据的服务器程序的url地址。methodget／post用于设置表单数据的提交方式，其取值为get或post。name名称用于指定表单的名称，以区分同一个页面中的多个表单。</p>
<h2 id="GET-和-POST-的区别"><a href="#GET-和-POST-的区别" class="headerlink" title="GET 和 POST 的区别"></a>GET 和 POST 的区别</h2><p>GET在浏览器回退时是无害的，而POST会再次提交请求。</p>
<p>GET请求会被浏览器主动cache，而POST不会，除非手动设置。</p>
<p>GET 请求只能进行url编码，而POST支持多种编码方式。</p>
<p>GET请求参数会被完整保留在浏览器历史记录里，而POST中的参数不会被保留。</p>
<p>GET请求大小一般是（1024字节），http协议并没有限制，而与服务器，操作系统有关，POST理论上来说没有大小限制，http协议规范也没有进行大小限制，但实际上post所能传递的数据量根据取决于服务器的设置和内存大小。</p>
<p>对参数的数据类型，GET只接受ASCII字符，而POST没有限制。</p>
<p>GET比 POST更不安全，因为参数直接暴露在URL上，所以不能用来传递敏感信息。</p>
<h1 id="团队约定："><a href="#团队约定：" class="headerlink" title="团队约定："></a>团队约定：</h1><p>元素属性值使用双引号语法</p>
<p>元素属性值可以写上的都写上</p>
<h2 id="推荐"><a href="#推荐" class="headerlink" title="推荐"></a>推荐</h2><p>&lt;input$t y p e &#x3D; ^ { n } t e x t ^ { n } &#x2F; &gt;$</p>
<p>&lt;input$t y p e &#x3D; ^ { n } r a d i o ^ { * }$ $n a m e &#x3D; ^ { n } n a m e ^ { n }$checked&#x3D;”checked”&#x2F;&gt;</p>
<h2 id="从输入url到页面展示发生了什么（面试）"><a href="#从输入url到页面展示发生了什么（面试）" class="headerlink" title="从输入url到页面展示发生了什么（面试）"></a>从输入url到页面展示发生了什么（面试）</h2><p>作者：Twinkle</p>
<p>链接：https：／／juejin．im／post／6869279683230629896</p>
<p>来源：掘金</p>
<h2 id="浏览器的多进程架构"><a href="#浏览器的多进程架构" class="headerlink" title="浏览器的多进程架构"></a>浏览器的多进程架构</h2><p>从浏览器输入 URL 到页面渲染的整个过程都是由 浏览器架构中的各个进程之间的配合完成。</p>
<p>浏览器主进程：管理子进程、提供服务功能</p>
<p>渲染进程：将HTML、CSS、JS渲染成界面，js引擎v8和排版引擎Blink就在上面，他会为每一个tab页面创建一个渲染进程</p>
<p>GPU进程：本来是负责处理3Dcss的，后来慢慢的UI界面也交给GPU来绘制</p>
<p>网络进程：就是负责网络请求，网络资源加载的进程</p>
<p>插件进程：负责插件的运行的，因为插件很容易崩溃，把它放到独立的进程里不要让它影响别人</p>
<h2 id="浏览器的多进程架构-1"><a href="#浏览器的多进程架构-1" class="headerlink" title="浏览器的多进程架构"></a>浏览器的多进程架构</h2><p>从用户输入信息到页面展示的不同阶段，是不同的进程在发挥作用，示意图如下：</p>
<!-- 浏览器进程 户 人 处理 开星期 제目 确认金 资备加额 入 姜定司 保评程 理交 密成 网络进程 发RR 设品响店 清单 ¥40 读晶响体 明 渲染进程 项交 关核 B  -->


<p>从图中可以看出，整个过程是需要各个进程之间相互配合完成的，过程大致可以描述为：</p>
<p>用户输入url，处理输入信息，主进程开始导航，交给网络进程干活网络进程发起网络请求，其中有可能会发生重定向</p>
<p>服务器响应URL之后，主进程就要通知渲染进程，你要开始干活了渲染进程准备好了，要想渲染进程提交数据，这个时间叫做提交文档</p>
<p>渲染进程接受到数据，完成页面渲染。</p>
<h2 id="具体过程"><a href="#具体过程" class="headerlink" title="具体过程"></a>具体过程</h2><p>输入 url</p>
<p>用户输入url，处理输入信息：</p>
<p>如果为非url结构的字符串，交给浏览器默认引擎去搜索改字符串；若为url结构的字符串，浏览器主进程会交给 网络进程，开始干活。</p>
<h2 id="2-1-查找浏览器缓存"><a href="#2-1-查找浏览器缓存" class="headerlink" title="2.1 查找浏览器缓存"></a>2.1 查找浏览器缓存</h2><p>网络进程会先看看是否存在本地缓存，如果有就直接返回资源给浏览器进程，无则下一步 DNS-＞IP-＞TCP</p>
<h2 id="2-2-DNS解析"><a href="#2-2-DNS解析" class="headerlink" title="2.2 DNS解析"></a>2.2 DNS解析</h2><p>网络进程拿到url后，先会进行DNS域名解析得到IP地址。如果请求协议是HTTPS，那么还需要建立TLS连接。</p>
<h2 id="2-2-建立TCP连接，三次握手"><a href="#2-2-建立TCP连接，三次握手" class="headerlink" title="2.2 建立TCP连接，三次握手"></a>2.2 建立TCP连接，三次握手</h2><p>接下来就是利用IP地址和服务器建立TCP连接。连接建立之后，向服务器发送请求。</p>
<p>服务器响应</p>
<p>服务器收到请求信息后，会根据请求信息生成响应行、响应头、响应体，并发给网络进程。网络进程接受了响应信息之后，就开始解析响应头的内容。</p>
<p>网络进程解析响应行和响应头信息的过程：</p>
<h2 id="3-1-重定向"><a href="#3-1-重定向" class="headerlink" title="3.1 重定向"></a>3.1 重定向</h2><p>如果响应行状态码为301（永久重定向）和302（临时），那么说明需要重定向到其他url。这时候网络进程会从响应头中的Location</p>
<p>字段里读取重定向的地址，并重新发起网络请求。</p>
<h2 id="3-2-响应数据处理"><a href="#3-2-响应数据处理" class="headerlink" title="3.2 响应数据处理"></a>3.2 响应数据处理</h2><p>导航会通过请求头的Content-type字段判断响应体数据的类型。浏览器通过这个来决定如何显示响应体的内容。比如：若为application／octet-stream，则会按照下载类型来处理这个请求，导航结束。若为 text／html，这就告诉浏览器服务器返回的是html 格式，浏览器会通知渲染进程，你要干活了。</p>
<h3 id="准备渲染进程"><a href="#准备渲染进程" class="headerlink" title="准备渲染进程"></a>准备渲染进程</h3><p>默认情况，每个页面一个渲染进程。但若处于同一站点（同根域名＋协议），那么渲染进程就会复用。</p>
<h2 id="提交文档"><a href="#提交文档" class="headerlink" title="提交文档"></a>提交文档</h2><p>渲染进程准备好后，浏览器进程发出“提交文档的消息”，渲染进程接受了消息之后，会跟网络进程简历传输数据的管道。</p>
<p>等数据传输完成了，渲染进程会告诉浏览器进程，确认文档提交，这时候浏览器会更新页面，安全状态，url，前进后退的历史。</p>
<p>到这里导航结束，进入渲染阶段。</p>
<p>注：当浏览器刚开始加载一个地址之后，标签页上的图标便进入了加载状态。但此时图中页面显示的依然是之前打开的页面内容，并没立即替换为百度首页的页面。因为需要等待提交文档阶段，页面内容才会被替换。</p>
<h2 id="前端-HTML基础面试题"><a href="#前端-HTML基础面试题" class="headerlink" title="前端 HTML基础面试题"></a>前端 HTML基础面试题</h2><h3 id="iframe有哪些缺点？"><a href="#iframe有哪些缺点？" class="headerlink" title="iframe有哪些缺点？"></a>iframe有哪些缺点？</h3><p>iframe是一种框架，也是一种很常见的网页嵌入方式。</p>
<p>「iframe的优点」</p>
<p>iframe能够原封不动的把嵌入的网页展现出来。</p>
<p>如果有多个网页引用 iframe，那么你只需要修改iframe的内容，就可以实现调用的每一个页面内容的更改，方便快捷。</p>
<p>网页如果为了统一风格，头部和版本都是一样的，就可以写成一个</p>
<p>页面，用iframe来嵌套，可以增加代码的可重用。</p>
<p>如果遇到加载缓慢的第三方内容如图标和广告，这些问题可以由iframe来解决。</p>
<p>「iframe的缺点」</p>
<p>会产生很多页面，不容易管理。</p>
<p>iframe 框架结构有时会让人感到迷惑，如果框架个数多的话，可能会出现上下、左右滚动条，会分散访问者的注意力，用户体验度差。</p>
<p>代码复杂，无法被一些搜索引擎索引到，这一点很关键，现在的搜索引擎爬虫还不能很好的处理iframe中的内容，所以使用 iframe 会不利于搜索引擎优化。</p>
<p>很多的移动设备（PDA 手机）无法完全显示框架，设备兼容性差。iframe 框架页面会增加服务器的http请求，对于大型网站是不可取的。</p>
<p>现在基本上都是用Ajax来代替 iframe，所以iframe已经渐渐的退出了前端开发。</p>
<h3 id="label的作用是什么？是怎么用的？"><a href="#label的作用是什么？是怎么用的？" class="headerlink" title="label的作用是什么？是怎么用的？"></a>label的作用是什么？是怎么用的？</h3><h3 id="例子1：点击”用户名：”就可以定位光标到输入框"><a href="#例子1：点击”用户名：”就可以定位光标到输入框" class="headerlink" title="例子1：点击”用户名：”就可以定位光标到输入框"></a>例子1：点击”用户名：”就可以定位光标到输入框</h3><p>&lt;form&gt;&lt;|abe|$f o r &#x3D; ^ { n } m y i d ^ { n } &gt;$用户名：:&lt;&#x2F;|abe|&gt;</p>
<p>&lt;input$t y p e &#x3D; ^ { n } t e x t ^ { n }$ $i d &#x3D; ^ { n } m y i d ^ { n }$1&gt;&lt;1form&gt;</p>
<h3 id="例子2：点击”用户名：或按键a-t-1-，都可以定位光标到输入框"><a href="#例子2：点击”用户名：或按键a-t-1-，都可以定位光标到输入框" class="headerlink" title="例子2：点击”用户名：或按键a|t+1,，都可以定位光标到输入框"></a>例子2：点击”用户名：或按键a|t+1,，都可以定位光标到输入框</h3><p>&lt;form&gt;</p>
<p>&lt;|abe|$f o r &#x3D; ^ { n } m y i d ^ { n }$ $a c c \cos s k e y &#x3D; ^ { n } 1 ^ { n } &gt;$用户名&lt;&#x2F;|abe|&gt;</p>
<p>&lt;∈put$t y p e &#x3D; ^ { * } t e x t ^ { n }$ $i d &#x3D; ^ { n } m y i d ^ { n }$tabind$e x &#x3D; ^ { n } 1 ^ { n }$1&gt;</p>
<p>&lt;&#x2F;form&gt;</p>
<p>for 属性功能：表示Label 标签要绑定的HTML 元素，你点击这个标签的时候，所绑定的元素将获取焦点。</p>
<h2 id="acesskey-属性"><a href="#acesskey-属性" class="headerlink" title="acesskey 属性"></a>acesskey 属性</h2><p>功能：表示访问 Label 标签所绑定的元素的热键，当您按下热键，所绑定的元素将获取焦点。</p>
<p>局限性：accessKey 属性所设置的快捷键不能与浏览器的快捷键冲突，否则将优先激活浏览器的快捷键。</p>
<h2 id="HTML5的form如何关闭自动完成功能？"><a href="#HTML5的form如何关闭自动完成功能？" class="headerlink" title="HTML5的form如何关闭自动完成功能？"></a>HTML5的form如何关闭自动完成功能？</h2><p>HTML的输入框可以拥有自动完成的功能，当你往输入框输入内容的时候，浏览器会从你以前的同名输入框的历史记录中查找出类似的内容并列在输入框下面，这样就不用全部输入进去了，直接选择列表中的项目就可以了。</p>
<p>但有时候我们希望关闭输入框的自动完成功能，例如当用户输入内容的时候，我们希望使用AJAX技术从数据库搜索并列举而不是在用户的历史记录中搜索。</p>
<h2 id="关闭输入框的自动完成功能有3种方法："><a href="#关闭输入框的自动完成功能有3种方法：" class="headerlink" title="关闭输入框的自动完成功能有3种方法："></a>关闭输入框的自动完成功能有3种方法：</h2><p>在IE的Internet选项菜单里的内容–自动完成里面设置</p>
<p>设置 form的 autocomplete 为＂on＂或者＂off＂来开启或者关闭自动完成功能</p>
<p>设置输入框的 autocomplete为＂on＂或者＂off＂来开启或者关闭该输入框的自动完成功能</p>
<h1 id="将-HTML5-看作成开放的网络平台"><a href="#将-HTML5-看作成开放的网络平台" class="headerlink" title="将 HTML5 看作成开放的网络平台"></a>将 HTML5 看作成开放的网络平台</h1><p>「什么是 HTML5的基本构件（building block）？」</p>
<p>语义-提供更准确地描述内容。</p>
<p>连接-提供新的方式与服务器通信。</p>
<p>离线和存储-允许网页在本地存储数据并有效地离线运行。</p>
<p>多媒体-在 Open Web 中，视频和音频被视为一等公民（first-class citizens)。</p>
<p>2D／3D 图形和特效-提供更多种演示选项。</p>
<p>性能和集成-提供更快的访问速度和性能更好的计算机硬件。</p>
<p>设备访问-允许使用各种输入、输出设备。</p>
<p>外观-可以开发丰富的主题。</p>
<h1 id="浏览器是怎么对HTML5的离线储存资源进行管理和加载的"><a href="#浏览器是怎么对HTML5的离线储存资源进行管理和加载的" class="headerlink" title="浏览器是怎么对HTML5的离线储存资源进行管理和加载的"></a>浏览器是怎么对HTML5的离线储存资源进行管理和加载的</h1><h2 id="呢？"><a href="#呢？" class="headerlink" title="呢？"></a>呢？</h2><p>在浏览器的 html头部加上manifest属性，如果是第一次访问浏览器会根据 manifest的内容进行下载存储离线内容，如果已经访问过则从离线存储中进行加载，然后在比对服务器如果有新内容在更新离线存储</p>
<p>离线的情况下，浏览器就直接使用离线存储的资源。</p>
<h2 id="浏览器的渲染过程？"><a href="#浏览器的渲染过程？" class="headerlink" title="浏览器的渲染过程？"></a>浏览器的渲染过程？</h2><p>1、将获取的html解析成dom树</p>
<p>2、处理css，构成层叠样式表模型CSSOM</p>
<p>3、将dom树和CSSOM合并为渲染树</p>
<p>4、根据CSSOM将渲染树的节点布局计算</p>
<p>5、将渲染树节点样式绘制到页面上</p>
<h2 id="／／注意"><a href="#／／注意" class="headerlink" title="／／注意"></a>／／注意</h2><p>在渲染的过程中是自上而下渲染，</p>
<p>js会阻塞页面的渲染，优先等js执行完成</p>
<p>如果在渲染的过程中改变了样式，会造成回流需要重新渲染</p>
<h2 id="link和＠import的区别？"><a href="#link和＠import的区别？" class="headerlink" title="link和＠import的区别？"></a>link和＠import的区别？</h2><h2 id="1、从属关系区别："><a href="#1、从属关系区别：" class="headerlink" title="1、从属关系区别："></a>1、从属关系区别：</h2><p>link属于html标签，而＠import是css提供的。</p>
<h2 id="2、加载顺序区别："><a href="#2、加载顺序区别：" class="headerlink" title="2、加载顺序区别："></a>2、加载顺序区别：</h2><p>页面被加载时，link会同时被加载，而＠import引用的css会等到页面被加载完再加载。</p>
<h2 id="3、兼容性区别："><a href="#3、兼容性区别：" class="headerlink" title="3、兼容性区别："></a>3、兼容性区别：</h2><p>import只在IE5以上才能识别，而link是html标签，无兼容问题。</p>
<p>4、dom可操作性区别：</p>
<p>可以通过JS 操作 DOM ，插入link标签来改变样式；由于 DOM 方法是基于文档的，无法使用＠import的方式插入样式</p>
<h2 id="5、权重区别："><a href="#5、权重区别：" class="headerlink" title="5、权重区别："></a>5、权重区别：</h2><p>如果已经存在相同样式，＠import引入的这个样式将被该CSS文件本身的样式层叠掉，表现出 link方式的样式权重高于＠import的权重这样的直观效果。</p>
<p>（简而言之，link和＠import，谁写在后面，谁的样式就被应用，后面的样式覆盖前面的样式。）</p>
<h2 id="src与href的区别？"><a href="#src与href的区别？" class="headerlink" title="src与href的区别？"></a>src与href的区别？</h2><p>1、href 是指向网络资源所在位置，建立和当前元素（锚点）或当前文档（链接）之间的链接，用于超链接。</p>
<p>2、src是指向外部资源的位置，指向的内容将会嵌入到文档中当前标签所在位置；在请求src资源时会将其指向的资源下载并应用到文档内，例如js脚本，img图片和frame等元素。当浏览器解析到该元素时，会暂停其他资源的下载和处理，直到将该资源加载、编译、执行完毕，图片和框架等元素也如此，类似于将所指向资源嵌入当前标签内。这也是为什么将js脚本放在底部而不是头部。</p>
<h2 id="□感谢大家"><a href="#□感谢大家" class="headerlink" title="□感谢大家"></a>□感谢大家</h2><p>如果你觉得这篇内容对你挺有有帮助的话：</p>
<p>点赞支持下吧，让更多的人也能看到这篇内容（收藏不点赞，都是耍流氓–）</p>
<p>关注公众号「前端 fan」，定期为你推送好文。</p>
<p>下一篇将着重记录CSS的学习笔记</p>
<p>HTML5与CSS3新增特性单独写一章</p>
]]></content>
      <categories>
        <category>前端</category>
        <category>前端基础</category>
      </categories>
      <tags>
        <tag>html</tag>
        <tag>前端基础</tag>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>AJAX学习</title>
    <url>/2024/11/19/AJAX%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<h1 id="Day01-Ajax入门"><a href="#Day01-Ajax入门" class="headerlink" title="Day01_Ajax入门"></a>Day01_Ajax入门</h1><h2 id="知识点自测"><a href="#知识点自测" class="headerlink" title="知识点自测"></a>知识点自测</h2><ol>
<li><p>如下对象取值的方式哪个正确?</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> obj = &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;黑马&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>A: obj.a</p>
<p>B: obj()a</p>
<details>
<summary>答案</summary>
<ul>
<li>A选项正确</li>
</ul>
</details>


</li>
<li><p>哪个赋值会让浏览器解析成标签显示?</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> ul = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;#ul&#x27;</span>)</span><br><span class="line"><span class="keyword">let</span> str = <span class="string">`&lt;span&gt;我是span标签&lt;/span&gt;`</span></span><br></pre></td></tr></table></figure>

<p>A: ul.innerText &#x3D; str</p>
<p>B: ul.innerHTML &#x3D; str</p>
<details>
<summary>答案</summary>
<ul>
<li>选择B, innerText会把字符串当做普通文本现在在ul标签之间, innerHTML会试着把字符串解析成标签, 如果是普通文本则显示普通文本字符串</li>
</ul>
</details>


</li>
<li><p>哪个是获取输入框值的方式?</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> theInput = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;#input&#x27;</span>)</span><br></pre></td></tr></table></figure>

<p>A: theInput.innerHTML</p>
<p>B: theInput.value</p>
<details>
<summary>答案</summary>
<ul>
<li>答案是B, 表单标签设置或获取值用value属性, 其他标签用innerHTML/innerText, 进行设置/获取</li>
</ul>
</details>


</li>
<li><p>哪个是用于获取标签内容?</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> theP = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;#p&#x27;</span>)</span><br></pre></td></tr></table></figure>

<p>A: theP.innerHTML &#x3D; ‘内容’</p>
<p>B: theP.innerHTML</p>
<details>
<summary>答案</summary>
<ul>
<li>答案是B, 单独出现是获取值在原地, 如果看到=这个符号, 是把右侧的值赋予给左侧的属性, 影响标签展示效果</li>
</ul>
</details>


</li>
<li><p>哪个是数组的映射方法？</p>
<p>A: arr.forEach</p>
<p>B: arr.map</p>
<details>
<summary>答案</summary>
<ul>
<li>答案是B</li>
</ul>
</details>


</li>
<li><p>数组转字符串并指定拼接符的是哪个?</p>
<p>A: arr.join()</p>
<p>B: arr.split()</p>
<details>
<summary>答案</summary>
<ul>
<li>答案是A</li>
</ul>
</details>


</li>
<li><p>函数传参的方式哪个是正确的？</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">showAlert</span>(<span class="params">msg, className</span>) &#123;&#125;</span><br></pre></td></tr></table></figure>

<p>A：showAlert(‘消息’, ‘类名’)</p>
<p>B：showAlert()</p>
<details>
<summary>答案</summary>
<ul>
<li>答案是A</li>
</ul>
</details>


</li>
<li><p>以下哪套代码可以实现对象属性的简写？</p>
<p>A：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> username = <span class="string">&#x27;老李&#x27;</span></span><br><span class="line"><span class="keyword">let</span> obj = &#123;</span><br><span class="line">  <span class="attr">username</span>: username</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>B：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> user = <span class="string">&#x27;老李&#x27;</span></span><br><span class="line"><span class="keyword">let</span> obj = &#123;</span><br><span class="line">  <span class="attr">username</span>: user</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<details>
<summary>答案</summary>
<ul>
<li>答案是A</li>
</ul>
</details>


</li>
<li><p>以下代码的值是多少？</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> age = <span class="number">10</span></span><br><span class="line"><span class="keyword">const</span> result = age &gt; <span class="number">18</span> ? <span class="string">&#x27;成年了&#x27;</span> : <span class="string">&#x27;未成年&#x27;</span></span><br></pre></td></tr></table></figure>

<p>A：‘成年了’</p>
<p>B：‘未成年’</p>
<details>
<summary>答案</summary>
<ul>
<li>答案是B</li>
</ul>
</details>


</li>
<li><p>以下哪个方法可以添加一个额外类名？</p>
<p>A：标签对象.classList.add()</p>
<p>B：标签对象.classList.contains()</p>
<details>
<summary>答案</summary>
<ul>
<li>答案是A</li>
</ul>
</details></li>
</ol>
<h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><ul>
<li>AJAX 概念和 axios 使用</li>
<li>认识 URL</li>
<li>URL 查询参数</li>
<li>常用请求方法和数据提交</li>
<li>HTTP协议-报文</li>
<li>接口文档</li>
<li>案例 - 用户登录</li>
<li>form-serialize 插件</li>
</ul>
<h2 id="学习目标"><a href="#学习目标" class="headerlink" title="学习目标"></a>学习目标</h2><ol>
<li>掌握 axios 相关参数，从服务器获取并解析展示数据</li>
<li>掌握接口文档的查看和使用</li>
<li>掌握在浏览器的 network 面板中查看请求和响应的内容</li>
<li>了解请求和响应报文的组成部分</li>
</ol>
<h2 id="01-AJAX-概念和-axios-使用"><a href="#01-AJAX-概念和-axios-使用" class="headerlink" title="01.AJAX 概念和 axios 使用"></a>01.AJAX 概念和 axios 使用</h2><h3 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h3><p>了解 AJAX 概念并掌握 axios 库基本使用</p>
<h3 id="讲解"><a href="#讲解" class="headerlink" title="讲解"></a>讲解</h3><ol>
<li><p>什么是 AJAX ? <a href="https://developer.mozilla.org/zh-CN/docs/Web/Guide/AJAX/Getting_Started">mdn</a></p>
<ul>
<li><p>使用浏览器的 XMLHttpRequest 对象 与服务器通信</p>
</li>
<li><p>浏览器网页中，使用 AJAX技术（XHR对象）发起获取省份列表数据的请求，服务器代码响应准备好的省份列表数据给前端，前端拿到数据数组以后，展示到网页</p>
<img data-src="/2024/11/19/AJAX%E5%AD%A6%E4%B9%A0/image-20230403173156484.png" class="" title="image-20230403173156484"></li>
</ul>
</li>
<li><p>什么是服务器？</p>
<ul>
<li>可以暂时理解为提供数据的一台电脑</li>
</ul>
</li>
<li><p>为何学 AJAX ?</p>
<ul>
<li>以前我们的数据都是写在代码里固定的, 无法随时变化</li>
<li>现在我们的数据可以从服务器上进行获取，让数据变活</li>
</ul>
</li>
<li><p>怎么学 AJAX ?</p>
<ul>
<li>这里使用一个第三方库叫 axios, 后续在学习 XMLHttpRequest 对象了解 AJAX 底层原理</li>
<li>因为 axios 库语法简单，让我们有更多精力关注在与服务器通信上，而且后续 Vue，React 学习中，也使用 axios 库与服务器通信</li>
</ul>
</li>
<li><p>需求：从服务器获取省份列表数据，展示到页面上（体验 axios 语法的使用）</p>
<blockquote>
<p>获取省份列表数据 - 目标资源地址：<a href="http://hmajax.itheima.net/api/province">http://hmajax.itheima.net/api/province</a></p>
</blockquote>
<ul>
<li><p>完成效果：</p>
<img data-src="/2024/11/19/AJAX%E5%AD%A6%E4%B9%A0/image-20230220113157010.png" class="" title="image-20230220113157010"></li>
</ul>
</li>
<li><p>接下来讲解 axios 语法，步骤：</p>
</li>
<li><p>引入 axios.js 文件到自己的网页中</p>
<blockquote>
<p>axios.js文件链接: <a href="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js">https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js</a></p>
</blockquote>
</li>
<li><p>明确axios函数的使用语法</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="title function_">axios</span>(&#123;</span><br><span class="line">  <span class="attr">url</span>: <span class="string">&#x27;目标资源地址&#x27;</span></span><br><span class="line">&#125;).<span class="title function_">then</span>(<span class="function">(<span class="params">result</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 对服务器返回的数据做后续处理</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<blockquote>
<p>注意：请求的 url 地址, 就是标记资源的网址</p>
<p>注意：then 方法这里先体验使用，由来后续会讲到</p>
</blockquote>
</li>
<li><p>对应代码</p>
</li>
</ol>
  <figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>AJAX概念和axios使用<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    axios库地址：https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js</span></span><br><span class="line"><span class="comment">    省份数据地址：http://hmajax.itheima.net/api/province</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    目标: 使用axios库, 获取省份列表数据, 展示到页面上</span></span><br><span class="line"><span class="comment">    1. 引入axios库</span></span><br><span class="line"><span class="comment">  --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;my-p&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 2. 使用axios函数</span></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">axios</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">url</span>: <span class="string">&#x27;http://hmajax.itheima.net/api/province&#x27;</span></span></span><br><span class="line"><span class="language-javascript">    &#125;).<span class="title function_">then</span>(<span class="function"><span class="params">result</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">console</span>.<span class="title function_">log</span>(result)</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 好习惯：多打印，确认属性名</span></span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">console</span>.<span class="title function_">log</span>(result.<span class="property">data</span>.<span class="property">list</span>)</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">console</span>.<span class="title function_">log</span>(result.<span class="property">data</span>.<span class="property">list</span>.<span class="title function_">join</span>(<span class="string">&#x27;&lt;br&gt;&#x27;</span>))</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 把准备好省份列表，插入到页面</span></span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.my-p&#x27;</span>).<span class="property">innerHTML</span> = result.<span class="property">data</span>.<span class="property">list</span>.<span class="title function_">join</span>(<span class="string">&#x27;&lt;br&gt;&#x27;</span>) </span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><ol>
<li><p>AJAX 有什么用？</p>
<details>
<summary>答案</summary>
<ul>
<li>浏览器和服务器之间通信，动态数据交互</li>
</ul>
</details>


</li>
<li><p>AJAX 如何学：</p>
<details>
<summary>答案</summary>
<ul>
<li>先掌握 axios 库使用，再了解 XMLHttpRequest 原理</li>
</ul>
</details>


</li>
<li><p>这一节 axios 体验步骤（语法）？</p>
<details>
<summary>答案</summary>
<ul>
<li>引入 axios 库，使用 axios 相关语法</li>
</ul>
</details></li>
</ol>
<h2 id="02-认识-URL"><a href="#02-认识-URL" class="headerlink" title="02.认识 URL"></a>02.认识 URL</h2><h3 id="目标-1"><a href="#目标-1" class="headerlink" title="目标"></a>目标</h3><p>了解 URL 的组成和作用</p>
<h3 id="讲解-1"><a href="#讲解-1" class="headerlink" title="讲解"></a>讲解</h3><ol>
<li><p>为什么要认识 URL ? <a href="https://developer.mozilla.org/zh-CN/docs/Web/Guide/AJAX/Getting_Started">mdn</a></p>
<ul>
<li>虽然是后端给我的一个地址，但是哪部分标记的是服务器电脑，哪部分标记的是资源呢？所以为了和服务器有效沟通我们要认识一下</li>
</ul>
</li>
<li><p>什么是 URL ？</p>
<ul>
<li><p>统一资源定位符，简称网址，用于定位网络中的资源（资源指的是：网页，图片，数据，视频，音频等等）</p>
<img data-src="/2024/11/19/AJAX%E5%AD%A6%E4%B9%A0/image-20230403185206384.png" class="" title="image-20230403185206384"></li>
</ul>
</li>
<li><p>URL 的组成?</p>
<ul>
<li><p>协议，域名，资源路径（URL 组成有很多部分，我们先掌握这3个重要的部分即可）</p>
<img data-src="/2024/11/19/AJAX%E5%AD%A6%E4%B9%A0/image-20230403185305934.png" class="" title="image-20230403185305934"></li>
</ul>
</li>
<li><p>什么是 http 协议 ?</p>
<ul>
<li><p>叫超文本传输协议，规定了浏览器和服务器传递数据的格式（而格式具体有哪些稍后我们就会学到）</p>
<img data-src="/2024/11/19/AJAX%E5%AD%A6%E4%B9%A0/image-20230403185356997.png" class="" title="image-20230403185356997"></li>
</ul>
</li>
<li><p>什么是域名 ?</p>
<ul>
<li><p>标记服务器在互联网当中的方位，网络中有很多服务器，你想访问哪一台，就需要知道它的域名才可以</p>
<img data-src="/2024/11/19/AJAX%E5%AD%A6%E4%B9%A0/image-20230403185406674.png" class="" title="image-20230403185406674"></li>
</ul>
</li>
<li><p>什么是资源路径 ?</p>
<ul>
<li><p>一个服务器内有多个资源，用于标识你要访问的资源具体的位置</p>
<img data-src="/2024/11/19/AJAX%E5%AD%A6%E4%B9%A0/image-20230403185428276.png" class="" title="image-20230403185428276"></li>
</ul>
</li>
<li><p>接下来做个需求，访问新闻列表的 URL 网址，打印新闻数据</p>
<ul>
<li>效果图如下：</li>
</ul>
<img data-src="/2024/11/19/AJAX%E5%AD%A6%E4%B9%A0/image-20230220122455915.png" class="" title="image-20230220122455915">

<blockquote>
<p>新闻列表数据 URL 网址：<a href="http://hmajax.itheima.net/api/news">http://hmajax.itheima.net/api/news</a></p>
</blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="title function_">axios</span>(&#123;</span><br><span class="line">  <span class="attr">url</span>: <span class="string">&#x27;http://hmajax.itheima.net/api/news&#x27;</span></span><br><span class="line">&#125;).<span class="title function_">then</span>(<span class="function"><span class="params">result</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(result)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<blockquote>
<p>url解释：从黑马服务器使用http协议，访问&#x2F;api&#x2F;news路径下的新闻列表资源</p>
</blockquote>
</li>
</ol>
<h3 id="小结-1"><a href="#小结-1" class="headerlink" title="小结"></a>小结</h3><ol>
<li><p>URL 是什么？</p>
<details>
<summary>答案</summary>
<ul>
<li>统一资源定位符，网址，用于访问服务器上资源
</li>
</ul>
</details>


</li>
<li><p>请解释这个 URL，每个部分作用？</p>
<p><a href="http://hmajax.itheima.net/api/news">http://hmajax.itheima.net/api/news</a></p>
<details>
<summary>答案</summary>
<ul>
<li>协议://域名/资源路径
</li>
</ul>
</details></li>
</ol>
<h2 id="03-URL-查询参数"><a href="#03-URL-查询参数" class="headerlink" title="03.URL 查询参数"></a>03.URL 查询参数</h2><h3 id="目标-2"><a href="#目标-2" class="headerlink" title="目标"></a>目标</h3><p>掌握-通过URL传递查询参数，获取匹配的数据</p>
<h3 id="讲解-2"><a href="#讲解-2" class="headerlink" title="讲解"></a>讲解</h3><ol>
<li><p>什么是查询参数 ?</p>
<ul>
<li><p>携带给服务器额外信息，让服务器返回我想要的某一部分数据而不是全部数据</p>
</li>
<li><p>举例：查询河北省下属的城市列表，需要先把河北省传递给服务器</p>
<img data-src="/2024/11/19/AJAX%E5%AD%A6%E4%B9%A0/image-20230404101257205.png" class="" title="image-20230404101257205"></li>
</ul>
</li>
<li><p>查询参数的语法 ？</p>
<ul>
<li>在 url 网址后面用?拼接格式：<a href="http://xxxx.com/xxx/xxx?%E5%8F%82%E6%95%B0%E5%90%8D1=%E5%80%BC1&%E5%8F%82%E6%95%B0%E5%90%8D2=%E5%80%BC2">http://xxxx.com/xxx/xxx?参数名1=值1&amp;参数名2=值2</a></li>
<li>参数名一般是后端规定的，值前端看情况传递即可</li>
</ul>
</li>
<li><p>axios 如何携带查询参数?</p>
<ul>
<li><p>使用 params 选项即可</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="title function_">axios</span>(&#123;</span><br><span class="line">  <span class="attr">url</span>: <span class="string">&#x27;目标资源地址&#x27;</span>,</span><br><span class="line">  <span class="attr">params</span>: &#123;</span><br><span class="line">    参数名: 值</span><br><span class="line">  &#125;</span><br><span class="line">&#125;).<span class="title function_">then</span>(<span class="function"><span class="params">result</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 对服务器返回的数据做后续处理</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<blockquote>
<p>查询城市列表的 url地址：<a href="http://hmajax.itheima.net/api/city?pname=%E6%B2%B3%E5%8C%97%E7%9C%81">http://hmajax.itheima.net/api/city</a></p>
<p>参数名：pname （值要携带省份名字）</p>
</blockquote>
</li>
</ul>
</li>
<li><p>需求：获取“河北省”下属的城市列表，展示到页面，对应代码：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>查询参数<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">    城市列表: http://hmajax.itheima.net/api/city</span></span><br><span class="line"><span class="comment">    参数名: pname</span></span><br><span class="line"><span class="comment">    值: 省份名字</span></span><br><span class="line"><span class="comment">  --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">axios</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">url</span>: <span class="string">&#x27;http://hmajax.itheima.net/api/city&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 查询参数</span></span></span><br><span class="line"><span class="language-javascript">      <span class="attr">params</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">pname</span>: <span class="string">&#x27;辽宁省&#x27;</span></span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;).<span class="title function_">then</span>(<span class="function"><span class="params">result</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">console</span>.<span class="title function_">log</span>(result.<span class="property">data</span>.<span class="property">list</span>)</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;p&#x27;</span>).<span class="property">innerHTML</span> = result.<span class="property">data</span>.<span class="property">list</span>.<span class="title function_">join</span>(<span class="string">&#x27;&lt;br&gt;&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li>
</ol>
<h3 id="小结-2"><a href="#小结-2" class="headerlink" title="小结"></a>小结</h3><ol>
<li><p>URL 查询参数有什么用？</p>
<details>
<summary>答案</summary>
<ul>
<li>浏览器提供给服务器额外信息，获取对应的数据
</li>
</ul>
</details>


</li>
<li><p>axios 要如何携带查询参数？</p>
<details>
<summary>答案</summary>
<ul>
<li>使用 params 选项，携带参数名和值在对象结构中
</li>
</ul>
</details></li>
</ol>
<h2 id="04-案例-查询-地区列表"><a href="#04-案例-查询-地区列表" class="headerlink" title="04.案例-查询-地区列表"></a>04.案例-查询-地区列表</h2><h3 id="目标-3"><a href="#目标-3" class="headerlink" title="目标"></a>目标</h3><p>巩固查询参数的使用，并查看多对查询参数如何传递</p>
<h3 id="讲解-3"><a href="#讲解-3" class="headerlink" title="讲解"></a>讲解</h3><ol>
<li><p>需求：根据输入的省份名字和城市名字，查询下属地区列表</p>
<ul>
<li><p>完成效果如下：</p>
<img data-src="/2024/11/19/AJAX%E5%AD%A6%E4%B9%A0/image-20230220125428695.png" class="" title="image-20230220125428695">
</li>
<li><p>相关参数</p>
<blockquote>
<p>查询地区: <a href="http://hmajax.itheima.net/api/area">http://hmajax.itheima.net/api/area</a></p>
<p>参数名：</p>
<p>pname：省份名字</p>
<p>cname：城市名字</p>
</blockquote>
</li>
</ul>
</li>
<li><p>正确代码如下：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">      获取地区列表: http://hmajax.itheima.net/api/area</span></span><br><span class="line"><span class="comment">      查询参数:</span></span><br><span class="line"><span class="comment">        pname: 省份或直辖市名字</span></span><br><span class="line"><span class="comment">        cname: 城市名字</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line"><span class="comment">// 目标: 根据省份和城市名字, 查询地区列表</span></span><br><span class="line"><span class="comment">// 1. 查询按钮-点击事件</span></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.sel-btn&#x27;</span>).<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 2. 获取省份和城市名字</span></span><br><span class="line">    <span class="keyword">let</span> pname = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.province&#x27;</span>).<span class="property">value</span></span><br><span class="line">    <span class="keyword">let</span> cname = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.city&#x27;</span>).<span class="property">value</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 3. 基于axios请求地区列表数据</span></span><br><span class="line">    <span class="title function_">axios</span>(&#123;</span><br><span class="line">        <span class="attr">url</span>: <span class="string">&#x27;http://hmajax.itheima.net/api/area&#x27;</span>,</span><br><span class="line">        <span class="attr">params</span>: &#123;</span><br><span class="line">            pname,</span><br><span class="line">            cname</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;).<span class="title function_">then</span>(<span class="function"><span class="params">result</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">// console.log(result)</span></span><br><span class="line">        <span class="comment">// 4. 把数据转li标签插入到页面上</span></span><br><span class="line">        <span class="keyword">let</span> list = result.<span class="property">data</span>.<span class="property">list</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(list)</span><br><span class="line">        <span class="keyword">let</span> theLi = list.<span class="title function_">map</span>(<span class="function"><span class="params">areaName</span> =&gt;</span> <span class="string">`&lt;li class=&quot;list-group-item&quot;&gt;<span class="subst">$&#123;areaName&#125;</span>&lt;/li&gt;`</span>).<span class="title function_">join</span>(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(theLi)</span><br><span class="line">        <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.list-group&#x27;</span>).<span class="property">innerHTML</span> = theLi</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li>
</ol>
<h3 id="小结-3"><a href="#小结-3" class="headerlink" title="小结"></a>小结</h3><ol>
<li><p>ES6 对象属性和值简写的前提是什么？</p>
<details>
<summary>答案</summary>
<ul>
<li>当属性名和value位置变量名同名即可简写
</li>
</ul>
</details></li>
</ol>
<h2 id="05-常用请求方法和数据提交"><a href="#05-常用请求方法和数据提交" class="headerlink" title="05.常用请求方法和数据提交"></a>05.常用请求方法和数据提交</h2><h3 id="目标-4"><a href="#目标-4" class="headerlink" title="目标"></a>目标</h3><p>掌握如何向服务器提交数据，而不单单是获取数据</p>
<h3 id="讲解-4"><a href="#讲解-4" class="headerlink" title="讲解"></a>讲解</h3><ol>
<li><p>想要提交数据，先来了解什么是请求方法</p>
<ul>
<li><p>请求方法是一些固定单词的英文，例如：GET，POST，PUT，DELETE，PATCH（这些都是http协议规定的），每个单词对应一种对服务器资源要执行的操作</p>
<img data-src="/2024/11/19/AJAX%E5%AD%A6%E4%B9%A0/image-20230220130833363.png" class="" title="image-20230220130833363">

<img data-src="/2024/11/19/AJAX%E5%AD%A6%E4%B9%A0/image-20230404104319428.png" class="" title="image-20230404104319428">
</li>
<li><p>前面我们获取数据其实用的就是GET请求方法，但是axios内部设置了默认请求方法就是GET，我们就没有写</p>
</li>
<li><p>但是提交数据需要使用POST请求方法</p>
</li>
</ul>
</li>
<li><p>什么时候进行数据提交呢？</p>
<ul>
<li><p>例如：多端要查看同一份订单数据，或者使用同一个账号进行登录，那订单&#x2F;用户名+密码，就需要保存在服务器上，随时随地进行访问</p>
<img data-src="/2024/11/19/AJAX%E5%AD%A6%E4%B9%A0/image-20230404104328384.png" class="" title="image-20230404104328384">

<img data-src="/2024/11/19/AJAX%E5%AD%A6%E4%B9%A0/image-20230404104333584.png" class="" title="image-20230404104333584"></li>
</ul>
</li>
<li><p>axios 如何提交数据到服务器呢？</p>
<ul>
<li><p>需要学习，method 和 data 这2个新的选项了（大家不用担心，这2个学完，axios常用的选项就都学完了）</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="title function_">axios</span>(&#123;</span><br><span class="line">  <span class="attr">url</span>: <span class="string">&#x27;目标资源地址&#x27;</span>,</span><br><span class="line">  <span class="attr">method</span>: <span class="string">&#x27;请求方法&#x27;</span>,</span><br><span class="line">  <span class="attr">data</span>: &#123;</span><br><span class="line">    参数名: 值</span><br><span class="line">  &#125;</span><br><span class="line">&#125;).<span class="title function_">then</span>(<span class="function"><span class="params">result</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 对服务器返回的数据做后续处理</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li><p>需求：注册账号，提交用户名和密码到服务器保存</p>
<blockquote>
<p>注册用户 URL 网址：<a href="http://hmajax.itheima.net/api/register">http://hmajax.itheima.net/api/register</a></p>
<p>请求方法：POST</p>
<p>参数名：</p>
<p>username：用户名（要求中英文和数字组成，最少8位）</p>
<p>password：密码（最少6位）</p>
</blockquote>
<img data-src="/2024/11/19/AJAX%E5%AD%A6%E4%B9%A0/image-20230404104350387.png" class="" title="image-20230404104350387">
</li>
<li><p>正确代码如下：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">  注册用户：http://hmajax.itheima.net/api/register</span></span><br><span class="line"><span class="comment">  请求方法：POST</span></span><br><span class="line"><span class="comment">  参数名：</span></span><br><span class="line"><span class="comment">    username：用户名（中英文和数字组成，最少8位）</span></span><br><span class="line"><span class="comment">    password：密码  （最少6位）</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">  目标：点击按钮，通过axios提交用户和密码，完成注册</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.btn&#x27;</span>).<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="title function_">axios</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">&#x27;http://hmajax.itheima.net/api/register&#x27;</span>,</span><br><span class="line">    <span class="attr">method</span>: <span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line">    <span class="attr">data</span>: &#123;</span><br><span class="line">      <span class="attr">username</span>: <span class="string">&#x27;itheima007&#x27;</span>,</span><br><span class="line">      <span class="attr">password</span>: <span class="string">&#x27;7654321&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li>
</ol>
<h3 id="小结-4"><a href="#小结-4" class="headerlink" title="小结"></a>小结</h3><ol>
<li><p>请求方法最常用的是哪2个，分别有什么作用？</p>
<details>
<summary>答案</summary>
<ul>
<li>POST 提交数据，GET 查询数据
</li>
</ul>
</details>
</li>
<li><p>axios 的核心配置项？</p>
<details>
<summary>答案</summary>
<ul>
<li>url：目标资源地址，method：请求方法，params：查询参数，data：提交的数据
</li>
</ul>
</details></li>
</ol>
<h2 id="06-axios-错误处理"><a href="#06-axios-错误处理" class="headerlink" title="06.axios 错误处理"></a>06.axios 错误处理</h2><h3 id="目标-5"><a href="#目标-5" class="headerlink" title="目标"></a>目标</h3><p>掌握接收 axios 响应错误信息的处理语法</p>
<h3 id="讲解-5"><a href="#讲解-5" class="headerlink" title="讲解"></a>讲解</h3><ol>
<li><p>如果注册相同的用户名，则会遇到注册失败的请求，也就是 axios 请求响应失败了，你会在控制台看到如图的错误：</p>
<img data-src="/2024/11/19/AJAX%E5%AD%A6%E4%B9%A0/image-20230220131753051.png" class="" title="image-20230220131753051">
</li>
<li><p>在 axios 语法中要如何处理呢？</p>
<ul>
<li>因为，普通用户不会去控制台里看错误信息，我们要编写代码拿到错误并展示给用户在页面上</li>
</ul>
</li>
<li><p>使用 axios 的 catch 方法，捕获这次请求响应的错误并做后续处理，语法如下：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="title function_">axios</span>(&#123;</span><br><span class="line">  <span class="comment">// ...请求选项</span></span><br><span class="line">&#125;).<span class="title function_">then</span>(<span class="function"><span class="params">result</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 处理成功数据</span></span><br><span class="line">&#125;).<span class="title function_">catch</span>(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 处理失败错误</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
</li>
<li><p>需求：再次重复注册相同用户名，提示用户注册失败的原因</p>
<img data-src="/2024/11/19/AJAX%E5%AD%A6%E4%B9%A0/image-20230404104440224.png" class="" title="image-20230404104440224">

<img data-src="/2024/11/19/AJAX%E5%AD%A6%E4%B9%A0/image-20230404104447501.png" class="" title="image-20230404104447501">
</li>
<li><p>对应代码</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.btn&#x27;</span>).<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="title function_">axios</span>(&#123;</span><br><span class="line">      <span class="attr">url</span>: <span class="string">&#x27;http://hmajax.itheima.net/api/register&#x27;</span>,</span><br><span class="line">      <span class="attr">method</span>: <span class="string">&#x27;post&#x27;</span>,</span><br><span class="line">      <span class="attr">data</span>: &#123;</span><br><span class="line">        <span class="attr">username</span>: <span class="string">&#x27;itheima007&#x27;</span>,</span><br><span class="line">        <span class="attr">password</span>: <span class="string">&#x27;7654321&#x27;</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;).<span class="title function_">then</span>(<span class="function"><span class="params">result</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="comment">// 成功</span></span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(result)</span><br><span class="line">    &#125;).<span class="title function_">catch</span>(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="comment">// 失败</span></span><br><span class="line">      <span class="comment">// 处理错误信息</span></span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(error)</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(error.<span class="property">response</span>.<span class="property">data</span>.<span class="property">message</span>)</span><br><span class="line">      <span class="title function_">alert</span>(error.<span class="property">response</span>.<span class="property">data</span>.<span class="property">message</span>)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li>
</ol>
<h3 id="小结-5"><a href="#小结-5" class="headerlink" title="小结"></a>小结</h3><ol>
<li><p>axios 如何拿到请求响应失败的信息？</p>
<details>
<summary>答案</summary>
<ul>
<li>通过 axios 函数调用后，在后面接着调用 .catch 方法捕获
</li>
</ul>
</details></li>
</ol>
<h2 id="07-HTTP-协议-请求报文"><a href="#07-HTTP-协议-请求报文" class="headerlink" title="07.HTTP 协议-请求报文"></a>07.HTTP 协议-请求报文</h2><h3 id="目标-6"><a href="#目标-6" class="headerlink" title="目标"></a>目标</h3><p>了解 HTTP 协议中，请求报文的组成和作用</p>
<h3 id="讲解-6"><a href="#讲解-6" class="headerlink" title="讲解"></a>讲解</h3><ol>
<li><p>首先，HTTP 协议规定了浏览器和服务器返回内容的<span style="color: red;">格式</span></p>
</li>
<li><p>请求报文：是浏览器按照协议规定发送给服务器的内容，例如刚刚注册用户时，发起的请求报文：</p>
<img data-src="/2024/11/19/AJAX%E5%AD%A6%E4%B9%A0/image-20230404104508764.png" class="" title="image-20230404104508764">

<img data-src="/2024/11/19/AJAX%E5%AD%A6%E4%B9%A0/image-20230220132229960.png" class="" title="image-20230220132229960">
</li>
<li><p>这里的格式包含：</p>
<ul>
<li>请求行：请求方法，URL，协议</li>
<li>请求头：以键值对的格式携带的附加信息，比如：Content-Type（指定了本次传递的内容类型）</li>
<li>空行：分割请求头，空行之后的是发送给服务器的资源</li>
<li>请求体：发送的资源</li>
</ul>
</li>
<li><p>我们切换到浏览器中，来看看刚才注册用户发送的这个请求报文以及内容去哪里查看呢</p>
</li>
<li><p>代码：直接在上个代码基础上复制，然后运行查看请求报文对应关系即可</p>
</li>
</ol>
<h3 id="小结-6"><a href="#小结-6" class="headerlink" title="小结"></a>小结</h3><ol>
<li><p>浏览器发送给服务器的内容叫做，请求报文</p>
</li>
<li><p>请求报文的组成是什么？</p>
<details>
<summary>答案</summary>
<ul>
<li>请求行，请求头，空行，请求体
</li>
</ul>
</details>
</li>
<li><p>通过 Chrome 的网络面板如何查看请求体？</p>
<img data-src="/2024/11/19/AJAX%E5%AD%A6%E4%B9%A0/image-20230220132617016.png" class="" title="image-20230220132617016"></li>
</ol>
<h2 id="08-请求报文-错误排查"><a href="#08-请求报文-错误排查" class="headerlink" title="08.请求报文-错误排查"></a>08.请求报文-错误排查</h2><h3 id="目标-7"><a href="#目标-7" class="headerlink" title="目标"></a>目标</h3><p>了解学习了查看请求报文之后的作用，可以用来辅助错误排查</p>
<h3 id="讲解-7"><a href="#讲解-7" class="headerlink" title="讲解"></a>讲解</h3><ol>
<li>学习了查看请求报文有什么用呢？<ul>
<li>可以用来确认我们代码发送的请求数据是否真的正确</li>
</ul>
</li>
<li>配套模板代码里，对应 08 标题文件夹里是我同桌的代码，它把登录也写完了，但是无法登录，我们来到模板代码中，找到运行后，在<span style="color: red;">不逐行查看代码的情况下</span>，查看请求报文，看看它登录提交的相关信息对不对，帮他找找问题出现的原因</li>
<li>发现请求体数据有问题，往代码中定位，找到类名写错误了</li>
<li>代码：在配套文件夹素材里，找到需要对应代码，直接运行，根据报错信息，找到错误原因</li>
</ol>
<h3 id="小结-7"><a href="#小结-7" class="headerlink" title="小结"></a>小结</h3><ol>
<li><p>学会了查看请求报文，对实际开发有什么帮助呢？</p>
<details>
<summary>答案</summary>
<ul>
<li>可以快速确认我们发送的内容是否正确
</li>
</ul>
</details></li>
</ol>
<h2 id="09-HTTP-协议-响应报文"><a href="#09-HTTP-协议-响应报文" class="headerlink" title="09.HTTP 协议-响应报文"></a>09.HTTP 协议-响应报文</h2><h3 id="目标-8"><a href="#目标-8" class="headerlink" title="目标"></a>目标</h3><p>了解响应报文的组成</p>
<h3 id="讲解-8"><a href="#讲解-8" class="headerlink" title="讲解"></a>讲解</h3><ol>
<li><p>响应报文：是服务器按照协议固定的格式，返回给浏览器的内容</p>
<img data-src="/2024/11/19/AJAX%E5%AD%A6%E4%B9%A0/image-20230404104556531.png" class="" title="image-20230404104556531">

<img data-src="/2024/11/19/AJAX%E5%AD%A6%E4%B9%A0/image-20230220133141151.png" class="" title="image-20230220133141151">
</li>
<li><p>响应报文的组成：</p>
<ul>
<li>响应行（状态行）：协议，HTTP响应状态码，状态信息</li>
<li>响应头：以键值对的格式携带的附加信息，比如：Content-Type（告诉浏览器，本次返回的内容类型）</li>
<li>空行：分割响应头，控制之后的是服务器返回的资源</li>
<li>响应体：返回的资源</li>
</ul>
</li>
<li><p>HTTP 响应状态码：</p>
<ul>
<li><p>用来表明请求是否成功完成</p>
</li>
<li><p>例如：404（客户端要找的资源，在服务器上不存在）</p>
<img data-src="/2024/11/19/AJAX%E5%AD%A6%E4%B9%A0/image-20230220133344116.png" class="" title="image-20230220133344116"></li>
</ul>
</li>
</ol>
<h3 id="小结-8"><a href="#小结-8" class="headerlink" title="小结"></a>小结</h3><ol>
<li><p>响应报文的组成？</p>
<details>
<summary>答案</summary>
<ul>
<li>响应行，响应头，空行，响应体
</li>
</ul>
</details>
</li>
<li><p>HTTP 响应状态码是做什么的？</p>
<details>
<summary>答案</summary>
<ul>
<li>表明请求是否成功完成，2xx都是成功的
</li>
</ul>
</details></li>
</ol>
<h2 id="10-接口文档"><a href="#10-接口文档" class="headerlink" title="10.接口文档"></a>10.接口文档</h2><h3 id="目标-9"><a href="#目标-9" class="headerlink" title="目标"></a>目标</h3><p>掌握接口文档的使用，配合 axios 与服务器进行数据交互</p>
<h3 id="讲解-9"><a href="#讲解-9" class="headerlink" title="讲解"></a>讲解</h3><ol>
<li><p>接口文档：描述接口的文章（一般是后端工程师，编写和提供）</p>
</li>
<li><p>接口：指的使用 AJAX 和 服务器通讯时，使用的 URL，请求方法，以及参数，例如：<a href="https://apifox.com/apidoc/shared-1b0dd84f-faa8-435d-b355-5a8a329e34a8">AJAX阶段接口文档</a></p>
</li>
<li><p>例如：获取城市列表接口样子</p>
<img data-src="/2024/11/19/AJAX%E5%AD%A6%E4%B9%A0/image-20230404104720587.png" class="" title="image-20230404104720587">
</li>
<li><p>需求：打开 AJAX 阶段接口文档，查看登录接口，并编写代码，完成一次登录的效果吧</p>
</li>
<li><p>代码如下：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.btn&#x27;</span>).<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 用户登录</span></span><br><span class="line">  <span class="title function_">axios</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">&#x27;http://hmajax.itheima.net/api/login&#x27;</span>,</span><br><span class="line">    <span class="attr">method</span>: <span class="string">&#x27;post&#x27;</span>,</span><br><span class="line">    <span class="attr">data</span>: &#123;</span><br><span class="line">      <span class="attr">username</span>: <span class="string">&#x27;itheima007&#x27;</span>,</span><br><span class="line">      <span class="attr">password</span>: <span class="string">&#x27;7654321&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li>
</ol>
<h3 id="小结-9"><a href="#小结-9" class="headerlink" title="小结"></a>小结</h3><ol>
<li><p>接口文档是什么？</p>
<details>
<summary>答案</summary>
<ul>
<li>由后端提供的描述接口的文章
</li>
</ul>
</details>
</li>
<li><p>接口文档里包含什么？</p>
<details>
<summary>答案</summary>
<ul>
<li>请求的 URL 网址，请求方法，请求参数和说明
</li>
</ul>
</details></li>
</ol>
<h2 id="11-案例-用户登录-主要业务"><a href="#11-案例-用户登录-主要业务" class="headerlink" title="11.案例-用户登录-主要业务"></a>11.案例-用户登录-主要业务</h2><h3 id="目标-10"><a href="#目标-10" class="headerlink" title="目标"></a>目标</h3><p>尝试通过页面获取用户名和密码，进行登录</p>
<h3 id="讲解-10"><a href="#讲解-10" class="headerlink" title="讲解"></a>讲解</h3><ol>
<li><p>先来到备课代码中，运行完成的页面，查看要完成的登录效果（登录成功和失败）</p>
</li>
<li><p>需求：编写代码，查看接口文档，填写相关信息，完成登录业务</p>
</li>
<li><p>分析实现的步骤</p>
<ol>
<li><p>点击登录，获取并判断用户名和长度</p>
</li>
<li><p>提交数据和服务器通信</p>
</li>
<li><p>提示信息，反馈给用户（这节课先来完成前 2 个步骤）</p>
<img data-src="/2024/11/19/AJAX%E5%AD%A6%E4%B9%A0/image-20230404104851497.png" class="" title="image-20230404104851497"></li>
</ol>
</li>
<li><p>代码如下：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 目标1：点击登录时，用户名和密码长度判断，并提交数据和服务器通信</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 1.1 登录-点击事件</span></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.btn-login&#x27;</span>).<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 1.2 获取用户名和密码</span></span><br><span class="line">  <span class="keyword">const</span> username = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.username&#x27;</span>).<span class="property">value</span></span><br><span class="line">  <span class="keyword">const</span> password = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.password&#x27;</span>).<span class="property">value</span></span><br><span class="line">  <span class="comment">// console.log(username, password)</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 1.3 判断长度</span></span><br><span class="line">  <span class="keyword">if</span> (username.<span class="property">length</span> &lt; <span class="number">8</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;用户名必须大于等于8位&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="comment">// 阻止代码继续执行</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (password.<span class="property">length</span> &lt; <span class="number">6</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;密码必须大于等于6位&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="comment">// 阻止代码继续执行</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 1.4 基于axios提交用户名和密码</span></span><br><span class="line">  <span class="comment">// console.log(&#x27;提交数据到服务器&#x27;)</span></span><br><span class="line">  <span class="title function_">axios</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">&#x27;http://hmajax.itheima.net/api/login&#x27;</span>,</span><br><span class="line">    <span class="attr">method</span>: <span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line">    <span class="attr">data</span>: &#123;</span><br><span class="line">      username,</span><br><span class="line">      password</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;).<span class="title function_">then</span>(<span class="function"><span class="params">result</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(result)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(result.<span class="property">data</span>.<span class="property">message</span>)</span><br><span class="line">  &#125;).<span class="title function_">catch</span>(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(error)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(error.<span class="property">response</span>.<span class="property">data</span>.<span class="property">message</span>)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li>
</ol>
<h3 id="小结-10"><a href="#小结-10" class="headerlink" title="小结"></a>小结</h3><ol>
<li><p>总结下用户登录案例的思路？</p>
<details>
<summary>答案</summary>
<ul>
<li>1. 登录按钮-绑定点击事件
2. 从页面输入框里，获取用户名和密码
3. 判断长度是否符合要求
4. 基于 axios 提交用户名和密码
</li>
</ul>
</details></li>
</ol>
<h2 id="12-案例-用户登录-提示信息"><a href="#12-案例-用户登录-提示信息" class="headerlink" title="12.案例-用户登录-提示信息"></a>12.案例-用户登录-提示信息</h2><h3 id="目标-11"><a href="#目标-11" class="headerlink" title="目标"></a>目标</h3><p>根据准备好的提示标签和样式，给用户反馈提示</p>
<h3 id="讲解-11"><a href="#讲解-11" class="headerlink" title="讲解"></a>讲解</h3><ol>
<li><p>需求：使用提前准备好的提示框，来把登录成功&#x2F;失败结果提示给用户</p>
<img data-src="/2024/11/19/AJAX%E5%AD%A6%E4%B9%A0/image-20230404104955330.png" class="" title="image-20230404104955330">

<img data-src="/2024/11/19/AJAX%E5%AD%A6%E4%B9%A0/image-20230404105003019.png" class="" title="image-20230404105003019">


</li>
<li><p>使用提示框，反馈提示消息，因为有4处地方需要提示框，所以封装成函数</p>
<ol>
<li><p>获取提示框</p>
</li>
<li><p>封装提示框函数，重复调用，满足提示需求</p>
<p>功能：</p>
<ol>
<li>显示提示框</li>
<li>不同提示文字msg，和成功绿色失败红色isSuccess参数（true成功，false失败）</li>
<li>过2秒后，让提示框自动消失</li>
</ol>
</li>
</ol>
</li>
<li><p>对应提示框核心代码：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 2.2 封装提示框函数，重复调用，满足提示需求</span></span><br><span class="line"><span class="comment"> * 功能：</span></span><br><span class="line"><span class="comment"> * 1. 显示提示框</span></span><br><span class="line"><span class="comment"> * 2. 不同提示文字msg，和成功绿色失败红色isSuccess（true成功，false失败）</span></span><br><span class="line"><span class="comment"> * 3. 过2秒后，让提示框自动消失</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">alertFn</span>(<span class="params">msg, isSuccess</span>) &#123;</span><br><span class="line">  <span class="comment">// 1&gt; 显示提示框</span></span><br><span class="line">  myAlert.<span class="property">classList</span>.<span class="title function_">add</span>(<span class="string">&#x27;show&#x27;</span>)</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 2&gt; 实现细节</span></span><br><span class="line">  myAlert.<span class="property">innerText</span> = msg</span><br><span class="line">  <span class="keyword">const</span> bgStyle = isSuccess ? <span class="string">&#x27;alert-success&#x27;</span> : <span class="string">&#x27;alert-danger&#x27;</span></span><br><span class="line">  myAlert.<span class="property">classList</span>.<span class="title function_">add</span>(bgStyle)</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 3&gt; 过2秒隐藏</span></span><br><span class="line">  <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    myAlert.<span class="property">classList</span>.<span class="title function_">remove</span>(<span class="string">&#x27;show&#x27;</span>)</span><br><span class="line">    <span class="comment">// 提示：避免类名冲突，重置背景色</span></span><br><span class="line">    myAlert.<span class="property">classList</span>.<span class="title function_">remove</span>(bgStyle)</span><br><span class="line">  &#125;, <span class="number">2000</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ol>
<h3 id="小结-11"><a href="#小结-11" class="headerlink" title="小结"></a>小结</h3><ol>
<li><p>我们什么时候需要封装函数？</p>
<details>
<summary>答案</summary>
<ul>
<li>遇到相同逻辑，重复代码要复用的时候
</li>
</ul>
</details>
</li>
<li><p>如何封装一个函数呢？</p>
<details>
<summary>答案</summary>
<ul>
<li>先明确要完成的需求，以及需要的参数，再来实现其中的细节，然后在需要的地方调用
</li>
</ul>
</details>
</li>
<li><p>我们的提示框是如何控制出现&#x2F;隐藏的？</p>
<details>
<summary>答案</summary>
<ul>
<li>添加或移除显示的类名即可
</li>
</ul>
</details></li>
</ol>
<h2 id="13-form-serialize-插件"><a href="#13-form-serialize-插件" class="headerlink" title="13.form-serialize 插件"></a>13.form-serialize 插件</h2><h3 id="目标-12"><a href="#目标-12" class="headerlink" title="目标"></a>目标</h3><p>使用 form-serialize 插件，快速收集目标表单范围内表单元素的值</p>
<h3 id="讲解-12"><a href="#讲解-12" class="headerlink" title="讲解"></a>讲解</h3><ol>
<li><p>我们前面收集表单元素的值，是一个个标签获取的</p>
<img data-src="/2024/11/19/AJAX%E5%AD%A6%E4%B9%A0/image-20230404105134538.png" class="" title="image-20230404105134538">
</li>
<li><p>如果一套表单里有很多很多表单元素，如何一次性快速收集出来呢？</p>
<img data-src="/2024/11/19/AJAX%E5%AD%A6%E4%B9%A0/image-20230404105141226.png" class="" title="image-20230404105141226">
</li>
<li><p>使用 form-serialize 插件提供的 serialize 函数就可以办到</p>
</li>
<li><p>form-serialize 插件语法：</p>
<ol>
<li><p>引入 form-serialize 插件到自己网页中</p>
</li>
<li><p>使用 serialize 函数</p>
<ul>
<li><p>参数1：要获取的 form 表单标签对象（要求表单元素需要有 name 属性-用来作为收集的数据中属性名）</p>
</li>
<li><p>参数2：配置对象</p>
<ul>
<li>hash：<ul>
<li>true - 收集出来的是一个 JS 对象结构</li>
<li>false - 收集出来的是一个查询字符串格式</li>
</ul>
</li>
<li>empty：<ul>
<li>true - 收集空值</li>
<li>false - 不收集空值</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ol>
</li>
<li><p>需求：收集登录表单里用户名和密码</p>
</li>
<li><p>对应代码：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>form-serialize插件使用<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;javascript:;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;example-form&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">    目标：在点击提交时，使用form-serialize插件，快速收集表单元素值</span></span><br><span class="line"><span class="comment">    1. 把插件引入到自己网页中</span></span><br><span class="line"><span class="comment">  --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;./lib/form-serialize.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.btn&#x27;</span>).<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">/**</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">       * 2. 使用serialize函数，快速收集表单元素的值</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">       * 参数1：要获取哪个表单的数据</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">       *  表单元素设置name属性，值会作为对象的属性名</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">       *  建议name属性的值，最好和接口文档参数名一致</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">       * 参数2：配置对象</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">       *  hash 设置获取数据结构</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">       *    - true：JS对象（推荐）一般请求体里提交给服务器</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">       *    - false: 查询字符串</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">       *  empty 设置是否获取空值</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">       *    - true: 获取空值（推荐）数据结构和标签结构一致</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">       *    - false：不获取空值</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">      */</span></span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">const</span> form = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.example-form&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">const</span> data = <span class="title function_">serialize</span>(form, &#123; <span class="attr">hash</span>: <span class="literal">true</span>, <span class="attr">empty</span>: <span class="literal">true</span> &#125;)</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// const data = serialize(form, &#123; hash: false, empty: true &#125;)</span></span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// const data = serialize(form, &#123; hash: true, empty: false &#125;)</span></span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">console</span>.<span class="title function_">log</span>(data)</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li>
</ol>
<h3 id="小结-12"><a href="#小结-12" class="headerlink" title="小结"></a>小结</h3><ol>
<li><p>我们什么时候使用 form-serialize 插件？</p>
<details>
<summary>答案</summary>
<ul>
<li>快速收集表单元素的值</li>
</ul>
</details>
</li>
<li><p>如何使用 form-serialize 插件？</p>
<details>
<summary>答案</summary>
<ul>
<li>1. 先引入插件到自己的网页中，2. 准备form和表单元素的name属性，3.使用serialize函数，传入form表单和配置对象
</li>
</ul>
</details>
</li>
<li><p>配置对象中 hash 和 empty 有什么用？</p>
<details>
<summary>答案</summary>
<ul>
<li>hash 决定是收集为 JS 对象还是查询参数字符串，empty 决定是否收集空值
</li>
</ul>
</details></li>
</ol>
<h2 id="14-案例-用户登录-form-serialize"><a href="#14-案例-用户登录-form-serialize" class="headerlink" title="14.案例-用户登录-form-serialize"></a>14.案例-用户登录-form-serialize</h2><h3 id="目标-13"><a href="#目标-13" class="headerlink" title="目标"></a>目标</h3><p>尝试通过 form-serialize 重新修改用户登录案例-收集用户名和密码</p>
<h3 id="讲解-13"><a href="#讲解-13" class="headerlink" title="讲解"></a>讲解</h3><ol>
<li><p>基于模板代码，使用 form-serialize 插件来收集用户名和密码</p>
</li>
<li><p>在原来的代码基础上修改即可</p>
<ol>
<li><p>先引入插件</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 3.1 引入插件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;./lib/form-serialize.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>然后修改代码</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 3.2 使用serialize函数，收集登录表单里用户名和密码</span></span><br><span class="line"><span class="keyword">const</span> form = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.login-form&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> data = <span class="title function_">serialize</span>(form, &#123; <span class="attr">hash</span>: <span class="literal">true</span>, <span class="attr">empty</span>: <span class="literal">true</span> &#125;)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(data)</span><br><span class="line"><span class="comment">// &#123;username: &#x27;itheima007&#x27;, password: &#x27;7654321&#x27;&#125;</span></span><br><span class="line"><span class="keyword">const</span> &#123; username, password &#125; = data</span><br></pre></td></tr></table></figure></li>
</ol>
</li>
</ol>
<h3 id="小结-13"><a href="#小结-13" class="headerlink" title="小结"></a>小结</h3><ol>
<li><p>如何把一个第三方插件使用在已完成的案例中？</p>
<details>
<summary>答案</summary>
<ul>
<li>引入后，只需要使用在要修改的地方，修改一点就要确认测试一下
</li>
</ul>
</details></li>
</ol>
<h2 id="今日重点-必须会"><a href="#今日重点-必须会" class="headerlink" title="今日重点(必须会)"></a>今日重点(必须会)</h2><ol>
<li>axios 的配置项有哪几个，作用分别是什么？</li>
<li>接口文档都包含哪些信息？</li>
<li>在浏览器中如何查看查询参数&#x2F;请求体，以及响应体数据？</li>
<li>请求报文和响应报文由几个部分组成，每个部分的作用？</li>
</ol>
<h2 id="今日作业-必完成"><a href="#今日作业-必完成" class="headerlink" title="今日作业(必完成)"></a>今日作业(必完成)</h2><p>参考作业文件夹的md要求</p>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ol>
<li><a href="https://baike.baidu.com/item/%E5%AE%A2%E6%88%B7%E7%AB%AF/101081?fr=aladdin">客户端-&gt;百度百科</a></li>
<li><a href="https://baike.baidu.com/item/%E6%B5%8F%E8%A7%88%E5%99%A8/213911?fr=aladdin">浏览器解释-&gt;百度百科</a></li>
<li><a href="https://baike.baidu.com/item/%E6%9C%8D%E5%8A%A1%E5%99%A8/100571?fr=aladdin">服务器解释-&gt;百度百科</a></li>
<li><a href="https://baike.baidu.com/item/%E7%BB%9F%E4%B8%80%E8%B5%84%E6%BA%90%E5%AE%9A%E4%BD%8D%E7%B3%BB%E7%BB%9F/5937042?fromtitle=URL&fromid=110640&fr=aladdin">url解释-&gt;百度百科</a></li>
<li><a href="https://baike.baidu.com/item/HTTP?fromtitle=HTTP%E5%8D%8F%E8%AE%AE&fromid=1276942">http协议-&gt;百度百科</a></li>
<li><a href="https://baike.baidu.com/item/%E4%B8%BB%E6%9C%BA%E5%90%8D">主机名-&gt;百度百科</a></li>
<li><a href="https://baike.baidu.com/item/%E7%AB%AF%E5%8F%A3%E5%8F%B">端口号-&gt;百度百科</a></li>
<li><a href="https://baike.baidu.com/tashuo/browse/content?id=11fca6ecdc2c066af4c5594f&lemmaId=8425&fromLemmaModule=pcBottom&lemmaTitle=ajax">Ajax解释-&gt;百度-懂啦</a></li>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/Guide/AJAX/Getting_Started">Ajax解释-&gt;MDN解释Ajax是与服务器通信而不只是请求</a></li>
<li><a href="https://baike.baidu.com/item/axios">axios-&gt;百度(可以点击播报听读音)</a></li>
<li><a href="https://github.com/axios/axios">axios(github)地址</a></li>
<li><a href="https://axios-http.com/">axios官方推荐官网</a></li>
<li><a href="https://www.npmjs.com/package/axios">axios(npmjs)地址</a></li>
<li><a href="https://baike.baidu.com/item/post/2171305">GET和POST区别-&gt;百度百科</a></li>
<li><a href="https://baike.baidu.com/item/%E6%8A%A5%E6%96%87/3164352">报文讲解-&gt;百度百科</a></li>
<li><a href="https://baike.baidu.com/item/HTTP%E7%8A%B6%E6%80%81%E7%A0%81/5053660">HTTP状态码-&gt;百度百科</a></li>
<li><a href="https://baike.baidu.com/item/%E6%8E%A5%E5%8F%A3/2886384">接口概念-&gt;百度百科</a></li>
</ol>
<h1 id="Day02-AJAX综合案例"><a href="#Day02-AJAX综合案例" class="headerlink" title="Day02_AJAX综合案例"></a>Day02_AJAX综合案例</h1><h2 id="知识点自测-1"><a href="#知识点自测-1" class="headerlink" title="知识点自测"></a>知识点自测</h2><ol>
<li><p>以下代码运行结果是什么？（考察扩展运算符的使用）</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> result = &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;老李&#x27;</span>,</span><br><span class="line">  <span class="attr">age</span>: <span class="number">18</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> obj = &#123;</span><br><span class="line">  ...result</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(obj.<span class="property">age</span>)</span><br></pre></td></tr></table></figure>

<p>A：报错</p>
<p>B：18</p>
<details>
<summary>答案</summary>
<ul>
<li>B正确</li>
</ul>
</details>


</li>
<li><p>什么是事件委托？</p>
<p>A：只能把单击事件委托给父元素绑定</p>
<p>B：可以把能冒泡的事件，委托给已存在的向上的任意标签元素绑定</p>
<details>
<summary>答案</summary>
<ul>
<li>B正确</li>
</ul>
</details>


</li>
<li><p>事件对象e.target作用是什么?</p>
<p>A：获取到这次触发事件相关的信息</p>
<p>B：获取到这次触发事件目标标签元素</p>
<details>
<summary>答案</summary>
<ul>
<li>B正确</li>
</ul>
</details>


</li>
<li><p>如果获取绑定在标签上自定义属性的值10？</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">data-code</span>=<span class="string">&quot;10&quot;</span>&gt;</span>西游记<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>A：div标签对象.innerHTML</p>
<p>B：div标签对象.dataset.code</p>
<p>C：div标签对象.code</p>
<details>
<summary>答案</summary>
<ul>
<li>B正确</li>
</ul>
</details>


</li>
<li><p>哪个方法可以判断目标标签是否包含指定的类名?</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;my-div title info&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>A: div标签对象.className &#x3D;&#x3D;&#x3D; ‘title’</p>
<p>B: div标签对象.classList.contains(‘title’)</p>
<details>
<summary>答案</summary>
<ul>
<li>B正确</li>
</ul>
</details>


</li>
<li><p>伪数组取值哪种方式是正确的?</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> obj = &#123; <span class="number">0</span>: <span class="string">&#x27;老李&#x27;</span>, <span class="number">1</span>: <span class="string">&#x27;老刘&#x27;</span> &#125;</span><br></pre></td></tr></table></figure>

<p>A: obj.0</p>
<p>B: obj[0]</p>
<details>
<summary>答案</summary>
<ul>
<li>B正确</li>
</ul>
</details>


</li>
<li><p>以下哪个选项可以，往本地存储键为‘bgImg’，值为图片url网址的代码</p>
<p>A：localStorage.setItem(‘bgImg’)</p>
<p>B：localStorage.getItem(‘bgImg’)</p>
<p>C：localStorage.setItem(‘bgImg’, ‘图片url网址’)</p>
<p>D：localStorage.getItem(‘bgImg’, ‘图片url网址’)</p>
<details>
<summary>答案</summary>
<ul>
<li>C正确</li>
</ul>
</details>


</li>
<li><p>以下代码运行结果是？</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> obj = &#123;</span><br><span class="line">  <span class="attr">username</span>: <span class="string">&#x27;老李&#x27;</span>,</span><br><span class="line">  <span class="attr">age</span>: <span class="number">18</span>,</span><br><span class="line">  <span class="attr">sex</span>: <span class="string">&#x27;男&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="title class_">Object</span>.<span class="title function_">keys</span>(obj)</span><br></pre></td></tr></table></figure>

<p>A：代码报错</p>
<p>B：[username, age, sex]</p>
<p>C：[“username”, “age”, “sex”]</p>
<p>D：[“老李”, 18, “男”]</p>
<details>
<summary>答案</summary>
<ul>
<li>C正确</li>
</ul>
</details>


</li>
<li><p>下面哪个选项可以把数字字符串转成数字类型？</p>
<p>A：+’10‘</p>
<p>B：’10‘ + 0</p>
<details>
<summary>答案</summary>
<ul>
<li>A正确</li>
</ul>
</details>


</li>
<li><p>以下代码运行后的结果是什么？（考察逻辑与的短路特性）</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> age = <span class="number">18</span></span><br><span class="line"><span class="keyword">const</span> result1 = (age || <span class="string">&#x27;有年龄&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> sex = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">const</span> result2 = sex || <span class="string">&#x27;没有性别&#x27;</span></span><br></pre></td></tr></table></figure>

<p>A：报错，报错</p>
<p>B：18，没有性别</p>
<p>C：有年龄，没有性别</p>
<p>D：18，’‘</p>
<details>
<summary>答案</summary>
<ul>
<li>B正确</li>
</ul>
</details></li>
</ol>
<h2 id="目录-1"><a href="#目录-1" class="headerlink" title="目录"></a>目录</h2><ul>
<li>案例-图书管理</li>
<li>图片上传</li>
<li>案例-网站换肤</li>
<li>案例-个人信息设置</li>
</ul>
<h2 id="学习目标-1"><a href="#学习目标-1" class="headerlink" title="学习目标"></a>学习目标</h2><blockquote>
<p>今天主要就是练，巩固 axios 的使用</p>
</blockquote>
<ol>
<li>完成案例-图书管理系统（增删改查）经典业务</li>
<li>掌握图片上传的思路</li>
<li>完成案例-网站换肤并实现图片地址缓存</li>
<li>完成案例-个人信息设置</li>
</ol>
<h2 id="01-案例-图书管理-介绍"><a href="#01-案例-图书管理-介绍" class="headerlink" title="01.案例_图书管理-介绍"></a>01.案例_图书管理-介绍</h2><h3 id="目标-14"><a href="#目标-14" class="headerlink" title="目标"></a>目标</h3><p>案例-图书管理-介绍（介绍要完成的效果和练习到的思维）</p>
<h3 id="讲解-14"><a href="#讲解-14" class="headerlink" title="讲解"></a>讲解</h3><ol>
<li><p>打开备课代码运行图书管理案例效果-介绍要完成的增删改查业务效果和 Bootstrap 弹框使用</p>
<img data-src="/2024/11/19/AJAX%E5%AD%A6%E4%B9%A0/image-20230404105414757.png" class="" title="image-20230404105414757">

<img data-src="/2024/11/19/AJAX%E5%AD%A6%E4%B9%A0/image-20230404105421707.png" class="" title="image-20230404105421707">
</li>
<li><p>分析步骤和对应的视频模块</p>
<ul>
<li>先学习 Bootstrap 弹框的使用（因为添加图书和编辑图书需要这个窗口来承载图书表单）</li>
<li>先做渲染图书列表（这样做添加和编辑以及删除可以看到数据变化，所以先做渲染）</li>
<li>再做新增图书功能</li>
<li>再做删除图书功能</li>
<li>再做编辑图书功能（注意：编辑和新增图书是2套弹框-后续做项目我们再用同1个弹框）</li>
</ul>
</li>
</ol>
<h3 id="小结-14"><a href="#小结-14" class="headerlink" title="小结"></a>小结</h3><ol>
<li><p>做完这个案例我们将会有什么收获呢?</p>
<details>
<summary>答案</summary>
<ul>
<li>掌握前端经典增删改查的业务和思路，对以后开发很有帮助</li>
</ul>
</details></li>
</ol>
<h2 id="02-Bootstrap-弹框-属性控制"><a href="#02-Bootstrap-弹框-属性控制" class="headerlink" title="02.Bootstrap 弹框_属性控制"></a>02.Bootstrap 弹框_属性控制</h2><h3 id="目标-15"><a href="#目标-15" class="headerlink" title="目标"></a>目标</h3><p>使用属性方式控制 Bootstarp 弹框的显示和隐藏</p>
<h3 id="讲解-15"><a href="#讲解-15" class="headerlink" title="讲解"></a>讲解</h3><ol>
<li><p>什么是 Bootstrap 弹框？</p>
<ul>
<li><p>不离开当前页面，显示单独内容，供用户操作</p>
<img data-src="/2024/11/19/AJAX%E5%AD%A6%E4%B9%A0/image-20230404105801739.png" class="" title="image-20230404105801739"></li>
</ul>
</li>
<li><p>需求：使用 Bootstrap 弹框，先做个简单效果，点击按钮，让弹框出现，点击 X 和 Close 让弹框隐藏</p>
<img data-src="/2024/11/19/AJAX%E5%AD%A6%E4%B9%A0/image-20230404105858660.png" class="" title="image-20230404105858660">
</li>
<li><p>如何使用 Bootstrap 弹框呢？</p>
<ol>
<li><p>先引入 bootstrap.css 和 bootstrap.js 到自己网页中</p>
</li>
<li><p>准备弹框标签，确认结构（可以从 Bootstrap 官方文档的 Modal 里复制基础例子）- 运行到网页后，逐一对应标签和弹框每个部分对应关系</p>
</li>
<li><p>通过自定义属性，通知弹框的显示和隐藏，语法如下：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">data-bs-toggle</span>=<span class="string">&quot;modal&quot;</span> <span class="attr">data-bs-target</span>=<span class="string">&quot;css选择器&quot;</span>&gt;</span></span><br><span class="line">  显示弹框</span><br><span class="line"><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">data-bs-dismiss</span>=<span class="string">&quot;modal&quot;</span>&gt;</span>Close<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure></li>
</ol>
</li>
<li><p>去代码区实现一下</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Bootstrap 弹框<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 引入bootstrap.css --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/css/bootstrap.min.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">    目标：使用Bootstrap弹框</span></span><br><span class="line"><span class="comment">    1. 引入bootstrap.css 和 bootstrap.js</span></span><br><span class="line"><span class="comment">    2. 准备弹框标签，确认结构</span></span><br><span class="line"><span class="comment">    3. 通过自定义属性，控制弹框的显示和隐藏</span></span><br><span class="line"><span class="comment">   --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-primary&quot;</span> <span class="attr">data-bs-toggle</span>=<span class="string">&quot;modal&quot;</span> <span class="attr">data-bs-target</span>=<span class="string">&quot;.my-box&quot;</span>&gt;</span></span><br><span class="line">    显示弹框</span><br><span class="line">  <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">    弹框标签</span></span><br><span class="line"><span class="comment">    bootstrap的modal弹框，添加modal类名（默认隐藏）</span></span><br><span class="line"><span class="comment">   --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;modal my-box&quot;</span> <span class="attr">tabindex</span>=<span class="string">&quot;-1&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;modal-dialog&quot;</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 弹框-内容 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;modal-content&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 弹框-头部 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;modal-header&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">h5</span> <span class="attr">class</span>=<span class="string">&quot;modal-title&quot;</span>&gt;</span>Modal title<span class="tag">&lt;/<span class="name">h5</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn-close&quot;</span> <span class="attr">data-bs-dismiss</span>=<span class="string">&quot;modal&quot;</span> <span class="attr">aria-label</span>=<span class="string">&quot;Close&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 弹框-身体 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;modal-body&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">p</span>&gt;</span>Modal body text goes here.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 弹框-底部 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;modal-footer&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-secondary&quot;</span> <span class="attr">data-bs-dismiss</span>=<span class="string">&quot;modal&quot;</span>&gt;</span>Close<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-primary&quot;</span>&gt;</span>Save changes<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- 引入bootstrap.js --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/js/bootstrap.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li>
</ol>
<h3 id="小结-15"><a href="#小结-15" class="headerlink" title="小结"></a>小结</h3><ol>
<li><p>用哪个属性绑定来控制弹框显示呢?</p>
<details>
<summary>答案</summary>
<ul>
<li>data-bs-toggle和data-bs-target</li>
</ul>
</details>
</li>
<li><p>用哪个属性来控制隐藏弹框呢？</p>
<details>
<summary>答案</summary>
<ul>
<li>data-bs-dismiss 关闭的是标签所在的当前提示框</li>
</ul>
</details></li>
</ol>
<h2 id="03-Bootstrap-弹框-JS控制"><a href="#03-Bootstrap-弹框-JS控制" class="headerlink" title="03.Bootstrap 弹框_JS控制"></a>03.Bootstrap 弹框_JS控制</h2><h3 id="目标-16"><a href="#目标-16" class="headerlink" title="目标"></a>目标</h3><p>使用 JS 方式控制 Bootstarp 弹框的显示和隐藏</p>
<h3 id="讲解-16"><a href="#讲解-16" class="headerlink" title="讲解"></a>讲解</h3><ol>
<li><p>为什么需要 JS 方式控制呢？</p>
<ul>
<li><p>当我显示之前，隐藏之前，需要执行一些 JS 逻辑代码，就需要引入 JS 控制弹框显示&#x2F;隐藏的方式了</p>
</li>
<li><p>例如：</p>
<ul>
<li>点击编辑姓名按钮，在弹框显示之前，在输入框填入默认姓名</li>
<li>点击保存按钮，在弹框隐藏之前，获取用户填入的名字并打印</li>
</ul>
<img data-src="/2024/11/19/AJAX%E5%AD%A6%E4%B9%A0/image-20230404110038828.png" class="" title="image-20230404110038828"></li>
</ul>
</li>
<li><p>所以在现实和隐藏之前，需要执行 JS 代码逻辑，就使用 JS 方式 控制 Bootstrap 弹框显示和隐藏</p>
<p>语法如下：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 创建弹框对象</span></span><br><span class="line"><span class="keyword">const</span> modalDom = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;css选择器&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> modal = <span class="keyword">new</span> bootstrap.<span class="title class_">Modal</span>(modelDom)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 显示弹框</span></span><br><span class="line">modal.<span class="title function_">show</span>()</span><br><span class="line"><span class="comment">// 隐藏弹框</span></span><br><span class="line">modal.<span class="title function_">hide</span>()</span><br></pre></td></tr></table></figure>


</li>
<li><p>去代码区实现一下</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 1. 创建弹框对象</span></span><br><span class="line"><span class="keyword">const</span> modalDom = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.name-box&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> modal = <span class="keyword">new</span> bootstrap.<span class="title class_">Modal</span>(modalDom)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 编辑姓名-&gt;点击-&gt;赋予默认姓名-&gt;弹框显示</span></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.edit-btn&#x27;</span>).<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.username&#x27;</span>).<span class="property">value</span> = <span class="string">&#x27;默认姓名&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 2. 显示弹框</span></span><br><span class="line">  modal.<span class="title function_">show</span>()</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 保存-&gt;点击-&gt;-&gt;获取姓名打印-&gt;弹框隐藏</span></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.save-btn&#x27;</span>).<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> username = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.username&#x27;</span>).<span class="property">value</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;模拟把姓名保存到服务器上&#x27;</span>, username)</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 2. 隐藏弹框</span></span><br><span class="line">  modal.<span class="title function_">hide</span>()</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li>
</ol>
<h3 id="小结-16"><a href="#小结-16" class="headerlink" title="小结"></a>小结</h3><ol>
<li><p>什么时候用属性控制，什么时候用 JS 控制 Bootstrap 弹框的显示&#x2F;隐藏?</p>
<details>
<summary>答案</summary>
<ul>
<li>直接出现/隐藏用属性方式控制，如果需要先执行一段 JS 逻辑再显示/隐藏就用 JS 方式控制</li>
</ul>
</details></li>
</ol>
<h2 id="04-案例-图书管理-渲染列表"><a href="#04-案例-图书管理-渲染列表" class="headerlink" title="04.案例_图书管理_渲染列表"></a>04.案例_图书管理_渲染列表</h2><h3 id="目标-17"><a href="#目标-17" class="headerlink" title="目标"></a>目标</h3><p>完成图书管理案例-图书列表数据渲染效果</p>
<h3 id="讲解-17"><a href="#讲解-17" class="headerlink" title="讲解"></a>讲解</h3><ol>
<li><p>需求：基于 axios 获取到图书列表数据，并用 JS 代码渲染数据，到准备好的模板标签中</p>
<img data-src="/2024/11/19/AJAX%E5%AD%A6%E4%B9%A0/image-20230404110943200.png" class="" title="image-20230404110943200">
</li>
<li><p>步骤：</p>
<ol>
<li><p>获取数据</p>
</li>
<li><p>渲染数据</p>
<img data-src="/2024/11/19/AJAX%E5%AD%A6%E4%B9%A0/image-20230404110953752.png" class="" title="image-20230404110953752">

<img data-src="/2024/11/19/AJAX%E5%AD%A6%E4%B9%A0/image-20230404111014560.png" class="" title="image-20230404111014560"></li>
</ol>
</li>
<li><p>获取数据的时候，需要给自己起一个外号，为什么需要给自己起一个外号呢？</p>
<ul>
<li>我们所有人数据都来自同一个服务器上，为了区分每个同学不同的数据，需要大家设置一个外号告诉服务器，服务器就会返回你对应的图书数据了</li>
</ul>
</li>
<li><p>核心代码如下：</p>
<blockquote>
<p>因为默认展示列表，新增，修改，删除后都要重新获取并刷新列表，所以把获取数据渲染数据的代码封装在一个函数内，方便复用</p>
</blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 目标1：渲染图书列表</span></span><br><span class="line"><span class="comment"> *  1.1 获取数据</span></span><br><span class="line"><span class="comment"> *  1.2 渲染数据</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> creator = <span class="string">&#x27;老张&#x27;</span></span><br><span class="line"><span class="comment">// 封装-获取并渲染图书列表函数</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getBooksList</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="comment">// 1.1 获取数据</span></span><br><span class="line">  <span class="title function_">axios</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">&#x27;http://hmajax.itheima.net/api/books&#x27;</span>,</span><br><span class="line">    <span class="attr">params</span>: &#123;</span><br><span class="line">      <span class="comment">// 外号：获取对应数据</span></span><br><span class="line">      creator</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;).<span class="title function_">then</span>(<span class="function"><span class="params">result</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// console.log(result)</span></span><br><span class="line">    <span class="keyword">const</span> bookList = result.<span class="property">data</span>.<span class="property">data</span></span><br><span class="line">    <span class="comment">// console.log(bookList)</span></span><br><span class="line">    <span class="comment">// 1.2 渲染数据</span></span><br><span class="line">    <span class="keyword">const</span> htmlStr = bookList.<span class="title function_">map</span>(<span class="function">(<span class="params">item, index</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="string">`&lt;tr&gt;</span></span><br><span class="line"><span class="string">      &lt;td&gt;<span class="subst">$&#123;index + <span class="number">1</span>&#125;</span>&lt;/td&gt;</span></span><br><span class="line"><span class="string">      &lt;td&gt;<span class="subst">$&#123;item.bookname&#125;</span>&lt;/td&gt;</span></span><br><span class="line"><span class="string">      &lt;td&gt;<span class="subst">$&#123;item.author&#125;</span>&lt;/td&gt;</span></span><br><span class="line"><span class="string">      &lt;td&gt;<span class="subst">$&#123;item.publisher&#125;</span>&lt;/td&gt;</span></span><br><span class="line"><span class="string">      &lt;td data-id=<span class="subst">$&#123;item.id&#125;</span>&gt;</span></span><br><span class="line"><span class="string">        &lt;span class=&quot;del&quot;&gt;删除&lt;/span&gt;</span></span><br><span class="line"><span class="string">        &lt;span class=&quot;edit&quot;&gt;编辑&lt;/span&gt;</span></span><br><span class="line"><span class="string">      &lt;/td&gt;</span></span><br><span class="line"><span class="string">    &lt;/tr&gt;`</span></span><br><span class="line">    &#125;).<span class="title function_">join</span>(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    <span class="comment">// console.log(htmlStr)</span></span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.list&#x27;</span>).<span class="property">innerHTML</span> = htmlStr</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 网页加载运行，获取并渲染列表一次</span></span><br><span class="line"><span class="title function_">getBooksList</span>()</span><br></pre></td></tr></table></figure></li>
</ol>
<h3 id="小结-17"><a href="#小结-17" class="headerlink" title="小结"></a>小结</h3><ol>
<li><p>渲染数据列表的2个步骤是什么？</p>
<details>
<summary>答案</summary>
<ul>
<li>获取数据，分析结构渲染到页面上</li>
</ul>
</details></li>
</ol>
<h2 id="05-案例-图书管理-新增图书"><a href="#05-案例-图书管理-新增图书" class="headerlink" title="05.案例_图书管理_新增图书"></a>05.案例_图书管理_新增图书</h2><h3 id="目标-18"><a href="#目标-18" class="headerlink" title="目标"></a>目标</h3><p>完成图书管理案例-新增图书需求</p>
<h3 id="讲解-18"><a href="#讲解-18" class="headerlink" title="讲解"></a>讲解</h3><ol>
<li><p>需求：点击添加按钮，出现准备好的新增图书弹框，填写图书信息提交到服务器保存，并更新图书列表</p>
<img data-src="/2024/11/19/AJAX%E5%AD%A6%E4%B9%A0/image-20230404111235862.png" class="" title="image-20230404111235862">

<img data-src="/2024/11/19/AJAX%E5%AD%A6%E4%B9%A0/image-20230404111251254.png" class="" title="image-20230404111251254">
</li>
<li><p>步骤：</p>
<ol>
<li><p>新增弹框（控制显示和隐藏）（基于 Bootstrap 弹框和准备好的表单-用属性和 JS 方式控制）</p>
</li>
<li><p>在点击保存按钮时，收集数据&amp;提交保存</p>
</li>
<li><p>刷新-图书列表）（重新调用下之前封装的获取并渲染列表的函数）</p>
<img data-src="/2024/11/19/AJAX%E5%AD%A6%E4%B9%A0/image-20230404111343653.png" class="" title="image-20230404111343653"></li>
</ol>
</li>
<li><p>核心代码如下：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 目标2：新增图书</span></span><br><span class="line"><span class="comment"> *  2.1 新增弹框-&gt;显示和隐藏</span></span><br><span class="line"><span class="comment"> *  2.2 收集表单数据，并提交到服务器保存</span></span><br><span class="line"><span class="comment"> *  2.3 刷新图书列表</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">// 2.1 创建弹框对象</span></span><br><span class="line"><span class="keyword">const</span> addModalDom = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.add-modal&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> addModal = <span class="keyword">new</span> bootstrap.<span class="title class_">Modal</span>(addModalDom)</span><br><span class="line"><span class="comment">// 保存按钮-&gt;点击-&gt;隐藏弹框</span></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.add-btn&#x27;</span>).<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 2.2 收集表单数据，并提交到服务器保存</span></span><br><span class="line">  <span class="keyword">const</span> addForm = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.add-form&#x27;</span>)</span><br><span class="line">  <span class="keyword">const</span> bookObj = <span class="title function_">serialize</span>(addForm, &#123; <span class="attr">hash</span>: <span class="literal">true</span>, <span class="attr">empty</span>: <span class="literal">true</span> &#125;)</span><br><span class="line">  <span class="comment">// console.log(bookObj)</span></span><br><span class="line">  <span class="comment">// 提交到服务器</span></span><br><span class="line">  <span class="title function_">axios</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">&#x27;http://hmajax.itheima.net/api/books&#x27;</span>,</span><br><span class="line">    <span class="attr">method</span>: <span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line">    <span class="attr">data</span>: &#123;</span><br><span class="line">      ...bookObj,</span><br><span class="line">      creator</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;).<span class="title function_">then</span>(<span class="function"><span class="params">result</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// console.log(result)</span></span><br><span class="line">    <span class="comment">// 2.3 添加成功后，重新请求并渲染图书列表</span></span><br><span class="line">    <span class="title function_">getBooksList</span>()</span><br><span class="line">    <span class="comment">// 重置表单</span></span><br><span class="line">    addForm.<span class="title function_">reset</span>()</span><br><span class="line">    <span class="comment">// 隐藏弹框</span></span><br><span class="line">    addModal.<span class="title function_">hide</span>()</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li>
</ol>
<h3 id="小结-18"><a href="#小结-18" class="headerlink" title="小结"></a>小结</h3><ol>
<li><p>新增数据的3个步骤是什么？</p>
<details>
<summary>答案</summary>
<ul>
<li>准备好数据标签和样式，然后收集表单数据提交保存，刷新列表</li>
</ul>
</details></li>
</ol>
<h2 id="06-案例-图书管理-删除图书"><a href="#06-案例-图书管理-删除图书" class="headerlink" title="06.案例_图书管理_删除图书"></a>06.案例_图书管理_删除图书</h2><h3 id="目标-19"><a href="#目标-19" class="headerlink" title="目标"></a>目标</h3><p>完成图书管理案例-删除图书需求</p>
<h3 id="讲解-19"><a href="#讲解-19" class="headerlink" title="讲解"></a>讲解</h3><ol>
<li><p>需求：点击图书删除元素，删除当前图书数据</p>
<img data-src="/2024/11/19/AJAX%E5%AD%A6%E4%B9%A0/image-20230404111530311.png" class="" title="image-20230404111530311">

<img data-src="/2024/11/19/AJAX%E5%AD%A6%E4%B9%A0/image-20230404111546639.png" class="" title="image-20230404111546639">
</li>
<li><p>步骤：</p>
<ol>
<li><p>给删除元素，绑定点击事件（事件委托方式并判断点击的是删除元素才走删除逻辑代码），并获取到要删除的数据id</p>
</li>
<li><p>基于 axios 和接口文档，调用删除接口，让服务器删除这条数据</p>
</li>
<li><p>重新获取并刷新图书列表</p>
<img data-src="/2024/11/19/AJAX%E5%AD%A6%E4%B9%A0/image-20230404111612125.png" class="" title="image-20230404111612125"></li>
</ol>
</li>
<li><p>核心代码如下：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 目标3：删除图书</span></span><br><span class="line"><span class="comment"> *  3.1 删除元素绑定点击事件-&gt;获取图书id</span></span><br><span class="line"><span class="comment"> *  3.2 调用删除接口</span></span><br><span class="line"><span class="comment"> *  3.3 刷新图书列表</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">// 3.1 删除元素-&gt;点击（事件委托）</span></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.list&#x27;</span>).<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="function"><span class="params">e</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 获取触发事件目标元素</span></span><br><span class="line">  <span class="comment">// console.log(e.target)</span></span><br><span class="line">  <span class="comment">// 判断点击的是删除元素</span></span><br><span class="line">  <span class="keyword">if</span> (e.<span class="property">target</span>.<span class="property">classList</span>.<span class="title function_">contains</span>(<span class="string">&#x27;del&#x27;</span>)) &#123;</span><br><span class="line">    <span class="comment">// console.log(&#x27;点击删除元素&#x27;)</span></span><br><span class="line">    <span class="comment">// 获取图书id（自定义属性id）</span></span><br><span class="line">    <span class="keyword">const</span> theId = e.<span class="property">target</span>.<span class="property">parentNode</span>.<span class="property">dataset</span>.<span class="property">id</span></span><br><span class="line">    <span class="comment">// console.log(theId)</span></span><br><span class="line">    <span class="comment">// 3.2 调用删除接口</span></span><br><span class="line">    <span class="title function_">axios</span>(&#123;</span><br><span class="line">      <span class="attr">url</span>: <span class="string">`http://hmajax.itheima.net/api/books/<span class="subst">$&#123;theId&#125;</span>`</span>,</span><br><span class="line">      <span class="attr">method</span>: <span class="string">&#x27;DELETE&#x27;</span></span><br><span class="line">    &#125;).<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="comment">// 3.3 刷新图书列表</span></span><br><span class="line">      <span class="title function_">getBooksList</span>()</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li>
</ol>
<h3 id="小结-19"><a href="#小结-19" class="headerlink" title="小结"></a>小结</h3><ol>
<li><p>删除数据的步骤是什么？</p>
<details>
<summary>答案</summary>
<ul>
<li>告知服务器要删除的数据id，服务器删除后，重新获取并刷新列表</li>
</ul>
</details></li>
</ol>
<h2 id="07-09-案例-图书管理-编辑图书"><a href="#07-09-案例-图书管理-编辑图书" class="headerlink" title="07-09.案例_图书管理_编辑图书"></a>07-09.案例_图书管理_编辑图书</h2><h3 id="目标-20"><a href="#目标-20" class="headerlink" title="目标"></a>目标</h3><p>完成图书管理案例-编辑图书需求</p>
<h3 id="讲解-20"><a href="#讲解-20" class="headerlink" title="讲解"></a>讲解</h3><ol>
<li><p>因为编辑图书要做回显等，比较复杂，所以分了3个视频来讲解</p>
</li>
<li><p>需求：完成编辑图书回显当前图书数据到编辑表单，在用户点击修改按钮，收集数据提交到服务器保存，并刷新列表</p>
<img data-src="/2024/11/19/AJAX%E5%AD%A6%E4%B9%A0/image-20230404111722254.png" class="" title="image-20230404111722254">
</li>
<li><p>编辑数据的核心思路：</p>
<ol>
<li><p>给编辑元素，绑定点击事件（事件委托方式并判断点击的是编辑元素才走编辑逻辑代码），并获取到要编辑的数据id</p>
</li>
<li><p>基于 axios 和接口文档，调用查询图书详情接口，获取正在编辑的图书数据，并回显到表单中（页面上的数据是在用户的浏览器中不够准备，所以只要是查看数据都要从服务器获取）</p>
<img data-src="/2024/11/19/AJAX%E5%AD%A6%E4%B9%A0/image-20230404111739153.png" class="" title="image-20230404111739153">
</li>
<li><p>收集并提交保存修改数据，并重新从服务器获取列表刷新页面</p>
<img data-src="/2024/11/19/AJAX%E5%AD%A6%E4%B9%A0/image-20230404111756655.png" class="" title="image-20230404111756655"></li>
</ol>
</li>
<li><p>核心代码如下：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 目标4：编辑图书</span></span><br><span class="line"><span class="comment"> *  4.1 编辑弹框-&gt;显示和隐藏</span></span><br><span class="line"><span class="comment"> *  4.2 获取当前编辑图书数据-&gt;回显到编辑表单中</span></span><br><span class="line"><span class="comment"> *  4.3 提交保存修改，并刷新列表</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">// 4.1 编辑弹框-&gt;显示和隐藏</span></span><br><span class="line"><span class="keyword">const</span> editDom = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.edit-modal&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> editModal = <span class="keyword">new</span> bootstrap.<span class="title class_">Modal</span>(editDom)</span><br><span class="line"><span class="comment">// 编辑元素-&gt;点击-&gt;弹框显示</span></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.list&#x27;</span>).<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="function"><span class="params">e</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 判断点击的是否为编辑元素</span></span><br><span class="line">  <span class="keyword">if</span> (e.<span class="property">target</span>.<span class="property">classList</span>.<span class="title function_">contains</span>(<span class="string">&#x27;edit&#x27;</span>)) &#123;</span><br><span class="line">    <span class="comment">// 4.2 获取当前编辑图书数据-&gt;回显到编辑表单中</span></span><br><span class="line">    <span class="keyword">const</span> theId = e.<span class="property">target</span>.<span class="property">parentNode</span>.<span class="property">dataset</span>.<span class="property">id</span></span><br><span class="line">    <span class="title function_">axios</span>(&#123;</span><br><span class="line">      <span class="attr">url</span>: <span class="string">`http://hmajax.itheima.net/api/books/<span class="subst">$&#123;theId&#125;</span>`</span></span><br><span class="line">    &#125;).<span class="title function_">then</span>(<span class="function"><span class="params">result</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">const</span> bookObj = result.<span class="property">data</span>.<span class="property">data</span></span><br><span class="line">      <span class="comment">// document.querySelector(&#x27;.edit-form .bookname&#x27;).value = bookObj.bookname</span></span><br><span class="line">      <span class="comment">// document.querySelector(&#x27;.edit-form .author&#x27;).value = bookObj.author</span></span><br><span class="line">      <span class="comment">// 数据对象“属性”和标签“类名”一致</span></span><br><span class="line">      <span class="comment">// 遍历数据对象，使用属性去获取对应的标签，快速赋值</span></span><br><span class="line">      <span class="keyword">const</span> keys = <span class="title class_">Object</span>.<span class="title function_">keys</span>(bookObj) <span class="comment">// [&#x27;id&#x27;, &#x27;bookname&#x27;, &#x27;author&#x27;, &#x27;publisher&#x27;]</span></span><br><span class="line">      keys.<span class="title function_">forEach</span>(<span class="function"><span class="params">key</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">`.edit-form .<span class="subst">$&#123;key&#125;</span>`</span>).<span class="property">value</span> = bookObj[key]</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">    editModal.<span class="title function_">show</span>()</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// 修改按钮-&gt;点击-&gt;隐藏弹框</span></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.edit-btn&#x27;</span>).<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 4.3 提交保存修改，并刷新列表</span></span><br><span class="line">  <span class="keyword">const</span> editForm = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.edit-form&#x27;</span>)</span><br><span class="line">  <span class="keyword">const</span> &#123; id, bookname, author, publisher &#125; = <span class="title function_">serialize</span>(editForm, &#123; <span class="attr">hash</span>: <span class="literal">true</span>, <span class="attr">empty</span>: <span class="literal">true</span>&#125;)</span><br><span class="line">  <span class="comment">// 保存正在编辑的图书id，隐藏起来：无需让用户修改</span></span><br><span class="line">  <span class="comment">// &lt;input type=&quot;hidden&quot; class=&quot;id&quot; name=&quot;id&quot; value=&quot;84783&quot;&gt;</span></span><br><span class="line">  <span class="title function_">axios</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">`http://hmajax.itheima.net/api/books/<span class="subst">$&#123;id&#125;</span>`</span>,</span><br><span class="line">    <span class="attr">method</span>: <span class="string">&#x27;PUT&#x27;</span>,</span><br><span class="line">    <span class="attr">data</span>: &#123;</span><br><span class="line">      bookname,</span><br><span class="line">      author,</span><br><span class="line">      publisher,</span><br><span class="line">      creator</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;).<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 修改成功以后，重新获取并刷新列表</span></span><br><span class="line">    <span class="title function_">getBooksList</span>()</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 隐藏弹框</span></span><br><span class="line">    editModal.<span class="title function_">hide</span>()</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li>
</ol>
<h3 id="小结-20"><a href="#小结-20" class="headerlink" title="小结"></a>小结</h3><ol>
<li><p>编辑数据的步骤是什么？</p>
<details>
<summary>答案</summary>
<ul>
<li>获取正在编辑数据并回显，收集编辑表单的数据提交保存，重新获取并刷新列表</li>
</ul>
</details></li>
</ol>
<h2 id="10-案例-图书管理-总结"><a href="#10-案例-图书管理-总结" class="headerlink" title="10.案例_图书管理_总结"></a>10.案例_图书管理_总结</h2><h3 id="目标-21"><a href="#目标-21" class="headerlink" title="目标"></a>目标</h3><p>总结下增删改查的核心思路</p>
<h3 id="讲解-21"><a href="#讲解-21" class="headerlink" title="讲解"></a>讲解</h3><ol>
<li><p>因为增删改查的业务在前端实际开发中非常常见，思路是可以通用的，所以总结下思路</p>
<blockquote>
<p>1.渲染列表（查）</p>
<p>2.新增图书（增）</p>
<p>3.删除图书（删）</p>
<p>4.编辑图书（改）</p>
</blockquote>
<img data-src="/2024/11/19/AJAX%E5%AD%A6%E4%B9%A0/image-20230404111941722.png" class="" title="image-20230404111941722">
</li>
<li><p>渲染数据（查）</p>
<blockquote>
<p>核心思路：获取数据 -&gt; 渲染数据</p>
</blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 1.1 获取数据</span></span><br><span class="line"><span class="title function_">axios</span>(&#123;...&#125;).<span class="title function_">then</span>(<span class="function"><span class="params">result</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> bookList = result.<span class="property">data</span>.<span class="property">data</span></span><br><span class="line">  <span class="comment">// 1.2 渲染数据</span></span><br><span class="line">  <span class="keyword">const</span> htmlStr = bookList.<span class="title function_">map</span>(<span class="function">(<span class="params">item, index</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">`&lt;tr&gt;</span></span><br><span class="line"><span class="string">    &lt;td&gt;<span class="subst">$&#123;index + <span class="number">1</span>&#125;</span>&lt;/td&gt;</span></span><br><span class="line"><span class="string">    &lt;td&gt;<span class="subst">$&#123;item.bookname&#125;</span>&lt;/td&gt;</span></span><br><span class="line"><span class="string">    &lt;td&gt;<span class="subst">$&#123;item.author&#125;</span>&lt;/td&gt;</span></span><br><span class="line"><span class="string">    &lt;td&gt;<span class="subst">$&#123;item.publisher&#125;</span>&lt;/td&gt;</span></span><br><span class="line"><span class="string">    &lt;td data-id=<span class="subst">$&#123;item.id&#125;</span>&gt;</span></span><br><span class="line"><span class="string">      &lt;span class=&quot;del&quot;&gt;删除&lt;/span&gt;</span></span><br><span class="line"><span class="string">      &lt;span class=&quot;edit&quot;&gt;编辑&lt;/span&gt;</span></span><br><span class="line"><span class="string">    &lt;/td&gt;</span></span><br><span class="line"><span class="string">  &lt;/tr&gt;`</span></span><br><span class="line">  &#125;).<span class="title function_">join</span>(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">  <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.list&#x27;</span>).<span class="property">innerHTML</span> = htmlStr</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>


</li>
<li><p>新增数据（增）</p>
<blockquote>
<p>核心思路：准备页面标签 -&gt; 收集数据提交（必须） -&gt; 刷新页面列表（可选）</p>
</blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 2.1 创建弹框对象</span></span><br><span class="line"><span class="keyword">const</span> addModalDom = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.add-modal&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> addModal = <span class="keyword">new</span> bootstrap.<span class="title class_">Modal</span>(addModalDom)</span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.add-btn&#x27;</span>).<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 2.2 收集表单数据，并提交到服务器保存</span></span><br><span class="line">  <span class="keyword">const</span> addForm = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.add-form&#x27;</span>)</span><br><span class="line">  <span class="keyword">const</span> bookObj = <span class="title function_">serialize</span>(addForm, &#123; <span class="attr">hash</span>: <span class="literal">true</span>, <span class="attr">empty</span>: <span class="literal">true</span> &#125;)</span><br><span class="line">  <span class="title function_">axios</span>(&#123;...&#125;).<span class="title function_">then</span>(<span class="function"><span class="params">result</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 2.3 添加成功后，重新请求并渲染图书列表</span></span><br><span class="line">    <span class="title function_">getBooksList</span>()</span><br><span class="line">    addForm.<span class="title function_">reset</span>()</span><br><span class="line">    addModal.<span class="title function_">hide</span>()</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>



<img data-src="/2024/11/19/AJAX%E5%AD%A6%E4%B9%A0/image-20230404112942935.png" class="" title="image-20230404112942935">


</li>
<li><p>删除图书（删）</p>
<blockquote>
<p>核心思路：绑定点击事件（获取要删除的图书唯一标识） -&gt; 调用删除接口（让服务器删除此数据） -&gt; 成功后重新获取并刷新列表</p>
</blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 3.1 删除元素-&gt;点击（事件委托）</span></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.list&#x27;</span>).<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="function"><span class="params">e</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (e.<span class="property">target</span>.<span class="property">classList</span>.<span class="title function_">contains</span>(<span class="string">&#x27;del&#x27;</span>)) &#123;</span><br><span class="line">    <span class="comment">// 获取图书id（自定义属性id）</span></span><br><span class="line">    <span class="keyword">const</span> theId = e.<span class="property">target</span>.<span class="property">parentNode</span>.<span class="property">dataset</span>.<span class="property">id</span></span><br><span class="line">    <span class="comment">// 3.2 调用删除接口</span></span><br><span class="line">    <span class="title function_">axios</span>(&#123;...&#125;).<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="comment">// 3.3 刷新图书列表</span></span><br><span class="line">      <span class="title function_">getBooksList</span>()</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<img data-src="/2024/11/19/AJAX%E5%AD%A6%E4%B9%A0/image-20230404113338815.png" class="" title="image-20230404113338815">
</li>
<li><p>编辑图书（改）</p>
<blockquote>
<p>核心思路：准备编辑图书表单 -&gt; 表单回显正在编辑的数据 -&gt; 点击修改收集数据 -&gt; 提交到服务器保存 -&gt; 重新获取并刷新列表</p>
</blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 4.1 编辑弹框-&gt;显示和隐藏</span></span><br><span class="line"><span class="keyword">const</span> editDom = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.edit-modal&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> editModal = <span class="keyword">new</span> bootstrap.<span class="title class_">Modal</span>(editDom)</span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.list&#x27;</span>).<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="function"><span class="params">e</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (e.<span class="property">target</span>.<span class="property">classList</span>.<span class="title function_">contains</span>(<span class="string">&#x27;edit&#x27;</span>)) &#123;</span><br><span class="line">    <span class="comment">// 4.2 获取当前编辑图书数据-&gt;回显到编辑表单中</span></span><br><span class="line">    <span class="keyword">const</span> theId = e.<span class="property">target</span>.<span class="property">parentNode</span>.<span class="property">dataset</span>.<span class="property">id</span></span><br><span class="line">    <span class="title function_">axios</span>(&#123;...&#125;).<span class="title function_">then</span>(<span class="function"><span class="params">result</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">const</span> bookObj = result.<span class="property">data</span>.<span class="property">data</span></span><br><span class="line">      <span class="comment">// 遍历数据对象，使用属性去获取对应的标签，快速赋值</span></span><br><span class="line">      <span class="keyword">const</span> keys = <span class="title class_">Object</span>.<span class="title function_">keys</span>(bookObj) </span><br><span class="line">      keys.<span class="title function_">forEach</span>(<span class="function"><span class="params">key</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">`.edit-form .<span class="subst">$&#123;key&#125;</span>`</span>).<span class="property">value</span> = bookObj[key]</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">    editModal.<span class="title function_">show</span>()</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.edit-btn&#x27;</span>).<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 4.3 提交保存修改，并刷新列表</span></span><br><span class="line">  <span class="keyword">const</span> editForm = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.edit-form&#x27;</span>)</span><br><span class="line">  <span class="keyword">const</span> &#123; id, bookname, author, publisher &#125; = <span class="title function_">serialize</span>(editForm, &#123; <span class="attr">hash</span>: <span class="literal">true</span>, <span class="attr">empty</span>: <span class="literal">true</span>&#125;)</span><br><span class="line">  <span class="comment">// 保存正在编辑的图书id，隐藏起来：无需让用户修改</span></span><br><span class="line">  <span class="comment">// &lt;input type=&quot;hidden&quot; class=&quot;id&quot; name=&quot;id&quot; value=&quot;84783&quot;&gt;</span></span><br><span class="line">  <span class="title function_">axios</span>(&#123;...&#125;).<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="title function_">getBooksList</span>()</span><br><span class="line">    editModal.<span class="title function_">hide</span>()</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>



<img data-src="/2024/11/19/AJAX%E5%AD%A6%E4%B9%A0/image-20230404113702515.png" class="" title="image-20230404113702515"></li>
</ol>
<h3 id="小结-21"><a href="#小结-21" class="headerlink" title="小结"></a>小结</h3><ol>
<li><p>学完图书管理案例，我们收货了什么？</p>
<details>
<summary>答案</summary>
<ul>
<li>现在编辑的虽然是图书数据，以后编辑其他数据，再做增删改查都是差不多的思路</li>
</ul>
</details></li>
</ol>
<h2 id="11-图片上传"><a href="#11-图片上传" class="headerlink" title="11.图片上传"></a>11.图片上传</h2><h3 id="目标-22"><a href="#目标-22" class="headerlink" title="目标"></a>目标</h3><p>把本地图片上传到网页上显示</p>
<h3 id="讲解-22"><a href="#讲解-22" class="headerlink" title="讲解"></a>讲解</h3><ol>
<li><p>什么是图片上传？</p>
<ul>
<li>就是把本地的图片上传到网页上显示</li>
</ul>
</li>
<li><p>图片上传怎么做？</p>
<ul>
<li>先依靠文件选择元素获取用户选择的本地文件，接着提交到服务器保存，服务器会返回图片的 url 网址，然后把网址加载到 img 标签的 src 属性中即可显示</li>
</ul>
</li>
<li><p>为什么不直接显示到浏览器上，要放到服务器上呢？</p>
<ul>
<li>因为浏览器保存是临时的，如果你想随时随地访问图片，需要上传到服务器上</li>
</ul>
</li>
<li><p>图片上传怎么做呢？</p>
<ol>
<li><p>先获取图片文件对象</p>
</li>
<li><p>使用 FormData 表单数据对象装入（因为图片是文件而不是以前的数字和字符串了所以传递文件一般需要放入 FormData 以键值对-文件流的数据传递（可以查看请求体-确认请求体结构）</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> fd = <span class="keyword">new</span> <span class="title class_">FormData</span>()</span><br><span class="line">fd.<span class="title function_">append</span>(参数名, 值)</span><br></pre></td></tr></table></figure>
</li>
<li><p>提交表单数据对象，使用服务器返回图片 url 网址</p>
</li>
</ol>
</li>
<li><p>核心代码如下：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>图片上传<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 文件选择元素 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">class</span>=<span class="string">&quot;upload&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;my-img&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">/**</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">     * 目标：图片上传，显示到网页上</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">     *  1. 获取图片文件</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">     *  2. 使用 FormData 携带图片文件</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">     *  3. 提交到服务器，获取图片url网址使用</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">    */</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 文件选择元素-&gt;change改变事件</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.upload&#x27;</span>).<span class="title function_">addEventListener</span>(<span class="string">&#x27;change&#x27;</span>, <span class="function"><span class="params">e</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 1. 获取图片文件</span></span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">console</span>.<span class="title function_">log</span>(e.<span class="property">target</span>.<span class="property">files</span>[<span class="number">0</span>])</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 2. 使用 FormData 携带图片文件</span></span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">const</span> fd = <span class="keyword">new</span> <span class="title class_">FormData</span>()</span></span><br><span class="line"><span class="language-javascript">      fd.<span class="title function_">append</span>(<span class="string">&#x27;img&#x27;</span>, e.<span class="property">target</span>.<span class="property">files</span>[<span class="number">0</span>])</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 3. 提交到服务器，获取图片url网址使用</span></span></span><br><span class="line"><span class="language-javascript">      <span class="title function_">axios</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">url</span>: <span class="string">&#x27;http://hmajax.itheima.net/api/uploadimg&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">method</span>: <span class="string">&#x27;POST&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">data</span>: fd</span></span><br><span class="line"><span class="language-javascript">      &#125;).<span class="title function_">then</span>(<span class="function"><span class="params">result</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(result)</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 取出图片url网址，用img标签加载显示</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> imgUrl = result.<span class="property">data</span>.<span class="property">data</span>.<span class="property">url</span></span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.my-img&#x27;</span>).<span class="property">src</span> = imgUrl</span></span><br><span class="line"><span class="language-javascript">      &#125;)</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li>
</ol>
<h3 id="小结-22"><a href="#小结-22" class="headerlink" title="小结"></a>小结</h3><ol>
<li><p>图片上传的思路是什么？</p>
<details>
<summary>答案</summary>
<ul>
<li>先用文件选择元素，获取到文件对象，然后装入 FormData 表单对象中，再发给服务器，得到图片在服务器的 URL 网址，再通过 img 标签加载图片显示</li>
</ul>
</details></li>
</ol>
<h2 id="12-案例-网站-更换背景图"><a href="#12-案例-网站-更换背景图" class="headerlink" title="12.案例_网站-更换背景图"></a>12.案例_网站-更换背景图</h2><h3 id="目标-23"><a href="#目标-23" class="headerlink" title="目标"></a>目标</h3><p>实现更换网站背景图的效果</p>
<h3 id="讲解-23"><a href="#讲解-23" class="headerlink" title="讲解"></a>讲解</h3><ol>
<li><p>需求：先运行备课代码，查看要完成的效果，点击右上角选择本机中提供的素材图片，更换网站背景图</p>
<img data-src="/2024/11/19/AJAX%E5%AD%A6%E4%B9%A0/image-20230404122349505.png" class="" title="image-20230404122349505">
</li>
<li><p>网站更换背景图如何实现呢，并且保证刷新后背景图还在？具体步骤：</p>
<ol>
<li>先获取到用户选择的背景图片，上传并把服务器返回的图片 url 网址设置给 body 背景</li>
<li>上传成功时，保存图片 url 网址到 localStorage 中</li>
<li>网页运行后，获取 localStorage 中的图片的 url 网址使用（并判断本地有图片 url 网址字符串才设置）</li>
</ol>
</li>
<li><p>核心代码如下：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 目标：网站-更换背景</span></span><br><span class="line"><span class="comment"> *  1. 选择图片上传，设置body背景</span></span><br><span class="line"><span class="comment"> *  2. 上传成功时，&quot;保存&quot;图片url网址</span></span><br><span class="line"><span class="comment"> *  3. 网页运行后，&quot;获取&quot;url网址使用</span></span><br><span class="line"><span class="comment"> * */</span></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.bg-ipt&#x27;</span>).<span class="title function_">addEventListener</span>(<span class="string">&#x27;change&#x27;</span>, <span class="function"><span class="params">e</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 1. 选择图片上传，设置body背景</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(e.<span class="property">target</span>.<span class="property">files</span>[<span class="number">0</span>])</span><br><span class="line">  <span class="keyword">const</span> fd = <span class="keyword">new</span> <span class="title class_">FormData</span>()</span><br><span class="line">  fd.<span class="title function_">append</span>(<span class="string">&#x27;img&#x27;</span>, e.<span class="property">target</span>.<span class="property">files</span>[<span class="number">0</span>])</span><br><span class="line">  <span class="title function_">axios</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">&#x27;http://hmajax.itheima.net/api/uploadimg&#x27;</span>,</span><br><span class="line">    <span class="attr">method</span>: <span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line">    <span class="attr">data</span>: fd</span><br><span class="line">  &#125;).<span class="title function_">then</span>(<span class="function"><span class="params">result</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> imgUrl = result.<span class="property">data</span>.<span class="property">data</span>.<span class="property">url</span></span><br><span class="line">    <span class="variable language_">document</span>.<span class="property">body</span>.<span class="property">style</span>.<span class="property">backgroundImage</span> = <span class="string">`url(<span class="subst">$&#123;imgUrl&#125;</span>)`</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 2. 上传成功时，&quot;保存&quot;图片url网址</span></span><br><span class="line">    <span class="variable language_">localStorage</span>.<span class="title function_">setItem</span>(<span class="string">&#x27;bgImg&#x27;</span>, imgUrl)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 3. 网页运行后，&quot;获取&quot;url网址使用</span></span><br><span class="line"><span class="keyword">const</span> bgUrl = <span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&#x27;bgImg&#x27;</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(bgUrl)</span><br><span class="line">bgUrl &amp;&amp; (<span class="variable language_">document</span>.<span class="property">body</span>.<span class="property">style</span>.<span class="property">backgroundImage</span> = <span class="string">`url(<span class="subst">$&#123;bgUrl&#125;</span>)`</span>)</span><br></pre></td></tr></table></figure></li>
</ol>
<h3 id="小结-23"><a href="#小结-23" class="headerlink" title="小结"></a>小结</h3><ol>
<li><p>localStorage 取值和赋值的语法分别是什么？</p>
<details>
<summary>答案</summary>
<ul>
<li>localStorage.getItem('key')是取值，localStorage.setItem('key', 'value')是赋值</li>
</ul>
</details></li>
</ol>
<h2 id="13-案例-个人信息设置-介绍"><a href="#13-案例-个人信息设置-介绍" class="headerlink" title="13.案例_个人信息设置-介绍"></a>13.案例_个人信息设置-介绍</h2><h3 id="目标-24"><a href="#目标-24" class="headerlink" title="目标"></a>目标</h3><p>介绍个人信息设置案例-需要完成哪些效果，分几个视频讲解</p>
<h3 id="讲解-24"><a href="#讲解-24" class="headerlink" title="讲解"></a>讲解</h3><ol>
<li><p>需求：先运行备课代码，查看要完成的效果</p>
<img data-src="/2024/11/19/AJAX%E5%AD%A6%E4%B9%A0/image-20230404123206073.png" class="" title="image-20230404123206073">
</li>
<li><p>本视频分为，信息回显 + 头像修改 + 信息修改+ 提示框反馈 4 部分</p>
<ol>
<li>先完成信息回显</li>
<li>再做头像修改-立刻就更新给此用户</li>
<li>收集个人信息表单-提交保存</li>
<li>提交后反馈结果给用户（提示框）</li>
</ol>
</li>
</ol>
<h3 id="小结-24"><a href="#小结-24" class="headerlink" title="小结"></a>小结</h3><p>暂无</p>
<h2 id="14-案例-个人信息设置-信息渲染"><a href="#14-案例-个人信息设置-信息渲染" class="headerlink" title="14.案例_个人信息设置-信息渲染"></a>14.案例_个人信息设置-信息渲染</h2><h3 id="目标-25"><a href="#目标-25" class="headerlink" title="目标"></a>目标</h3><p>把外号对应的用户信息渲染到页面上</p>
<h3 id="讲解-25"><a href="#讲解-25" class="headerlink" title="讲解"></a>讲解</h3><ol>
<li><p>需求：把外号对应的个人信息和头像，渲染到页面表单和头像标签上。</p>
<img data-src="/2024/11/19/AJAX%E5%AD%A6%E4%B9%A0/image-20230404123708765.png" class="" title="image-20230404123708765">
</li>
<li><p>注意：还是需要准备一个外号，因为想要查看自己对应的用户信息，不想被别人影响</p>
</li>
<li><p>步骤：</p>
<ul>
<li>获取数据</li>
<li>渲染数据到页面</li>
</ul>
</li>
<li><p>代码如下：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 目标1：信息渲染</span></span><br><span class="line"><span class="comment"> *  1.1 获取用户的数据</span></span><br><span class="line"><span class="comment"> *  1.2 回显数据到标签上</span></span><br><span class="line"><span class="comment"> * */</span></span><br><span class="line"><span class="keyword">const</span> creator = <span class="string">&#x27;播仔&#x27;</span></span><br><span class="line"><span class="comment">// 1.1 获取用户的数据</span></span><br><span class="line"><span class="title function_">axios</span>(&#123;</span><br><span class="line">  <span class="attr">url</span>: <span class="string">&#x27;http://hmajax.itheima.net/api/settings&#x27;</span>,</span><br><span class="line">  <span class="attr">params</span>: &#123;</span><br><span class="line">    creator</span><br><span class="line">  &#125;</span><br><span class="line">&#125;).<span class="title function_">then</span>(<span class="function"><span class="params">result</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> userObj = result.<span class="property">data</span>.<span class="property">data</span></span><br><span class="line">  <span class="comment">// 1.2 回显数据到标签上</span></span><br><span class="line">  <span class="title class_">Object</span>.<span class="title function_">keys</span>(userObj).<span class="title function_">forEach</span>(<span class="function"><span class="params">key</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (key === <span class="string">&#x27;avatar&#x27;</span>) &#123;</span><br><span class="line">      <span class="comment">// 赋予默认头像</span></span><br><span class="line">      <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.prew&#x27;</span>).<span class="property">src</span> = userObj[key]</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (key === <span class="string">&#x27;gender&#x27;</span>) &#123;</span><br><span class="line">      <span class="comment">// 赋予默认性别</span></span><br><span class="line">      <span class="comment">// 获取性别单选框：[男radio元素，女radio元素]</span></span><br><span class="line">      <span class="keyword">const</span> gRadioList = <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;.gender&#x27;</span>)</span><br><span class="line">      <span class="comment">// 获取性别数字：0男，1女</span></span><br><span class="line">      <span class="keyword">const</span> gNum = userObj[key]</span><br><span class="line">      <span class="comment">// 通过性别数字，作为下标，找到对应性别单选框，设置选中状态</span></span><br><span class="line">      gRadioList[gNum].<span class="property">checked</span> = <span class="literal">true</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="comment">// 赋予默认内容</span></span><br><span class="line">      <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">`.<span class="subst">$&#123;key&#125;</span>`</span>).<span class="property">value</span> = userObj[key]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li>
</ol>
<h3 id="小结-25"><a href="#小结-25" class="headerlink" title="小结"></a>小结</h3><ol>
<li><p>渲染数据和图书列表的渲染思路是否一样呢，是什么？</p>
<details>
<summary>答案</summary>
<ul>
<li>一样的，都是获取到数据，然后渲染到页面上</li>
</ul>
</details></li>
</ol>
<h2 id="15-案例-个人信息设置-头像修改"><a href="#15-案例-个人信息设置-头像修改" class="headerlink" title="15.案例_个人信息设置-头像修改"></a>15.案例_个人信息设置-头像修改</h2><h3 id="目标-26"><a href="#目标-26" class="headerlink" title="目标"></a>目标</h3><p>修改用户的头像并立刻生效</p>
<h3 id="讲解-26"><a href="#讲解-26" class="headerlink" title="讲解"></a>讲解</h3><ol>
<li><p>需求：点击修改用户头像</p>
<img data-src="/2024/11/19/AJAX%E5%AD%A6%E4%B9%A0/image-20230404124524401.png" class="" title="image-20230404124524401">
</li>
<li><p>实现步骤如下：</p>
<ol>
<li><p>获取到用户选择的头像文件</p>
</li>
<li><p>调用头像修改接口，并除了头像文件外，还要在 FormData 表单数据对象中携带外号</p>
</li>
<li><p>提交到服务器保存此用户对应头像文件，并把返回的头像图片 url 网址设置在页面上</p>
<img data-src="/2024/11/19/AJAX%E5%AD%A6%E4%B9%A0/image-20230404124540629.png" class="" title="image-20230404124540629"></li>
</ol>
</li>
<li><p>注意：重新刷新重新获取，已经是修改后的头像了（证明服务器那边确实保存成功）</p>
</li>
<li><p>核心代码：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 目标2：修改头像</span></span><br><span class="line"><span class="comment"> *  2.1 获取头像文件</span></span><br><span class="line"><span class="comment"> *  2.2 提交服务器并更新头像</span></span><br><span class="line"><span class="comment"> * */</span></span><br><span class="line"><span class="comment">// 文件选择元素-&gt;change事件</span></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.upload&#x27;</span>).<span class="title function_">addEventListener</span>(<span class="string">&#x27;change&#x27;</span>, <span class="function"><span class="params">e</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 2.1 获取头像文件</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(e.<span class="property">target</span>.<span class="property">files</span>[<span class="number">0</span>])</span><br><span class="line">  <span class="keyword">const</span> fd = <span class="keyword">new</span> <span class="title class_">FormData</span>()</span><br><span class="line">  fd.<span class="title function_">append</span>(<span class="string">&#x27;avatar&#x27;</span>, e.<span class="property">target</span>.<span class="property">files</span>[<span class="number">0</span>])</span><br><span class="line">  fd.<span class="title function_">append</span>(<span class="string">&#x27;creator&#x27;</span>, creator)</span><br><span class="line">  <span class="comment">// 2.2 提交服务器并更新头像</span></span><br><span class="line">  <span class="title function_">axios</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">&#x27;http://hmajax.itheima.net/api/avatar&#x27;</span>,</span><br><span class="line">    <span class="attr">method</span>: <span class="string">&#x27;PUT&#x27;</span>,</span><br><span class="line">    <span class="attr">data</span>: fd</span><br><span class="line">  &#125;).<span class="title function_">then</span>(<span class="function"><span class="params">result</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> imgUrl = result.<span class="property">data</span>.<span class="property">data</span>.<span class="property">avatar</span></span><br><span class="line">    <span class="comment">// 把新的头像回显到页面上</span></span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.prew&#x27;</span>).<span class="property">src</span> = imgUrl</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li>
</ol>
<h3 id="小结-26"><a href="#小结-26" class="headerlink" title="小结"></a>小结</h3><ol>
<li><p>为什么这次上传头像，需要携带外号呢？</p>
<details>
<summary>答案</summary>
<ul>
<li>因为这次头像到后端，是要保存在某个用户名下的，所以要把外号名字一起携带过去</li>
</ul>
</details></li>
</ol>
<h2 id="16-案例-个人信息设置-信息修改"><a href="#16-案例-个人信息设置-信息修改" class="headerlink" title="16.案例_个人信息设置-信息修改"></a>16.案例_个人信息设置-信息修改</h2><h3 id="目标-27"><a href="#目标-27" class="headerlink" title="目标"></a>目标</h3><p>把用户修改的信息提交到服务器保存</p>
<h3 id="讲解-27"><a href="#讲解-27" class="headerlink" title="讲解"></a>讲解</h3><ol>
<li><p>需求：点击提交按钮，收集个人信息，提交到服务器保存（无需重新获取刷新，因为页面已经是最新的数据了）</p>
<ol>
<li><p>收集表单数据</p>
</li>
<li><p>提交到服务器保存-调用用户信息更新接口（注意请求方法是 PUT）代表数据更新的意思</p>
<img data-src="/2024/11/19/AJAX%E5%AD%A6%E4%B9%A0/image-20230404125310049.png" class="" title="image-20230404125310049"></li>
</ol>
</li>
<li><p>核心代码如下：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 目标3：提交表单</span></span><br><span class="line"><span class="comment"> *  3.1 收集表单信息</span></span><br><span class="line"><span class="comment"> *  3.2 提交到服务器保存</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">// 保存修改-&gt;点击</span></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.submit&#x27;</span>).<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 3.1 收集表单信息</span></span><br><span class="line">  <span class="keyword">const</span> userForm = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.user-form&#x27;</span>)</span><br><span class="line">  <span class="keyword">const</span> userObj = <span class="title function_">serialize</span>(userForm, &#123; <span class="attr">hash</span>: <span class="literal">true</span>, <span class="attr">empty</span>: <span class="literal">true</span> &#125;)</span><br><span class="line">  userObj.<span class="property">creator</span> = creator</span><br><span class="line">  <span class="comment">// 性别数字字符串，转成数字类型</span></span><br><span class="line">  userObj.<span class="property">gender</span> = +userObj.<span class="property">gender</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(userObj)</span><br><span class="line">  <span class="comment">// 3.2 提交到服务器保存</span></span><br><span class="line">  <span class="title function_">axios</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">&#x27;http://hmajax.itheima.net/api/settings&#x27;</span>,</span><br><span class="line">    <span class="attr">method</span>: <span class="string">&#x27;PUT&#x27;</span>,</span><br><span class="line">    <span class="attr">data</span>: userObj</span><br><span class="line">  &#125;).<span class="title function_">then</span>(<span class="function"><span class="params">result</span> =&gt;</span> &#123;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li>
</ol>
<h3 id="小结-27"><a href="#小结-27" class="headerlink" title="小结"></a>小结</h3><ol>
<li><p>信息修改数据和以前增删改查哪个实现的思路比较接近呢？</p>
<details>
<summary>答案</summary>
<ul>
<li>编辑，首先回显已经做完了，然后收集用户最新改动后的数据，提交到服务器保存，因为页面最终就是用户刚写的数据，所以不用重新获取并刷新页面了</li>
</ul>
</details></li>
</ol>
<h2 id="17-案例-个人信息设置-提示框"><a href="#17-案例-个人信息设置-提示框" class="headerlink" title="17.案例_个人信息设置-提示框"></a>17.案例_个人信息设置-提示框</h2><h3 id="目标-28"><a href="#目标-28" class="headerlink" title="目标"></a>目标</h3><p>把用户更新个人信息结果，用提示框反馈给用户</p>
<h3 id="讲解-28"><a href="#讲解-28" class="headerlink" title="讲解"></a>讲解</h3><ol>
<li><p>需求：使用 bootstrap 提示框，提示个人信息设置后的结果</p>
<img data-src="/2024/11/19/AJAX%E5%AD%A6%E4%B9%A0/image-20230404125517679.png" class="" title="image-20230404125517679">
</li>
<li><p>bootstrap 的 toast 提示框和 modal 弹框使用很像，语法如下：</p>
<ol>
<li><p>先准备对应的标签结构（模板里已有）</p>
</li>
<li><p>设置延迟自动消失的时间</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;toast&quot;</span> <span class="attr">data-bs-delay</span>=<span class="string">&quot;1500&quot;</span>&gt;</span></span><br><span class="line">  提示框内容</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>使用 JS 的方式，在 axios 请求响应成功时，展示结果</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 创建提示框对象</span></span><br><span class="line"><span class="keyword">const</span> toastDom = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;css选择器&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> toast = <span class="keyword">new</span> bootstrap.<span class="title class_">Toast</span>(toastDom)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 显示提示框</span></span><br><span class="line">toast.<span class="title function_">show</span>()</span><br></pre></td></tr></table></figure></li>
</ol>
</li>
<li><p>核心代码：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 目标3：提交表单</span></span><br><span class="line"><span class="comment"> *  3.1 收集表单信息</span></span><br><span class="line"><span class="comment"> *  3.2 提交到服务器保存</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 目标4：结果提示</span></span><br><span class="line"><span class="comment"> *  4.1 创建toast对象</span></span><br><span class="line"><span class="comment"> *  4.2 调用show方法-&gt;显示提示框</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">// 保存修改-&gt;点击</span></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.submit&#x27;</span>).<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 3.1 收集表单信息</span></span><br><span class="line">  <span class="keyword">const</span> userForm = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.user-form&#x27;</span>)</span><br><span class="line">  <span class="keyword">const</span> userObj = <span class="title function_">serialize</span>(userForm, &#123; <span class="attr">hash</span>: <span class="literal">true</span>, <span class="attr">empty</span>: <span class="literal">true</span> &#125;)</span><br><span class="line">  userObj.<span class="property">creator</span> = creator</span><br><span class="line">  <span class="comment">// 性别数字字符串，转成数字类型</span></span><br><span class="line">  userObj.<span class="property">gender</span> = +userObj.<span class="property">gender</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(userObj)</span><br><span class="line">  <span class="comment">// 3.2 提交到服务器保存</span></span><br><span class="line">  <span class="title function_">axios</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">&#x27;http://hmajax.itheima.net/api/settings&#x27;</span>,</span><br><span class="line">    <span class="attr">method</span>: <span class="string">&#x27;PUT&#x27;</span>,</span><br><span class="line">    <span class="attr">data</span>: userObj</span><br><span class="line">  &#125;).<span class="title function_">then</span>(<span class="function"><span class="params">result</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 4.1 创建toast对象</span></span><br><span class="line">    <span class="keyword">const</span> toastDom = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.my-toast&#x27;</span>)</span><br><span class="line">    <span class="keyword">const</span> toast = <span class="keyword">new</span> bootstrap.<span class="title class_">Toast</span>(toastDom)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 4.2 调用show方法-&gt;显示提示框</span></span><br><span class="line">    toast.<span class="title function_">show</span>()</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li>
</ol>
<h3 id="小结-28"><a href="#小结-28" class="headerlink" title="小结"></a>小结</h3><ol>
<li><p>bootstrap 弹框什么时候用 JS 方式控制显示呢？</p>
<details>
<summary>答案</summary>
<ul>
<li>需要执行一些其他的 JS 逻辑后，再去显示/隐藏弹框时</li>
</ul>
</details></li>
</ol>
<h2 id="今日重点-必须会-1"><a href="#今日重点-必须会-1" class="headerlink" title="今日重点(必须会)"></a>今日重点(必须会)</h2><ol>
<li>掌握增删改查数据的思路</li>
<li>掌握图片上传的思路和流程</li>
<li>理解调用接口时，携带外号的作用</li>
<li>了解 bootstrap 弹框的使用</li>
</ol>
<h2 id="今日作业-必完成-1"><a href="#今日作业-必完成-1" class="headerlink" title="今日作业(必完成)"></a>今日作业(必完成)</h2><p>在配套作业文件夹的md内</p>
<h2 id="参考文献-1"><a href="#参考文献-1" class="headerlink" title="参考文献"></a>参考文献</h2><ol>
<li><a href="https://baike.baidu.com/item/%E8%A1%A8%E5%8D%95">表单概念-&gt;百度百科</a></li>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Content_negotiation/List_of_default_Accept_values">accept属性-&gt;mdn</a></li>
<li><a href="https://www.runoob.com/tags/att-input-accept.html">accept属性-&gt;菜鸟教程</a></li>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/FormData">FormData-&gt;mdn</a></li>
<li><a href="https://v5.bootcss.com/docs/components/modal/#passing-options">BS的Model文档</a></li>
<li><a href="https://www.axios-http.cn/docs/api_intro">axios请求方式别名</a></li>
</ol>
<h1 id="Day03-AJAX原理"><a href="#Day03-AJAX原理" class="headerlink" title="Day03_AJAX原理"></a>Day03_AJAX原理</h1><h2 id="知识点自测-2"><a href="#知识点自测-2" class="headerlink" title="知识点自测"></a>知识点自测</h2><ol>
<li><p>以下哪个方法可以把 JS 数据类型转成 JSON 字符串类型?</p>
<p>A. JSON.stringify()</p>
<p>B. JSON.parse()</p>
<details>
<summary>答案</summary>
<ul>
<li>选择A</li>
</ul>
</details>


</li>
<li><p>以下哪个方法，会延迟一段时间后，再执行函数体，并执行一次就停止?</p>
<p>A. setTimeout(函数体, 毫秒值)</p>
<p>B. setInterval(函数体, 毫秒值)</p>
<details>
<summary>答案</summary>
<ul>
<li>选择A</li>
</ul>
</details>


</li>
<li><p>下面代码 result 结果是多少?</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> obj = &#123;</span><br><span class="line">  <span class="attr">status</span>: <span class="number">240</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> result = obj.<span class="property">status</span> &gt;= <span class="number">200</span> &amp;&amp; obj.<span class="property">status</span> &lt; <span class="number">300</span></span><br></pre></td></tr></table></figure>

<p>A. true</p>
<p>B. 大于</p>
<p>C. 240</p>
<p>D. false</p>
<details>
<summary>答案</summary>
<ul>
<li>选A</li>
</ul>
</details>


</li>
<li><p>下面代码运行结果是多少？</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> result = <span class="string">&#x27;http://www.baidu.com&#x27;</span></span><br><span class="line">result += <span class="string">&#x27;?a=10&#x27;</span></span><br><span class="line">result += <span class="string">&#x27;&amp;b=20&#x27;</span></span><br></pre></td></tr></table></figure>

<p>A：’<a href="http://www.baidu.com/">http://www.baidu.com</a>‘</p>
<p>B：’?a&#x3D;10’</p>
<p>C：’&amp;b&#x3D;20’</p>
<p>D：’<a href="http://www.baidu.com/?a=10&b=20">http://www.baidu.com?a=10&amp;b=20</a>‘</p>
<details>
<summary>答案</summary>
<ul>
<li>选D</li>
</ul>
</details>


</li>
<li><p>哪个事件能实时检测到输入框值的变化？</p>
<p>A：input 事件</p>
<p>B：change 事件</p>
<details>
<summary>答案</summary>
<ul>
<li>选A</li>
</ul>
</details></li>
</ol>
<h2 id="目录-2"><a href="#目录-2" class="headerlink" title="目录"></a>目录</h2><ul>
<li>XMLHttpRequest 的学习</li>
<li>Promise </li>
<li>封装简易版 axios</li>
<li>案例 - 天气预报</li>
</ul>
<h2 id="学习目标-2"><a href="#学习目标-2" class="headerlink" title="学习目标"></a>学习目标</h2><ol>
<li>了解原生 AJAX 语法 - XMLHttpRequest（XHR）</li>
<li>了解 Promise 的概念和使用</li>
<li>了解 axios 内部工作的大概过程（XHR + Promise）</li>
<li>案例 - 天气预报</li>
</ol>
<h2 id="01-XMLHttpRequest-基础使用"><a href="#01-XMLHttpRequest-基础使用" class="headerlink" title="01.XMLHttpRequest - 基础使用"></a>01.XMLHttpRequest - 基础使用</h2><h3 id="目标-29"><a href="#目标-29" class="headerlink" title="目标"></a>目标</h3><p>了解 AJAX 原理 XHR 的基础使用</p>
<h3 id="讲解-29"><a href="#讲解-29" class="headerlink" title="讲解"></a>讲解</h3><ol>
<li><p>AJAX 是浏览器与服务器通信的技术，采用 XMLHttpRequest 对象相关代码</p>
</li>
<li><p>axios 是对 XHR 相关代码进行了封装，让我们只关心传递的接口参数</p>
</li>
<li><p>学习 XHR 也是了解 axios 内部与服务器交互过程的真正原理</p>
<img data-src="/2024/11/19/AJAX%E5%AD%A6%E4%B9%A0/image-20230221182835545.png" class="" title="image-20230221182835545">
</li>
<li><p>语法如下：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> xhr = <span class="keyword">new</span> <span class="title class_">XMLHttpRequest</span>()</span><br><span class="line">xhr.<span class="title function_">open</span>(<span class="string">&#x27;请求方法&#x27;</span>, <span class="string">&#x27;请求url网址&#x27;</span>)</span><br><span class="line">xhr.<span class="title function_">addEventListener</span>(<span class="string">&#x27;loadend&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 响应结果</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(xhr.<span class="property">response</span>)</span><br><span class="line">&#125;)</span><br><span class="line">xhr.<span class="title function_">send</span>()</span><br></pre></td></tr></table></figure>



<img data-src="/2024/11/19/AJAX%E5%AD%A6%E4%B9%A0/image-20230221183057392.png" class="" title="image-20230221183057392">
</li>
<li><p>需求：以一个需求来体验下原生 XHR 语法，获取所有省份列表并展示到页面上</p>
</li>
<li><p>代码如下：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>XMLHttpRequest_基础使用<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;my-p&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">/**</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">     * 目标：使用XMLHttpRequest对象与服务器通信</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">     *  1. 创建 XMLHttpRequest 对象</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">     *  2. 配置请求方法和请求 url 地址</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">     *  3. 监听 loadend 事件，接收响应结果</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">     *  4. 发起请求</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">    */</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 1. 创建 XMLHttpRequest 对象</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> xhr = <span class="keyword">new</span> <span class="title class_">XMLHttpRequest</span>()</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 2. 配置请求方法和请求 url 地址</span></span></span><br><span class="line"><span class="language-javascript">    xhr.<span class="title function_">open</span>(<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;http://hmajax.itheima.net/api/province&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 3. 监听 loadend 事件，接收响应结果</span></span></span><br><span class="line"><span class="language-javascript">    xhr.<span class="title function_">addEventListener</span>(<span class="string">&#x27;loadend&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">console</span>.<span class="title function_">log</span>(xhr.<span class="property">response</span>)</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">const</span> data = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(xhr.<span class="property">response</span>)</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">console</span>.<span class="title function_">log</span>(data.<span class="property">list</span>.<span class="title function_">join</span>(<span class="string">&#x27;&lt;br&gt;&#x27;</span>))</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.my-p&#x27;</span>).<span class="property">innerHTML</span> = data.<span class="property">list</span>.<span class="title function_">join</span>(<span class="string">&#x27;&lt;br&gt;&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 4. 发起请求</span></span></span><br><span class="line"><span class="language-javascript">    xhr.<span class="title function_">send</span>()</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li>
</ol>
<h3 id="小结-29"><a href="#小结-29" class="headerlink" title="小结"></a>小结</h3><ol>
<li><p>AJAX 原理是什么?</p>
<details>
<summary>答案</summary>
<ul>
<li>window 提供的 XMLHttpRequest</li>
</ul>
</details>
</li>
<li><p>为什么学习 XHR ？</p>
<details>
<summary>答案</summary>
<ul>
<li>有更多与服务器数据通信方式</li>
<li>了解 axios 内部原理</li>
</ul>
</details>
</li>
<li><p>XHR 使用步骤？</p>
<details>
<summary>答案</summary>
<ul>
<li>1. 创建 XHR 对象 2. 调用 open 方法，设置 url 和请求方法 3. 监听 loadend 事件，接收结果 4. 调用 send 方法，发起请求</li>
</ul>
</details></li>
</ol>
<h2 id="02-XMLHttpRequest-查询参数"><a href="#02-XMLHttpRequest-查询参数" class="headerlink" title="02.XMLHttpRequest - 查询参数"></a>02.XMLHttpRequest - 查询参数</h2><h3 id="目标-30"><a href="#目标-30" class="headerlink" title="目标"></a>目标</h3><p>使用 XHR 传递查询参数给服务器，获取匹配数据</p>
<h3 id="讲解-30"><a href="#讲解-30" class="headerlink" title="讲解"></a>讲解</h3><ol>
<li><p>什么是查询参数：携带额外信息给服务器，返回匹配想要的数据</p>
</li>
<li><p>查询参数原理要携带的位置和语法：<a href="http://xxxx.com/xxx/xxx?%E5%8F%82%E6%95%B0%E5%90%8D1=%E5%80%BC1&%E5%8F%82%E6%95%B0%E5%90%8D2=%E5%80%BC2">http://xxxx.com/xxx/xxx?参数名1=值1&amp;参数名2=值2</a></p>
</li>
<li><p>所以，原生 XHR 需要自己在 url 后面携带查询参数字符串，没有 axios 帮助我们把 params 参数拼接到 url 字符串后面了</p>
</li>
<li><p>需求：查询河北省下属的城市列表</p>
<img data-src="/2024/11/19/AJAX%E5%AD%A6%E4%B9%A0/image-20230404133429378.png" class="" title="image-20230404133429378">
</li>
<li><p>核心代码如下：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 目标：使用XHR携带查询参数，展示某个省下属的城市列表</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">const</span> xhr = <span class="keyword">new</span> <span class="title class_">XMLHttpRequest</span>()</span><br><span class="line">xhr.<span class="title function_">open</span>(<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;http://hmajax.itheima.net/api/city?pname=辽宁省&#x27;</span>)</span><br><span class="line">xhr.<span class="title function_">addEventListener</span>(<span class="string">&#x27;loadend&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(xhr.<span class="property">response</span>)</span><br><span class="line">  <span class="keyword">const</span> data = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(xhr.<span class="property">response</span>)</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(data)</span><br><span class="line">  <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.city-p&#x27;</span>).<span class="property">innerHTML</span> = data.<span class="property">list</span>.<span class="title function_">join</span>(<span class="string">&#x27;&lt;br&gt;&#x27;</span>)</span><br><span class="line">&#125;)</span><br><span class="line">xhr.<span class="title function_">send</span>()</span><br></pre></td></tr></table></figure></li>
</ol>
<h3 id="小结-30"><a href="#小结-30" class="headerlink" title="小结"></a>小结</h3><ol>
<li><p>XHR 如何携带查询参数?</p>
<details>
<summary>答案</summary>
<ul>
<li>在调用 open 方法的时候，在 url? 后面按照指定格式拼接参数名和值</li>
</ul>
</details></li>
</ol>
<h2 id="03-案例-地区查询"><a href="#03-案例-地区查询" class="headerlink" title="03.案例 - 地区查询"></a>03.案例 - 地区查询</h2><h3 id="目标-31"><a href="#目标-31" class="headerlink" title="目标"></a>目标</h3><p>使用 XHR 完成案例地区查询</p>
<h3 id="讲解-31"><a href="#讲解-31" class="headerlink" title="讲解"></a>讲解</h3><ol>
<li><p>需求：和我们之前做的类似，就是不用 axios 而是用 XHR 实现，输入省份和城市名字后，点击查询，传递多对查询参数并获取地区列表的需求</p>
<img data-src="/2024/11/19/AJAX%E5%AD%A6%E4%B9%A0/image-20230221184135458.png" class="" title="image-20230221184135458">
</li>
<li><p>但是多个查询参数，如果自己拼接很麻烦，这里用 URLSearchParams 把参数对象转成“参数名&#x3D;值&amp;参数名&#x3D;值“格式的字符串，语法如下：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 1. 创建 URLSearchParams 对象</span></span><br><span class="line"><span class="keyword">const</span> paramsObj = <span class="keyword">new</span> <span class="title class_">URLSearchParams</span>(&#123;</span><br><span class="line">  参数名<span class="number">1</span>: 值<span class="number">1</span>,</span><br><span class="line">  参数名<span class="number">2</span>: 值<span class="number">2</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2. 生成指定格式查询参数字符串</span></span><br><span class="line"><span class="keyword">const</span> queryString = paramsObj.<span class="title function_">toString</span>()</span><br><span class="line"><span class="comment">// 结果：参数名1=值1&amp;参数名2=值2</span></span><br></pre></td></tr></table></figure></li>
</ol>
<h3 id="小结-31"><a href="#小结-31" class="headerlink" title="小结"></a>小结</h3><ol>
<li><p>JS 对象如何转成查询参数格式字符串?</p>
<details>
<summary>答案</summary>
<ul>
<li>在调用 open 方法的时候，在 url? 后面按照指定格式拼接参数名和值</li>
</ul>
</details></li>
</ol>
<h2 id="04-XMLHttpRequest-数据提交"><a href="#04-XMLHttpRequest-数据提交" class="headerlink" title="04.XMLHttpRequest - 数据提交"></a>04.XMLHttpRequest - 数据提交</h2><h3 id="目标-32"><a href="#目标-32" class="headerlink" title="目标"></a>目标</h3><p>通过 XHR 提交用户名和密码，完成注册功能</p>
<h3 id="讲解-32"><a href="#讲解-32" class="headerlink" title="讲解"></a>讲解</h3><ol>
<li><p>了解原生 XHR 进行数据提交的方式</p>
</li>
<li><p>需求：通过 XHR 完成注册用户功能</p>
<img data-src="/2024/11/19/AJAX%E5%AD%A6%E4%B9%A0/image-20230404135245271.png" class="" title="image-20230404135245271">
</li>
<li><p>步骤和语法：</p>
<ol>
<li><p>注意1：但是这次没有 axios 帮我们了，我们需要自己设置请求头 Content-Type：application&#x2F;json，来告诉服务器端，我们发过去的内容类型是 JSON 字符串，让他转成对应数据结构取值使用</p>
</li>
<li><p>注意2：没有 axios 了，我们前端要传递的请求体数据，也没人帮我把 JS 对象转成 JSON 字符串了，需要我们自己转换</p>
</li>
<li><p>注意3：原生 XHR 需要在 send 方法调用时，传入请求体携带</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> xhr = <span class="keyword">new</span> <span class="title class_">XMLHttpRequest</span>()</span><br><span class="line">xhr.<span class="title function_">open</span>(<span class="string">&#x27;请求方法&#x27;</span>, <span class="string">&#x27;请求url网址&#x27;</span>)</span><br><span class="line">xhr.<span class="title function_">addEventListener</span>(<span class="string">&#x27;loadend&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(xhr.<span class="property">response</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 1. 告诉服务器，我传递的内容类型，是 JSON 字符串</span></span><br><span class="line">xhr.<span class="title function_">setRequestHeader</span>(<span class="string">&#x27;Content-Type&#x27;</span>, <span class="string">&#x27;application/json&#x27;</span>)</span><br><span class="line"><span class="comment">// 2. 准备数据并转成 JSON 字符串</span></span><br><span class="line"><span class="keyword">const</span> user = &#123; <span class="attr">username</span>: <span class="string">&#x27;itheima007&#x27;</span>, <span class="attr">password</span>: <span class="string">&#x27;7654321&#x27;</span> &#125;</span><br><span class="line"><span class="keyword">const</span> userStr = <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(user)</span><br><span class="line"><span class="comment">// 3. 发送请求体数据</span></span><br><span class="line">xhr.<span class="title function_">send</span>(userStr)</span><br></pre></td></tr></table></figure></li>
</ol>
</li>
<li><p>核心代码如下：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 目标：使用xhr进行数据提交-完成注册功能</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.reg-btn&#x27;</span>).<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> xhr = <span class="keyword">new</span> <span class="title class_">XMLHttpRequest</span>()</span><br><span class="line">  xhr.<span class="title function_">open</span>(<span class="string">&#x27;POST&#x27;</span>, <span class="string">&#x27;http://hmajax.itheima.net/api/register&#x27;</span>)</span><br><span class="line">  xhr.<span class="title function_">addEventListener</span>(<span class="string">&#x27;loadend&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(xhr.<span class="property">response</span>)</span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 设置请求头-告诉服务器内容类型（JSON字符串）</span></span><br><span class="line">  xhr.<span class="title function_">setRequestHeader</span>(<span class="string">&#x27;Content-Type&#x27;</span>, <span class="string">&#x27;application/json&#x27;</span>)</span><br><span class="line">  <span class="comment">// 准备提交的数据</span></span><br><span class="line">  <span class="keyword">const</span> userObj = &#123;</span><br><span class="line">    <span class="attr">username</span>: <span class="string">&#x27;itheima007&#x27;</span>,</span><br><span class="line">    <span class="attr">password</span>: <span class="string">&#x27;7654321&#x27;</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">const</span> userStr = <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(userObj)</span><br><span class="line">  <span class="comment">// 设置请求体，发起请求</span></span><br><span class="line">  xhr.<span class="title function_">send</span>(userStr)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li>
</ol>
<h3 id="小结-32"><a href="#小结-32" class="headerlink" title="小结"></a>小结</h3><ol>
<li><p>XHR 如何提交请求体数据?</p>
<details>
<summary>答案</summary>
<ul>
<li>在 send 中携带请求体数据，要按照后端要求的内容类型携带</li>
</ul>
</details></li>
</ol>
<h2 id="05-认识-Promise"><a href="#05-认识-Promise" class="headerlink" title="05.认识_Promise"></a>05.认识_Promise</h2><h3 id="目标-33"><a href="#目标-33" class="headerlink" title="目标"></a>目标</h3><p>认识 Promise 的作用和好处以及使用步骤</p>
<h3 id="讲解-33"><a href="#讲解-33" class="headerlink" title="讲解"></a>讲解</h3><ol>
<li><p>什么是 Promise ？</p>
<ul>
<li>Promise 对象用于表示一个异步操作的最终完成（或失败）及其结构值</li>
</ul>
</li>
<li><p>Promise 的好处是什么？</p>
<ul>
<li><p>逻辑更清晰（成功或失败会关联后续的处理函数）</p>
</li>
<li><p>了解 axios 函数内部运作的机制</p>
<img data-src="/2024/11/19/AJAX%E5%AD%A6%E4%B9%A0/image-20230222113651404.png" class="" title="image-20230222113651404">
</li>
<li><p>能解决回调函数地狱问题（后面会讲到），今天先来看下它的基础使用</p>
</li>
</ul>
</li>
<li><p>Promise 管理异步任务，语法怎么用？</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 1. 创建 Promise 对象</span></span><br><span class="line"><span class="keyword">const</span> p = <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line"> <span class="comment">// 2. 执行异步任务-并传递结果</span></span><br><span class="line"> <span class="comment">// 成功调用: resolve(值) 触发 then() 执行</span></span><br><span class="line"> <span class="comment">// 失败调用: reject(值) 触发 catch() 执行</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// 3. 接收结果</span></span><br><span class="line">p.<span class="title function_">then</span>(<span class="function"><span class="params">result</span> =&gt;</span> &#123;</span><br><span class="line"> <span class="comment">// 成功</span></span><br><span class="line">&#125;).<span class="title function_">catch</span>(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line"> <span class="comment">// 失败</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
</li>
<li><p>示例代码：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 目标：使用Promise管理异步任务</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">// 1. 创建Promise对象</span></span><br><span class="line"><span class="keyword">const</span> p = <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 2. 执行异步代码</span></span><br><span class="line">  <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// resolve(&#x27;模拟AJAX请求-成功结果&#x27;)</span></span><br><span class="line">    <span class="title function_">reject</span>(<span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;模拟AJAX请求-失败结果&#x27;</span>))</span><br><span class="line">  &#125;, <span class="number">2000</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 3. 获取结果</span></span><br><span class="line">p.<span class="title function_">then</span>(<span class="function"><span class="params">result</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(result)</span><br><span class="line">&#125;).<span class="title function_">catch</span>(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(error)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li>
</ol>
<h3 id="小结-33"><a href="#小结-33" class="headerlink" title="小结"></a>小结</h3><ol>
<li><p>什么是 Promise ?</p>
<details>
<summary>答案</summary>
<ul>
<li>表示（管理）一个异步操作最终状态和结果值的对象</li>
</ul>
</details>
</li>
<li><p>为什么学习 Promise ?</p>
<details>
<summary>答案</summary>
<ul>
<li>成功和失败状态，可以关联对应处理函数，了解 axios 内部运作的原理</li>
</ul>
</details>
</li>
<li><p>Promise 使用步骤？</p>
<details>
<summary>答案</summary>
<ul>
<li>1. new Promise 对象执行异步任务。2. 用 resolve 关联 then 的回调函数传递成功结果。3.用 reject 关联 catch 的回调函数传递失败结果。</li>
</ul>
</details></li>
</ol>
<h2 id="06-认识-Promise-的状态"><a href="#06-认识-Promise-的状态" class="headerlink" title="06.认识_Promise 的状态"></a>06.认识_Promise 的状态</h2><h3 id="目标-34"><a href="#目标-34" class="headerlink" title="目标"></a>目标</h3><p>认识 Promise 的三种状态，知道如何关联成功&#x2F;失败的处理函数</p>
<h3 id="讲解-34"><a href="#讲解-34" class="headerlink" title="讲解"></a>讲解</h3><ol>
<li><p>为什么要了解 Promise 的三种状态 ？</p>
<ul>
<li>知道 Promise 对象如何关联的处理函数，以及代码的执行顺序</li>
</ul>
</li>
<li><p>Promise 有哪三种状态？</p>
<blockquote>
<p>每个 Promise 对象必定处于以下三种状态之一</p>
</blockquote>
<ol>
<li>待定（pending）：初始状态，既没有被兑现，也没有被拒绝</li>
<li>已兑现（fulfilled）：操作成功完成</li>
<li>已拒绝（rejected）：操作失败</li>
</ol>
<blockquote>
<p>状态的英文字符串，可以理解为 Promise 对象内的字符串标识符，用于判断什么时候调用哪一个处理函数</p>
</blockquote>
</li>
<li><p>Promise 的状态改变有什么用：调用对应函数，改变 Promise 对象状态后，内部触发对应回调函数传参并执行</p>
<img data-src="/2024/11/19/AJAX%E5%AD%A6%E4%B9%A0/image-20230222120815484.png" class="" title="image-20230222120815484">
</li>
<li><p>注意：每个 Promise 对象一旦被兑现&#x2F;拒绝，那就是已敲定了，状态无法再被改变</p>
</li>
</ol>
<h3 id="小结-34"><a href="#小结-34" class="headerlink" title="小结"></a>小结</h3><ol>
<li><p>Promise 对象有哪 3 种状态?</p>
<details>
<summary>答案</summary>
<ul>
<li>待定 pending，已兑现 fulfilled，已拒绝 rejected</li>
</ul>
</details>
</li>
<li><p>Promise 状态有什么用?</p>
<details>
<summary>答案</summary>
<ul>
<li>状态改变后，如何关联处理函数</li>
</ul>
</details></li>
</ol>
<h2 id="07-使用-Promise-和-XHR-获取省份列表"><a href="#07-使用-Promise-和-XHR-获取省份列表" class="headerlink" title="07.使用 Promise 和 XHR_获取省份列表"></a>07.使用 Promise 和 XHR_获取省份列表</h2><h3 id="目标-35"><a href="#目标-35" class="headerlink" title="目标"></a>目标</h3><p>尝试用 Promise 管理 XHR 异步任务</p>
<h3 id="讲解-35"><a href="#讲解-35" class="headerlink" title="讲解"></a>讲解</h3><ol>
<li><p>Promise 和 XHR 都已经学过基础语法了，我们可以来结合使用一下了</p>
</li>
<li><p>需求：使用 Promise 和 XHR 请求省份列表数据并展示到页面上</p>
<img data-src="/2024/11/19/AJAX%E5%AD%A6%E4%B9%A0/image-20230404140252181.png" class="" title="image-20230404140252181">
</li>
<li><p>步骤：</p>
<ol>
<li><p>创建 Promise 对象</p>
</li>
<li><p>执行 XHR 异步代码，获取省份列表数据</p>
</li>
<li><p>关联成功或失败回调函数，做后续的处理</p>
<blockquote>
<p>错误情况：用地址错了404演示</p>
</blockquote>
</li>
</ol>
</li>
<li><p>核心代码如下：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 目标：使用Promise管理XHR请求省份列表</span></span><br><span class="line"><span class="comment"> *  1. 创建Promise对象</span></span><br><span class="line"><span class="comment"> *  2. 执行XHR异步代码，获取省份列表</span></span><br><span class="line"><span class="comment"> *  3. 关联成功或失败函数，做后续处理</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">// 1. 创建Promise对象</span></span><br><span class="line"><span class="keyword">const</span> p = <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 2. 执行XHR异步代码，获取省份列表</span></span><br><span class="line">  <span class="keyword">const</span> xhr = <span class="keyword">new</span> <span class="title class_">XMLHttpRequest</span>()</span><br><span class="line">  xhr.<span class="title function_">open</span>(<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;http://hmajax.itheima.net/api/province&#x27;</span>)</span><br><span class="line">  xhr.<span class="title function_">addEventListener</span>(<span class="string">&#x27;loadend&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// xhr如何判断响应成功还是失败的？</span></span><br><span class="line">    <span class="comment">// 2xx开头的都是成功响应状态码</span></span><br><span class="line">    <span class="keyword">if</span> (xhr.<span class="property">status</span> &gt;= <span class="number">200</span> &amp;&amp; xhr.<span class="property">status</span> &lt; <span class="number">300</span>) &#123;</span><br><span class="line">      <span class="title function_">resolve</span>(<span class="title class_">JSON</span>.<span class="title function_">parse</span>(xhr.<span class="property">response</span>))</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="title function_">reject</span>(<span class="keyword">new</span> <span class="title class_">Error</span>(xhr.<span class="property">response</span>))</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">  xhr.<span class="title function_">send</span>()</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 3. 关联成功或失败函数，做后续处理</span></span><br><span class="line">p.<span class="title function_">then</span>(<span class="function"><span class="params">result</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(result)</span><br><span class="line">  <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.my-p&#x27;</span>).<span class="property">innerHTML</span> = result.<span class="property">list</span>.<span class="title function_">join</span>(<span class="string">&#x27;&lt;br&gt;&#x27;</span>)</span><br><span class="line">&#125;).<span class="title function_">catch</span>(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 错误对象要用console.dir详细打印</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">dir</span>(error)</span><br><span class="line">  <span class="comment">// 服务器返回错误提示消息，插入到p标签显示</span></span><br><span class="line">  <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.my-p&#x27;</span>).<span class="property">innerHTML</span> = error.<span class="property">message</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li>
</ol>
<h3 id="小结-35"><a href="#小结-35" class="headerlink" title="小结"></a>小结</h3><ol>
<li><p>AJAX 如何判断是否请求响应成功了?</p>
<details>
<summary>答案</summary>
<ul>
<li>响应状态码在大于等于 200 并且小于 300 的范围是成功的</li>
</ul>
</details></li>
</ol>
<h2 id="08-封装-简易axios-获取省份列表"><a href="#08-封装-简易axios-获取省份列表" class="headerlink" title="08.封装_简易axios-获取省份列表"></a>08.封装_简易axios-获取省份列表</h2><h3 id="目标-36"><a href="#目标-36" class="headerlink" title="目标"></a>目标</h3><p>模拟 axios 函数封装，更深入了解 axios 内部运作原理</p>
<h3 id="讲解-36"><a href="#讲解-36" class="headerlink" title="讲解"></a>讲解</h3><ol>
<li><p>需求：基于 Promise 和 XHR 封装 myAxios 函数，获取省份列表展示到页面</p>
<img data-src="/2024/11/19/AJAX%E5%AD%A6%E4%B9%A0/image-20230222130217597.png" class="" title="image-20230222130217597">
</li>
<li><p>核心语法：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">myAxios</span>(<span class="params">config</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// XHR 请求</span></span><br><span class="line">    <span class="comment">// 调用成功/失败的处理程序</span></span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">myAxios</span>(&#123;</span><br><span class="line">  <span class="attr">url</span>: <span class="string">&#x27;目标资源地址&#x27;</span></span><br><span class="line">&#125;).<span class="title function_">then</span>(<span class="function"><span class="params">result</span> =&gt;</span> &#123;</span><br><span class="line">    </span><br><span class="line">&#125;).<span class="title function_">catch</span>(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">    </span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>


</li>
<li><p>步骤：</p>
<ol>
<li>定义 myAxios 函数，接收配置对象，返回 Promise 对象</li>
<li>发起 XHR 请求，默认请求方法为 GET</li>
<li>调用成功&#x2F;失败的处理程序</li>
<li>使用 myAxios 函数，获取省份列表展示</li>
</ol>
</li>
<li><p>核心代码如下：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 目标：封装_简易axios函数_获取省份列表</span></span><br><span class="line"><span class="comment"> *  1. 定义myAxios函数，接收配置对象，返回Promise对象</span></span><br><span class="line"><span class="comment"> *  2. 发起XHR请求，默认请求方法为GET</span></span><br><span class="line"><span class="comment"> *  3. 调用成功/失败的处理程序</span></span><br><span class="line"><span class="comment"> *  4. 使用myAxios函数，获取省份列表展示</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">// 1. 定义myAxios函数，接收配置对象，返回Promise对象</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">myAxios</span>(<span class="params">config</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 2. 发起XHR请求，默认请求方法为GET</span></span><br><span class="line">    <span class="keyword">const</span> xhr = <span class="keyword">new</span> <span class="title class_">XMLHttpRequest</span>()</span><br><span class="line">    xhr.<span class="title function_">open</span>(config.<span class="property">method</span> || <span class="string">&#x27;GET&#x27;</span>, config.<span class="property">url</span>)</span><br><span class="line">    xhr.<span class="title function_">addEventListener</span>(<span class="string">&#x27;loadend&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="comment">// 3. 调用成功/失败的处理程序</span></span><br><span class="line">      <span class="keyword">if</span> (xhr.<span class="property">status</span> &gt;= <span class="number">200</span> &amp;&amp; xhr.<span class="property">status</span> &lt; <span class="number">300</span>) &#123;</span><br><span class="line">        <span class="title function_">resolve</span>(<span class="title class_">JSON</span>.<span class="title function_">parse</span>(xhr.<span class="property">response</span>))</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="title function_">reject</span>(<span class="keyword">new</span> <span class="title class_">Error</span>(xhr.<span class="property">response</span>))</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    xhr.<span class="title function_">send</span>()</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 4. 使用myAxios函数，获取省份列表展示</span></span><br><span class="line"><span class="title function_">myAxios</span>(&#123;</span><br><span class="line">  <span class="attr">url</span>: <span class="string">&#x27;http://hmajax.itheima.net/api/province&#x27;</span></span><br><span class="line">&#125;).<span class="title function_">then</span>(<span class="function"><span class="params">result</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(result)</span><br><span class="line">  <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.my-p&#x27;</span>).<span class="property">innerHTML</span> = result.<span class="property">list</span>.<span class="title function_">join</span>(<span class="string">&#x27;&lt;br&gt;&#x27;</span>)</span><br><span class="line">&#125;).<span class="title function_">catch</span>(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(error)</span><br><span class="line">  <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.my-p&#x27;</span>).<span class="property">innerHTML</span> = error.<span class="property">message</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li>
</ol>
<h3 id="小结-36"><a href="#小结-36" class="headerlink" title="小结"></a>小结</h3><ol>
<li><p>自己封装的 myAxios 如何设置默认请求方法 GET?</p>
<details>
<summary>答案</summary>
<ul>
<li>config.method 判断有值就用，无值用‘GET’方法</li>
</ul>
</details></li>
</ol>
<h2 id="09-封装-简易axios-获取地区列表"><a href="#09-封装-简易axios-获取地区列表" class="headerlink" title="09.封装_简易axios-获取地区列表"></a>09.封装_简易axios-获取地区列表</h2><h3 id="目标-37"><a href="#目标-37" class="headerlink" title="目标"></a>目标</h3><p>修改 myAxios 函数支持传递查询参数，获取辽宁省，大连市的地区列表</p>
<h3 id="讲解-37"><a href="#讲解-37" class="headerlink" title="讲解"></a>讲解</h3><ol>
<li><p>需求：在上个封装的建议 axios 函数基础上，修改代码支持传递查询参数功能</p>
</li>
<li><p>修改步骤：</p>
<ol>
<li>myAxios 函数调用后，判断 params 选项</li>
<li>基于 URLSearchParams 转换查询参数字符串</li>
<li>使用自己封装的 myAxios 函数显示地区列表</li>
</ol>
</li>
<li><p>核心代码：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">myAxios</span>(<span class="params">config</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> xhr = <span class="keyword">new</span> <span class="title class_">XMLHttpRequest</span>()</span><br><span class="line">    <span class="comment">// 1. 判断有params选项，携带查询参数</span></span><br><span class="line">    <span class="keyword">if</span> (config.<span class="property">params</span>) &#123;</span><br><span class="line">      <span class="comment">// 2. 使用URLSearchParams转换，并携带到url上</span></span><br><span class="line">      <span class="keyword">const</span> paramsObj = <span class="keyword">new</span> <span class="title class_">URLSearchParams</span>(config.<span class="property">params</span>)</span><br><span class="line">      <span class="keyword">const</span> queryString = paramsObj.<span class="title function_">toString</span>()</span><br><span class="line">      <span class="comment">// 把查询参数字符串，拼接在url？后面</span></span><br><span class="line">      config.<span class="property">url</span> += <span class="string">`?<span class="subst">$&#123;queryString&#125;</span>`</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    xhr.<span class="title function_">open</span>(config.<span class="property">method</span> || <span class="string">&#x27;GET&#x27;</span>, config.<span class="property">url</span>)</span><br><span class="line">    xhr.<span class="title function_">addEventListener</span>(<span class="string">&#x27;loadend&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (xhr.<span class="property">status</span> &gt;= <span class="number">200</span> &amp;&amp; xhr.<span class="property">status</span> &lt; <span class="number">300</span>) &#123;</span><br><span class="line">        <span class="title function_">resolve</span>(<span class="title class_">JSON</span>.<span class="title function_">parse</span>(xhr.<span class="property">response</span>))</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="title function_">reject</span>(<span class="keyword">new</span> <span class="title class_">Error</span>(xhr.<span class="property">response</span>))</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    xhr.<span class="title function_">send</span>()</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 3. 使用myAxios函数，获取地区列表</span></span><br><span class="line"><span class="title function_">myAxios</span>(&#123;</span><br><span class="line">  <span class="attr">url</span>: <span class="string">&#x27;http://hmajax.itheima.net/api/area&#x27;</span>,</span><br><span class="line">  <span class="attr">params</span>: &#123;</span><br><span class="line">    <span class="attr">pname</span>: <span class="string">&#x27;辽宁省&#x27;</span>,</span><br><span class="line">    <span class="attr">cname</span>: <span class="string">&#x27;大连市&#x27;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;).<span class="title function_">then</span>(<span class="function"><span class="params">result</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(result)</span><br><span class="line">  <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.my-p&#x27;</span>).<span class="property">innerHTML</span> = result.<span class="property">list</span>.<span class="title function_">join</span>(<span class="string">&#x27;&lt;br&gt;&#x27;</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li>
</ol>
<h3 id="小结-37"><a href="#小结-37" class="headerlink" title="小结"></a>小结</h3><ol>
<li><p>外面传入查询参数对象，myAxios 函数内如何转查询参数字符串?</p>
<details>
<summary>答案</summary>
<ul>
<li>使用 URLSearchParams 对象转换</li>
</ul>
</details></li>
</ol>
<h2 id="10-封装-简易axios-注册用户"><a href="#10-封装-简易axios-注册用户" class="headerlink" title="10.封装_简易axios-注册用户"></a>10.封装_简易axios-注册用户</h2><h3 id="目标-38"><a href="#目标-38" class="headerlink" title="目标"></a>目标</h3><p>修改 myAxios 函数支持传递请求体数据，完成注册用户</p>
<h3 id="讲解-38"><a href="#讲解-38" class="headerlink" title="讲解"></a>讲解</h3><ol>
<li><p>需求：修改 myAxios 函数支持传递请求体数据，完成注册用户功能</p>
</li>
<li><p>修改步骤：</p>
<ol>
<li>myAxios 函数调用后，判断 data 选项</li>
<li>转换数据类型，在 send 方法中发送</li>
<li>使用自己封装的 myAxios 函数完成注册用户功能</li>
</ol>
</li>
<li><p>核心代码：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">myAxios</span>(<span class="params">config</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> xhr = <span class="keyword">new</span> <span class="title class_">XMLHttpRequest</span>()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (config.<span class="property">params</span>) &#123;</span><br><span class="line">      <span class="keyword">const</span> paramsObj = <span class="keyword">new</span> <span class="title class_">URLSearchParams</span>(config.<span class="property">params</span>)</span><br><span class="line">      <span class="keyword">const</span> queryString = paramsObj.<span class="title function_">toString</span>()</span><br><span class="line">      config.<span class="property">url</span> += <span class="string">`?<span class="subst">$&#123;queryString&#125;</span>`</span></span><br><span class="line">    &#125;</span><br><span class="line">    xhr.<span class="title function_">open</span>(config.<span class="property">method</span> || <span class="string">&#x27;GET&#x27;</span>, config.<span class="property">url</span>)</span><br><span class="line"></span><br><span class="line">    xhr.<span class="title function_">addEventListener</span>(<span class="string">&#x27;loadend&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (xhr.<span class="property">status</span> &gt;= <span class="number">200</span> &amp;&amp; xhr.<span class="property">status</span> &lt; <span class="number">300</span>) &#123;</span><br><span class="line">        <span class="title function_">resolve</span>(<span class="title class_">JSON</span>.<span class="title function_">parse</span>(xhr.<span class="property">response</span>))</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="title function_">reject</span>(<span class="keyword">new</span> <span class="title class_">Error</span>(xhr.<span class="property">response</span>))</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="comment">// 1. 判断有data选项，携带请求体</span></span><br><span class="line">    <span class="keyword">if</span> (config.<span class="property">data</span>) &#123;</span><br><span class="line">      <span class="comment">// 2. 转换数据类型，在send中发送</span></span><br><span class="line">      <span class="keyword">const</span> jsonStr = <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(config.<span class="property">data</span>)</span><br><span class="line">      xhr.<span class="title function_">setRequestHeader</span>(<span class="string">&#x27;Content-Type&#x27;</span>, <span class="string">&#x27;application/json&#x27;</span>)</span><br><span class="line">      xhr.<span class="title function_">send</span>(jsonStr)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="comment">// 如果没有请求体数据，正常的发起请求</span></span><br><span class="line">      xhr.<span class="title function_">send</span>()</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.reg-btn&#x27;</span>).<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 3. 使用myAxios函数，完成注册用户</span></span><br><span class="line">  <span class="title function_">myAxios</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">&#x27;http://hmajax.itheima.net/api/register&#x27;</span>,</span><br><span class="line">    <span class="attr">method</span>: <span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line">    <span class="attr">data</span>: &#123;</span><br><span class="line">      <span class="attr">username</span>: <span class="string">&#x27;itheima999&#x27;</span>,</span><br><span class="line">      <span class="attr">password</span>: <span class="string">&#x27;666666&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;).<span class="title function_">then</span>(<span class="function"><span class="params">result</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(result)</span><br><span class="line">  &#125;).<span class="title function_">catch</span>(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">dir</span>(error)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li>
</ol>
<h3 id="小结-38"><a href="#小结-38" class="headerlink" title="小结"></a>小结</h3><ol>
<li><p>外面传入 data 选项，myAxios 函数内如何携带请求体参数?</p>
<details>
<summary>答案</summary>
<ul>
<li>判断外面传入了这个属性，自己转成 JSON 字符串并设置请求头并在 send 方法中携带</li>
</ul>
</details></li>
</ol>
<h2 id="11-12-案例-天气预报-默认数据"><a href="#11-12-案例-天气预报-默认数据" class="headerlink" title="11-12.案例_天气预报-默认数据"></a>11-12.案例_天气预报-默认数据</h2><h3 id="目标-39"><a href="#目标-39" class="headerlink" title="目标"></a>目标</h3><p>把北京市的数据，填充到页面默认显示</p>
<h3 id="讲解-39"><a href="#讲解-39" class="headerlink" title="讲解"></a>讲解</h3><ol>
<li><p>需求：介绍本项目要完成的效果，和要实现的步骤和分的步骤和视频</p>
<img data-src="/2024/11/19/AJAX%E5%AD%A6%E4%B9%A0/image-20230222133327806.png" class="" title="image-20230222133327806">
</li>
<li><p>步骤</p>
<ol>
<li>先获取北京市天气预报，展示</li>
<li>搜索城市列表，展示</li>
<li>点击城市，切换显示对应天气数据</li>
</ol>
</li>
<li><p>本视频先封装函数，获取城市天气并设置页面内容</p>
</li>
<li><p>核心代码如下：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 目标1：默认显示-北京市天气</span></span><br><span class="line"><span class="comment"> *  1.1 获取北京市天气数据</span></span><br><span class="line"><span class="comment"> *  1.2 数据展示到页面</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">// 获取并渲染城市天气函数</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getWeather</span>(<span class="params">cityCode</span>) &#123;</span><br><span class="line">  <span class="comment">// 1.1 获取北京市天气数据</span></span><br><span class="line">  <span class="title function_">myAxios</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">&#x27;http://hmajax.itheima.net/api/weather&#x27;</span>,</span><br><span class="line">    <span class="attr">params</span>: &#123;</span><br><span class="line">      <span class="attr">city</span>: cityCode</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;).<span class="title function_">then</span>(<span class="function"><span class="params">result</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(result)</span><br><span class="line">    <span class="keyword">const</span> wObj = result.<span class="property">data</span></span><br><span class="line">    <span class="comment">// 1.2 数据展示到页面</span></span><br><span class="line">    <span class="comment">// 阳历和农历日期</span></span><br><span class="line">    <span class="keyword">const</span> dateStr = <span class="string">`&lt;span class=&quot;dateShort&quot;&gt;<span class="subst">$&#123;wObj.date&#125;</span>&lt;/span&gt;</span></span><br><span class="line"><span class="string">    &lt;span class=&quot;calendar&quot;&gt;农历&amp;nbsp;</span></span><br><span class="line"><span class="string">      &lt;span class=&quot;dateLunar&quot;&gt;<span class="subst">$&#123;wObj.dateLunar&#125;</span>&lt;/span&gt;</span></span><br><span class="line"><span class="string">    &lt;/span&gt;`</span></span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.title&#x27;</span>).<span class="property">innerHTML</span> = dateStr</span><br><span class="line">    <span class="comment">// 城市名字</span></span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.area&#x27;</span>).<span class="property">innerHTML</span> = wObj.<span class="property">area</span></span><br><span class="line">    <span class="comment">// 当天气温</span></span><br><span class="line">    <span class="keyword">const</span> nowWStr = <span class="string">`&lt;div class=&quot;tem-box&quot;&gt;</span></span><br><span class="line"><span class="string">    &lt;span class=&quot;temp&quot;&gt;</span></span><br><span class="line"><span class="string">      &lt;span class=&quot;temperature&quot;&gt;<span class="subst">$&#123;wObj.temperature&#125;</span>&lt;/span&gt;</span></span><br><span class="line"><span class="string">      &lt;span&gt;°&lt;/span&gt;</span></span><br><span class="line"><span class="string">    &lt;/span&gt;</span></span><br><span class="line"><span class="string">  &lt;/div&gt;</span></span><br><span class="line"><span class="string">  &lt;div class=&quot;climate-box&quot;&gt;</span></span><br><span class="line"><span class="string">    &lt;div class=&quot;air&quot;&gt;</span></span><br><span class="line"><span class="string">      &lt;span class=&quot;psPm25&quot;&gt;<span class="subst">$&#123;wObj.psPm25&#125;</span>&lt;/span&gt;</span></span><br><span class="line"><span class="string">      &lt;span class=&quot;psPm25Level&quot;&gt;<span class="subst">$&#123;wObj.psPm25Level&#125;</span>&lt;/span&gt;</span></span><br><span class="line"><span class="string">    &lt;/div&gt;</span></span><br><span class="line"><span class="string">    &lt;ul class=&quot;weather-list&quot;&gt;</span></span><br><span class="line"><span class="string">      &lt;li&gt;</span></span><br><span class="line"><span class="string">        &lt;img src=&quot;<span class="subst">$&#123;wObj.weatherImg&#125;</span>&quot; class=&quot;weatherImg&quot; alt=&quot;&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;span class=&quot;weather&quot;&gt;<span class="subst">$&#123;wObj.weather&#125;</span>&lt;/span&gt;</span></span><br><span class="line"><span class="string">      &lt;/li&gt;</span></span><br><span class="line"><span class="string">      &lt;li class=&quot;windDirection&quot;&gt;<span class="subst">$&#123;wObj.windDirection&#125;</span>&lt;/li&gt;</span></span><br><span class="line"><span class="string">      &lt;li class=&quot;windPower&quot;&gt;<span class="subst">$&#123;wObj.windPower&#125;</span>&lt;/li&gt;</span></span><br><span class="line"><span class="string">    &lt;/ul&gt;</span></span><br><span class="line"><span class="string">  &lt;/div&gt;`</span></span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.weather-box&#x27;</span>).<span class="property">innerHTML</span> = nowWStr</span><br><span class="line">    <span class="comment">// 当天天气</span></span><br><span class="line">    <span class="keyword">const</span> twObj = wObj.<span class="property">todayWeather</span></span><br><span class="line">    <span class="keyword">const</span> todayWStr = <span class="string">`&lt;div class=&quot;range-box&quot;&gt;</span></span><br><span class="line"><span class="string">    &lt;span&gt;今天：&lt;/span&gt;</span></span><br><span class="line"><span class="string">    &lt;span class=&quot;range&quot;&gt;</span></span><br><span class="line"><span class="string">      &lt;span class=&quot;weather&quot;&gt;<span class="subst">$&#123;twObj.weather&#125;</span>&lt;/span&gt;</span></span><br><span class="line"><span class="string">      &lt;span class=&quot;temNight&quot;&gt;<span class="subst">$&#123;twObj.temNight&#125;</span>&lt;/span&gt;</span></span><br><span class="line"><span class="string">      &lt;span&gt;-&lt;/span&gt;</span></span><br><span class="line"><span class="string">      &lt;span class=&quot;temDay&quot;&gt;<span class="subst">$&#123;twObj.temDay&#125;</span>&lt;/span&gt;</span></span><br><span class="line"><span class="string">      &lt;span&gt;℃&lt;/span&gt;</span></span><br><span class="line"><span class="string">    &lt;/span&gt;</span></span><br><span class="line"><span class="string">  &lt;/div&gt;</span></span><br><span class="line"><span class="string">  &lt;ul class=&quot;sun-list&quot;&gt;</span></span><br><span class="line"><span class="string">    &lt;li&gt;</span></span><br><span class="line"><span class="string">      &lt;span&gt;紫外线&lt;/span&gt;</span></span><br><span class="line"><span class="string">      &lt;span class=&quot;ultraviolet&quot;&gt;<span class="subst">$&#123;twObj.ultraviolet&#125;</span>&lt;/span&gt;</span></span><br><span class="line"><span class="string">    &lt;/li&gt;</span></span><br><span class="line"><span class="string">    &lt;li&gt;</span></span><br><span class="line"><span class="string">      &lt;span&gt;湿度&lt;/span&gt;</span></span><br><span class="line"><span class="string">      &lt;span class=&quot;humidity&quot;&gt;<span class="subst">$&#123;twObj.humidity&#125;</span>&lt;/span&gt;%</span></span><br><span class="line"><span class="string">    &lt;/li&gt;</span></span><br><span class="line"><span class="string">    &lt;li&gt;</span></span><br><span class="line"><span class="string">      &lt;span&gt;日出&lt;/span&gt;</span></span><br><span class="line"><span class="string">      &lt;span class=&quot;sunriseTime&quot;&gt;<span class="subst">$&#123;twObj.sunriseTime&#125;</span>&lt;/span&gt;</span></span><br><span class="line"><span class="string">    &lt;/li&gt;</span></span><br><span class="line"><span class="string">    &lt;li&gt;</span></span><br><span class="line"><span class="string">      &lt;span&gt;日落&lt;/span&gt;</span></span><br><span class="line"><span class="string">      &lt;span class=&quot;sunsetTime&quot;&gt;<span class="subst">$&#123;twObj.sunsetTime&#125;</span>&lt;/span&gt;</span></span><br><span class="line"><span class="string">    &lt;/li&gt;</span></span><br><span class="line"><span class="string">  &lt;/ul&gt;`</span></span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.today-weather&#x27;</span>).<span class="property">innerHTML</span> = todayWStr</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 7日天气预报数据展示</span></span><br><span class="line">    <span class="keyword">const</span> dayForecast = wObj.<span class="property">dayForecast</span></span><br><span class="line">    <span class="keyword">const</span> dayForecastStr = dayForecast.<span class="title function_">map</span>(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="string">`&lt;li class=&quot;item&quot;&gt;</span></span><br><span class="line"><span class="string">      &lt;div class=&quot;date-box&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;span class=&quot;dateFormat&quot;&gt;<span class="subst">$&#123;item.dateFormat&#125;</span>&lt;/span&gt;</span></span><br><span class="line"><span class="string">        &lt;span class=&quot;date&quot;&gt;<span class="subst">$&#123;item.date&#125;</span>&lt;/span&gt;</span></span><br><span class="line"><span class="string">      &lt;/div&gt;</span></span><br><span class="line"><span class="string">      &lt;img src=&quot;<span class="subst">$&#123;item.weatherImg&#125;</span>&quot; alt=&quot;&quot; class=&quot;weatherImg&quot;&gt;</span></span><br><span class="line"><span class="string">      &lt;span class=&quot;weather&quot;&gt;<span class="subst">$&#123;item.weather&#125;</span>&lt;/span&gt;</span></span><br><span class="line"><span class="string">      &lt;div class=&quot;temp&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;span class=&quot;temNight&quot;&gt;<span class="subst">$&#123;item.temNight&#125;</span>&lt;/span&gt;-</span></span><br><span class="line"><span class="string">        &lt;span class=&quot;temDay&quot;&gt;<span class="subst">$&#123;item.temDay&#125;</span>&lt;/span&gt;</span></span><br><span class="line"><span class="string">        &lt;span&gt;℃&lt;/span&gt;</span></span><br><span class="line"><span class="string">      &lt;/div&gt;</span></span><br><span class="line"><span class="string">      &lt;div class=&quot;wind&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;span class=&quot;windDirection&quot;&gt;<span class="subst">$&#123;item.windDirection&#125;</span>&lt;/span&gt;</span></span><br><span class="line"><span class="string">        &lt;span class=&quot;windPower&quot;&gt;<span class="subst">$&#123;item.windPower&#125;</span>&lt;/span&gt;</span></span><br><span class="line"><span class="string">      &lt;/div&gt;</span></span><br><span class="line"><span class="string">    &lt;/li&gt;`</span></span><br><span class="line">    &#125;).<span class="title function_">join</span>(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    <span class="comment">// console.log(dayForecastStr)</span></span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.week-wrap&#x27;</span>).<span class="property">innerHTML</span> = dayForecastStr</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 默认进入网页-就要获取天气数据（北京市城市编码：&#x27;110100&#x27;）</span></span><br><span class="line"><span class="title function_">getWeather</span>(<span class="string">&#x27;110100&#x27;</span>)</span><br></pre></td></tr></table></figure></li>
</ol>
<h3 id="小结-39"><a href="#小结-39" class="headerlink" title="小结"></a>小结</h3><ol>
<li><p>做完这个项目会带来什么收货?</p>
<details>
<summary>答案</summary>
<ul>
<li>可以做一个真正有意义的业务，查看城市的天气预报，测试自己封装的 myAxios 函数是否好用</li>
</ul>
</details></li>
</ol>
<h2 id="13-案例-天气预报-搜索城市列表"><a href="#13-案例-天气预报-搜索城市列表" class="headerlink" title="13.案例_天气预报-搜索城市列表"></a>13.案例_天气预报-搜索城市列表</h2><h3 id="目标-40"><a href="#目标-40" class="headerlink" title="目标"></a>目标</h3><p>根据关键字，展示匹配的城市列表</p>
<h3 id="讲解-40"><a href="#讲解-40" class="headerlink" title="讲解"></a>讲解</h3><ol>
<li><p>介绍本视频要完成的效果：搜索匹配关键字相关城市名字，展示城市列表即可</p>
<img data-src="/2024/11/19/AJAX%E5%AD%A6%E4%B9%A0/image-20230222133553010.png" class="" title="image-20230222133553010">
</li>
<li><p>步骤</p>
<ol>
<li>绑定 input 事件，获取关键字</li>
<li>获取展示城市列表数据</li>
</ol>
</li>
<li><p>核心代码如下：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 目标2：搜索城市列表</span></span><br><span class="line"><span class="comment"> *  2.1 绑定input事件，获取关键字</span></span><br><span class="line"><span class="comment"> *  2.2 获取展示城市列表数据</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">// 2.1 绑定input事件，获取关键字</span></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.search-city&#x27;</span>).<span class="title function_">addEventListener</span>(<span class="string">&#x27;input&#x27;</span>, <span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(e.<span class="property">target</span>.<span class="property">value</span>)</span><br><span class="line">  <span class="comment">// 2.2 获取展示城市列表数据</span></span><br><span class="line">  <span class="title function_">myAxios</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">&#x27;http://hmajax.itheima.net/api/weather/city&#x27;</span>,</span><br><span class="line">    <span class="attr">params</span>: &#123;</span><br><span class="line">      <span class="attr">city</span>: e.<span class="property">target</span>.<span class="property">value</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;).<span class="title function_">then</span>(<span class="function"><span class="params">result</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(result)</span><br><span class="line">    <span class="keyword">const</span> liStr = result.<span class="property">data</span>.<span class="title function_">map</span>(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="string">`&lt;li class=&quot;city-item&quot; data-code=&quot;<span class="subst">$&#123;item.code&#125;</span>&quot;&gt;<span class="subst">$&#123;item.name&#125;</span>&lt;/li&gt;`</span></span><br><span class="line">    &#125;).<span class="title function_">join</span>(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(liStr)</span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.search-list&#x27;</span>).<span class="property">innerHTML</span> = liStr</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li>
</ol>
<h3 id="小结-40"><a href="#小结-40" class="headerlink" title="小结"></a>小结</h3><ol>
<li><p>监听输入框实时改变的事件是什么?</p>
<details>
<summary>答案</summary>
<ul>
<li>input事件</li>
</ul>
</details></li>
</ol>
<h2 id="14-案例-天气预报-展示城市天气"><a href="#14-案例-天气预报-展示城市天气" class="headerlink" title="14.案例_天气预报-展示城市天气"></a>14.案例_天气预报-展示城市天气</h2><h3 id="目标-41"><a href="#目标-41" class="headerlink" title="目标"></a>目标</h3><p>点击搜索框列表城市名字，切换对应城市天气数据</p>
<h3 id="讲解-41"><a href="#讲解-41" class="headerlink" title="讲解"></a>讲解</h3><ol>
<li><p>介绍本视频要完成的效果：点击城市列表名字，切换当前页面天气数据</p>
<img data-src="/2024/11/19/AJAX%E5%AD%A6%E4%B9%A0/image-20230222134653884.png" class="" title="image-20230222134653884">
</li>
<li><p>步骤</p>
<ol>
<li>检测搜索列表点击事件，获取城市 code 值</li>
<li>复用获取展示城市天气函数</li>
</ol>
</li>
<li><p>核心代码如下：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 目标3：切换城市天气</span></span><br><span class="line"><span class="comment"> *  3.1 绑定城市点击事件，获取城市code值</span></span><br><span class="line"><span class="comment"> *  3.2 调用获取并展示天气的函数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">// 3.1 绑定城市点击事件，获取城市code值</span></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.search-list&#x27;</span>).<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="function"><span class="params">e</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (e.<span class="property">target</span>.<span class="property">classList</span>.<span class="title function_">contains</span>(<span class="string">&#x27;city-item&#x27;</span>)) &#123;</span><br><span class="line">    <span class="comment">// 只有点击城市li才会走这里</span></span><br><span class="line">    <span class="keyword">const</span> cityCode = e.<span class="property">target</span>.<span class="property">dataset</span>.<span class="property">code</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(cityCode)</span><br><span class="line">    <span class="comment">// 3.2 调用获取并展示天气的函数</span></span><br><span class="line">    <span class="title function_">getWeather</span>(cityCode)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li>
</ol>
<h3 id="小结-41"><a href="#小结-41" class="headerlink" title="小结"></a>小结</h3><ol>
<li><p>这次我们获取城市天气，传递的是城市名字还是 code 值?</p>
<details>
<summary>答案</summary>
<ul>
<li>看后端要求传递什么，就传什么即可</li>
</ul>
</details></li>
</ol>
<h2 id="今日重点-必须会-2"><a href="#今日重点-必须会-2" class="headerlink" title="今日重点(必须会)"></a>今日重点(必须会)</h2><ol>
<li>了解 AJAX 原理之 XMLHttpRequest（XHR）相关语法</li>
<li>了解 Promise 的作用和三种状态</li>
<li>了解 axios 内部运作的过程</li>
<li>完成案例-天气预报</li>
</ol>
<h2 id="今日作业-必完成-2"><a href="#今日作业-必完成-2" class="headerlink" title="今日作业(必完成)"></a>今日作业(必完成)</h2><p>参考作业文件夹作用</p>
<h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><ol>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/Guide/AJAX/Getting_Started">Ajax原生-mdn</a></li>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/XMLHttpRequest/Synchronous_and_Asynchronous_Requests">同步异步-mdn</a></li>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Glossary/Callback_function">回调函数-mdn</a></li>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise">Promise-mdn</a></li>
</ol>
<h1 id="Day04-AJAX进阶"><a href="#Day04-AJAX进阶" class="headerlink" title="Day04_AJAX进阶"></a>Day04_AJAX进阶</h1><h2 id="知识点自测-3"><a href="#知识点自测-3" class="headerlink" title="知识点自测"></a>知识点自测</h2><ol>
<li><p>看如下标签回答如下问题？</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;北京&quot;</span>&gt;</span>北京市<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;南京&quot;</span>&gt;</span>南京市<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;天津&quot;</span>&gt;</span>天津市<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li><p>当选中第二个 option 时, JS 中获取下拉菜单 select 标签的 value 属性的值是多少?</p>
<details>
<summary>答案</summary>
<ul>
<li>南京</li>
</ul>
</details>
</li>
<li><p>页面上看到的是北京, 还是北京市等？</p>
<details>
<summary>答案</summary>
<ul>
<li>北京市</li>
</ul>
</details></li>
</ul>
</li>
<li><p>我给 select 标签的 value 属性赋予”南京”会有什么效果？</p>
<details>
<summary>答案</summary>
<ul>
<li>什么效果都没有, 没有没有一个option选项的value能匹配</li>
</ul>
</details></li>
</ol>
<h2 id="目录-3"><a href="#目录-3" class="headerlink" title="目录"></a>目录</h2><ul>
<li>同步代码和异步代码</li>
<li>回调函数地狱和 Promise 链式调用</li>
<li>async 和 await 使用</li>
<li>事件循环-EventLoop</li>
<li>Promise.all 静态方法</li>
<li>案例 - 商品分类</li>
<li>案例 - 学习反馈</li>
</ul>
<h2 id="学习目标-3"><a href="#学习目标-3" class="headerlink" title="学习目标"></a>学习目标</h2><ol>
<li>区分异步代码，回调函数地狱问题和所有解决防范（Promise 链式调用）</li>
<li>掌握 async 和 await 使用</li>
<li>掌握 EventLoop 的概念</li>
<li>了解 Promise.all 静态方法作用</li>
<li>完成省市区切换效果</li>
</ol>
<h2 id="01-同步代码和异步代码"><a href="#01-同步代码和异步代码" class="headerlink" title="01.同步代码和异步代码"></a>01.同步代码和异步代码</h2><h3 id="目标-42"><a href="#目标-42" class="headerlink" title="目标"></a>目标</h3><p>能够区分出哪些是异步代码</p>
<h3 id="讲解-42"><a href="#讲解-42" class="headerlink" title="讲解"></a>讲解</h3><ol>
<li><p><a href="%5Bhttps://developer.mozilla.org/zh-CN/docs/Learn/JavaScript/Asynchronous/Introducing#%E5%90%8C%E6%AD%A5%E7%BC%96%E7%A8%8B%5D(https://developer.mozilla.org/zh-CN/docs/Learn/JavaScript/Asynchronous/Introducing)">同步代码</a>：逐行执行，需原地等待结果后，才继续向下执行</p>
</li>
<li><p><a href="https://developer.mozilla.org/zh-CN/docs/Learn/JavaScript/Asynchronous/Introducing">异步代码</a>：调用后耗时，不阻塞代码继续执行（不必原地等待），在将来完成后触发回调函数传递结果</p>
</li>
<li><p>回答代码打印顺序：发现异步代码接收结果，使用的都是回调函数</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> result = <span class="number">0</span> + <span class="number">1</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(result)</span><br><span class="line"><span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">2</span>)</span><br><span class="line">&#125;, <span class="number">2000</span>)</span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.btn&#x27;</span>).<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">3</span>)</span><br><span class="line">&#125;)</span><br><span class="line"><span class="variable language_">document</span>.<span class="property">body</span>.<span class="property">style</span>.<span class="property">backgroundColor</span> = <span class="string">&#x27;pink&#x27;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">4</span>)</span><br></pre></td></tr></table></figure>

<blockquote>
<p>结果：1， 4， 2</p>
<p>按钮点击一次打印一次 3</p>
</blockquote>
</li>
</ol>
<h3 id="小结-42"><a href="#小结-42" class="headerlink" title="小结"></a>小结</h3><ol>
<li><p>什么是同步代码?</p>
<details>
<summary>答案</summary>
<ul>
<li>逐行执行，原地等待结果后，才继续向下执行</li>
</ul>
</details>
</li>
<li><p>什么是异步代码?</p>
<details>
<summary>答案</summary>
<ul>
<li>调用后耗时，不阻塞代码执行，将来完成后触发回调函数</li>
</ul>
</details>
</li>
<li><p>JS 中有哪些异步代码?</p>
<details>
<summary>答案</summary>
<ul>
<li>setTimeout / setInterval，事件，AJAX</li>
</ul>
</details>
</li>
<li><p>异步代码如何接收结果?</p>
<details>
<summary>答案</summary>
<ul>
<li>依靠回调函数来接收</li>
</ul>
</details></li>
</ol>
<h2 id="02-回调函数地狱"><a href="#02-回调函数地狱" class="headerlink" title="02.回调函数地狱"></a>02.回调函数地狱</h2><h3 id="目标-43"><a href="#目标-43" class="headerlink" title="目标"></a>目标</h3><p>了解回调函数地狱的概念和缺点</p>
<h3 id="讲解-43"><a href="#讲解-43" class="headerlink" title="讲解"></a>讲解</h3><ol>
<li><p>需求：展示默认第一个省，第一个城市，第一个地区在下拉菜单中</p>
<img data-src="/2024/11/19/AJAX%E5%AD%A6%E4%B9%A0/image-20230222173109762.png" class="" title="image-20230222173109762">
</li>
<li><p>概念：在回调函数中嵌套回调函数，一直嵌套下去就形成了回调函数地狱</p>
</li>
<li><p>缺点：可读性差，异常无法捕获，耦合性严重，牵一发动全身</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="title function_">axios</span>(&#123; <span class="attr">url</span>: <span class="string">&#x27;http://hmajax.itheima.net/api/province&#x27;</span> &#125;).<span class="title function_">then</span>(<span class="function"><span class="params">result</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> pname = result.<span class="property">data</span>.<span class="property">list</span>[<span class="number">0</span>]</span><br><span class="line">  <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.province&#x27;</span>).<span class="property">innerHTML</span> = pname</span><br><span class="line">  <span class="comment">// 获取第一个省份默认下属的第一个城市名字</span></span><br><span class="line">  <span class="title function_">axios</span>(&#123; <span class="attr">url</span>: <span class="string">&#x27;http://hmajax.itheima.net/api/city&#x27;</span>, <span class="attr">params</span>: &#123; pname &#125; &#125;).<span class="title function_">then</span>(<span class="function"><span class="params">result</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> cname = result.<span class="property">data</span>.<span class="property">list</span>[<span class="number">0</span>]</span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.city&#x27;</span>).<span class="property">innerHTML</span> = cname</span><br><span class="line">    <span class="comment">// 获取第一个城市默认下属第一个地区名字</span></span><br><span class="line">    <span class="title function_">axios</span>(&#123; <span class="attr">url</span>: <span class="string">&#x27;http://hmajax.itheima.net/api/area&#x27;</span>, <span class="attr">params</span>: &#123; pname, cname &#125; &#125;).<span class="title function_">then</span>(<span class="function"><span class="params">result</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.area&#x27;</span>).<span class="property">innerHTML</span> = result.<span class="property">data</span>.<span class="property">list</span>[<span class="number">0</span>]</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li>
</ol>
<h3 id="小结-43"><a href="#小结-43" class="headerlink" title="小结"></a>小结</h3><ol>
<li><p>什么是回调函数地狱?</p>
<details>
<summary>答案</summary>
<ul>
<li>在回调函数一直向下嵌套回调函数，形成回调函数地狱</li>
</ul>
</details>
</li>
<li><p>回调函数地狱问题?</p>
<details>
<summary>答案</summary>
<ul>
<li>可读性差，异常捕获困难，耦合性严重</li>
</ul>
</details></li>
</ol>
<h2 id="03-Promise-链式调用"><a href="#03-Promise-链式调用" class="headerlink" title="03.Promise-链式调用"></a>03.Promise-链式调用</h2><h3 id="目标-44"><a href="#目标-44" class="headerlink" title="目标"></a>目标</h3><p>了解 Promise 链式调用特点和语法</p>
<h3 id="讲解-44"><a href="#讲解-44" class="headerlink" title="讲解"></a>讲解</h3><ol>
<li><p>概念：依靠 then() 方法会返回一个新生成的 Promise 对象特性，继续串联下一环任务，直到结束</p>
</li>
<li><p>细节：then() 回调函数中的返回值，会影响新生成的 Promise 对象最终状态和结果</p>
</li>
<li><p>好处：通过链式调用，解决回调函数嵌套问题</p>
<img data-src="/2024/11/19/AJAX%E5%AD%A6%E4%B9%A0/image-20230222173851738.png" class="" title="image-20230222173851738">
</li>
<li><p>按照图解，编写核心代码：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 目标：掌握Promise的链式调用</span></span><br><span class="line"><span class="comment"> * 需求：把省市的嵌套结构，改成链式调用的线性结构</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">// 1. 创建Promise对象-模拟请求省份名字</span></span><br><span class="line"><span class="keyword">const</span> p = <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="title function_">resolve</span>(<span class="string">&#x27;北京市&#x27;</span>)</span><br><span class="line">  &#125;, <span class="number">2000</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2. 获取省份名字</span></span><br><span class="line"><span class="keyword">const</span> p2 = p.<span class="title function_">then</span>(<span class="function"><span class="params">result</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(result)</span><br><span class="line">  <span class="comment">// 3. 创建Promise对象-模拟请求城市名字</span></span><br><span class="line">  <span class="comment">// return Promise对象最终状态和结果，影响到新的Promise对象</span></span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="title function_">resolve</span>(result + <span class="string">&#x27;--- 北京&#x27;</span>)</span><br><span class="line">    &#125;, <span class="number">2000</span>)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 4. 获取城市名字</span></span><br><span class="line">p2.<span class="title function_">then</span>(<span class="function"><span class="params">result</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(result)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// then()原地的结果是一个新的Promise对象</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(p2 === p)</span><br></pre></td></tr></table></figure></li>
</ol>
<h3 id="小结-44"><a href="#小结-44" class="headerlink" title="小结"></a>小结</h3><ol>
<li><p>什么是 Promise 的链式调用?</p>
<details>
<summary>答案</summary>
<ul>
<li>使用 then 方法返回新 Promise 对象特性，一直串联下去</li>
</ul>
</details>
</li>
<li><p>then 回调函数中，return 的值会传给哪里?</p>
<details>
<summary>答案</summary>
<ul>
<li>传给 then 方法生成的新 Promise 对象</li>
</ul>
</details>
</li>
<li><p>Promise 链式调用有什么用?</p>
<details>
<summary>答案</summary>
<ul>
<li>解决回调函数嵌套问题</li>
</ul>
</details></li>
</ol>
<h2 id="04-Promise-链式调用-解决回调地狱"><a href="#04-Promise-链式调用-解决回调地狱" class="headerlink" title="04.Promise-链式调用_解决回调地狱"></a>04.Promise-链式调用_解决回调地狱</h2><h3 id="目标-45"><a href="#目标-45" class="headerlink" title="目标"></a>目标</h3><p>了解 Promise 链式调用解决回调地狱</p>
<h3 id="讲解-45"><a href="#讲解-45" class="headerlink" title="讲解"></a>讲解</h3><ol>
<li><p>目标：使用 Promise 链式调用，解决回调函数地狱问题</p>
</li>
<li><p>做法：每个 Promise 对象中管理一个异步任务，用 then 返回 Promise 对象，串联起来</p>
<img data-src="/2024/11/19/AJAX%E5%AD%A6%E4%B9%A0/image-20230222174946534.png" class="" title="image-20230222174946534">
</li>
<li><p>按照图解思路，编写核心代码：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 目标：把回调函数嵌套代码，改成Promise链式调用结构</span></span><br><span class="line"><span class="comment"> * 需求：获取默认第一个省，第一个市，第一个地区并展示在下拉菜单中</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">let</span> pname = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="comment">// 1. 得到-获取省份Promise对象</span></span><br><span class="line"><span class="title function_">axios</span>(&#123;<span class="attr">url</span>: <span class="string">&#x27;http://hmajax.itheima.net/api/province&#x27;</span>&#125;).<span class="title function_">then</span>(<span class="function"><span class="params">result</span> =&gt;</span> &#123;</span><br><span class="line">  pname = result.<span class="property">data</span>.<span class="property">list</span>[<span class="number">0</span>]</span><br><span class="line">  <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.province&#x27;</span>).<span class="property">innerHTML</span> = pname</span><br><span class="line">  <span class="comment">// 2. 得到-获取城市Promise对象</span></span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">axios</span>(&#123;<span class="attr">url</span>: <span class="string">&#x27;http://hmajax.itheima.net/api/city&#x27;</span>, <span class="attr">params</span>: &#123; pname &#125;&#125;)</span><br><span class="line">&#125;).<span class="title function_">then</span>(<span class="function"><span class="params">result</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> cname = result.<span class="property">data</span>.<span class="property">list</span>[<span class="number">0</span>]</span><br><span class="line">  <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.city&#x27;</span>).<span class="property">innerHTML</span> = cname</span><br><span class="line">  <span class="comment">// 3. 得到-获取地区Promise对象</span></span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">axios</span>(&#123;<span class="attr">url</span>: <span class="string">&#x27;http://hmajax.itheima.net/api/area&#x27;</span>, <span class="attr">params</span>: &#123; pname, cname &#125;&#125;)</span><br><span class="line">&#125;).<span class="title function_">then</span>(<span class="function"><span class="params">result</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(result)</span><br><span class="line">  <span class="keyword">const</span> areaName = result.<span class="property">data</span>.<span class="property">list</span>[<span class="number">0</span>]</span><br><span class="line">  <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.area&#x27;</span>).<span class="property">innerHTML</span> = areaName</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li>
</ol>
<h3 id="小结-45"><a href="#小结-45" class="headerlink" title="小结"></a>小结</h3><ol>
<li><p>Promise 链式调用如何解决回调函数地狱?</p>
<details>
<summary>答案</summary>
<ul>
<li>then 的回调函数中 return Promise对象，影响当前新 Promise 对象的值</li>
</ul>
</details></li>
</ol>
<h2 id="05-async-函数和-await"><a href="#05-async-函数和-await" class="headerlink" title="05.async 函数和 await"></a>05.async 函数和 await</h2><h3 id="目标-46"><a href="#目标-46" class="headerlink" title="目标"></a>目标</h3><p>掌握 async 和 await 语法来编写简洁的异步代码</p>
<h3 id="讲解-46"><a href="#讲解-46" class="headerlink" title="讲解"></a>讲解</h3><ol>
<li><p>概念：在 async 函数内，使用 await 关键字取代 then 函数，等待获取 Promise 对象成功状态的结果值 </p>
</li>
<li><p>做法：使用 async 和 await 解决回调地狱问题</p>
</li>
<li><p>核心代码：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 目标：掌握async和await语法，解决回调函数地狱</span></span><br><span class="line"><span class="comment"> * 概念：在async函数内，使用await关键字，获取Promise对象&quot;成功状态&quot;结果值</span></span><br><span class="line"><span class="comment"> * 注意：await必须用在async修饰的函数内（await会阻止&quot;异步函数内&quot;代码继续执行，原地等待结果）</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">// 1. 定义async修饰函数</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">getData</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="comment">// 2. await等待Promise对象成功的结果</span></span><br><span class="line">  <span class="keyword">const</span> pObj = <span class="keyword">await</span> <span class="title function_">axios</span>(&#123;<span class="attr">url</span>: <span class="string">&#x27;http://hmajax.itheima.net/api/province&#x27;</span>&#125;)</span><br><span class="line">  <span class="keyword">const</span> pname = pObj.<span class="property">data</span>.<span class="property">list</span>[<span class="number">0</span>]</span><br><span class="line">  <span class="keyword">const</span> cObj = <span class="keyword">await</span> <span class="title function_">axios</span>(&#123;<span class="attr">url</span>: <span class="string">&#x27;http://hmajax.itheima.net/api/city&#x27;</span>, <span class="attr">params</span>: &#123; pname &#125;&#125;)</span><br><span class="line">  <span class="keyword">const</span> cname = cObj.<span class="property">data</span>.<span class="property">list</span>[<span class="number">0</span>]</span><br><span class="line">  <span class="keyword">const</span> aObj = <span class="keyword">await</span> <span class="title function_">axios</span>(&#123;<span class="attr">url</span>: <span class="string">&#x27;http://hmajax.itheima.net/api/area&#x27;</span>, <span class="attr">params</span>: &#123; pname, cname &#125;&#125;)</span><br><span class="line">  <span class="keyword">const</span> areaName = aObj.<span class="property">data</span>.<span class="property">list</span>[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.province&#x27;</span>).<span class="property">innerHTML</span> = pname</span><br><span class="line">  <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.city&#x27;</span>).<span class="property">innerHTML</span> = cname</span><br><span class="line">  <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.area&#x27;</span>).<span class="property">innerHTML</span> = areaName</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">getData</span>()</span><br></pre></td></tr></table></figure>

<blockquote>
<p>使用 await 替代 then 的方法</p>
</blockquote>
</li>
</ol>
<h3 id="小结-46"><a href="#小结-46" class="headerlink" title="小结"></a>小结</h3><ol>
<li><p>await 的作用是什么？</p>
<details>
<summary>答案</summary>
<ul>
<li>替代 then 方法来提取 Promise 对象成功状态的结果</li>
</ul>
</details></li>
</ol>
<h2 id="06-async-函数和-await-捕获错误"><a href="#06-async-函数和-await-捕获错误" class="headerlink" title="06.async 函数和 await 捕获错误"></a>06.async 函数和 await 捕获错误</h2><h3 id="目标-47"><a href="#目标-47" class="headerlink" title="目标"></a>目标</h3><p>了解用 try catch 捕获同步流程的错误</p>
<h3 id="讲解-47"><a href="#讲解-47" class="headerlink" title="讲解"></a>讲解</h3><ol>
<li><p>try 和 catch 的作用：语句标记要尝试的语句块，并指定一个出现异常时抛出的响应</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">  <span class="comment">// 要执行的代码</span></span><br><span class="line">&#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">  <span class="comment">// error 接收的是，错误消息</span></span><br><span class="line">  <span class="comment">// try 里代码，如果有错误，直接进入这里执行</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>try 里有报错的代码，会立刻跳转到 catch 中</p>
</blockquote>
</li>
<li><p>尝试把代码中 url 地址写错，运行观察 try catch 的捕获错误信息能力</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 目标：async和await_错误捕获</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">getData</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="comment">// 1. try包裹可能产生错误的代码</span></span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> pObj = <span class="keyword">await</span> <span class="title function_">axios</span>(&#123; <span class="attr">url</span>: <span class="string">&#x27;http://hmajax.itheima.net/api/province&#x27;</span> &#125;)</span><br><span class="line">    <span class="keyword">const</span> pname = pObj.<span class="property">data</span>.<span class="property">list</span>[<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">const</span> cObj = <span class="keyword">await</span> <span class="title function_">axios</span>(&#123; <span class="attr">url</span>: <span class="string">&#x27;http://hmajax.itheima.net/api/city&#x27;</span>, <span class="attr">params</span>: &#123; pname &#125; &#125;)</span><br><span class="line">    <span class="keyword">const</span> cname = cObj.<span class="property">data</span>.<span class="property">list</span>[<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">const</span> aObj = <span class="keyword">await</span> <span class="title function_">axios</span>(&#123; <span class="attr">url</span>: <span class="string">&#x27;http://hmajax.itheima.net/api/area&#x27;</span>, <span class="attr">params</span>: &#123; pname, cname &#125; &#125;)</span><br><span class="line">    <span class="keyword">const</span> areaName = aObj.<span class="property">data</span>.<span class="property">list</span>[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.province&#x27;</span>).<span class="property">innerHTML</span> = pname</span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.city&#x27;</span>).<span class="property">innerHTML</span> = cname</span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.area&#x27;</span>).<span class="property">innerHTML</span> = areaName</span><br><span class="line">  &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">    <span class="comment">// 2. 接着调用catch块，接收错误信息</span></span><br><span class="line">    <span class="comment">// 如果try里某行代码报错后，try中剩余的代码不会执行了</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">dir</span>(error)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">getData</span>()</span><br></pre></td></tr></table></figure></li>
</ol>
<h3 id="小结-47"><a href="#小结-47" class="headerlink" title="小结"></a>小结</h3><ol>
<li><p>try 和 catch 有什么作用？</p>
<details>
<summary>答案</summary>
<ul>
<li>捕获同步流程的代码报错信息</li>
</ul>
</details></li>
</ol>
<h2 id="07-事件循环"><a href="#07-事件循环" class="headerlink" title="07.事件循环"></a>07.事件循环</h2><h3 id="目标-48"><a href="#目标-48" class="headerlink" title="目标"></a>目标</h3><p>掌握事件循环模型是如何执行异步代码的</p>
<h3 id="讲解-48"><a href="#讲解-48" class="headerlink" title="讲解"></a>讲解</h3><ol>
<li><p>事件循环（EventLoop）：掌握后知道 JS 是如何安排和运行代码的</p>
<blockquote>
<p>请回答下面 2 段代码打印的结果，并说明原因</p>
</blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">1</span>)</span><br><span class="line"><span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">2</span>)</span><br><span class="line">&#125;, <span class="number">2000</span>)</span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">1</span>)</span><br><span class="line"><span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">2</span>)</span><br><span class="line">&#125;, <span class="number">0</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">3</span>)</span><br></pre></td></tr></table></figure>


</li>
<li><p>作用：事件循环负责执行代码，收集和处理事件以及执行队列中的子任务</p>
</li>
<li><p>原因：JavaScript 单线程（某一刻只能执行一行代码），为了让耗时代码不阻塞其他代码运行，设计了事件循环模型</p>
</li>
<li><p>概念：执行代码和收集异步任务的模型，在调用栈空闲，反复调用任务队列里回调函数的执行机制，就叫事件循环</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 目标：阅读并回答执行的顺序结果</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">1</span>)</span><br><span class="line"><span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">2</span>)</span><br><span class="line">&#125;, <span class="number">0</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">3</span>)</span><br><span class="line"><span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">4</span>)</span><br><span class="line">&#125;, <span class="number">2000</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">5</span>)</span><br></pre></td></tr></table></figure>

<blockquote>
<p>具体运行过程，请参考 PPT 动画和视频讲解</p>
</blockquote>
<img data-src="/2024/11/19/AJAX%E5%AD%A6%E4%B9%A0/image-20230222182338992.png" class="" title="image-20230222182338992"></li>
</ol>
<h3 id="小结-48"><a href="#小结-48" class="headerlink" title="小结"></a>小结</h3><ol>
<li><p>什么是事件循环？</p>
<details>
<summary>答案</summary>
<ul>
<li>执行代码和收集异步任务，在调用栈空闲时，反复调用任务队列里回调函数执行机制
</li>
</ul>
</details>
</li>
<li><p>为什么有事件循环？</p>
<details>
<summary>答案</summary>
<ul>
<li>JavaScript 是单线程的，为了不阻塞 JS 引擎，设计执行代码的模型
</li>
</ul>
</details>
</li>
<li><p>JavaScript 内代码如何执行？</p>
<details>
<summary>答案</summary>
<ul>
<li> 执行同步代码，遇到异步代码交给宿主浏览器环境执行
 异步有了结果后，把回调函数放入任务队列排队
 当调用栈空闲后，反复调用任务队列里的回调函数
</li>
</ul>
</details></li>
</ol>
<h2 id="08-事件循环-练习"><a href="#08-事件循环-练习" class="headerlink" title="08.事件循环-练习"></a>08.事件循环-练习</h2><h3 id="目标-49"><a href="#目标-49" class="headerlink" title="目标"></a>目标</h3><p>了解事件循环的执行模型</p>
<h3 id="讲解-49"><a href="#讲解-49" class="headerlink" title="讲解"></a>讲解</h3><ol>
<li><p>需求：请根据掌握的事件循环的模型概念，分析代码执行过程</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 目标：阅读并回答执行的顺序结果</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">1</span>)</span><br><span class="line"><span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">2</span>)</span><br><span class="line">&#125;, <span class="number">0</span>)</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">myFn</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">3</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">ajaxFn</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> xhr = <span class="keyword">new</span> <span class="title class_">XMLHttpRequest</span>()</span><br><span class="line">  xhr.<span class="title function_">open</span>(<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;http://hmajax.itheima.net/api/province&#x27;</span>)</span><br><span class="line">  xhr.<span class="title function_">addEventListener</span>(<span class="string">&#x27;loadend&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">4</span>)</span><br><span class="line">  &#125;)</span><br><span class="line">  xhr.<span class="title function_">send</span>()</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">1</span>; i++) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">5</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">ajaxFn</span>()</span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">6</span>)</span><br><span class="line">&#125;)</span><br><span class="line"><span class="title function_">myFn</span>()</span><br></pre></td></tr></table></figure>



<img data-src="/2024/11/19/AJAX%E5%AD%A6%E4%B9%A0/image-20230222183656761.png" class="" title="image-20230222183656761"></li>
</ol>
<blockquote>
<p>结果：1 5 3 2 4 点击一次document就会执行一次打印6</p>
</blockquote>
<h3 id="小结-49"><a href="#小结-49" class="headerlink" title="小结"></a>小结</h3><p>暂无</p>
<h2 id="09-宏任务与微任务"><a href="#09-宏任务与微任务" class="headerlink" title="09.宏任务与微任务"></a>09.宏任务与微任务</h2><h3 id="目标-50"><a href="#目标-50" class="headerlink" title="目标"></a>目标</h3><p>掌握微任务和宏任务的概念和区分</p>
<h3 id="讲解-50"><a href="#讲解-50" class="headerlink" title="讲解"></a>讲解</h3><ol>
<li><p>ES6 之后引入了 Promise 对象， 让 JS 引擎也可以发起异步任务</p>
</li>
<li><p>异步任务划分为了</p>
<ul>
<li>宏任务：由浏览器环境执行的异步代码</li>
<li>微任务：由 JS 引擎环境执行的异步代码</li>
</ul>
</li>
<li><p>宏任务和微任务具体划分：</p>
<img data-src="/2024/11/19/AJAX%E5%AD%A6%E4%B9%A0/image-20230222184920343.png" class="" title="image-20230222184920343">
</li>
<li><p>事件循环模型</p>
<blockquote>
<p>具体运行效果，参考 PPT 动画或者视频</p>
</blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 目标：阅读并回答打印的执行顺序</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">1</span>)</span><br><span class="line"><span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">2</span>)</span><br><span class="line">&#125;, <span class="number">0</span>)</span><br><span class="line"><span class="keyword">const</span> p = <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="title function_">resolve</span>(<span class="number">3</span>)</span><br><span class="line">&#125;)</span><br><span class="line">p.<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(res)</span><br><span class="line">&#125;)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">4</span>)</span><br></pre></td></tr></table></figure>



<img data-src="/2024/11/19/AJAX%E5%AD%A6%E4%B9%A0/image-20230222184949605.png" class="" title="image-20230222184949605"></li>
</ol>
<blockquote>
<p>注意：宏任务每次在执行同步代码时，产生微任务队列，清空微任务队列任务后，微任务队列空间释放！</p>
<p>下一次宏任务执行时，遇到微任务代码，才会再次申请微任务队列空间放入回调函数消息排队</p>
<p>总结：一个宏任务包含微任务队列，他们之间是包含关系，不是并列关系</p>
</blockquote>
<h3 id="小结-50"><a href="#小结-50" class="headerlink" title="小结"></a>小结</h3><ol>
<li><p>什么是宏任务？</p>
<details>
<summary>答案</summary>
<ul>
<li>浏览器执行的异步代码
 例如：JS 执行脚本事件，setTimeout/setInterval，AJAX请求完成事件，用户交互事件等
</li>
</ul>
</details>
</li>
<li><p>什么是微任务？</p>
<details>
<summary>答案</summary>
<ul>
<li>JS 引擎执行的异步代码
 例如：Promise对象.then()的回调
</li>
</ul>
</details>
</li>
<li><p>JavaScript 内代码如何执行？</p>
<details>
<summary>答案</summary>
<ul>
<li>  执行第一个 script 脚本事件宏任务，里面同步代码
 遇到 宏任务/微任务 交给宿主环境，有结果回调函数进入对应队列
 当执行栈空闲时，清空微任务队列，再执行下一个宏任务，从1再来
</li>
</ul>
</details></li>
</ol>
<img data-src="/2024/11/19/AJAX%E5%AD%A6%E4%B9%A0/image-20230222185205193.png" class="" title="image-20230222185205193">



<h2 id="10-事件循环-经典面试题"><a href="#10-事件循环-经典面试题" class="headerlink" title="10.事件循环 - 经典面试题"></a>10.事件循环 - 经典面试题</h2><h3 id="目标-51"><a href="#目标-51" class="headerlink" title="目标"></a>目标</h3><p>锻炼事件循环模型的使用</p>
<h3 id="讲解-51"><a href="#讲解-51" class="headerlink" title="讲解"></a>讲解</h3><ol>
<li><p>需求：请切换到对应配套代码，查看具体代码，并回答打印顺序（锻炼事件循环概念的理解，阅读代码执行顺序_）</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 目标：回答代码执行顺序</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">1</span>)</span><br><span class="line"><span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">2</span>)</span><br><span class="line">  <span class="keyword">const</span> p = <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function"><span class="params">resolve</span> =&gt;</span> <span class="title function_">resolve</span>(<span class="number">3</span>))</span><br><span class="line">  p.<span class="title function_">then</span>(<span class="function"><span class="params">result</span> =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(result))</span><br><span class="line">&#125;, <span class="number">0</span>)</span><br><span class="line"><span class="keyword">const</span> p = <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function"><span class="params">resolve</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">4</span>)</span><br><span class="line">  &#125;, <span class="number">0</span>)</span><br><span class="line">  <span class="title function_">resolve</span>(<span class="number">5</span>)</span><br><span class="line">&#125;)</span><br><span class="line">p.<span class="title function_">then</span>(<span class="function"><span class="params">result</span> =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(result))</span><br><span class="line"><span class="keyword">const</span> p2 = <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function"><span class="params">resolve</span> =&gt;</span> <span class="title function_">resolve</span>(<span class="number">6</span>))</span><br><span class="line">p2.<span class="title function_">then</span>(<span class="function"><span class="params">result</span> =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(result))</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">7</span>)</span><br></pre></td></tr></table></figure>



<img data-src="/2024/11/19/AJAX%E5%AD%A6%E4%B9%A0/image-20230222185939276.png" class="" title="image-20230222185939276"></li>
</ol>
<h3 id="小结-51"><a href="#小结-51" class="headerlink" title="小结"></a>小结</h3><p>暂无</p>
<h2 id="11-Promise-all-静态方法"><a href="#11-Promise-all-静态方法" class="headerlink" title="11.Promise.all 静态方法"></a>11.Promise.all 静态方法</h2><h3 id="目标-52"><a href="#目标-52" class="headerlink" title="目标"></a>目标</h3><p>了解 Promise.all 作用和使用场景</p>
<h3 id="讲解-52"><a href="#讲解-52" class="headerlink" title="讲解"></a>讲解</h3><ol>
<li><p>概念：合并多个 Promise 对象，等待所有同时成功完成（或某一个失败），做后续逻辑</p>
<img data-src="/2024/11/19/AJAX%E5%AD%A6%E4%B9%A0/image-20230222190117045.png" class="" title="image-20230222190117045">
</li>
<li><p>语法：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> p = <span class="title class_">Promise</span>.<span class="title function_">all</span>([<span class="title class_">Promise</span>对象, <span class="title class_">Promise</span>对象, ...])</span><br><span class="line">p.<span class="title function_">then</span>(<span class="function"><span class="params">result</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// result 结果: [Promise对象成功结果, Promise对象成功结果, ...]</span></span><br><span class="line">&#125;).<span class="title function_">catch</span>(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 第一个失败的 Promise 对象，抛出的异常对象</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>



</li>
<li><p>需求：同时请求“北京”，“上海”，“广州”，“深圳”的天气并在网页尽可能同时显示</p>
<img data-src="/2024/11/19/AJAX%E5%AD%A6%E4%B9%A0/image-20230222190230351.png" class="" title="image-20230222190230351">
</li>
<li><p>核心代码如下：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Promise的all方法<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;my-ul&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">/**</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">     * 目标：掌握Promise的all方法作用，和使用场景</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">     * 业务：当我需要同一时间显示多个请求的结果时，就要把多请求合并</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">     * 例如：默认显示&quot;北京&quot;, &quot;上海&quot;, &quot;广州&quot;, &quot;深圳&quot;的天气在首页查看</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">     * code：</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">     * 北京-110100</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">     * 上海-310100</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">     * 广州-440100</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">     * 深圳-440300</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">    */</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 1. 请求城市天气，得到Promise对象</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> bjPromise = <span class="title function_">axios</span>(&#123; <span class="attr">url</span>: <span class="string">&#x27;http://hmajax.itheima.net/api/weather&#x27;</span>, <span class="attr">params</span>: &#123; <span class="attr">city</span>: <span class="string">&#x27;110100&#x27;</span> &#125; &#125;)</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> shPromise = <span class="title function_">axios</span>(&#123; <span class="attr">url</span>: <span class="string">&#x27;http://hmajax.itheima.net/api/weather&#x27;</span>, <span class="attr">params</span>: &#123; <span class="attr">city</span>: <span class="string">&#x27;310100&#x27;</span> &#125; &#125;)</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> gzPromise = <span class="title function_">axios</span>(&#123; <span class="attr">url</span>: <span class="string">&#x27;http://hmajax.itheima.net/api/weather&#x27;</span>, <span class="attr">params</span>: &#123; <span class="attr">city</span>: <span class="string">&#x27;440100&#x27;</span> &#125; &#125;)</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> szPromise = <span class="title function_">axios</span>(&#123; <span class="attr">url</span>: <span class="string">&#x27;http://hmajax.itheima.net/api/weather&#x27;</span>, <span class="attr">params</span>: &#123; <span class="attr">city</span>: <span class="string">&#x27;440300&#x27;</span> &#125; &#125;)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 2. 使用Promise.all，合并多个Promise对象</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> p = <span class="title class_">Promise</span>.<span class="title function_">all</span>([bjPromise, shPromise, gzPromise, szPromise])</span></span><br><span class="line"><span class="language-javascript">    p.<span class="title function_">then</span>(<span class="function"><span class="params">result</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 注意：结果数组顺序和合并时顺序是一致</span></span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">console</span>.<span class="title function_">log</span>(result)</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">const</span> htmlStr = result.<span class="title function_">map</span>(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">return</span> <span class="string">`&lt;li&gt;<span class="subst">$&#123;item.data.data.area&#125;</span> --- <span class="subst">$&#123;item.data.data.weather&#125;</span>&lt;/li&gt;`</span></span></span><br><span class="line"><span class="language-javascript">      &#125;).<span class="title function_">join</span>(<span class="string">&#x27;&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.my-ul&#x27;</span>).<span class="property">innerHTML</span> = htmlStr</span></span><br><span class="line"><span class="language-javascript">    &#125;).<span class="title function_">catch</span>(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">console</span>.<span class="title function_">dir</span>(error)</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li>
</ol>
<h3 id="小结-52"><a href="#小结-52" class="headerlink" title="小结"></a>小结</h3><ol>
<li><p>Promise.all 什么时候使用？</p>
<details>
<summary>答案</summary>
<ul>
<li>合并多个 Promise 对象并等待所有同时成功的结果，如果有一个报错就会最终为失败状态，当需要同时渲染多个接口数据同时到网页上时使用
</li>
</ul>
</details></li>
</ol>
<h2 id="12-案例-商品分类"><a href="#12-案例-商品分类" class="headerlink" title="12.案例-商品分类"></a>12.案例-商品分类</h2><h3 id="目标-53"><a href="#目标-53" class="headerlink" title="目标"></a>目标</h3><p>完成商品分类效果</p>
<h3 id="讲解-53"><a href="#讲解-53" class="headerlink" title="讲解"></a>讲解</h3><ol>
<li><p>需求：尽可能同时展示所有商品分类到页面上</p>
<img data-src="/2024/11/19/AJAX%E5%AD%A6%E4%B9%A0/image-20230222191151264.png" class="" title="image-20230222191151264">
</li>
<li><p>步骤：</p>
<ol>
<li><p>获取所有的一级分类数据</p>
</li>
<li><p>遍历id，创建获取二级分类请求</p>
</li>
<li><p>合并所有二级分类Promise对象</p>
</li>
<li><p>等待同时成功，开始渲染页面</p>
</li>
</ol>
</li>
<li><p>核心代码：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 目标：把所有商品分类“同时”渲染到页面上</span></span><br><span class="line"><span class="comment"> *  1. 获取所有一级分类数据</span></span><br><span class="line"><span class="comment"> *  2. 遍历id，创建获取二级分类请求</span></span><br><span class="line"><span class="comment"> *  3. 合并所有二级分类Promise对象</span></span><br><span class="line"><span class="comment"> *  4. 等待同时成功后，渲染页面</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">// 1. 获取所有一级分类数据</span></span><br><span class="line"><span class="title function_">axios</span>(&#123;</span><br><span class="line">  <span class="attr">url</span>: <span class="string">&#x27;http://hmajax.itheima.net/api/category/top&#x27;</span></span><br><span class="line">&#125;).<span class="title function_">then</span>(<span class="function"><span class="params">result</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(result)</span><br><span class="line">  <span class="comment">// 2. 遍历id，创建获取二级分类请求</span></span><br><span class="line">  <span class="keyword">const</span> secPromiseList = result.<span class="property">data</span>.<span class="property">data</span>.<span class="title function_">map</span>(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">axios</span>(&#123;</span><br><span class="line">      <span class="attr">url</span>: <span class="string">&#x27;http://hmajax.itheima.net/api/category/sub&#x27;</span>,</span><br><span class="line">      <span class="attr">params</span>: &#123;</span><br><span class="line">        <span class="attr">id</span>: item.<span class="property">id</span> <span class="comment">// 一级分类id</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(secPromiseList) <span class="comment">// [二级分类请求Promise对象，二级分类请求Promise对象，...]</span></span><br><span class="line">  <span class="comment">// 3. 合并所有二级分类Promise对象</span></span><br><span class="line">  <span class="keyword">const</span> p = <span class="title class_">Promise</span>.<span class="title function_">all</span>(secPromiseList)</span><br><span class="line">  p.<span class="title function_">then</span>(<span class="function"><span class="params">result</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(result)</span><br><span class="line">    <span class="comment">// 4. 等待同时成功后，渲染页面</span></span><br><span class="line">    <span class="keyword">const</span> htmlStr = result.<span class="title function_">map</span>(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">const</span> dataObj = item.<span class="property">data</span>.<span class="property">data</span> <span class="comment">// 取出关键数据对象</span></span><br><span class="line">      <span class="keyword">return</span> <span class="string">`&lt;div class=&quot;item&quot;&gt;</span></span><br><span class="line"><span class="string">    &lt;h3&gt;<span class="subst">$&#123;dataObj.name&#125;</span>&lt;/h3&gt;</span></span><br><span class="line"><span class="string">    &lt;ul&gt;</span></span><br><span class="line"><span class="string">      <span class="subst">$&#123;dataObj.children.map(item =&gt; &#123;</span></span></span><br><span class="line"><span class="subst"><span class="string">        <span class="keyword">return</span> <span class="string">`&lt;li&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">        &lt;a href=&quot;javascript:;&quot;&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">          &lt;img src=&quot;<span class="subst">$&#123;item.picture&#125;</span>&quot;&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">          &lt;p&gt;<span class="subst">$&#123;item.name&#125;</span>&lt;/p&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">        &lt;/a&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">      &lt;/li&gt;`</span></span></span></span><br><span class="line"><span class="subst"><span class="string">      &#125;).join(<span class="string">&#x27;&#x27;</span>)&#125;</span></span></span><br><span class="line"><span class="string">    &lt;/ul&gt;</span></span><br><span class="line"><span class="string">  &lt;/div&gt;`</span></span><br><span class="line">    &#125;).<span class="title function_">join</span>(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(htmlStr)</span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.sub-list&#x27;</span>).<span class="property">innerHTML</span> = htmlStr</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li>
</ol>
<h3 id="小结-53"><a href="#小结-53" class="headerlink" title="小结"></a>小结</h3><p>暂无</p>
<h2 id="13-案例-学习反馈-省市区切换"><a href="#13-案例-学习反馈-省市区切换" class="headerlink" title="13.案例-学习反馈-省市区切换"></a>13.案例-学习反馈-省市区切换</h2><h3 id="目标-54"><a href="#目标-54" class="headerlink" title="目标"></a>目标</h3><p>完成省市区切换效果</p>
<h3 id="讲解-54"><a href="#讲解-54" class="headerlink" title="讲解"></a>讲解</h3><ol>
<li><p>需求：完成省市区切换效果</p>
<img data-src="/2024/11/19/AJAX%E5%AD%A6%E4%B9%A0/image-20230222191239971.png" class="" title="image-20230222191239971">
</li>
<li><p>步骤：</p>
<ol>
<li><p>设置省份数据到下拉菜单</p>
</li>
<li><p>切换省份，设置城市数据到下拉菜单，并清空地区下拉菜单</p>
</li>
<li><p>切换城市，设置地区数据到下拉菜单</p>
</li>
</ol>
</li>
<li><p>核心代码：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 目标1：完成省市区下拉列表切换</span></span><br><span class="line"><span class="comment"> *  1.1 设置省份下拉菜单数据</span></span><br><span class="line"><span class="comment"> *  1.2 切换省份，设置城市下拉菜单数据，清空地区下拉菜单</span></span><br><span class="line"><span class="comment"> *  1.3 切换城市，设置地区下拉菜单数据</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">// 1.1 设置省份下拉菜单数据</span></span><br><span class="line"><span class="title function_">axios</span>(&#123;</span><br><span class="line">  <span class="attr">url</span>: <span class="string">&#x27;http://hmajax.itheima.net/api/province&#x27;</span></span><br><span class="line">&#125;).<span class="title function_">then</span>(<span class="function"><span class="params">result</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> optionStr = result.<span class="property">data</span>.<span class="property">list</span>.<span class="title function_">map</span>(<span class="function"><span class="params">pname</span> =&gt;</span> <span class="string">`&lt;option value=&quot;<span class="subst">$&#123;pname&#125;</span>&quot;&gt;<span class="subst">$&#123;pname&#125;</span>&lt;/option&gt;`</span>).<span class="title function_">join</span>(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">  <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.province&#x27;</span>).<span class="property">innerHTML</span> = <span class="string">`&lt;option value=&quot;&quot;&gt;省份&lt;/option&gt;`</span> + optionStr</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 1.2 切换省份，设置城市下拉菜单数据，清空地区下拉菜单</span></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.province&#x27;</span>).<span class="title function_">addEventListener</span>(<span class="string">&#x27;change&#x27;</span>, <span class="keyword">async</span> e =&gt; &#123;</span><br><span class="line">  <span class="comment">// 获取用户选择省份名字</span></span><br><span class="line">  <span class="comment">// console.log(e.target.value)</span></span><br><span class="line">  <span class="keyword">const</span> result = <span class="keyword">await</span> <span class="title function_">axios</span>(&#123; <span class="attr">url</span>: <span class="string">&#x27;http://hmajax.itheima.net/api/city&#x27;</span>, <span class="attr">params</span>: &#123; <span class="attr">pname</span>: e.<span class="property">target</span>.<span class="property">value</span> &#125; &#125;)</span><br><span class="line">  <span class="keyword">const</span> optionStr = result.<span class="property">data</span>.<span class="property">list</span>.<span class="title function_">map</span>(<span class="function"><span class="params">cname</span> =&gt;</span> <span class="string">`&lt;option value=&quot;<span class="subst">$&#123;cname&#125;</span>&quot;&gt;<span class="subst">$&#123;cname&#125;</span>&lt;/option&gt;`</span>).<span class="title function_">join</span>(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">  <span class="comment">// 把默认城市选项+下属城市数据插入select中</span></span><br><span class="line">  <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.city&#x27;</span>).<span class="property">innerHTML</span> = <span class="string">`&lt;option value=&quot;&quot;&gt;城市&lt;/option&gt;`</span> + optionStr</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 清空地区数据</span></span><br><span class="line">  <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.area&#x27;</span>).<span class="property">innerHTML</span> = <span class="string">`&lt;option value=&quot;&quot;&gt;地区&lt;/option&gt;`</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 1.3 切换城市，设置地区下拉菜单数据</span></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.city&#x27;</span>).<span class="title function_">addEventListener</span>(<span class="string">&#x27;change&#x27;</span>, <span class="keyword">async</span> e =&gt; &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(e.<span class="property">target</span>.<span class="property">value</span>)</span><br><span class="line">  <span class="keyword">const</span> result = <span class="keyword">await</span> <span class="title function_">axios</span>(&#123;<span class="attr">url</span>: <span class="string">&#x27;http://hmajax.itheima.net/api/area&#x27;</span>, <span class="attr">params</span>: &#123;</span><br><span class="line">    <span class="attr">pname</span>: <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.province&#x27;</span>).<span class="property">value</span>,</span><br><span class="line">    <span class="attr">cname</span>: e.<span class="property">target</span>.<span class="property">value</span></span><br><span class="line">  &#125;&#125;)</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(result)</span><br><span class="line">  <span class="keyword">const</span> optionStr = result.<span class="property">data</span>.<span class="property">list</span>.<span class="title function_">map</span>(<span class="function"><span class="params">aname</span> =&gt;</span> <span class="string">`&lt;option value=&quot;<span class="subst">$&#123;aname&#125;</span>&quot;&gt;<span class="subst">$&#123;aname&#125;</span>&lt;/option&gt;`</span>).<span class="title function_">join</span>(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(optionStr)</span><br><span class="line">  <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.area&#x27;</span>).<span class="property">innerHTML</span> = <span class="string">`&lt;option value=&quot;&quot;&gt;地区&lt;/option&gt;`</span> + optionStr</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li>
</ol>
<h3 id="小结-54"><a href="#小结-54" class="headerlink" title="小结"></a>小结</h3><p>暂无</p>
<h2 id="14-案例-学习反馈-数据提交"><a href="#14-案例-学习反馈-数据提交" class="headerlink" title="14.案例-学习反馈-数据提交"></a>14.案例-学习反馈-数据提交</h2><h3 id="目标-55"><a href="#目标-55" class="headerlink" title="目标"></a>目标</h3><p>完成学习反馈数据提交</p>
<h3 id="讲解-55"><a href="#讲解-55" class="headerlink" title="讲解"></a>讲解</h3><ol>
<li><p>需求：收集学习反馈数据，提交保存</p>
<img data-src="/2024/11/19/AJAX%E5%AD%A6%E4%B9%A0/image-20230222191239971.png" class="" title="image-20230222191239971">
</li>
<li><p>步骤：</p>
<ol>
<li><p>监听提交按钮的点击事件</p>
</li>
<li><p>依靠插件收集表单数据</p>
</li>
<li><p>基于 axios 提交保存，显示结果</p>
</li>
</ol>
</li>
<li><p>核心代码如下：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 目标2：收集数据提交保存</span></span><br><span class="line"><span class="comment"> *  2.1 监听提交的点击事件</span></span><br><span class="line"><span class="comment"> *  2.2 依靠插件收集表单数据</span></span><br><span class="line"><span class="comment"> *  2.3 基于axios提交保存，显示结果</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">// 2.1 监听提交的点击事件</span></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.submit&#x27;</span>).<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="title function_">async</span> () =&gt; &#123;</span><br><span class="line">  <span class="comment">// 2.2 依靠插件收集表单数据</span></span><br><span class="line">  <span class="keyword">const</span> form = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.info-form&#x27;</span>)</span><br><span class="line">  <span class="keyword">const</span> data = <span class="title function_">serialize</span>(form, &#123; <span class="attr">hash</span>: <span class="literal">true</span>, <span class="attr">empty</span>: <span class="literal">true</span> &#125;)</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(data)</span><br><span class="line">  <span class="comment">// 2.3 基于axios提交保存，显示结果</span></span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> result = <span class="keyword">await</span> <span class="title function_">axios</span>(&#123;</span><br><span class="line">      <span class="attr">url</span>: <span class="string">&#x27;http://hmajax.itheima.net/api/feedback&#x27;</span>,</span><br><span class="line">      <span class="attr">method</span>: <span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line">      data</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(result)</span><br><span class="line">    <span class="title function_">alert</span>(result.<span class="property">data</span>.<span class="property">message</span>)</span><br><span class="line">  &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">dir</span>(error)</span><br><span class="line">    <span class="title function_">alert</span>(error.<span class="property">response</span>.<span class="property">data</span>.<span class="property">message</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li>
</ol>
<h3 id="小结-55"><a href="#小结-55" class="headerlink" title="小结"></a>小结</h3><p>暂无</p>
<h2 id="今日重点-必须会-3"><a href="#今日重点-必须会-3" class="headerlink" title="今日重点(必须会)"></a>今日重点(必须会)</h2><ol>
<li><p>掌握 async 和 await 的使用</p>
</li>
<li><p>理解 EventLoop 和宏任务微任务执行顺序</p>
</li>
<li><p>了解 Promise.all 的作用和使用场景</p>
</li>
<li><p>完成案例-学习反馈</p>
</li>
</ol>
<h2 id="今日作业-必完成-3"><a href="#今日作业-必完成-3" class="headerlink" title="今日作业(必完成)"></a>今日作业(必完成)</h2><p>参考作业文件夹里md文档的要求</p>
<h2 id="参考文献-2"><a href="#参考文献-2" class="headerlink" title="参考文献"></a>参考文献</h2><ol>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Statements/async_function#%E5%B0%9D%E8%AF%95%E4%B8%80%E4%B8%8B">async和await的mdn讲解</a></li>
</ol>
]]></content>
      <categories>
        <category>前端</category>
        <category>AJAX</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>AJAX</tag>
      </tags>
  </entry>
  <entry>
    <title>JavaScript基础</title>
    <url>/2024/11/19/JavaScript%E5%9F%BA%E7%A1%80/</url>
    <content><![CDATA[<h1 id="JavaScript-基础-第1天"><a href="#JavaScript-基础-第1天" class="headerlink" title="JavaScript 基础 - 第1天"></a>JavaScript 基础 - 第1天</h1><blockquote>
<p>了解变量、数据类型、运算符等基础概念，能够实现数据类型的转换，结合四则运算体会如何编程。</p>
</blockquote>
<ul>
<li>体会现实世界中的事物与计算机的关系</li>
<li>理解什么是数据并知道数据的分类</li>
<li>理解变量存储数据的“容器”</li>
<li>掌握常见运算符的使用，了解优先级关系</li>
<li>知道 JavaScript 数据类型隐式转换的特征</li>
</ul>
<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><blockquote>
<p>掌握 JavaScript 的引入方式，初步认识 JavaScript 的作用</p>
</blockquote>
<h3 id="引入方式"><a href="#引入方式" class="headerlink" title="引入方式"></a>引入方式</h3><p>JavaScript 程序不能独立运行，它需要被嵌入 HTML 中，然后浏览器才能执行 JavaScript 代码。通过 <code>script</code> 标签将 JavaScript 代码引入到 HTML 中，有两种方式：</p>
<h4 id="内部方式"><a href="#内部方式" class="headerlink" title="内部方式"></a>内部方式</h4><p>通过 <code>script</code> 标签包裹 JavaScript 代码</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>JavaScript 基础 - 引入方式<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 内联形式：通过 script 标签包裹 JavaScript 代码 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">alert</span>(<span class="string">&#x27;嗨，欢迎来传智播学习前端技术！&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="外部形式"><a href="#外部形式" class="headerlink" title="外部形式"></a>外部形式</h4><p>一般将 JavaScript 代码写在独立的以 .js 结尾的文件中，然后通过 <code>script</code> 标签的 <code>src</code> 属性引入</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// demo.js</span></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">&#x27;嗨，欢迎来传智播学习前端技术！&#x27;</span>)</span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>JavaScript 基础 - 引入方式<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 外部形式：通过 script 的 src 属性引入独立的 .js 文件 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;demo.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>如果 script 标签使用 src 属性引入了某 .js 文件，那么 标签的代码会被忽略！！！如下代码所示：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>JavaScript 基础 - 引入方式<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 外部形式：通过 script 的 src 属性引入独立的 .js 文件 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;demo.js&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 此处的代码会被忽略掉！！！！</span></span></span><br><span class="line"><span class="language-javascript">  	<span class="title function_">alert</span>(<span class="number">666</span>);  </span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="注释和结束符"><a href="#注释和结束符" class="headerlink" title="注释和结束符"></a>注释和结束符</h3><p>通过注释可以屏蔽代码被执行或者添加备注信息，JavaScript 支持两种形式注释语法：</p>
<h4 id="单行注释"><a href="#单行注释" class="headerlink" title="单行注释"></a>单行注释</h4><p>使用 <code>// </code> 注释单行代码</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>JavaScript 基础 - 注释<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 这种是单行注释的语法</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 一次只能注释一行</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 可以重复注释</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">&#x27;嗨，欢迎来传智播学习前端技术！&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="多行注释"><a href="#多行注释" class="headerlink" title="多行注释"></a>多行注释</h4><p>使用 <code>/* */</code> 注释多行代码</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>JavaScript 基础 - 注释<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">/* 这种的是多行注释的语法 */</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">/*</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">    	更常见的多行注释是这种写法</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">    	在些可以任意换行</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">    	多少行都可以</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">      */</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">&#x27;嗨，欢迎来传智播学习前端技术！&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>注：编辑器中单行注释的快捷键为 <code>ctrl + /</code></strong></p>
<h3 id="结束符"><a href="#结束符" class="headerlink" title="结束符"></a>结束符</h3><p>在 JavaScript 中 <code>;</code> 代表一段代码的结束，多数情况下可以省略 <code>;</code> 使用回车（enter）替代。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>JavaScript 基础 - 结束符<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span> </span><br><span class="line">    alert(1);</span><br><span class="line">    alert(2);</span><br><span class="line">    alert(1)</span><br><span class="line">    alert(2)</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>实际开发中有许多人主张书写 JavaScript 代码时省略结束符 <code>;</code></p>
<h3 id="输入和输出"><a href="#输入和输出" class="headerlink" title="输入和输出"></a>输入和输出</h3><p>输出和输入也可理解为人和计算机的交互，用户通过键盘、鼠标等向计算机输入信息，计算机处理后再展示结果给用户，这便是一次输入和输出的过程。</p>
<p>举例说明：如按键盘上的方向键，向上&#x2F;下键可以滚动页面，按向上&#x2F;下键这个动作叫作输入，页面发生了滚动了这便叫输出。</p>
<h4 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h4><p>JavaScript 可以接收用户的输入，然后再将输入的结果输出：</p>
<p><code>alert()</code>、<code>document.wirte()</code></p>
<p>以数字为例，向 <code>alert()</code> 或 <code>document.write()</code>输入任意数字，他都会以弹窗形式展示（输出）给用户。</p>
<h4 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h4><p>向 <code>prompt()</code> 输入任意内容会以弹窗形式出现在浏览器中，一般提示用户输入一些内容。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>JavaScript 基础 - 输入输出<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"> </span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 1. 输入的任意数字，都会以弹窗形式展示</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">&#x27;要输出的内容&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">alert</span>(<span class="string">&#x27;要输出的内容&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 2. 以弹窗形式提示用户输入姓名，注意这里的文字使用英文的引号</span></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">prompt</span>(<span class="string">&#x27;请输入您的姓名:&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><blockquote>
<p>理解变量是计算机存储数据的“容器”，掌握变量的声明方式</p>
</blockquote>
<p>变量是计算机中用来存储数据的“容器”，它可以让计算机变得有记忆，通俗的理解变量就是使用【某个符号】来代表【某个具体的数值】（数据）</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// x 符号代表了 5 这个数值</span></span></span><br><span class="line"><span class="language-javascript">  x = <span class="number">5</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// y 符号代表了 6 这个数值</span></span></span><br><span class="line"><span class="language-javascript">  y = <span class="number">6</span></span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//举例： 在 JavaScript 中使用变量可以将某个数据（数值）记录下来！</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 将用户输入的内容保存在 num 这个变量（容器）中</span></span></span><br><span class="line"><span class="language-javascript">  num = <span class="title function_">prompt</span>(<span class="string">&#x27;请输入一数字!&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 通过 num 变量（容器）将用户输入的内容输出出来</span></span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">alert</span>(num)</span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">document</span>.<span class="title function_">write</span>(num)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="声明"><a href="#声明" class="headerlink" title="声明"></a>声明</h3><p>声明(定义)变量有两部分构成：声明关键字、变量名（标识）</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>JavaScript 基础 - 声明和赋值<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"> </span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// let 变量名</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 声明(定义)变量有两部分构成：声明关键字、变量名（标识）</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// let 即关键字，所谓关键字是系统提供的专门用来声明（定义）变量的词语</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// age 即变量的名称，也叫标识符</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">let</span> age</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>关键字是 JavaScript 中内置的一些英文词汇（单词或缩写），它们代表某些特定的含义，如 <code>let</code> 的含义是声明变量的，看到 <code>let</code>  后就可想到这行代码的意思是在声明变量，如 <code>let age;</code> </p>
<p><code>let</code> 和 <code>var</code> 都是 JavaScript 中的声明变量的关键字，推荐使用 <code>let</code> 声明变量！！！</p>
<h3 id="赋值"><a href="#赋值" class="headerlink" title="赋值"></a>赋值</h3><p>声明（定义）变量相当于创造了一个空的“容器”，通过赋值向这个容器中添加数据。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>JavaScript 基础 - 声明和赋值<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"> </span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 声明(定义)变量有两部分构成：声明关键字、变量名（标识）</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// let 即关键字，所谓关键字是系统提供的专门用来声明（定义）变量的词语</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// age 即变量的名称，也叫标识符</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">let</span> age</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 赋值，将 18 这个数据存入了 age 这个“容器”中</span></span></span><br><span class="line"><span class="language-javascript">    age = <span class="number">18</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 这样 age 的值就成了 18</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">document</span>.<span class="title function_">write</span>(age)</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 也可以声明和赋值同时进行</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">let</span> str = <span class="string">&#x27;hello world!&#x27;</span></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">alert</span>(str);</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="关键字"><a href="#关键字" class="headerlink" title="关键字"></a>关键字</h3><p>JavaScript 使用专门的关键字 <code>let</code> 和 <code>var</code> 来声明（定义）变量，在使用时需要注意一些细节：</p>
<p>以下是使用 <code>let</code> 时的注意事项：</p>
<ol>
<li>允许声明和赋值同时进行</li>
<li>不允许重复声明</li>
<li>允许同时声明多个变量并赋值</li>
<li>JavaScript 中内置的一些关键字不能被当做变量名</li>
</ol>
<p>以下是使用 <code>var</code> 时的注意事项：</p>
<ol start="2">
<li>允许声明和赋值同时进行</li>
<li>允许重复声明</li>
<li>允许同时声明多个变量并赋值</li>
</ol>
<p>大部分情况使用 <code>let</code> 和 <code>var</code> 区别不大，但是 <code>let</code> 相较 <code>var</code> 更严谨，因此推荐使用 <code>let</code>，后期会更进一步介绍二者间的区别。</p>
<h3 id="变量名命名规则"><a href="#变量名命名规则" class="headerlink" title="变量名命名规则"></a>变量名命名规则</h3><p>关于变量的名称（标识符）有一系列的规则需要遵守：</p>
<ol>
<li>只能是字母、数字、下划线、$，且不能能数字开头</li>
<li>字母区分大小写，如 Age 和 age 是不同的变量</li>
<li>JavaScript 内部已占用于单词（关键字或保留字）不允许使用</li>
<li>尽量保证变量具有一定的语义，见字知义</li>
</ol>
<p>注：所谓关键字是指 JavaScript 内部使用的词语，如 <code>let</code> 和<code>var</code>，保留字是指 JavaScript 内部目前没有使用的词语，但是将来可能会使用词语。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>JavaScript 基础 - 变量名命名规则<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"> </span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">let</span> age = <span class="number">18</span> <span class="comment">// 正确</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">let</span> age1 = <span class="number">18</span> <span class="comment">// 正确</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">let</span> _age = <span class="number">18</span> <span class="comment">// 正确</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// let 1age = 18; // 错误，不可以数字开头</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">let</span> $age = <span class="number">18</span> <span class="comment">// 正确</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">let</span> <span class="title class_">Age</span> = <span class="number">24</span> <span class="comment">// 正确，它与小写的 age 是不同的变量</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// let let = 18; // 错误，let 是关键字</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">let</span> int = <span class="number">123</span> <span class="comment">// 不推荐，int 是保留字</span></span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h2><p>概念：使用 const 声明的变量称为“常量”。</p>
<p>使用场景：当某个变量永远不会改变的时候，就可以使用 const 来声明，而不是let。</p>
<p>命名规范：和变量一致</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="variable constant_">PI</span> = <span class="number">3.14</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>注意： 常量不允许重新赋值,声明的时候必须赋值（初始化）</p>
</blockquote>
<h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><blockquote>
<p>计算机世界中的万事成物都是数据。</p>
</blockquote>
<p>计算机程序可以处理大量的数据，为了方便数据的管理，将数据分成了不同的类型：</p>
<p>注：通过 typeof 关键字检测数据类型</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>JavaScript 基础 - 数据类型<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"> </span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 检测 1 是什么类型数据，结果为 number</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="keyword">typeof</span> <span class="number">1</span>)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="数值类型"><a href="#数值类型" class="headerlink" title="数值类型"></a>数值类型</h3><p>即我们数学中学习到的数字，可以是整数、小数、正数、负数</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>JavaScript 基础 - 数据类型<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"> </span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">let</span> score = <span class="number">100</span> <span class="comment">// 正整数</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">let</span> price = <span class="number">12.345</span> <span class="comment">// 小数</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">let</span> temperature = -<span class="number">40</span> <span class="comment">// 负数</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="keyword">typeof</span> score) <span class="comment">// 结果为 number</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="keyword">typeof</span> price) <span class="comment">// 结果为 number</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="keyword">typeof</span> temperature) <span class="comment">// 结果为 number</span></span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>JavaScript 中的数值类型与数学中的数字是一样的，分为正数、负数、小数等。</p>
<h3 id="字符串类型"><a href="#字符串类型" class="headerlink" title="字符串类型"></a>字符串类型</h3><p>通过单引号（ <code>&#39;&#39;</code>） 、双引号（ <code>&quot;&quot;</code>）或反引号包裹的数据都叫字符串，单引号和双引号没有本质上的区别，推荐使用单引号。</p>
<p>注意事项：</p>
<ol>
<li>无论单引号或是双引号必须成对使用</li>
<li>单引号&#x2F;双引号可以互相嵌套，但是不以自已嵌套自已</li>
<li>必要时可以使用转义符 <code>\</code>，输出单引号或双引号</li>
</ol>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>JavaScript 基础 - 数据类型<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"> </span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">let</span> user_name = <span class="string">&#x27;小明&#x27;</span> <span class="comment">// 使用单引号</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">let</span> gender = <span class="string">&quot;男&quot;</span> <span class="comment">// 使用双引号</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">let</span> str = <span class="string">&#x27;123&#x27;</span> <span class="comment">// 看上去是数字，但是用引号包裹了就成了字符串了</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">let</span> str1 = <span class="string">&#x27;&#x27;</span> <span class="comment">// 这种情况叫空字符串</span></span></span><br><span class="line"><span class="language-javascript">		</span></span><br><span class="line"><span class="language-javascript">    documeent.<span class="title function_">write</span>(<span class="keyword">typeof</span> user_name) <span class="comment">// 结果为 string</span></span></span><br><span class="line"><span class="language-javascript">    documeent.<span class="title function_">write</span>(<span class="keyword">typeof</span> gender) <span class="comment">// 结果为 string</span></span></span><br><span class="line"><span class="language-javascript">    documeent.<span class="title function_">write</span>(<span class="keyword">typeof</span> str) <span class="comment">// 结果为 string</span></span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="布尔类型"><a href="#布尔类型" class="headerlink" title="布尔类型"></a>布尔类型</h3><p>表示肯定或否定时在计算机中对应的是布尔类型数据，它有两个固定的值 <code>true</code> 和 <code>false</code>，表示肯定的数据用 <code>true</code>，表示否定的数据用 <code>false</code>。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>JavaScript 基础 - 数据类型<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"> </span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//  pink老师帅不帅？回答 是 或 否</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">let</span> isCool = <span class="literal">true</span> <span class="comment">// 是的，摔死了！</span></span></span><br><span class="line"><span class="language-javascript">    isCool = <span class="literal">false</span> <span class="comment">// 不，套马杆的汉子！</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="keyword">typeof</span> isCool) <span class="comment">// 结果为 boolean</span></span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="undefined"><a href="#undefined" class="headerlink" title="undefined"></a>undefined</h3><p>未定义是比较特殊的类型，只有一个值 undefined，只声明变量，不赋值的情况下，变量的默认值为 undefined，一般很少【直接】为某个变量赋值为 undefined。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>JavaScript 基础 - 数据类型<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"> </span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 只声明了变量，并末赋值</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">let</span> tmp;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="keyword">typeof</span> tmp) <span class="comment">// 结果为 undefined</span></span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>注：JavaScript 中变量的值决定了变量的数据类型。</strong></p>
<h2 id="类型转换"><a href="#类型转换" class="headerlink" title="类型转换"></a>类型转换</h2><blockquote>
<p>理解弱类型语言的特征，掌握显式类型转换的方法</p>
</blockquote>
<p>在 JavaScript 中数据被分成了不同的类型，如数值、字符串、布尔值、undefined，在实际编程的过程中，不同数据类型之间存在着转换的关系。</p>
<h3 id="隐式转换"><a href="#隐式转换" class="headerlink" title="隐式转换"></a>隐式转换</h3><p>某些运算符被执行时，系统内部自动将数据类型进行转换，这种转换称为隐式转换。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>JavaScript 基础 - 隐式转换<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"> </span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">let</span> num = <span class="number">13</span> <span class="comment">// 数值</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">let</span> num2 = <span class="string">&#x27;2&#x27;</span> <span class="comment">// 字符串</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 结果为 132</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 原因是将数值 num 转换成了字符串，相当于 &#x27;13&#x27;</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 然后 + 将两个字符串拼接到了一起</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(num + num2)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 结果为 11</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 原因是将字符串 num2 转换成了数值，相当于 2</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 然后数值 13 减去 数值 2</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(num - num2)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">let</span> a = <span class="title function_">prompt</span>(<span class="string">&#x27;请输入一个数字&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">let</span> b = <span class="title function_">prompt</span>(<span class="string">&#x27;请再输入一个数字&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">alert</span>(a + b);</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>注：数据类型的隐式转换是 JavaScript 的特征，后续学习中还会遇到，目前先需要理解什么是隐式转换。</p>
<p>补充介绍模板字符串的拼接的使用</p>
<h3 id="显式转换"><a href="#显式转换" class="headerlink" title="显式转换"></a>显式转换</h3><p>编写程序时过度依靠系统内部的隐式转换是不严禁的，因为隐式转换规律并不清晰，大多是靠经验总结的规律。为了避免因隐式转换带来的问题，通常根逻辑需要对数据进行显示转换。</p>
<h4 id="Number"><a href="#Number" class="headerlink" title="Number"></a>Number</h4><p>通过 <code>Number</code> 显示转换成数值类型，当转换失败时结果为 <code>NaN</code>（Not a Number）即不是一个数字。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>JavaScript 基础 - 隐式转换<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">let</span> t = <span class="string">&#x27;12&#x27;</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">let</span> f = <span class="number">8</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 显式将字符串 12 转换成数值 12</span></span></span><br><span class="line"><span class="language-javascript">    t = <span class="title class_">Number</span>(t)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 检测转换后的类型</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// console.log(typeof t);</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(t + f) <span class="comment">// 结果为 20</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 并不是所有的值都可以被转成数值类型</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">let</span> str = <span class="string">&#x27;hello&#x27;</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 将 hello 转成数值是不现实的，当无法转换成</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 数值时，得到的结果为 NaN （Not a Number）</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Number</span>(str))</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h1 id="JavaScript-基础-第2天"><a href="#JavaScript-基础-第2天" class="headerlink" title="JavaScript 基础 - 第2天"></a>JavaScript 基础 - 第2天</h1><blockquote>
<p>理解什么是流程控制，知道条件控制的种类并掌握其对应的语法规则，具备利用循环编写简易ATM取款机程序能力</p>
</blockquote>
<ul>
<li>运算符</li>
<li>语句</li>
<li>综合案例</li>
</ul>
<h2 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h2><h3 id="算术运算符"><a href="#算术运算符" class="headerlink" title="算术运算符"></a>算术运算符</h3><p>数字是用来计算的，比如：乘法 * 、除法 &#x2F; 、加法 + 、减法 - 等等，所以经常和算术运算符一起。</p>
<p>算术运算符：也叫数学运算符，主要包括加、减、乘、除、取余（求模）等</p>
<table>
<thead>
<tr>
<th>运算符</th>
<th>作用</th>
</tr>
</thead>
<tbody><tr>
<td>+</td>
<td>求和</td>
</tr>
<tr>
<td>-</td>
<td>求差</td>
</tr>
<tr>
<td>*</td>
<td>求积</td>
</tr>
<tr>
<td>&#x2F;</td>
<td>求商</td>
</tr>
<tr>
<td><strong>%</strong></td>
<td>取模（取余数），开发中经常用于作为某个数字是否被整除</td>
</tr>
</tbody></table>
<blockquote>
<p>注意：在计算失败时，显示的结果是 NaN （not a number）</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 算术运算符</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">1</span> + <span class="number">2</span> * <span class="number">3</span> / <span class="number">2</span>) <span class="comment">//  4 </span></span><br><span class="line"><span class="keyword">let</span> num = <span class="number">10</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(num + <span class="number">10</span>)  <span class="comment">// 20</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(num + num)  <span class="comment">// 20</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 1. 取模(取余数)  使用场景：  用来判断某个数是否能够被整除</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">4</span> % <span class="number">2</span>) <span class="comment">//  0  </span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">6</span> % <span class="number">3</span>) <span class="comment">//  0</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">5</span> % <span class="number">3</span>) <span class="comment">//  2</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">3</span> % <span class="number">5</span>) <span class="comment">//  3</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 2. 注意事项 : 如果我们计算失败，则返回的结果是 NaN (not a number)</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;pink老师&#x27;</span> - <span class="number">2</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;pink老师&#x27;</span> * <span class="number">2</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;pink老师&#x27;</span> + <span class="number">2</span>)   <span class="comment">// pink老师2</span></span><br></pre></td></tr></table></figure>

<h3 id="赋值运算符"><a href="#赋值运算符" class="headerlink" title="赋值运算符"></a>赋值运算符</h3><p>赋值运算符：对变量进行赋值的运算符</p>
<p> &#x3D;     将等号右边的值赋予给左边, 要求左边必须是一个容器</p>
<table>
<thead>
<tr>
<th>运算符</th>
<th>作用</th>
</tr>
</thead>
<tbody><tr>
<td>+&#x3D;</td>
<td>加法赋值</td>
</tr>
<tr>
<td>-+</td>
<td>减法赋值</td>
</tr>
<tr>
<td>*&#x3D;</td>
<td>乘法赋值</td>
</tr>
<tr>
<td>&#x2F;&#x3D;</td>
<td>除法赋值</td>
</tr>
<tr>
<td>%&#x3D;</td>
<td>取余赋值</td>
</tr>
</tbody></table>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">let</span> num = <span class="number">1</span></span><br><span class="line"><span class="comment">// num = num + 1</span></span><br><span class="line"><span class="comment">// 采取赋值运算符</span></span><br><span class="line"><span class="comment">// num += 1</span></span><br><span class="line">num += <span class="number">3</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(num)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<h3 id="自增-自减运算符"><a href="#自增-自减运算符" class="headerlink" title="自增&#x2F;自减运算符"></a>自增&#x2F;自减运算符</h3><table>
<thead>
<tr>
<th>符号</th>
<th>作用</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>++</td>
<td>自增</td>
<td>变量自身的值加1，例如: x++</td>
</tr>
<tr>
<td>–</td>
<td>自减</td>
<td>变量自身的值减1，例如: x–</td>
</tr>
</tbody></table>
<ol>
<li>++在前和++在后在单独使用时二者并没有差别，而且一般开发中我们都是独立使用</li>
<li>++在后（后缀式）我们会使用更多</li>
</ol>
<blockquote>
<p>注意：</p>
<ol>
<li>只有变量能够使用自增和自减运算符</li>
<li>++、– 可以在变量前面也可以在变量后面，比如: x++  或者  ++x</li>
</ol>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="comment">// let num = 10</span></span><br><span class="line">    <span class="comment">// num = num + 1</span></span><br><span class="line">    <span class="comment">// num += 1</span></span><br><span class="line">    <span class="comment">// // 1. 前置自增</span></span><br><span class="line">    <span class="comment">// let i = 1</span></span><br><span class="line">    <span class="comment">// ++i</span></span><br><span class="line">    <span class="comment">// console.log(i)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// let i = 1</span></span><br><span class="line">    <span class="comment">// console.log(++i + 1)</span></span><br><span class="line">    <span class="comment">// 2. 后置自增</span></span><br><span class="line">    <span class="comment">// let i = 1</span></span><br><span class="line">    <span class="comment">// i++</span></span><br><span class="line">    <span class="comment">// console.log(i)</span></span><br><span class="line">    <span class="comment">// let i = 1</span></span><br><span class="line">    <span class="comment">// console.log(i++ + 1)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 了解 </span></span><br><span class="line">    <span class="keyword">let</span> i = <span class="number">1</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(i++ + ++i + i)</span><br><span class="line">  &lt;/script&gt;</span><br></pre></td></tr></table></figure>

<h3 id="比较运算符"><a href="#比较运算符" class="headerlink" title="比较运算符"></a>比较运算符</h3><p>使用场景：比较两个数据大小、是否相等，根据比较结果返回一个布尔值（true &#x2F; false）</p>
<table>
<thead>
<tr>
<th>运算符</th>
<th>作用</th>
</tr>
</thead>
<tbody><tr>
<td>&gt;</td>
<td>左边是否大于右边</td>
</tr>
<tr>
<td>&lt;</td>
<td>左边是否小于右边</td>
</tr>
<tr>
<td>&gt;&#x3D;</td>
<td>左边是否大于或等于右边</td>
</tr>
<tr>
<td>&lt;&#x3D;</td>
<td>左边是否小于或等于右边</td>
</tr>
<tr>
<td>&#x3D;&#x3D;&#x3D;</td>
<td>左右两边是否<code>类型</code>和<code>值</code>都相等（重点）</td>
</tr>
<tr>
<td>&#x3D;&#x3D;</td>
<td>左右两边<code>值</code>是否相等</td>
</tr>
<tr>
<td>!&#x3D;</td>
<td>左右值不相等</td>
</tr>
<tr>
<td>!&#x3D;&#x3D;</td>
<td>左右两边是否不全等</td>
</tr>
</tbody></table>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">3</span> &gt; <span class="number">5</span>)</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">3</span> &gt;= <span class="number">3</span>)</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">2</span> == <span class="number">2</span>)</span><br><span class="line">  <span class="comment">// 比较运算符有隐式转换 把&#x27;2&#x27; 转换为 2  双等号 只判断值</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">2</span> == <span class="string">&#x27;2&#x27;</span>)  <span class="comment">// true</span></span><br><span class="line">  <span class="comment">// console.log(undefined === null)</span></span><br><span class="line">  <span class="comment">// === 全等 判断 值 和 数据类型都一样才行</span></span><br><span class="line">  <span class="comment">// 以后判断是否相等 请用 ===  </span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">2</span> === <span class="string">&#x27;2&#x27;</span>)</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">NaN</span> === <span class="title class_">NaN</span>) <span class="comment">// NaN 不等于任何人，包括他自己</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">2</span> !== <span class="string">&#x27;2&#x27;</span>)  <span class="comment">// true  </span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">2</span> != <span class="string">&#x27;2&#x27;</span>) <span class="comment">// false </span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;-------------------------&#x27;</span>)</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;a&#x27;</span> &lt; <span class="string">&#x27;b&#x27;</span>) <span class="comment">// true</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;aa&#x27;</span> &lt; <span class="string">&#x27;ab&#x27;</span>) <span class="comment">// true</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;aa&#x27;</span> &lt; <span class="string">&#x27;aac&#x27;</span>) <span class="comment">// true</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;-------------------------&#x27;</span>)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<h3 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h3><p>使用场景：可以把多个布尔值放到一起运算，最终返回一个布尔值</p>
<table>
<thead>
<tr>
<th>符号</th>
<th>名称</th>
<th>日常读法</th>
<th>特点</th>
<th>口诀</th>
</tr>
</thead>
<tbody><tr>
<td>&amp;&amp;</td>
<td>逻辑与</td>
<td>并且</td>
<td>符号两边有一个假的结果为假</td>
<td>一假则假</td>
</tr>
<tr>
<td>||</td>
<td>逻辑或</td>
<td>或者</td>
<td>符号两边有一个真的结果为真</td>
<td>一真则真</td>
</tr>
<tr>
<td>!</td>
<td>逻辑非</td>
<td>取反</td>
<td>true变false  false变true</td>
<td>真变假，假变真</td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th>A</th>
<th>B</th>
<th>A &amp;&amp; B</th>
<th>A || B</th>
<th>!A</th>
</tr>
</thead>
<tbody><tr>
<td>false</td>
<td>false</td>
<td>false</td>
<td>false</td>
<td>true</td>
</tr>
<tr>
<td>false</td>
<td>true</td>
<td>false</td>
<td>true</td>
<td>true</td>
</tr>
<tr>
<td>true</td>
<td>false</td>
<td>false</td>
<td>true</td>
<td>false</td>
</tr>
<tr>
<td>true</td>
<td>true</td>
<td>true</td>
<td>true</td>
<td>false</td>
</tr>
</tbody></table>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="comment">// 逻辑与 一假则假</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="literal">true</span> &amp;&amp; <span class="literal">true</span>)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="literal">false</span> &amp;&amp; <span class="literal">true</span>)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">3</span> &lt; <span class="number">5</span> &amp;&amp; <span class="number">3</span> &gt; <span class="number">2</span>)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">3</span> &lt; <span class="number">5</span> &amp;&amp; <span class="number">3</span> &lt; <span class="number">2</span>)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;-----------------&#x27;</span>)</span><br><span class="line">    <span class="comment">// 逻辑或 一真则真</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="literal">true</span> || <span class="literal">true</span>)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="literal">false</span> || <span class="literal">true</span>)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="literal">false</span> || <span class="literal">false</span>)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;-----------------&#x27;</span>)</span><br><span class="line">    <span class="comment">// 逻辑非  取反</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(!<span class="literal">true</span>)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(!<span class="literal">false</span>)</span><br><span class="line"></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;-----------------&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> num = <span class="number">6</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(num &gt; <span class="number">5</span> &amp;&amp; num &lt; <span class="number">10</span>)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;-----------------&#x27;</span>)</span><br><span class="line">  &lt;/script&gt;</span><br></pre></td></tr></table></figure>

<h3 id="运算符优先级"><a href="#运算符优先级" class="headerlink" title="运算符优先级"></a>运算符优先级</h3><p> <img data-src="D:/2023%E8%A7%86%E9%A2%91/javascript%E5%9F%BA%E7%A1%80/JavaScript%E5%9F%BA%E7%A1%80%E7%AC%AC%E4%B8%80%E5%A4%A9/02-%E7%AC%94%E8%AE%B0/assets/1671016521031.png" alt="67101652103"></p>
<blockquote>
<p>逻辑运算符优先级： ！&gt; &amp;&amp; &gt;  ||  </p>
</blockquote>
<h2 id="语句"><a href="#语句" class="headerlink" title="语句"></a>语句</h2><h3 id="表达式和语句"><a href="#表达式和语句" class="headerlink" title="表达式和语句"></a>表达式和语句</h3><p><img data-src="/assets/1671017924981.png" alt="67101792498"></p>
<h3 id="分支语句"><a href="#分支语句" class="headerlink" title="分支语句"></a>分支语句</h3><p>分支语句可以根据条件判定真假，来选择性的执行想要的代码</p>
<p>分支语句包含：</p>
<ol>
<li>if分支语句（重点）</li>
<li>三元运算符</li>
<li>switch语句</li>
</ol>
<h4 id="if-分支语句"><a href="#if-分支语句" class="headerlink" title="if 分支语句"></a>if 分支语句</h4><p>语法：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(条件表达式) &#123;</span><br><span class="line">  <span class="comment">// 满足条件要执行的语句</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>小括号内的条件结果是布尔值，为 true 时，进入大括号里执行代码；为false，则不执行大括号里面代码</p>
<p>小括号内的结果若不是布尔类型时，会发生类型转换为布尔值，类似Boolean()</p>
<p>如果大括号只有一个语句，大括号可以省略，但是，俺们不提倡这么做~</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="comment">// 单分支语句</span></span><br><span class="line">    <span class="comment">// if (false) &#123;</span></span><br><span class="line">    <span class="comment">//   console.log(&#x27;执行语句&#x27;)</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line">    <span class="comment">// if (3 &gt; 5) &#123;</span></span><br><span class="line">    <span class="comment">//   console.log(&#x27;执行语句&#x27;)</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line">    <span class="comment">// if (2 === &#x27;2&#x27;) &#123;</span></span><br><span class="line">    <span class="comment">//   console.log(&#x27;执行语句&#x27;)</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line">    <span class="comment">//  1. 除了0 所有的数字都为真</span></span><br><span class="line">    <span class="comment">//   if (0) &#123;</span></span><br><span class="line">    <span class="comment">//     console.log(&#x27;执行语句&#x27;)</span></span><br><span class="line">    <span class="comment">//   &#125;</span></span><br><span class="line">    <span class="comment">// 2.除了 &#x27;&#x27; 所有的字符串都为真 true</span></span><br><span class="line">    <span class="comment">// if (&#x27;pink老师&#x27;) &#123;</span></span><br><span class="line">    <span class="comment">//   console.log(&#x27;执行语句&#x27;)</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line">    <span class="comment">// if (&#x27;&#x27;) &#123;</span></span><br><span class="line">    <span class="comment">//   console.log(&#x27;执行语句&#x27;)</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line">    <span class="comment">// // if (&#x27;&#x27;) console.log(&#x27;执行语句&#x27;)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 1. 用户输入</span></span><br><span class="line">    <span class="keyword">let</span> score = +<span class="title function_">prompt</span>(<span class="string">&#x27;请输入成绩&#x27;</span>)</span><br><span class="line">    <span class="comment">// 2. 进行判断输出</span></span><br><span class="line">    <span class="keyword">if</span> (score &gt;= <span class="number">700</span>) &#123;</span><br><span class="line">      <span class="title function_">alert</span>(<span class="string">&#x27;恭喜考入黑马程序员&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;-----------------&#x27;</span>)</span><br><span class="line"></span><br><span class="line">  &lt;/script&gt;</span><br></pre></td></tr></table></figure>

<h4 id="if双分支语句"><a href="#if双分支语句" class="headerlink" title="if双分支语句"></a>if双分支语句</h4><p>如果有两个条件的时候，可以使用 if else 双分支语句</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (条件表达式)&#123;</span><br><span class="line">  <span class="comment">// 满足条件要执行的语句</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">  <span class="comment">// 不满足条件要执行的语句</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>例如：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">   <span class="comment">// 1. 用户输入</span></span><br><span class="line">   <span class="keyword">let</span> uname = <span class="title function_">prompt</span>(<span class="string">&#x27;请输入用户名:&#x27;</span>)</span><br><span class="line">   <span class="keyword">let</span> pwd = <span class="title function_">prompt</span>(<span class="string">&#x27;请输入密码:&#x27;</span>)</span><br><span class="line">   <span class="comment">// 2. 判断输出</span></span><br><span class="line">   <span class="keyword">if</span> (uname === <span class="string">&#x27;pink&#x27;</span> &amp;&amp; pwd === <span class="string">&#x27;123456&#x27;</span>) &#123;</span><br><span class="line">     <span class="title function_">alert</span>(<span class="string">&#x27;恭喜登录成功&#x27;</span>)</span><br><span class="line">   &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">     <span class="title function_">alert</span>(<span class="string">&#x27;用户名或者密码错误&#x27;</span>)</span><br><span class="line">   &#125;</span><br><span class="line"> &lt;/script&gt;</span><br></pre></td></tr></table></figure>

<h4 id="if-多分支语句"><a href="#if-多分支语句" class="headerlink" title="if 多分支语句"></a>if 多分支语句</h4><p>使用场景： 适合于有多个条件的时候</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">   <span class="comment">// 1. 用户输入</span></span><br><span class="line">   <span class="keyword">let</span> score = +<span class="title function_">prompt</span>(<span class="string">&#x27;请输入成绩：&#x27;</span>)</span><br><span class="line">   <span class="comment">// 2. 判断输出</span></span><br><span class="line">   <span class="keyword">if</span> (score &gt;= <span class="number">90</span>) &#123;</span><br><span class="line">     <span class="title function_">alert</span>(<span class="string">&#x27;成绩优秀，宝贝，你是我的骄傲&#x27;</span>)</span><br><span class="line">   &#125; <span class="keyword">else</span> <span class="keyword">if</span> (score &gt;= <span class="number">70</span>) &#123;</span><br><span class="line">     <span class="title function_">alert</span>(<span class="string">&#x27;成绩良好，宝贝，你要加油哦~~&#x27;</span>)</span><br><span class="line">   &#125; <span class="keyword">else</span> <span class="keyword">if</span> (score &gt;= <span class="number">60</span>) &#123;</span><br><span class="line">     <span class="title function_">alert</span>(<span class="string">&#x27;成绩及格，宝贝，你很危险~&#x27;</span>)</span><br><span class="line">   &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">     <span class="title function_">alert</span>(<span class="string">&#x27;成绩不及格，宝贝，我不想和你说话，我只想用鞭子和你说话~&#x27;</span>)</span><br><span class="line">   &#125;</span><br><span class="line"> &lt;/script&gt;</span><br></pre></td></tr></table></figure>

<h4 id="三元运算符（三元表达式）"><a href="#三元运算符（三元表达式）" class="headerlink" title="三元运算符（三元表达式）"></a>三元运算符（三元表达式）</h4><p><strong>使用场景</strong>： 一些简单的双分支，可以使用  三元运算符（三元表达式），写起来比 if  else双分支 更简单</p>
<p><strong>符号</strong>：? 与 : 配合使用</p>
<p>语法：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">条件 ? 表达式<span class="number">1</span> ： 表达式<span class="number">2</span></span><br></pre></td></tr></table></figure>

<p>例如：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 三元运算符（三元表达式）</span></span><br><span class="line"><span class="comment">// 1. 语法格式</span></span><br><span class="line"><span class="comment">// 条件 ? 表达式1 : 表达式2 </span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 2. 执行过程 </span></span><br><span class="line"><span class="comment">// 2.1 如果条件为真，则执行表达式1</span></span><br><span class="line"><span class="comment">// 2.2 如果条件为假，则执行表达式2</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 3. 验证</span></span><br><span class="line"><span class="comment">// 5 &gt; 3 ? &#x27;真的&#x27; : &#x27;假的&#x27;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">5</span> &lt; <span class="number">3</span> ? <span class="string">&#x27;真的&#x27;</span> : <span class="string">&#x27;假的&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// let age = 18 </span></span><br><span class="line"><span class="comment">// age = age + 1</span></span><br><span class="line"><span class="comment">//  age++</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 1. 用户输入 </span></span><br><span class="line"><span class="keyword">let</span> num = <span class="title function_">prompt</span>(<span class="string">&#x27;请您输入一个数字:&#x27;</span>)</span><br><span class="line"><span class="comment">// 2. 判断输出- 小于10才补0</span></span><br><span class="line"><span class="comment">// num = num &lt; 10 ? 0 + num : num</span></span><br><span class="line">num = num &gt;= <span class="number">10</span> ? num : <span class="number">0</span> + num</span><br><span class="line"><span class="title function_">alert</span>(num)</span><br></pre></td></tr></table></figure>

<h4 id="switch语句（了解）"><a href="#switch语句（了解）" class="headerlink" title="switch语句（了解）"></a>switch语句（了解）</h4><p>使用场景： 适合于有多个条件的时候，也属于分支语句，大部分情况下和 if多分支语句 功能相同</p>
<p>注意：</p>
<ol>
<li>switch case语句一般用于等值判断, if适合于区间判断</li>
<li>switchcase一般需要配合break关键字使用 没有break会造成case穿透</li>
<li>if 多分支语句开发要比switch更重要，使用也更多</li>
</ol>
<p>例如：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// switch分支语句</span></span><br><span class="line"><span class="comment">// 1. 语法</span></span><br><span class="line"><span class="comment">// switch (表达式) &#123;</span></span><br><span class="line"><span class="comment">//   case 值1:</span></span><br><span class="line"><span class="comment">//     代码1</span></span><br><span class="line"><span class="comment">//     break</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//   case 值2:</span></span><br><span class="line"><span class="comment">//     代码2</span></span><br><span class="line"><span class="comment">//     break</span></span><br><span class="line"><span class="comment">//   ...</span></span><br><span class="line"><span class="comment">//   default:</span></span><br><span class="line"><span class="comment">//     代码n</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">  <span class="keyword">switch</span> (<span class="number">2</span>) &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;您选择的是1&#x27;</span>)</span><br><span class="line">    <span class="keyword">break</span>  <span class="comment">// 退出switch</span></span><br><span class="line">    <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;您选择的是2&#x27;</span>)</span><br><span class="line">    <span class="keyword">break</span>  <span class="comment">// 退出switch</span></span><br><span class="line">    <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;您选择的是3&#x27;</span>)</span><br><span class="line">    <span class="keyword">break</span>  <span class="comment">// 退出switch</span></span><br><span class="line">    <span class="attr">default</span>:</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;没有符合条件的&#x27;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<h4 id="断点调试"><a href="#断点调试" class="headerlink" title="断点调试"></a>断点调试</h4><p><strong>作用：</strong>学习时可以帮助更好的理解代码运行，工作时可以更快找到bug</p>
<p>浏览器打开调试界面</p>
<ol>
<li>按F12打开开发者工具</li>
<li>点到源代码一栏 （ sources ）</li>
<li>选择代码文件</li>
</ol>
<p><strong>断点：</strong>在某句代码上加的标记就叫断点，当程序执行到这句有标记的代码时会暂停下来</p>
<h3 id="循环语句"><a href="#循环语句" class="headerlink" title="循环语句"></a>循环语句</h3><p>使用场景：重复执行 指定的一段代码，比如我们想要输出10次 ‘我学的很棒’</p>
<p>学习路径：</p>
<p>1.while循环</p>
<p>2.for 循环（重点）</p>
<h4 id="while循环"><a href="#while循环" class="headerlink" title="while循环"></a>while循环</h4><p>while :  在…. 期间， 所以 while循环 就是在满足条件期间，重复执行某些代码。</p>
<p><strong>语法：</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span> (条件表达式) &#123;</span><br><span class="line">   <span class="comment">// 循环体    </span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>例如：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// while循环: 重复执行代码</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 1. 需求: 利用循环重复打印3次 &#x27;月薪过万不是梦，毕业时候见英雄&#x27;</span></span><br><span class="line"><span class="keyword">let</span> i = <span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> (i &lt;= <span class="number">3</span>) &#123;</span><br><span class="line">  <span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">&#x27;月薪过万不是梦，毕业时候见英雄~&lt;br&gt;&#x27;</span>)</span><br><span class="line">  i++   <span class="comment">// 这里千万不要忘了变量自增否则造成死循环</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>循环三要素：</p>
<p>1.初始值 （经常用变量）</p>
<p>2.终止条件</p>
<p>3.变量的变化量</p>
<p>例如：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">  <span class="comment">// // 1. 变量的起始值</span></span><br><span class="line">  <span class="comment">// let i = 1</span></span><br><span class="line">  <span class="comment">// // 2. 终止条件</span></span><br><span class="line">  <span class="comment">// while (i &lt;= 3) &#123;</span></span><br><span class="line">  <span class="comment">//   document.write(&#x27;我要循环三次 &lt;br&gt;&#x27;)</span></span><br><span class="line">  <span class="comment">//   // 3. 变量的变化量</span></span><br><span class="line">  <span class="comment">//   i++</span></span><br><span class="line">  <span class="comment">// &#125;</span></span><br><span class="line">  <span class="comment">// 1. 变量的起始值</span></span><br><span class="line">  <span class="keyword">let</span> end = +<span class="title function_">prompt</span>(<span class="string">&#x27;请输入次数:&#x27;</span>)</span><br><span class="line"><span class="keyword">let</span> i = <span class="number">1</span></span><br><span class="line"><span class="comment">// 2. 终止条件</span></span><br><span class="line"><span class="keyword">while</span> (i &lt;= end) &#123;</span><br><span class="line">  <span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">&#x27;我要循环三次 &lt;br&gt;&#x27;</span>)</span><br><span class="line">  <span class="comment">// 3. 变量的变化量</span></span><br><span class="line">  i++</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<h4 id="中止循环"><a href="#中止循环" class="headerlink" title="中止循环"></a>中止循环</h4><p><code>break</code>   中止整个循环，一般用于结果已经得到, 后续的循环不需要的时候可以使用（提高效率）  </p>
<p><code>continue</code>  中止本次循环，一般用于排除或者跳过某一个选项的时候</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="comment">// let i = 1</span></span><br><span class="line">    <span class="comment">// while (i &lt;= 5) &#123;</span></span><br><span class="line">    <span class="comment">//   console.log(i)</span></span><br><span class="line">    <span class="comment">//   if (i === 3) &#123;</span></span><br><span class="line">    <span class="comment">//     break  // 退出循环</span></span><br><span class="line">    <span class="comment">//   &#125;</span></span><br><span class="line">    <span class="comment">//   i++</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> i = <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> (i &lt;= <span class="number">5</span>) &#123;</span><br><span class="line">      <span class="keyword">if</span> (i === <span class="number">3</span>) &#123;</span><br><span class="line">        i++</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">      &#125;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(i)</span><br><span class="line">      i++</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">  &lt;/script&gt;</span><br></pre></td></tr></table></figure>

<h4 id="无限循环"><a href="#无限循环" class="headerlink" title="无限循环"></a>无限循环</h4><p>1.while(true) 来构造“无限”循环，需要使用break退出循环。（常用）</p>
<p>2.for(;;) 也可以来构造“无限”循环，同样需要使用break退出循环。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 无限循环  </span></span><br><span class="line"><span class="comment">// 需求： 页面会一直弹窗询问你爱我吗？</span></span><br><span class="line"><span class="comment">// (1). 如果用户输入的是 &#x27;爱&#x27;，则退出弹窗</span></span><br><span class="line"><span class="comment">// (2). 否则一直弹窗询问</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 1. while(true) 无限循环</span></span><br><span class="line"><span class="comment">// while (true) &#123;</span></span><br><span class="line"><span class="comment">//   let love = prompt(&#x27;你爱我吗?&#x27;)</span></span><br><span class="line"><span class="comment">//   if (love === &#x27;爱&#x27;) &#123;</span></span><br><span class="line"><span class="comment">//     break</span></span><br><span class="line"><span class="comment">//   &#125;</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 2. for(;;) 无限循环</span></span><br><span class="line"><span class="keyword">for</span> (; ;) &#123;</span><br><span class="line">  <span class="keyword">let</span> love = <span class="title function_">prompt</span>(<span class="string">&#x27;你爱我吗?&#x27;</span>)</span><br><span class="line">  <span class="keyword">if</span> (love === <span class="string">&#x27;爱&#x27;</span>) &#123;</span><br><span class="line">    <span class="keyword">break</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="综合案例-ATM存取款机"><a href="#综合案例-ATM存取款机" class="headerlink" title="综合案例-ATM存取款机"></a>综合案例-ATM存取款机</h2><p><img data-src="/assets/1671018781557.png" alt="67101878155"></p>
<p>分析：</p>
<p>①：提示输入框写到循环里面（无限循环）</p>
<p>②：用户输入4则退出循环 break</p>
<p>③：提前准备一个金额预先存储一个数额 money</p>
<p>④：根据输入不同的值，做不同的操作</p>
<p>​     (1)  取钱则是减法操作， 存钱则是加法操作，查看余额则是直接显示金额</p>
<p>​     (2) 可以使用 if else if 多分支 来执行不同的操作</p>
<p>完整代码：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">  <span class="comment">// 1. 开始循环 输入框写到 循环里面</span></span><br><span class="line">  <span class="comment">// 3. 准备一个总的金额</span></span><br><span class="line">  <span class="keyword">let</span> money = <span class="number">100</span></span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> re = +<span class="title function_">prompt</span>(<span class="string">`</span></span><br><span class="line"><span class="string">请您选择操作：</span></span><br><span class="line"><span class="string">1.存钱</span></span><br><span class="line"><span class="string">2.取钱</span></span><br><span class="line"><span class="string">3.查看余额</span></span><br><span class="line"><span class="string">4.退出</span></span><br><span class="line"><span class="string">`</span>)</span><br><span class="line">  <span class="comment">// 2. 如果用户输入的 4 则退出循环， break  写到if 里面，没有写到switch里面， 因为4需要break退出循环</span></span><br><span class="line">  <span class="keyword">if</span> (re === <span class="number">4</span>) &#123;</span><br><span class="line">    <span class="keyword">break</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 4. 根据输入做操作</span></span><br><span class="line">  <span class="keyword">switch</span> (re) &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">      <span class="comment">// 存钱</span></span><br><span class="line">      <span class="keyword">let</span> cun = +<span class="title function_">prompt</span>(<span class="string">&#x27;请输入存款金额&#x27;</span>)</span><br><span class="line">      money = money + cun</span><br><span class="line">      <span class="keyword">break</span></span><br><span class="line">      <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">      <span class="comment">// 存钱</span></span><br><span class="line">      <span class="keyword">let</span> qu = +<span class="title function_">prompt</span>(<span class="string">&#x27;请输入取款金额&#x27;</span>)</span><br><span class="line">      money = money - qu</span><br><span class="line">      <span class="keyword">break</span></span><br><span class="line">      <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">      <span class="comment">// 存钱</span></span><br><span class="line">      <span class="title function_">alert</span>(<span class="string">`您的银行卡余额是<span class="subst">$&#123;money&#125;</span>`</span>)</span><br><span class="line">      <span class="keyword">break</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>





<h1 id="JavaScript-基础第三天笔记"><a href="#JavaScript-基础第三天笔记" class="headerlink" title="JavaScript 基础第三天笔记"></a>JavaScript 基础第三天笔记</h1><p><strong>if 多分支语句和 switch的区别：</strong></p>
<ol>
<li><p>共同点</p>
<ul>
<li>都能实现多分支选择， 多选1 </li>
<li>大部分情况下可以互换</li>
</ul>
</li>
<li><p>区别：</p>
<ul>
<li>switch…case语句通常处理case为比较<strong>确定值</strong>的情况，而if…else…语句更加灵活，通常用于<strong>范围判断</strong>(大于，等于某个范围)。</li>
<li>switch 语句进行判断后直接执行到程序的语句，效率更高，而if…else语句有几种判断条件，就得判断多少次</li>
<li>switch 一定要注意 必须是 &#x3D;&#x3D;&#x3D;  全等，一定注意 数据类型，同时注意break否则会有穿透效果</li>
<li>结论：<ul>
<li>当分支比较少时，if…else语句执行效率高。</li>
<li>当分支比较多时，switch语句执行效率高，而且结构更清晰。</li>
</ul>
</li>
</ul>
</li>
</ol>
<h2 id="for-语句"><a href="#for-语句" class="headerlink" title="for 语句"></a>for 语句</h2><blockquote>
<p>掌握 for 循环语句，让程序具备重复执行能力</p>
</blockquote>
<p><code>for</code> 是 JavaScript 提供的另一种循环控制的话句，它和 <code>while</code> 只是语法上存在差异。</p>
<h3 id="for语句的基本使用"><a href="#for语句的基本使用" class="headerlink" title="for语句的基本使用"></a>for语句的基本使用</h3><ol>
<li>实现循环的 3 要素</li>
</ol>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 1. 语法格式</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// for(起始值; 终止条件; 变化量) &#123;</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">//   // 要重复执行的代码</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// &#125;</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 2. 示例：在网页中输入标题标签</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 起始值为 1</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 变化量 i++</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 终止条件 i &lt;= 6</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">1</span>; i &lt;= <span class="number">6</span>; i++) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">`&lt;h<span class="subst">$&#123;i&#125;</span>&gt;循环控制，即重复执行&lt;h<span class="subst">$&#123;i&#125;</span>&gt;`</span>)</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ol start="2">
<li><p>变化量和死循环，<code>for</code> 循环和 <code>while</code> 一样，如果不合理设置增量和终止条件，便会产生死循环。</p>
</li>
<li><p>跳出和终止循环</p>
</li>
</ol>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 1. continue </span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">1</span>; i &lt;= <span class="number">5</span>; i++) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">if</span> (i === <span class="number">3</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">continue</span>  <span class="comment">// 结束本次循环，继续下一次循环</span></span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(i)</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 2. break</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">1</span>; i &lt;= <span class="number">5</span>; i++) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">if</span> (i === <span class="number">3</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">break</span>  <span class="comment">// 退出结束整个循环</span></span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(i)</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>结论：</p>
<ul>
<li><code>JavaScript</code> 提供了多种语句来实现循环控制，但无论使用哪种语句都离不开循环的3个特征，即起始值、变化量、终止条件，做为初学者应着重体会这3个特征，不必过多纠结三种语句的区别。</li>
<li>起始值、变化量、终止条件，由开发者根据逻辑需要进行设计，规避死循环的发生。</li>
<li>当如果明确了循环的次数的时候推荐使用<code>for</code>循环,当不明确循环的次数的时候推荐使用<code>while</code>循环</li>
</ul>
<blockquote>
<p>注意：<code>for</code> 的语法结构更简洁，故 <code>for</code> 循环的使用频次会更多。</p>
</blockquote>
<h3 id="循环嵌套"><a href="#循环嵌套" class="headerlink" title="循环嵌套"></a>循环嵌套</h3><p>利用循环的知识来对比一个简单的天文知识，我们知道地球在自转的同时也在围绕太阳公转，如果把自转和公转都看成是循环的话，就相当于是循环中又嵌套了另一个循环。</p>
<img data-src="/2024/11/19/JavaScript%E5%9F%BA%E7%A1%80/universe.gif" class="" title="universe">

<p>实际上 JavaScript 中任何一种循环语句都支持循环的嵌套，如下代码所示：</p>
<p><img data-src="/assets/1647918261399.png" alt="64791826139"></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">// 1. 外面的循环 记录第n天 </span><br><span class="line">for (let i = 1; i &lt; 4; i++) &#123;</span><br><span class="line">    document.write(`第$&#123;i&#125;天 <span class="tag">&lt;<span class="name">br</span>&gt;</span>`)</span><br><span class="line">    // 2. 里层的循环记录 几个单词</span><br><span class="line">    for (let j = 1; j &lt; 6; j++) &#123;</span><br><span class="line">        document.write(`记住第$&#123;j&#125;个单词<span class="tag">&lt;<span class="name">br</span>&gt;</span>`)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>记住，外层循环循环一次，里层循环循环全部</p>
<h4 id="倒三角"><a href="#倒三角" class="headerlink" title="倒三角"></a>倒三角</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"> <span class="comment">// 外层打印几行</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">1</span>; i &lt;= <span class="number">5</span>; i++) &#123;</span><br><span class="line">    <span class="comment">// 里层打印几个星星</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> j = <span class="number">1</span>; j &lt;= i; j++) &#123;</span><br><span class="line">        <span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">&#x27;★&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">&#x27;&lt;br&gt;&#x27;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p> <img data-src="/assets/1647918678956.png" alt="64791867895"></p>
<h4 id="九九乘法表"><a href="#九九乘法表" class="headerlink" title="九九乘法表"></a>九九乘法表</h4><p>样式css</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">span</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">5px</span> <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid pink;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">2px</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">2px</span> <span class="number">2px</span> <span class="number">2px</span> <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">192</span>, <span class="number">203</span>, .<span class="number">4</span>);</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">192</span>, <span class="number">203</span>, .<span class="number">1</span>);</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">color</span>: hotpink;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>javascript </p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"> <span class="comment">// 外层打印几行</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">1</span>; i &lt;= <span class="number">9</span>; i++) &#123;</span><br><span class="line">    <span class="comment">// 里层打印几个星星</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> j = <span class="number">1</span>; j &lt;= i; j++) &#123;</span><br><span class="line">        <span class="comment">// 只需要吧 ★ 换成  1 x 1 = 1   </span></span><br><span class="line">        <span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">`</span></span><br><span class="line"><span class="string">		&lt;div&gt; <span class="subst">$&#123;j&#125;</span> x <span class="subst">$&#123;i&#125;</span> = <span class="subst">$&#123;j * i&#125;</span> &lt;/div&gt;</span></span><br><span class="line"><span class="string">     `</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">&#x27;&lt;br&gt;&#x27;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img data-src="/assets/1647918734677.png" alt="64791873467"></p>
<h2 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h2><blockquote>
<p>知道什么是数组及其应用的场景，掌握数组声明及访问的语法。</p>
</blockquote>
<h3 id="数组是什么？"><a href="#数组是什么？" class="headerlink" title="数组是什么？"></a>数组是什么？</h3><p><strong>数组：</strong>(Array)是一种可以按顺序保存数据的数据类型</p>
<p><strong>使用场景：</strong>如果有多个数据可以用数组保存起来，然后放到一个变量中，管理非常方便</p>
<h3 id="数组的基本使用"><a href="#数组的基本使用" class="headerlink" title="数组的基本使用"></a>数组的基本使用</h3><h4 id="定义数组和数组单元"><a href="#定义数组和数组单元" class="headerlink" title="定义数组和数组单元"></a>定义数组和数组单元</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 1. 语法，使用 [] 来定义一个空数组</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 定义一个空数组，然后赋值给变量 classes</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// let classes = [];</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 2. 定义非空数组</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">let</span> classes = [<span class="string">&#x27;小明&#x27;</span>, <span class="string">&#x27;小刚&#x27;</span>, <span class="string">&#x27;小红&#x27;</span>, <span class="string">&#x27;小丽&#x27;</span>, <span class="string">&#x27;小米&#x27;</span>]</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>通过 <code>[]</code> 定义数组，数据中可以存放真正的数据，如小明、小刚、小红等这些都是数组中的数据，我们这些数据称为数组单元，数组单元之间使用英文逗号分隔。</p>
<h4 id="访问数组和数组索引"><a href="#访问数组和数组索引" class="headerlink" title="访问数组和数组索引"></a>访问数组和数组索引</h4><p>使用数组存放数据并不是最终目的，关键是能够随时的访问到数组中的数据（单元）。其实 JavaScript 为数组中的每一个数据单元都编了号，通过数据单元在数组中的编号便可以轻松访问到数组中的数据单元了。</p>
<p>我们将数据单元在数组中的编号称为索引值，也有人称其为下标。</p>
<p>索引值实际是按着数据单元在数组中的位置依次排列的，注意是从<code> 0</code> 开始的，如下图所示：</p>
<img data-src="/2024/11/19/JavaScript%E5%9F%BA%E7%A1%80/array.jpg" class="" title="array">

<p>观察上图可以数据单元【小明】对应的索引值为【0】，数据单元【小红】对应的索引值为【2】</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">let</span> classes = [<span class="string">&#x27;小明&#x27;</span>, <span class="string">&#x27;小刚&#x27;</span>, <span class="string">&#x27;小红&#x27;</span>, <span class="string">&#x27;小丽&#x27;</span>, <span class="string">&#x27;小米&#x27;</span>]</span></span><br><span class="line"><span class="language-javascript">  </span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 1. 访问数组，语法格式为：变量名[索引值]</span></span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">document</span>.<span class="title function_">write</span>(classes[<span class="number">0</span>]) <span class="comment">// 结果为：小明</span></span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">document</span>.<span class="title function_">write</span>(classes[<span class="number">1</span>]) <span class="comment">// 结果为：小刚</span></span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">document</span>.<span class="title function_">write</span>(classes[<span class="number">4</span>]) <span class="comment">// 结果为：小米</span></span></span><br><span class="line"><span class="language-javascript">  </span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 2. 通过索引值还可以为数组单重新赋值</span></span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">document</span>.<span class="title function_">write</span>(classes[<span class="number">3</span>]) <span class="comment">// 结果为：小丽</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 重新为索引值为 3 的单元赋值</span></span></span><br><span class="line"><span class="language-javascript">  classes[<span class="number">3</span>] = <span class="string">&#x27;小小丽&#x27;</span></span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">document</span>.<span class="title function_">wirte</span>(classes[<span class="number">3</span>]); <span class="comment">// 结果为： 小小丽</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="数据单元值类型"><a href="#数据单元值类型" class="headerlink" title="数据单元值类型"></a>数据单元值类型</h4><p>数组做为数据的集合，它的单元值可以是任意数据类型</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 6. 数组单值类型可以是任意数据类型</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// a) 数组单元值的类型为字符类型</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">let</span> list = [<span class="string">&#x27;HTML&#x27;</span>, <span class="string">&#x27;CSS&#x27;</span>, <span class="string">&#x27;JavaScript&#x27;</span>]</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// b) 数组单元值的类型为数值类型</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">let</span> scores = [<span class="number">78</span>, <span class="number">84</span>, <span class="number">70</span>, <span class="number">62</span>, <span class="number">75</span>]</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// c) 混合多种类型</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">let</span> mixin = [<span class="literal">true</span>, <span class="number">1</span>, <span class="literal">false</span>, <span class="string">&#x27;hello&#x27;</span>]</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="数组长度属性"><a href="#数组长度属性" class="headerlink" title="数组长度属性"></a>数组长度属性</h4><p>重申一次，数组在 JavaScript 中并不是新的数据类型，它属于对象类型。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 定义一个数组</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">let</span> arr = [<span class="string">&#x27;html&#x27;</span>, <span class="string">&#x27;css&#x27;</span>, <span class="string">&#x27;javascript&#x27;</span>]</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 数组对应着一个 length 属性，它的含义是获取数组的长度</span></span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(arr.<span class="property">length</span>) <span class="comment">// 3</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="操作数组"><a href="#操作数组" class="headerlink" title="操作数组"></a>操作数组</h3><p>数组做为对象数据类型，不但有 <code>length</code> 属性可以使用，还提供了许多方法：</p>
<ol>
<li>push 动态向数组的尾部添加一个单元</li>
<li>unshit 动态向数组头部添加一个单元</li>
<li>pop 删除最后一个单元</li>
<li>shift 删除第一个单元</li>
<li>splice 动态删除任意单元</li>
</ol>
<p>使用以上4个方法时，都是直接在原数组上进行操作，即成功调任何一个方法，原数组都跟着发生相应的改变。并且在添加或删除单元时 <code>length</code> 并不会发生错乱。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 定义一个数组</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">let</span> arr = [<span class="string">&#x27;html&#x27;</span>, <span class="string">&#x27;css&#x27;</span>, <span class="string">&#x27;javascript&#x27;</span>]</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 1. push 动态向数组的尾部添加一个单元</span></span></span><br><span class="line"><span class="language-javascript">  arr.<span class="title function_">push</span>(<span class="string">&#x27;Nodejs&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(arr)</span></span><br><span class="line"><span class="language-javascript">  arr.<span class="title function_">push</span>(<span class="string">&#x27;Vue&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 2. unshit 动态向数组头部添加一个单元</span></span></span><br><span class="line"><span class="language-javascript">  arr.<span class="title function_">unshift</span>(<span class="string">&#x27;VS Code&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(arr)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 3. splice 动态删除任意单元</span></span></span><br><span class="line"><span class="language-javascript">  arr.<span class="title function_">splice</span>(<span class="number">2</span>, <span class="number">1</span>) <span class="comment">// 从索引值为2的位置开始删除1个单元</span></span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(arr)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 4. pop 删除最后一个单元</span></span></span><br><span class="line"><span class="language-javascript">  arr.<span class="title function_">pop</span>()</span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(arr)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 5. shift 删除第一个单元</span></span></span><br><span class="line"><span class="language-javascript">  arr.<span class="title function_">shift</span>()</span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(arr)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h1 id="JavaScript-基础-第4天笔记"><a href="#JavaScript-基础-第4天笔记" class="headerlink" title="JavaScript 基础 - 第4天笔记"></a>JavaScript 基础 - 第4天笔记</h1><blockquote>
<p>理解封装的意义，能够通过函数的声明实现逻辑的封装，知道对象数据类型的特征，结合数学对象实现简单计算功能。</p>
</blockquote>
<ul>
<li>理解函数的封装的特征</li>
<li>掌握函数声明的语法</li>
<li>理解什么是函数的返回值</li>
<li>知道并能使用常见的内置函数</li>
</ul>
<h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><blockquote>
<p>理解函数的封装特性，掌握函数的语法规则</p>
</blockquote>
<h3 id="声明和调用"><a href="#声明和调用" class="headerlink" title="声明和调用"></a>声明和调用</h3><p>函数可以把具有相同或相似逻辑的代码“包裹”起来，通过函数调用执行这些被“包裹”的代码逻辑，这么做的优势是有利于精简代码方便复用。</p>
<h4 id="声明（定义）"><a href="#声明（定义）" class="headerlink" title="声明（定义）"></a>声明（定义）</h4><p>声明（定义）一个完整函数包括关键字、函数名、形式参数、函数体、返回值5个部分</p>
<img data-src="/2024/11/19/JavaScript%E5%9F%BA%E7%A1%80/function.jpg" class="" title="function">

<h4 id="调用"><a href="#调用" class="headerlink" title="调用"></a>调用</h4><p>声明（定义）的函数必须调用才会真正被执行，使用 <code>()</code> 调用函数。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>JavaScript 基础 - 声明和调用<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 声明（定义）了最简单的函数，既没有形式参数，也没有返回值</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">sayHi</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;嗨~&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 函数调用，这些函数体内的代码逻辑会被执行</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 函数名()</span></span></span><br><span class="line"><span class="language-javascript">        </span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">sayHi</span>()</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 可以重复被调用，多少次都可以</span></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">sayHi</span>()</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>注：函数名的命名规则与变量是一致的，并且尽量保证函数名的语义。</p>
</blockquote>
<p>小案例： 小星星</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">        <span class="comment">// 函数声明</span></span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">sayHi</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="comment">// document.write(&#x27;hai~&#x27;)</span></span><br><span class="line">            <span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">`*&lt;br&gt;`</span>)</span><br><span class="line">            <span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">`**&lt;br&gt;`</span>)</span><br><span class="line">            <span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">`***&lt;br&gt;`</span>)</span><br><span class="line">            <span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">`****&lt;br&gt;`</span>)</span><br><span class="line">            <span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">`*****&lt;br&gt;`</span>)</span><br><span class="line">            <span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">`******&lt;br&gt;`</span>)</span><br><span class="line">            <span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">`*******&lt;br&gt;`</span>)</span><br><span class="line">            <span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">`********&lt;br&gt;`</span>)</span><br><span class="line">            <span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">`*********&lt;br&gt;`</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 函数调用</span></span><br><span class="line">        <span class="title function_">sayHi</span>()</span><br><span class="line">        <span class="title function_">sayHi</span>()</span><br><span class="line">        <span class="title function_">sayHi</span>()</span><br><span class="line">        <span class="title function_">sayHi</span>()</span><br><span class="line">        <span class="title function_">sayHi</span>()</span><br><span class="line">    &lt;/script&gt;</span><br></pre></td></tr></table></figure>

<h3 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h3><p>通过向函数传递参数，可以让函数更加灵活多变，参数可以理解成是一个变量。</p>
<p>声明（定义）一个功能为打招呼的函数</p>
<ul>
<li>传入数据列表</li>
<li>声明这个函数需要传入几个数据</li>
<li>多个数据用逗号隔开</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>JavaScript 基础 - 函数参数<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 声明（定义）一个功能为打招呼的函数</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// function sayHi() &#123;</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//   console.log(&#x27;嗨~&#x27;)</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// &#125;</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 调用函数</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// sayHi()</span></span></span><br><span class="line"><span class="language-javascript">	</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 这个函数似乎没有什么价值，除非能够向不同的人打招呼</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 这就需要借助参数来实现了</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">sayHi</span>(<span class="params">name</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 参数 name 可以被理解成是一个变量</span></span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">console</span>.<span class="title function_">log</span>(name)</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;嗨~&#x27;</span> + name)</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 调用 sayHi 函数，括号中多了 &#x27;小明&#x27;</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 这时相当于为参数 name 赋值了</span></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">sayHi</span>(<span class="string">&#x27;小明&#x27;</span>)<span class="comment">// 结果为 小明</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 再次调用 sayHi 函数，括号中多了 &#x27;小红&#x27;</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 这时相当于为参数 name 赋值了</span></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">sayHi</span>(<span class="string">&#x27;小红&#x27;</span>) <span class="comment">// 结果为 小红</span></span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>总结：</p>
<ol>
<li>声明（定义）函数时的形参没有数量限制，当有多个形参时使用 <code>,</code> 分隔</li>
<li>调用函数传递的实参要与形参的顺序一致</li>
</ol>
<h4 id="形参和实参"><a href="#形参和实参" class="headerlink" title="形参和实参"></a>形参和实参</h4><p>形参：声明函数时写在函数名右边小括号里的叫形参（形式上的参数）</p>
<p>实参：调用函数时写在函数名右边小括号里的叫实参（实际上的参数）</p>
<p>形参可以理解为是在这个函数内声明的变量（比如 num1 &#x3D; 10）实参可以理解为是给这个变量赋值</p>
<p>开发中尽量保持形参和实参个数一致</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>JavaScript 基础 - 函数参数<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 声明（定义）一个计算任意两数字和的函数</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 形参 x 和 y 分别表示任意两个数字，它们是两个变量</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">count</span>(<span class="params">x, y</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">console</span>.<span class="title function_">log</span>(x + y);</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 调用函数，传入两个具体的数字做为实参</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 此时 10 赋值给了形参 x</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 此时 5  赋值给了形参 y</span></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">count</span>(<span class="number">10</span>, <span class="number">5</span>); <span class="comment">// 结果为 15</span></span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a>返回值</h3><p>函数的本质是封装（包裹），函数体内的逻辑执行完毕后，函数外部如何获得函数内部的执行结果呢？要想获得函数内部逻辑的执行结果，需要通过 <code>return</code> 这个关键字，将内部执行结果传递到函数外部，这个被传递到外部的结果就是返回值。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>JavaScript 基础 - 函数返回值<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 定义求和函数</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">count</span>(<span class="params">a, b</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">let</span> s = a + b</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// s 即为 a + b 的结果</span></span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 通过 return 将 s 传递到外部</span></span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">return</span> s</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 调用函数，如果一个函数有返回值</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 那么可将这个返回值赋值给外部的任意变量</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">let</span> total = <span class="title function_">count</span>(<span class="number">5</span>, <span class="number">12</span>)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>总结：</p>
<ol>
<li>在函数体中使用return 关键字能将内部的执行结果交给函数外部使用</li>
<li>函数内部只能出现1 次 return，并且 return 下一行代码不会再被执行，所以return 后面的数据不要换行写</li>
<li>return会立即结束当前函数</li>
<li>函数可以没有return，这种情况默认返回值为 undefined</li>
</ol>
<h3 id="作用域"><a href="#作用域" class="headerlink" title="作用域"></a>作用域</h3><p>通常来说，一段程序代码中所用到的名字并不总是有效和可用的，而限定这个名字的可用性的代码范围就是这个名字的作用域。</p>
<p>作用域的使用提高了程序逻辑的局部性，增强了程序的可靠性，减少了名字冲突。</p>
<h4 id="全局作用域"><a href="#全局作用域" class="headerlink" title="全局作用域"></a>全局作用域</h4><p>作用于所有代码执行的环境(整个 script 标签内部)或者一个独立的 js 文件</p>
<p>处于全局作用域内的变量，称为全局变量</p>
<h4 id="局部作用域"><a href="#局部作用域" class="headerlink" title="局部作用域"></a>局部作用域</h4><p>作用于函数内的代码环境，就是局部作用域。 因为跟函数有关系，所以也称为函数作用域。</p>
<p>处于局部作用域内的变量称为局部变量</p>
<blockquote>
<p>如果函数内部，变量没有声明，直接赋值，也当全局变量看，但是强烈不推荐</p>
<p>但是有一种情况，函数内部的形参可以看做是局部变量。</p>
</blockquote>
<h3 id="匿名函数"><a href="#匿名函数" class="headerlink" title="匿名函数"></a>匿名函数</h3><p>函数可以分为具名函数和匿名函数</p>
<p>匿名函数：没有名字的函数,无法直接使用。</p>
<h4 id="函数表达式"><a href="#函数表达式" class="headerlink" title="函数表达式"></a>函数表达式</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 声明</span></span><br><span class="line"><span class="keyword">let</span> fn = <span class="keyword">function</span>(<span class="params"></span>) &#123; </span><br><span class="line">   <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;函数表达式&#x27;</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 调用</span></span><br><span class="line"><span class="title function_">fn</span>()</span><br></pre></td></tr></table></figure>

<h4 id="立即执行函数"><a href="#立即执行函数" class="headerlink" title="立即执行函数"></a>立即执行函数</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">(<span class="keyword">function</span>(<span class="params"></span>)&#123; xxx  &#125;)();</span><br><span class="line">(<span class="keyword">function</span>(<span class="params"></span>)&#123;xxxx&#125;());</span><br></pre></td></tr></table></figure>

<blockquote>
<p>无需调用，立即执行，其实本质已经调用了</p>
<p>多个立即执行函数之间用分号隔开</p>
</blockquote>
<p>​		在能够访问到的情况下 先局部 局部没有在找全局</p>
<h1 id="JavaScript-基础-第5天"><a href="#JavaScript-基础-第5天" class="headerlink" title="JavaScript 基础 - 第5天"></a>JavaScript 基础 - 第5天</h1><blockquote>
<p>知道对象数据类型的特征，能够利用数组对象渲染页面</p>
</blockquote>
<ul>
<li>理解什么是对象，掌握定义对象的语法</li>
<li>掌握数学对象的使用</li>
</ul>
<h2 id="对象"><a href="#对象" class="headerlink" title="对象"></a>对象</h2><blockquote>
<p>对象是 JavaScript 数据类型的一种，之前已经学习了数值类型、字符串类型、布尔类型、undefined。对象数据类型可以被理解成是一种数据集合。它由属性和方法两部分构成。</p>
</blockquote>
<h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><p>声明一个对象类型的变量与之前声明一个数值或字符串类型的变量没有本质上的区别。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>JavaScript 基础 - 对象语法<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 声明字符串类型变量</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">let</span> str = <span class="string">&#x27;hello world!&#x27;</span></span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 声明数值类型变量</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">let</span> num = <span class="number">199</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 声明对象类型变量，使用一对花括号</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// user 便是一个对象了，目前它是一个空对象</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">let</span> user = &#123;&#125;</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="属性和访问"><a href="#属性和访问" class="headerlink" title="属性和访问"></a>属性和访问</h3><p>数据描述性的信息称为属性，如人的姓名、身高、年龄、性别等，一般是名词性的。</p>
<ol>
<li>属性都是成 对出现的，包括属性名和值，它们之间使用英文 <code>:</code> 分隔</li>
<li>多个属性之间使用英文 <code>,</code> 分隔</li>
<li>属性就是依附在对象上的变量</li>
<li>属性名可以使用 <code>&quot;&quot;</code> 或 <code>&#39;&#39;</code>，一般情况下省略，除非名称遇到特殊符号如空格、中横线等</li>
</ol>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>JavaScript 基础 - 对象语法<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 通过对象描述一个人的数据信息</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// person 是一个对象，它包含了一个属性 name</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 属性都是成对出现的，属性名 和 值，它们之间使用英文 : 分隔</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">let</span> person = &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">name</span>: <span class="string">&#x27;小明&#x27;</span>, <span class="comment">// 描述人的姓名</span></span></span><br><span class="line"><span class="language-javascript">      <span class="attr">age</span>: <span class="number">18</span>, <span class="comment">// 描述人的年龄</span></span></span><br><span class="line"><span class="language-javascript">      <span class="attr">stature</span>: <span class="number">185</span>, <span class="comment">// 描述人的身高</span></span></span><br><span class="line"><span class="language-javascript">      <span class="attr">gender</span>: <span class="string">&#x27;男&#x27;</span>, <span class="comment">// 描述人的性别</span></span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>声明对象，并添加了若干属性后，可以使用 <code>.</code> 或 <code>[]</code> 获得对象中属性对应的值，我称之为属性访问。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>JavaScript 基础 - 对象语法<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 通过对象描述一个人的数据信息</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// person 是一个对象，它包含了一个属性 name</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 属性都是成对出现的，属性名 和 值，它们之间使用英文 : 分隔</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">let</span> person = &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">name</span>: <span class="string">&#x27;小明&#x27;</span>, <span class="comment">// 描述人的姓名</span></span></span><br><span class="line"><span class="language-javascript">      <span class="attr">age</span>: <span class="number">18</span>, <span class="comment">// 描述人的年龄</span></span></span><br><span class="line"><span class="language-javascript">      <span class="attr">stature</span>: <span class="number">185</span>, <span class="comment">// 描述人的身高</span></span></span><br><span class="line"><span class="language-javascript">      <span class="attr">gender</span>: <span class="string">&#x27;男&#x27;</span>, <span class="comment">// 描述人的性别</span></span></span><br><span class="line"><span class="language-javascript">    &#125;;</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 访问人的名字</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(person.<span class="property">name</span>) <span class="comment">// 结果为 小明</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 访问人性别</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(person.<span class="property">gender</span>) <span class="comment">// 结果为 男</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 访问人的身高</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(person[<span class="string">&#x27;stature&#x27;</span>]) <span class="comment">// 结果为 185</span></span></span><br><span class="line"><span class="language-javascript">   <span class="comment">// 或者</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(person.<span class="property">stature</span>) <span class="comment">// 结果同为 185</span></span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>扩展：也可以动态为对象添加属性，动态添加与直接定义是一样的，只是语法上更灵活。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>JavaScript 基础 - 对象语法<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 声明一个空的对象（没有任何属性）</span></span></span><br><span class="line"><span class="language-javascript">	<span class="keyword">let</span> user = &#123;&#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 动态追加属性</span></span></span><br><span class="line"><span class="language-javascript">    user.<span class="property">name</span> = <span class="string">&#x27;小明&#x27;</span></span></span><br><span class="line"><span class="language-javascript">    user[<span class="string">&#x27;age&#x27;</span>] = <span class="number">18</span></span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 动态添加与直接定义是一样的，只是语法上更灵活</span></span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="方法和调用"><a href="#方法和调用" class="headerlink" title="方法和调用"></a>方法和调用</h3><p>数据行为性的信息称为方法，如跑步、唱歌等，一般是动词性的，其本质是函数。</p>
<ol>
<li>方法是由方法名和函数两部分构成，它们之间使用 : 分隔</li>
<li>多个属性之间使用英文 <code>,</code> 分隔</li>
<li>方法是依附在对象中的函数</li>
<li>方法名可以使用 <code>&quot;&quot;</code> 或 <code>&#39;&#39;</code>，一般情况下省略，除非名称遇到特殊符号如空格、中横线等</li>
</ol>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>JavaScript 基础 - 对象方法<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 方法是依附在对象上的函数</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">let</span> person = &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">name</span>: <span class="string">&#x27;小红&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">age</span>: <span class="number">18</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 方法是由方法名和函数两部分构成，它们之间使用 : 分隔</span></span></span><br><span class="line"><span class="language-javascript">      <span class="attr">singing</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;两只老虎，两只老虎，跑的快，跑的快...&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">run</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;我跑的非常快...&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>声明对象，并添加了若干方法后，可以使用 <code>.</code> 或 <code>[]</code> 调用对象中函数，我称之为方法调用。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>JavaScript 基础 - 对象方法<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 方法是依附在对象上的函数</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">let</span> person = &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">name</span>: <span class="string">&#x27;小红&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">age</span>: <span class="number">18</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 方法是由方法名和函数两部分构成，它们之间使用 : 分隔</span></span></span><br><span class="line"><span class="language-javascript">      <span class="attr">singing</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;两只老虎，两只老虎，跑的快，跑的快...&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">run</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;我跑的非常快...&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 调用对象中 singing 方法</span></span></span><br><span class="line"><span class="language-javascript">    person.<span class="title function_">singing</span>()</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 调用对象中的 run 方法</span></span></span><br><span class="line"><span class="language-javascript">    person.<span class="title function_">run</span>()</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>扩展：也可以动态为对象添加方法，动态添加与直接定义是一样的，只是语法上更灵活。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>JavaScript 基础 - 对象方法<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 声明一个空的对象（没有任何属性，也没有任何方法）</span></span></span><br><span class="line"><span class="language-javascript">	<span class="keyword">let</span> user = &#123;&#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 动态追加属性</span></span></span><br><span class="line"><span class="language-javascript">    user.<span class="property">name</span> = <span class="string">&#x27;小明&#x27;</span></span></span><br><span class="line"><span class="language-javascript">    user.[<span class="string">&#x27;age&#x27;</span>] = <span class="number">18</span></span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 动态添加方法</span></span></span><br><span class="line"><span class="language-javascript">    user.<span class="property">move</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;移动一点距离...&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>注：无论是属性或是方法，同一个对象中出现名称一样的，后面的会覆盖前面的。</strong></p>
<h3 id="null"><a href="#null" class="headerlink" title="null"></a>null</h3><p>null 也是 JavaScript 中数据类型的一种，通常只用它来表示不存在的对象。使用 typeof 检测类型它的类型时，结果为 <code>object</code>。</p>
<h4 id="遍历对象"><a href="#遍历对象" class="headerlink" title="遍历对象"></a>遍历对象</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> obj = &#123;</span><br><span class="line">    <span class="attr">uname</span>: <span class="string">&#x27;pink&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> k <span class="keyword">in</span> obj) &#123;</span><br><span class="line">    <span class="comment">// k 属性名  字符串  带引号    obj.&#x27;uname&#x27;     k ===  &#x27;uname&#x27;</span></span><br><span class="line">    <span class="comment">// obj[k]  属性值    obj[&#x27;uname&#x27;]   obj[k]</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>for in 不提倡遍历数组 因为 k 是 字符串  </p>
<h2 id="内置对象"><a href="#内置对象" class="headerlink" title="内置对象"></a>内置对象</h2><p>回想一下我们曾经使用过的 <code>console.log</code>，<code>console</code>其实就是 JavaScript 中内置的对象，该对象中存在一个方法叫 <code>log</code>，然后调用 <code>log</code> 这个方法，即 <code>console.log()</code>。</p>
<p>除了 <code>console</code> 对象外，JavaScritp 还有其它的内置的对象</p>
<h3 id="Math"><a href="#Math" class="headerlink" title="Math"></a>Math</h3><p><code>Math</code> 是 JavaScript 中内置的对象，称为数学对象，这个对象下即包含了属性，也包含了许多的方法。</p>
<h4 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h4><ul>
<li>Math.PI，获取圆周率</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 圆周率</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Math</span>.<span class="property">PI</span>);</span><br></pre></td></tr></table></figure>

<h4 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h4><ul>
<li>Math.random，生成 0 到 1 间的随机数</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 0 ~ 1 之间的随机数, 包含 0 不包含 1</span></span><br><span class="line"><span class="title class_">Math</span>.<span class="title function_">random</span>()</span><br></pre></td></tr></table></figure>

<ul>
<li>Math.ceil，数字向上取整</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 舍弃小数部分，整数部分加1</span></span><br><span class="line"><span class="title class_">Math</span>.<span class="title function_">ceil</span>(<span class="number">3.4</span>)</span><br></pre></td></tr></table></figure>

<ul>
<li>Math.floor，数字向下取整</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 舍弃小数部分，整数部分不变</span></span><br><span class="line"><span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="number">4.68</span>)</span><br></pre></td></tr></table></figure>

<ul>
<li>Math.round，四舍五入取整</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 取整，四舍五入原则</span></span><br><span class="line"><span class="title class_">Math</span>.<span class="title function_">round</span>(<span class="number">5.46539</span>)</span><br><span class="line"><span class="title class_">Math</span>.<span class="title function_">round</span>(<span class="number">4.849</span>)</span><br></pre></td></tr></table></figure>

<ul>
<li>Math.max，在一组数中找出最大的</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 找出最大值</span></span><br><span class="line"><span class="title class_">Math</span>.<span class="title function_">max</span>(<span class="number">10</span>, <span class="number">21</span>, <span class="number">7</span>, <span class="number">24</span>, <span class="number">13</span>)</span><br></pre></td></tr></table></figure>

<ul>
<li>Math.min，在一组数中找出最小的</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 找出最小值</span></span><br><span class="line"><span class="title class_">Math</span>.<span class="title function_">min</span>(<span class="number">24</span>, <span class="number">18</span>, <span class="number">6</span>, <span class="number">19</span>, <span class="number">21</span>)</span><br></pre></td></tr></table></figure>

<ul>
<li>Math.pow，幂方法</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 求某个数的多少次方</span></span><br><span class="line"><span class="title class_">Math</span>.<span class="title function_">pow</span>(<span class="number">4</span>, <span class="number">2</span>) <span class="comment">// 求 4 的 2 次方</span></span><br><span class="line"><span class="title class_">Math</span>.<span class="title function_">pow</span>(<span class="number">2</span>, <span class="number">3</span>) <span class="comment">// 求 2 的 3 次方</span></span><br></pre></td></tr></table></figure>

<ul>
<li>Math.sqrt，平方根</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 求某数的平方根</span></span><br><span class="line"><span class="title class_">Math</span>.<span class="title function_">sqrt</span>(<span class="number">16</span>)</span><br></pre></td></tr></table></figure>

<p>数学对象提供了比较多的方法，这里不要求强记，通过演示数学对象的使用，加深对对象的理解。</p>
]]></content>
      <categories>
        <category>前端</category>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>css</tag>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title>JavaScript提高</title>
    <url>/2024/11/19/JavaScript%E6%8F%90%E9%AB%98/</url>
    <content><![CDATA[<h1 id="JavaScript-进阶-第1天"><a href="#JavaScript-进阶-第1天" class="headerlink" title="JavaScript 进阶 - 第1天"></a>JavaScript 进阶 - 第1天</h1><blockquote>
<p>学习作用域、变量提升、闭包等语言特征，加深对 JavaScript 的理解，掌握变量赋值、函数声明的简洁语法，降低代码的冗余度。</p>
</blockquote>
<ul>
<li>理解作用域对程序执行的影响</li>
<li>能够分析程序执行的作用域范围</li>
<li>理解闭包本质，利用闭包创建隔离作用域</li>
<li>了解什么变量提升及函数提升</li>
<li>掌握箭头函数、解析剩余参数等简洁语法</li>
</ul>
<h2 id="作用域"><a href="#作用域" class="headerlink" title="作用域"></a>作用域</h2><blockquote>
<p>了解作用域对程序执行的影响及作用域链的查找机制，使用闭包函数创建隔离作用域避免全局变量污染。</p>
</blockquote>
<p>作用域（scope）规定了变量能够被访问的“范围”，离开了这个“范围”变量便不能被访问，作用域分为全局作用域和局部作用域。</p>
<h3 id="局部作用域"><a href="#局部作用域" class="headerlink" title="局部作用域"></a>局部作用域</h3><p>局部作用域分为函数作用域和块作用域。</p>
<h4 id="函数作用域"><a href="#函数作用域" class="headerlink" title="函数作用域"></a>函数作用域</h4><p>在函数内部声明的变量只能在函数内部被访问，外部无法直接访问。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 声明 counter 函数</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">function</span> <span class="title function_">counter</span>(<span class="params">x, y</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 函数内部声明的变量</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> s = x + y</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(s) <span class="comment">// 18</span></span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 设用 counter 函数</span></span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">counter</span>(<span class="number">10</span>, <span class="number">8</span>)</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 访问变量 s</span></span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(s)<span class="comment">// 报错</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>总结：</p>
<ol>
<li>函数内部声明的变量，在函数外部无法被访问</li>
<li>函数的参数也是函数内部的局部变量</li>
<li>不同函数内部声明的变量无法互相访问</li>
<li>函数执行完毕后，函数内部的变量实际被清空了</li>
</ol>
<h4 id="块作用域"><a href="#块作用域" class="headerlink" title="块作用域"></a>块作用域</h4><p>在 JavaScript 中使用 <code>&#123;&#125;</code> 包裹的代码称为代码块，代码块内部声明的变量外部将【有可能】无法被访问。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// age 只能在该代码块中被访问</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">let</span> age = <span class="number">18</span>;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(age); <span class="comment">// 正常</span></span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">  </span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 超出了 age 的作用域</span></span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(age) <span class="comment">// 报错</span></span></span><br><span class="line"><span class="language-javascript">  </span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">let</span> flag = <span class="literal">true</span>;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">if</span>(flag) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// str 只能在该代码块中被访问</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">let</span> str = <span class="string">&#x27;hello world!&#x27;</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(str); <span class="comment">// 正常</span></span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">  </span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 超出了 age 的作用域</span></span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(str); <span class="comment">// 报错</span></span></span><br><span class="line"><span class="language-javascript">  </span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">for</span>(<span class="keyword">let</span> t = <span class="number">1</span>; t &lt;= <span class="number">6</span>; t++) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// t 只能在该代码块中被访问</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(t); <span class="comment">// 正常</span></span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">  </span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 超出了 t 的作用域</span></span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(t); <span class="comment">// 报错</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>JavaScript 中除了变量外还有常量，常量与变量本质的区别是【常量必须要有值且不允许被重新赋值】，常量值为对象时其属性和方法允许重新赋值。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 必须要有值</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> version = <span class="string">&#x27;1.0.0&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 不能重新赋值</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// version = &#x27;1.0.1&#x27;;</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 常量值为对象类型</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> user = &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">name</span>: <span class="string">&#x27;小明&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">age</span>: <span class="number">18</span></span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 不能重新赋值</span></span></span><br><span class="line"><span class="language-javascript">  user = &#123;&#125;;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 属性和方法允许被修改</span></span></span><br><span class="line"><span class="language-javascript">  user.<span class="property">name</span> = <span class="string">&#x27;小小明&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">  user.<span class="property">gender</span> = <span class="string">&#x27;男&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>总结：</p>
<ol>
<li><code>let</code> 声明的变量会产生块作用域，<code>var</code> 不会产生块作用域</li>
<li><code>const</code> 声明的常量也会产生块作用域</li>
<li>不同代码块之间的变量无法互相访问</li>
<li>推荐使用 <code>let</code> 或 <code>const</code></li>
</ol>
<p>注：开发中 <code>let</code> 和 <code>const</code> 经常不加区分的使用，如果担心某个值会不小被修改时，则只能使用 <code>const</code> 声明成常量。</p>
<h3 id="全局作用域"><a href="#全局作用域" class="headerlink" title="全局作用域"></a>全局作用域</h3><p><code>&lt;script&gt;</code> 标签和 <code>.js</code> 文件的【最外层】就是所谓的全局作用域，在此声明的变量在函数内部也可以被访问。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 此处是全局</span></span></span><br><span class="line"><span class="language-javascript">  </span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">function</span> <span class="title function_">sayHi</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 此处为局部</span></span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 此处为全局</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>全局作用域中声明的变量，任何其它作用域都可以被访问，如下代码所示：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 全局变量 name</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> name = <span class="string">&#x27;小明&#x27;</span></span></span><br><span class="line"><span class="language-javascript">  </span></span><br><span class="line"><span class="language-javascript">  	<span class="comment">// 函数作用域中访问全局</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">sayHi</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 此处为局部</span></span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;你好&#x27;</span> + name)</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 全局变量 flag 和 x</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> flag = <span class="literal">true</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">let</span> x = <span class="number">10</span></span></span><br><span class="line"><span class="language-javascript">  </span></span><br><span class="line"><span class="language-javascript">  	<span class="comment">// 块作用域中访问全局</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">if</span>(flag) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">let</span> y = <span class="number">5</span></span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">console</span>.<span class="title function_">log</span>(x + y) <span class="comment">// x 是全局的</span></span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>总结：</p>
<ol>
<li>为 <code>window</code> 对象动态添加的属性默认也是全局的，不推荐！</li>
<li>函数中未使用任何关键字声明的变量为全局变量，不推荐！！！</li>
<li>尽可能少的声明全局变量，防止全局变量被污染</li>
</ol>
<p>JavaScript 中的作用域是程序被执行时的底层机制，了解这一机制有助于规范代码书写习惯，避免因作用域导致的语法错误。</p>
<h3 id="作用域链"><a href="#作用域链" class="headerlink" title="作用域链"></a>作用域链</h3><p>在解释什么是作用域链前先来看一段代码：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 全局作用域</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">let</span> a = <span class="number">1</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">let</span> b = <span class="number">2</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 局部作用域</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">function</span> <span class="title function_">f</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">let</span> c</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 局部作用域</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">g</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">let</span> d = <span class="string">&#x27;yo&#x27;</span></span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>函数内部允许创建新的函数，<code>f</code> 函数内部创建的新函数 <code>g</code>，会产生新的函数作用域，由此可知作用域产生了嵌套的关系。</p>
<p>如下图所示，父子关系的作用域关联在一起形成了链状的结构，作用域链的名字也由此而来。</p>
<p>作用域链本质上是底层的变量查找机制，在函数被执行时，会优先查找当前函数作用域中查找变量，如果当前作用域查找不到则会依次逐级查找父级作用域直到全局作用域，如下代码所示：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 全局作用域</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">let</span> a = <span class="number">1</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">let</span> b = <span class="number">2</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 局部作用域</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">function</span> <span class="title function_">f</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">let</span> c</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// let a = 10;</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(a) <span class="comment">// 1 或 10</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(d) <span class="comment">// 报错</span></span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 局部作用域</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">g</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">let</span> d = <span class="string">&#x27;yo&#x27;</span></span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// let b = 20;</span></span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">console</span>.<span class="title function_">log</span>(b) <span class="comment">// 2 或 20</span></span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 调用 g 函数</span></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">g</span>()</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(c) <span class="comment">// 报错</span></span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(d) <span class="comment">// 报错</span></span></span><br><span class="line"><span class="language-javascript">  </span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">f</span>();</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>总结：</p>
<ol>
<li>嵌套关系的作用域串联起来形成了作用域链</li>
<li>相同作用域链中按着从小到大的规则查找变量</li>
<li>子作用域能够访问父作用域，父级作用域无法访问子级作用域</li>
</ol>
<h3 id="闭包"><a href="#闭包" class="headerlink" title="闭包"></a>闭包</h3><p>闭包是一种比较特殊和函数，使用闭包能够访问函数作用域中的变量。从代码形式上看闭包是一个做为返回值的函数，如下代码所示：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 1. 闭包 : 内层函数 + 外层函数变量</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// function outer() &#123;</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//   const a = 1</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//   function f() &#123;</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//     console.log(a)</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//   &#125;</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//   f()</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// &#125;</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// outer()</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 2. 闭包的应用： 实现数据的私有。统计函数的调用次数</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// let count = 1</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// function fn() &#123;</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//   count++</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//   console.log(`函数被调用$&#123;count&#125;次`)</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// &#125;</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 3. 闭包的写法  统计函数的调用次数</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">outer</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">let</span> count = <span class="number">1</span></span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        count++</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`函数被调用<span class="subst">$&#123;count&#125;</span>次`</span>)</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">return</span> fn</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> re = <span class="title function_">outer</span>()</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// const re = function fn() &#123;</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//   count++</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//   console.log(`函数被调用$&#123;count&#125;次`)</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// &#125;</span></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">re</span>()</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">re</span>()</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// const fn = function() &#123; &#125;  函数表达式</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 4. 闭包存在的问题： 可能会造成内存泄漏</span></span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>总结：</p>
<p>1.怎么理解闭包？</p>
<ul>
<li>闭包 &#x3D; 内层函数 + 外层函数的变量</li>
</ul>
<p>2.闭包的作用？</p>
<ul>
<li>封闭数据，实现数据私有，外部也可以访问函数内部的变量</li>
<li>闭包很有用，因为它允许将函数与其所操作的某些数据（环境）关联起来</li>
</ul>
<p>3.闭包可能引起的问题？</p>
<ul>
<li>内存泄漏</li>
</ul>
<h3 id="变量提升"><a href="#变量提升" class="headerlink" title="变量提升"></a>变量提升</h3><p>变量提升是 JavaScript 中比较“奇怪”的现象，它允许在变量声明之前即被访问，</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 访问变量 str</span></span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(str + <span class="string">&#x27;world!&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 声明变量 str</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> str = <span class="string">&#x27;hello &#x27;</span>;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>总结：</p>
<ol>
<li>变量在未声明即被访问时会报语法错误</li>
<li>变量在声明之前即被访问，变量的值为 <code>undefined</code></li>
<li><code>let</code> 声明的变量不存在变量提升，推荐使用 <code>let</code></li>
<li>变量提升出现在相同作用域当中</li>
<li>实际开发中推荐先声明再访问变量</li>
</ol>
<p>注：关于变量提升的原理分析会涉及较为复杂的词法分析等知识，而开发中使用 <code>let</code> 可以轻松规避变量的提升，因此在此不做过多的探讨，有兴趣可<a href="https://segmentfault.com/a/1190000013915935">查阅资料</a>。</p>
<h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><blockquote>
<p>知道函数参数默认值、动态参数、剩余参数的使用细节，提升函数应用的灵活度，知道箭头函数的语法及与普通函数的差异。</p>
</blockquote>
<h3 id="函数提升"><a href="#函数提升" class="headerlink" title="函数提升"></a>函数提升</h3><p>函数提升与变量提升比较类似，是指函数在声明之前即可被调用。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 调用函数</span></span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">foo</span>()</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 声明函数</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">function</span> <span class="title function_">foo</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;声明之前即被调用...&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 不存在提升现象</span></span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">bar</span>()  <span class="comment">// 错误</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> bar = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;函数表达式不存在提升现象...&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>总结：</p>
<ol>
<li>函数提升能够使函数的声明调用更灵活</li>
<li>函数表达式不存在提升的现象</li>
<li>函数提升出现在相同作用域当中</li>
</ol>
<h3 id="函数参数"><a href="#函数参数" class="headerlink" title="函数参数"></a>函数参数</h3><p>函数参数的使用细节，能够提升函数应用的灵活度。</p>
<h4 id="默认值"><a href="#默认值" class="headerlink" title="默认值"></a>默认值</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 设置参数默认值</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">function</span> <span class="title function_">sayHi</span>(<span class="params">name=<span class="string">&quot;小明&quot;</span>, age=<span class="number">18</span></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">`&lt;p&gt;大家好，我叫<span class="subst">$&#123;name&#125;</span>，我今年<span class="subst">$&#123;age&#125;</span>岁了。&lt;/p&gt;`</span>);</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 调用函数</span></span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">sayHi</span>();</span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">sayHi</span>(<span class="string">&#x27;小红&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">sayHi</span>(<span class="string">&#x27;小刚&#x27;</span>, <span class="number">21</span>);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>总结：</p>
<ol>
<li>声明函数时为形参赋值即为参数的默认值</li>
<li>如果参数未自定义默认值时，参数的默认值为 <code>undefined</code></li>
<li>调用函数时没有传入对应实参时，参数的默认值被当做实参传入</li>
</ol>
<h4 id="动态参数"><a href="#动态参数" class="headerlink" title="动态参数"></a>动态参数</h4><p><code>arguments</code> 是函数内部内置的伪数组变量，它包含了调用函数时传入的所有实参。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 求生函数，计算所有参数的和</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">function</span> <span class="title function_">sum</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// console.log(arguments)</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">let</span> s = <span class="number">0</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="variable language_">arguments</span>.<span class="property">length</span>; i++) &#123;</span></span><br><span class="line"><span class="language-javascript">      s += <span class="variable language_">arguments</span>[i]</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(s)</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 调用求和函数</span></span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">sum</span>(<span class="number">5</span>, <span class="number">10</span>)<span class="comment">// 两个参数</span></span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">sum</span>(<span class="number">1</span>, <span class="number">2</span>, <span class="number">4</span>) <span class="comment">// 两个参数</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>总结：</p>
<ol>
<li><code>arguments</code> 是一个伪数组</li>
<li><code>arguments</code> 的作用是动态获取函数的实参</li>
</ol>
<h4 id="剩余参数"><a href="#剩余参数" class="headerlink" title="剩余参数"></a>剩余参数</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">function</span> <span class="title function_">config</span>(<span class="params">baseURL, ...other</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(baseURL) <span class="comment">// 得到 &#x27;http://baidu.com&#x27;</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(other)  <span class="comment">// other  得到 [&#x27;get&#x27;, &#x27;json&#x27;]</span></span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 调用函数</span></span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">config</span>(<span class="string">&#x27;http://baidu.com&#x27;</span>, <span class="string">&#x27;get&#x27;</span>, <span class="string">&#x27;json&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>总结：</p>
<ol>
<li><code>...</code> 是语法符号，置于最末函数形参之前，用于获取多余的实参</li>
<li>借助 <code>...</code> 获取的剩余实参，是个真数组</li>
</ol>
<h3 id="箭头函数"><a href="#箭头函数" class="headerlink" title="箭头函数"></a>箭头函数</h3><p>箭头函数是一种声明函数的简洁语法，它与普通函数并无本质的区别，差异性更多体现在语法格式上。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// const fn = function () &#123;</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//   console.log(123)</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// &#125;</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 1. 箭头函数 基本语法</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// const fn = () =&gt; &#123;</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//   console.log(123)</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// &#125;</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// fn()</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// const fn = (x) =&gt; &#123;</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//   console.log(x)</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// &#125;</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// fn(1)</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 2. 只有一个形参的时候，可以省略小括号</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// const fn = x =&gt; &#123;</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//   console.log(x)</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// &#125;</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// fn(1)</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// // 3. 只有一行代码的时候，我们可以省略大括号</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// const fn = x =&gt; console.log(x)</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// fn(1)</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 4. 只有一行代码的时候，可以省略return</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// const fn = x =&gt; x + x</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// console.log(fn(1))</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 5. 箭头函数可以直接返回一个对象</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// const fn = (uname) =&gt; (&#123; uname: uname &#125;)</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// console.log(fn(&#x27;刘德华&#x27;))</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>总结：</p>
<ol>
<li>箭头函数属于表达式函数，因此不存在函数提升</li>
<li>箭头函数只有一个参数时可以省略圆括号 <code>()</code></li>
<li>箭头函数函数体只有一行代码时可以省略花括号 <code>&#123;&#125;</code>，并自动做为返回值被返回</li>
</ol>
<h4 id="箭头函数参数"><a href="#箭头函数参数" class="headerlink" title="箭头函数参数"></a>箭头函数参数</h4><p>箭头函数中没有 <code>arguments</code>，只能使用 <code>...</code> 动态获取实参</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 1. 利用箭头函数来求和</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> <span class="title function_">getSum</span> = (<span class="params">...arr</span>) =&gt; &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">let</span> sum = <span class="number">0</span></span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; arr.<span class="property">length</span>; i++) &#123;</span></span><br><span class="line"><span class="language-javascript">        sum += arr[i]</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">return</span> sum</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> result = <span class="title function_">getSum</span>(<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>)</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(result) <span class="comment">// 9</span></span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="箭头函数-this"><a href="#箭头函数-this" class="headerlink" title="箭头函数 this"></a>箭头函数 this</h4><p>箭头函数不会创建自己的this,它只会从自己的作用域链的上一层沿用this。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">   <span class="comment">// 以前this的指向：  谁调用的这个函数，this 就指向谁</span></span></span><br><span class="line"><span class="language-javascript">   <span class="comment">// console.log(this)  // window</span></span></span><br><span class="line"><span class="language-javascript">   <span class="comment">// // 普通函数</span></span></span><br><span class="line"><span class="language-javascript">   <span class="comment">// function fn() &#123;</span></span></span><br><span class="line"><span class="language-javascript">   <span class="comment">//   console.log(this)  // window</span></span></span><br><span class="line"><span class="language-javascript">   <span class="comment">// &#125;</span></span></span><br><span class="line"><span class="language-javascript">   <span class="comment">// window.fn()</span></span></span><br><span class="line"><span class="language-javascript">   <span class="comment">// // 对象方法里面的this</span></span></span><br><span class="line"><span class="language-javascript">   <span class="comment">// const obj = &#123;</span></span></span><br><span class="line"><span class="language-javascript">   <span class="comment">//   name: &#x27;andy&#x27;,</span></span></span><br><span class="line"><span class="language-javascript">   <span class="comment">//   sayHi: function () &#123;</span></span></span><br><span class="line"><span class="language-javascript">   <span class="comment">//     console.log(this)  // obj</span></span></span><br><span class="line"><span class="language-javascript">   <span class="comment">//   &#125;</span></span></span><br><span class="line"><span class="language-javascript">   <span class="comment">// &#125;</span></span></span><br><span class="line"><span class="language-javascript">   <span class="comment">// obj.sayHi()</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">   <span class="comment">// 2. 箭头函数的this  是上一层作用域的this 指向</span></span></span><br><span class="line"><span class="language-javascript">   <span class="comment">// const fn = () =&gt; &#123;</span></span></span><br><span class="line"><span class="language-javascript">   <span class="comment">//   console.log(this)  // window</span></span></span><br><span class="line"><span class="language-javascript">   <span class="comment">// &#125;</span></span></span><br><span class="line"><span class="language-javascript">   <span class="comment">// fn()</span></span></span><br><span class="line"><span class="language-javascript">   <span class="comment">// 对象方法箭头函数 this</span></span></span><br><span class="line"><span class="language-javascript">   <span class="comment">// const obj = &#123;</span></span></span><br><span class="line"><span class="language-javascript">   <span class="comment">//   uname: &#x27;pink老师&#x27;,</span></span></span><br><span class="line"><span class="language-javascript">   <span class="comment">//   sayHi: () =&gt; &#123;</span></span></span><br><span class="line"><span class="language-javascript">   <span class="comment">//     console.log(this)  // this 指向谁？ window</span></span></span><br><span class="line"><span class="language-javascript">   <span class="comment">//   &#125;</span></span></span><br><span class="line"><span class="language-javascript">   <span class="comment">// &#125;</span></span></span><br><span class="line"><span class="language-javascript">   <span class="comment">// obj.sayHi()</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">   <span class="keyword">const</span> obj = &#123;</span></span><br><span class="line"><span class="language-javascript">     <span class="attr">uname</span>: <span class="string">&#x27;pink老师&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">     <span class="attr">sayHi</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">       <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>)  <span class="comment">// obj</span></span></span><br><span class="line"><span class="language-javascript">       <span class="keyword">let</span> i = <span class="number">10</span></span></span><br><span class="line"><span class="language-javascript">       <span class="keyword">const</span> <span class="title function_">count</span> = (<span class="params"></span>) =&gt; &#123;</span></span><br><span class="line"><span class="language-javascript">         <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>)  <span class="comment">// obj </span></span></span><br><span class="line"><span class="language-javascript">       &#125;</span></span><br><span class="line"><span class="language-javascript">       <span class="title function_">count</span>()</span></span><br><span class="line"><span class="language-javascript">     &#125;</span></span><br><span class="line"><span class="language-javascript">   &#125;</span></span><br><span class="line"><span class="language-javascript">   obj.<span class="title function_">sayHi</span>()</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"> </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="解构赋值"><a href="#解构赋值" class="headerlink" title="解构赋值"></a>解构赋值</h2><blockquote>
<p>知道解构的语法及分类，使用解构简洁语法快速为变量赋值。</p>
</blockquote>
<p>解构赋值是一种快速为变量赋值的简洁语法，本质上仍然是为变量赋值，分为数组解构、对象解构两大类型。</p>
<h3 id="数组解构"><a href="#数组解构" class="headerlink" title="数组解构"></a>数组解构</h3><p>数组解构是将数组的单元值快速批量赋值给一系列变量的简洁语法，如下代码所示：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 普通的数组</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">let</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 批量声明变量 a b c </span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 同时将数组单元值 1 2 3 依次赋值给变量 a b c</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">let</span> [a, b, c] = arr</span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(a); <span class="comment">// 1</span></span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(b); <span class="comment">// 2</span></span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(c); <span class="comment">// 3</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>总结：</p>
<ol>
<li>赋值运算符 <code>=</code> 左侧的 <code>[]</code> 用于批量声明变量，右侧数组的单元值将被赋值给左侧的变量</li>
<li>变量的顺序对应数组单元值的位置依次进行赋值操作</li>
<li>变量的数量大于单元值数量时，多余的变量将被赋值为  <code>undefined</code></li>
<li>变量的数量小于单元值数量时，可以通过 <code>...</code> 获取剩余单元值，但只能置于最末位</li>
<li>允许初始化变量的默认值，且只有单元值为 <code>undefined</code> 时默认值才会生效</li>
</ol>
<p>注：支持多维解构赋值，比较复杂后续有应用需求时再进一步分析</p>
<h3 id="对象解构"><a href="#对象解构" class="headerlink" title="对象解构"></a>对象解构</h3><p>对象解构是将对象属性和方法快速批量赋值给一系列变量的简洁语法，如下代码所示：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 普通对象</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> user = &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">name</span>: <span class="string">&#x27;小明&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">age</span>: <span class="number">18</span></span></span><br><span class="line"><span class="language-javascript">  &#125;;</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 批量声明变量 name age</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 同时将数组单元值 小明  18 依次赋值给变量 name  age</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> &#123;name, age&#125; = user</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(name) <span class="comment">// 小明</span></span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(age) <span class="comment">// 18</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>总结：</p>
<ol>
<li>赋值运算符 <code>=</code> 左侧的 <code>&#123;&#125;</code> 用于批量声明变量，右侧对象的属性值将被赋值给左侧的变量</li>
<li>对象属性的值将被赋值给与属性名相同的变量</li>
<li>对象中找不到与变量名一致的属性时变量值为 <code>undefined</code></li>
<li>允许初始化变量的默认值，属性不存在或单元值为 <code>undefined</code> 时默认值才会生效</li>
</ol>
<p>注：支持多维解构赋值</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 1. 这是后台传递过来的数据</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> msg = &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="string">&quot;code&quot;</span>: <span class="number">200</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="string">&quot;msg&quot;</span>: <span class="string">&quot;获取新闻列表成功&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="string">&quot;data&quot;</span>: [</span></span><br><span class="line"><span class="language-javascript">        &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="string">&quot;id&quot;</span>: <span class="number">1</span>,</span></span><br><span class="line"><span class="language-javascript">          <span class="string">&quot;title&quot;</span>: <span class="string">&quot;5G商用自己，三大运用商收入下降&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">          <span class="string">&quot;count&quot;</span>: <span class="number">58</span></span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="string">&quot;id&quot;</span>: <span class="number">2</span>,</span></span><br><span class="line"><span class="language-javascript">          <span class="string">&quot;title&quot;</span>: <span class="string">&quot;国际媒体头条速览&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">          <span class="string">&quot;count&quot;</span>: <span class="number">56</span></span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="string">&quot;id&quot;</span>: <span class="number">3</span>,</span></span><br><span class="line"><span class="language-javascript">          <span class="string">&quot;title&quot;</span>: <span class="string">&quot;乌克兰和俄罗斯持续冲突&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">          <span class="string">&quot;count&quot;</span>: <span class="number">1669</span></span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">      ]</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 需求1： 请将以上msg对象  采用对象解构的方式 只选出  data 方面后面使用渲染页面</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// const &#123; data &#125; = msg</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// console.log(data)</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 需求2： 上面msg是后台传递过来的数据，我们需要把data选出当做参数传递给 函数</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// const &#123; data &#125; = msg</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// msg 虽然很多属性，但是我们利用解构只要 data值</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">render</span>(<span class="params">&#123; data &#125;</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// const &#123; data &#125; = arr</span></span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 我们只要 data 数据</span></span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 内部处理</span></span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">console</span>.<span class="title function_">log</span>(data)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">render</span>(msg)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 需求3， 为了防止msg里面的data名字混淆，要求渲染函数里面的数据名改为 myData</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">render</span>(<span class="params">&#123; data: myData &#125;</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 要求将 获取过来的 data数据 更名为 myData</span></span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 内部处理</span></span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">console</span>.<span class="title function_">log</span>(myData)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">render</span>(msg)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="综合案例"><a href="#综合案例" class="headerlink" title="综合案例"></a>综合案例</h2><h3 id="forEach遍历数组"><a href="#forEach遍历数组" class="headerlink" title="forEach遍历数组"></a>forEach遍历数组</h3><p>forEach() 方法用于调用数组的每个元素，并将元素传递给回调函数</p>
<blockquote>
<p>注意：  </p>
<p>1.forEach 主要是遍历数组</p>
<p>2.参数当前数组元素是必须要写的， 索引号可选。</p>
</blockquote>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// forEach 就是遍历  加强版的for循环  适合于遍历数组对象</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> arr = [<span class="string">&#x27;red&#x27;</span>, <span class="string">&#x27;green&#x27;</span>, <span class="string">&#x27;pink&#x27;</span>]</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> result = arr.<span class="title function_">forEach</span>(<span class="keyword">function</span> (<span class="params">item, index</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">console</span>.<span class="title function_">log</span>(item)  <span class="comment">// 数组元素 red  green pink</span></span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">console</span>.<span class="title function_">log</span>(index) <span class="comment">// 索引号</span></span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// console.log(result)</span></span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="filter筛选数组"><a href="#filter筛选数组" class="headerlink" title="filter筛选数组"></a>filter筛选数组</h3><p>filter() 方法创建一个新的数组，新数组中的元素是通过检查指定数组中符合条件的所有元素</p>
<p>主要使用场景： 筛选数组符合条件的元素，并返回筛选之后元素的新数组</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> arr = [<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>]</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// const newArr = arr.filter(function (item, index) &#123;</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//   // console.log(item)</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//   // console.log(index)</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//   return item &gt;= 20</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// &#125;)</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 返回的符合条件的新数组</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> newArr = arr.<span class="title function_">filter</span>(<span class="function"><span class="params">item</span> =&gt;</span> item &gt;= <span class="number">20</span>)</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(newArr)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h1 id="JavaScript-进阶-第2天"><a href="#JavaScript-进阶-第2天" class="headerlink" title="JavaScript 进阶 - 第2天"></a>JavaScript 进阶 - 第2天</h1><blockquote>
<p>了解面向对象编程的基础概念及构造函数的作用，体会 JavaScript 一切皆对象的语言特征，掌握常见的对象属性和方法的使用。</p>
</blockquote>
<ul>
<li>了解面向对象编程中的一般概念</li>
<li>能够基于构造函数创建对象</li>
<li>理解 JavaScript 中一切皆对象的语言特征</li>
<li>理解引用对象类型值存储的的特征</li>
<li>掌握包装类型对象常见方法的使用</li>
</ul>
<h2 id="深入对象"><a href="#深入对象" class="headerlink" title="深入对象"></a>深入对象</h2><blockquote>
<p>了解面向对象的基础概念，能够利用构造函数创建对象。</p>
</blockquote>
<h3 id="构造函数"><a href="#构造函数" class="headerlink" title="构造函数"></a>构造函数</h3><p>构造函数是专门用于创建对象的函数，如果一个函数使用 <code>new</code> 关键字调用，那么这个函数就是构造函数。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 定义函数</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">function</span> <span class="title function_">foo</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;通过 new 也能调用函数...&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 调用函数</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">new</span> foo;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>总结：</p>
<ol start="2">
<li>使用 <code>new</code> 关键字调用函数的行为被称为实例化</li>
<li>实例化构造函数时没有参数时可以省略 <code>()</code></li>
<li>构造函数的返回值即为新创建的对象</li>
<li>构造函数内部的 <code>return</code> 返回的值无效！</li>
</ol>
<p>注：实践中为了从视觉上区分构造函数和普通函数，习惯将构造函数的首字母大写。</p>
<h3 id="实例成员"><a href="#实例成员" class="headerlink" title="实例成员"></a>实例成员</h3><p>通过构造函数创建的对象称为实例对象，实例对象中的属性和方法称为实例成员。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 构造函数</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">function</span> <span class="title function_">Person</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 构造函数内部的 this 就是实例对象</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 实例对象中动态添加属性</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">this</span>.<span class="property">name</span> = <span class="string">&#x27;小明&#x27;</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 实例对象动态添加方法</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">this</span>.<span class="property">sayHi</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;大家好~&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 实例化，p1 是实例对象</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// p1 实际就是 构造函数内部的 this</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> p1 = <span class="keyword">new</span> <span class="title class_">Person</span>()</span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(p1)</span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(p1.<span class="property">name</span>) <span class="comment">// 访问实例属性</span></span></span><br><span class="line"><span class="language-javascript">  p1.<span class="title function_">sayHi</span>() <span class="comment">// 调用实例方法</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>总结：</p>
<ol>
<li>构造函数内部 <code>this</code> 实际上就是实例对象，为其动态添加的属性和方法即为实例成员</li>
<li>为构造函数传入参数，动态创建结构相同但值不同的对象</li>
</ol>
<p>注：构造函数创建的实例对象彼此独立互不影响。</p>
<h3 id="静态成员"><a href="#静态成员" class="headerlink" title="静态成员"></a>静态成员</h3><p>在 JavaScript 中底层函数本质上也是对象类型，因此允许直接为函数动态添加属性或方法，构造函数的属性和方法被称为静态成员。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 构造函数</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">function</span> <span class="title function_">Person</span>(<span class="params">name, age</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 省略实例成员</span></span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 静态属性</span></span></span><br><span class="line"><span class="language-javascript">  <span class="title class_">Person</span>.<span class="property">eyes</span> = <span class="number">2</span></span></span><br><span class="line"><span class="language-javascript">  <span class="title class_">Person</span>.<span class="property">arms</span> = <span class="number">2</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 静态方法</span></span></span><br><span class="line"><span class="language-javascript">  <span class="title class_">Person</span>.<span class="property">walk</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;^_^人都会走路...&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// this 指向 Person</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">eyes</span>)</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>总结：</p>
<ol>
<li>静态成员指的是添加到构造函数本身的属性和方法</li>
<li>一般公共特征的属性或方法静态成员设置为静态成员</li>
<li>静态成员方法中的 <code>this</code> 指向构造函数本身</li>
</ol>
<h2 id="内置构造函数"><a href="#内置构造函数" class="headerlink" title="内置构造函数"></a>内置构造函数</h2><blockquote>
<p>掌握各引用类型和包装类型对象属性和方法的使用。</p>
</blockquote>
<p>在 JavaScript 中<strong>最主要</strong>的数据类型有 6 种，分别是字符串、数值、布尔、undefined、null 和 对象，常见的对象类型数据包括数组和普通对象。其中字符串、数值、布尔、undefined、null 也被称为简单类型或基础类型，对象也被称为引用类型。</p>
<p>在 JavaScript 内置了一些构造函数，绝大部的数据处理都是基于这些构造函数实现的，JavaScript 基础阶段学习的 <code>Date</code> 就是内置的构造函数。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 实例化</span></span></span><br><span class="line"><span class="language-javascript">	<span class="keyword">let</span> date = <span class="keyword">new</span> <span class="title class_">Date</span>();</span></span><br><span class="line"><span class="language-javascript">  </span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// date 即为实例对象</span></span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(date);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>甚至字符串、数值、布尔、数组、普通对象也都有专门的构造函数，用于创建对应类型的数据。</p>
<h3 id="Object"><a href="#Object" class="headerlink" title="Object"></a>Object</h3><p><code>Object</code> 是内置的构造函数，用于创建普通对象。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 通过构造函数创建普通对象</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> user = <span class="keyword">new</span> <span class="title class_">Object</span>(&#123;<span class="attr">name</span>: <span class="string">&#x27;小明&#x27;</span>, <span class="attr">age</span>: <span class="number">15</span>&#125;)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 这种方式声明的变量称为【字面量】</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">let</span> student = &#123;<span class="attr">name</span>: <span class="string">&#x27;杜子腾&#x27;</span>, <span class="attr">age</span>: <span class="number">21</span>&#125;</span></span><br><span class="line"><span class="language-javascript">  </span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 对象语法简写</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">let</span> name = <span class="string">&#x27;小红&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">let</span> people = &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 相当于 name: name</span></span></span><br><span class="line"><span class="language-javascript">    name,</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 相当于 walk: function () &#123;&#125;</span></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">walk</span> () &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;人都要走路...&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(student.<span class="property">constructor</span>);</span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(user.<span class="property">constructor</span>);</span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(student <span class="keyword">instanceof</span> <span class="title class_">Object</span>);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>。</p>
<p>总结：</p>
<ol>
<li>推荐使用字面量方式声明对象，而不是 <code>Object</code> 构造函数</li>
<li><code>Object.assign</code> 静态方法创建新的对象</li>
<li><code>Object.keys</code> 静态方法获取对象中所有属性</li>
<li><code>Object.values</code> 表态方法获取对象中所有属性值</li>
</ol>
<h3 id="Array"><a href="#Array" class="headerlink" title="Array"></a>Array</h3><p><code>Array</code> 是内置的构造函数，用于创建数组。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 构造函数创建数组</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">let</span> arr = <span class="keyword">new</span> <span class="title class_">Array</span>(<span class="number">5</span>, <span class="number">7</span>, <span class="number">8</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 字面量方式创建数组</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">let</span> list = [<span class="string">&#x27;html&#x27;</span>, <span class="string">&#x27;css&#x27;</span>, <span class="string">&#x27;javascript&#x27;</span>]</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>数组赋值后，无论修改哪个变量另一个对象的数据值也会相当发生改变。</p>
<p>总结：</p>
<ol>
<li><p>推荐使用字面量方式声明数组，而不是 <code>Array</code> 构造函数</p>
</li>
<li><p>实例方法 <code>forEach</code> 用于遍历数组，替代 <code>for</code> 循环 (重点)</p>
</li>
<li><p>实例方法 <code>filter</code> 过滤数组单元值，生成新数组(重点)</p>
</li>
<li><p>实例方法 <code>map</code> 迭代原数组，生成新数组(重点)</p>
</li>
<li><p>实例方法 <code>join</code> 数组元素拼接为字符串，返回字符串(重点)</p>
</li>
<li><p>实例方法  <code>find</code>  查找元素， 返回符合测试条件的第一个数组元素值，如果没有符合条件的则返回 undefined(重点)</p>
</li>
<li><p>实例方法<code>every</code> 检测数组所有元素是否都符合指定条件，如果<strong>所有元素</strong>都通过检测返回 true，否则返回 false(重点)</p>
</li>
<li><p>实例方法<code>some</code> 检测数组中的元素是否满足指定条件   <strong>如果数组中有</strong>元素满足条件返回 true，否则返回 false</p>
</li>
<li><p>实例方法 <code>concat</code>  合并两个数组，返回生成新数组</p>
</li>
<li><p>实例方法 <code>sort</code> 对原数组单元值排序</p>
</li>
<li><p>实例方法 <code>splice</code> 删除或替换原数组单元</p>
</li>
<li><p>实例方法 <code>reverse</code> 反转数组</p>
</li>
<li><p>实例方法 <code>findIndex</code>  查找元素的索引值</p>
</li>
</ol>
<h3 id="包装类型"><a href="#包装类型" class="headerlink" title="包装类型"></a>包装类型</h3><p>在 JavaScript 中的字符串、数值、布尔具有对象的使用特征，如具有属性和方法，如下代码举例：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 字符串类型</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> str = <span class="string">&#x27;hello world!&#x27;</span></span></span><br><span class="line"><span class="language-javascript"> 	<span class="comment">// 统计字符的长度（字符数量）</span></span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(str.<span class="property">length</span>)</span></span><br><span class="line"><span class="language-javascript">  </span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 数值类型</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> price = <span class="number">12.345</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 保留两位小数</span></span></span><br><span class="line"><span class="language-javascript">  price.<span class="title function_">toFixed</span>(<span class="number">2</span>) <span class="comment">// 12.34</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>之所以具有对象特征的原因是字符串、数值、布尔类型数据是 JavaScript 底层使用 Object 构造函数“包装”来的，被称为包装类型。</p>
<h4 id="String"><a href="#String" class="headerlink" title="String"></a>String</h4><p><code>String</code> 是内置的构造函数，用于创建字符串。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 使用构造函数创建字符串</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">let</span> str = <span class="keyword">new</span> <span class="title class_">String</span>(<span class="string">&#x27;hello world!&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 字面量创建字符串</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">let</span> str2 = <span class="string">&#x27;你好，世界！&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 检测是否属于同一个构造函数</span></span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(str.<span class="property">constructor</span> === str2.<span class="property">constructor</span>); <span class="comment">// true</span></span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(str <span class="keyword">instanceof</span> <span class="title class_">String</span>); <span class="comment">// false</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>总结：</p>
<ol>
<li>实例属性 <code>length</code> 用来获取字符串的度长(重点)</li>
<li>实例方法 <code>split(&#39;分隔符&#39;)</code> 用来将字符串拆分成数组(重点)</li>
<li>实例方法 <code>substring（需要截取的第一个字符的索引[,结束的索引号]）</code> 用于字符串截取(重点)</li>
<li>实例方法 <code>startsWith(检测字符串[, 检测位置索引号])</code> 检测是否以某字符开头(重点)</li>
<li>实例方法 <code>includes(搜索的字符串[, 检测位置索引号])</code> 判断一个字符串是否包含在另一个字符串中，根据情况返回 true 或 false(重点)</li>
<li>实例方法 <code>toUpperCase</code> 用于将字母转换成大写</li>
<li>实例方法 <code>toLowerCase</code> 用于将就转换成小写</li>
<li>实例方法 <code>indexOf</code>  检测是否包含某字符</li>
<li>实例方法 <code>endsWith</code> 检测是否以某字符结尾</li>
<li>实例方法 <code>replace</code> 用于替换字符串，支持正则匹配</li>
<li>实例方法 <code>match</code> 用于查找字符串，支持正则匹配</li>
</ol>
<p>注：String 也可以当做普通函数使用，这时它的作用是强制转换成字符串数据类型。</p>
<h4 id="Number"><a href="#Number" class="headerlink" title="Number"></a>Number</h4><p><code>Number</code> 是内置的构造函数，用于创建数值。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 使用构造函数创建数值</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">let</span> x = <span class="keyword">new</span> <span class="title class_">Number</span>(<span class="string">&#x27;10&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">let</span> y = <span class="keyword">new</span> <span class="title class_">Number</span>(<span class="number">5</span>)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 字面量创建数值</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">let</span> z = <span class="number">20</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>总结：</p>
<ol>
<li>推荐使用字面量方式声明数值，而不是 <code>Number</code> 构造函数</li>
<li>实例方法 <code>toFixed</code> 用于设置保留小数位的长度</li>
</ol>
<h1 id="JavaScript-进阶-第3天笔记"><a href="#JavaScript-进阶-第3天笔记" class="headerlink" title="JavaScript 进阶 - 第3天笔记"></a>JavaScript 进阶 - 第3天笔记</h1><blockquote>
<p>了解构造函数原型对象的语法特征，掌握 JavaScript 中面向对象编程的实现方式，基于面向对象编程思想实现 DOM 操作的封装。</p>
</blockquote>
<ul>
<li>了解面向对象编程的一般特征</li>
<li>掌握基于构造函数原型对象的逻辑封装</li>
<li>掌握基于原型对象实现的继承</li>
<li>理解什么原型链及其作用</li>
<li>能够处理程序异常提升程序执行的健壮性</li>
</ul>
<h2 id="编程思想"><a href="#编程思想" class="headerlink" title="编程思想"></a>编程思想</h2><blockquote>
<p>学习 JavaScript 中基于原型的面向对象编程序的语法实现，理解面向对象编程的特征。</p>
</blockquote>
<h3 id="面向过程"><a href="#面向过程" class="headerlink" title="面向过程"></a>面向过程</h3><p>面向过程就是分析出解决问题所需要的步骤，然后用函数把这些步骤一步一步实现，使用的时候再一个一个的依次</p>
<p>调用就可以了。</p>
<p> 举个栗子：蛋炒饭</p>
<img data-src="/2024/11/19/JavaScript%E6%8F%90%E9%AB%98/1676792906898.png" class="" width="67679290689">

<h3 id="面向对象"><a href="#面向对象" class="headerlink" title="面向对象"></a>面向对象</h3><p>面向对象是把事务分解成为一个个对象，然后由对象之间分工与合作。</p>
<img data-src="/2024/11/19/JavaScript%E6%8F%90%E9%AB%98/1676792930329.png" class="" width="67679293032">

<p>在面向对象程序开发思想中，每一个对象都是功能中心，具有明确分工。</p>
<p>面向对象编程具有灵活、代码可复用、容易维护和开发的优点，更适合多人合作的大型软件项目。</p>
<p>面向对象的特性：</p>
<ul>
<li><p>封装性</p>
</li>
<li><p>继承性</p>
</li>
<li><p>多态性</p>
</li>
</ul>
<h2 id="构造函数-1"><a href="#构造函数-1" class="headerlink" title="构造函数"></a>构造函数</h2><p>对比以下通过面向对象的构造函数实现的封装：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">function</span> <span class="title function_">Person</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">this</span>.<span class="property">name</span> = <span class="string">&#x27;佚名&#x27;</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 设置名字</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">this</span>.<span class="property">setName</span> = <span class="keyword">function</span> (<span class="params">name</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">this</span>.<span class="property">name</span> = name</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 读取名字</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">this</span>.<span class="property">getName</span> = <span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">name</span>)</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 实例对像，获得了构造函数中封装的所有逻辑</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">let</span> p1 = <span class="keyword">new</span> <span class="title class_">Person</span>()</span></span><br><span class="line"><span class="language-javascript">  p1.<span class="title function_">setName</span>(<span class="string">&#x27;小明&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(p1.<span class="property">name</span>)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 实例对象</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">let</span> p2 = <span class="keyword">new</span> <span class="title class_">Person</span>()</span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(p2.<span class="property">name</span>)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>封装是面向对象思想中比较重要的一部分，js面向对象可以通过构造函数实现的封装。</p>
<p>同样的将变量和函数组合到了一起并能通过 this 实现数据的共享，所不同的是借助构造函数创建出来的实例对象之</p>
<p>间是彼此不影响的</p>
<blockquote>
<p>总结：</p>
<ol>
<li>构造函数体现了面向对象的封装特性</li>
<li>构造函数实例创建的对象彼此独立、互不影响</li>
</ol>
</blockquote>
<p>封装是面向对象思想中比较重要的一部分，js面向对象可以通过构造函数实现的封装。</p>
<p>前面我们学过的构造函数方法很好用，但是 存在<code>浪费内存</code>的问题</p>
<h2 id="原型对象"><a href="#原型对象" class="headerlink" title="原型对象"></a>原型对象</h2><p>构造函数通过原型分配的函数是所有对象所 共享的。</p>
<ul>
<li>JavaScript 规定，每一个构造函数都有一个 prototype 属性，指向另一个对象，所以我们也称为原型对象</li>
<li>这个对象可以挂载函数，对象实例化不会多次创建原型上函数，节约内存</li>
<li>我们可以把那些不变的方法，直接定义在 prototype 对象上，这样所有对象的实例就可以共享这些方法。</li>
<li>构造函数和原型对象中的this 都指向 实例化的对象</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">function</span> <span class="title function_">Person</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 每个函数都有 prototype 属性</span></span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Person</span>.<span class="property"><span class="keyword">prototype</span></span>)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>



<p>了解了 JavaScript 中构造函数与原型对象的关系后，再来看原型对象具体的作用，如下代码所示：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">function</span> <span class="title function_">Person</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 此处未定义任何方法</span></span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 为构造函数的原型对象添加方法</span></span></span><br><span class="line"><span class="language-javascript">  <span class="title class_">Person</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">sayHi</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Hi~&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">	</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 实例化</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">let</span> p1 = <span class="keyword">new</span> <span class="title class_">Person</span>();</span></span><br><span class="line"><span class="language-javascript">  p1.<span class="title function_">sayHi</span>(); <span class="comment">// 输出结果为 Hi~</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>



<p>构造函数 <code>Person</code> 中未定义任何方法，这时实例对象调用了原型对象中的方法 <code>sayHi</code>，接下来改动一下代码：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">function</span> <span class="title function_">Person</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 此处定义同名方法 sayHi</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">this</span>.<span class="property">sayHi</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;嗨!&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 为构造函数的原型对象添加方法</span></span></span><br><span class="line"><span class="language-javascript">  <span class="title class_">Person</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">sayHi</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Hi~&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">let</span> p1 = <span class="keyword">new</span> <span class="title class_">Person</span>();</span></span><br><span class="line"><span class="language-javascript">  p1.<span class="title function_">sayHi</span>(); <span class="comment">// 输出结果为 嗨!</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>构造函数 <code>Person</code> 中定义与原型对象中相同名称的方法，这时实例对象调用则是构造函中的方法 <code>sayHi</code>。</p>
<p>通过以上两个简单示例不难发现 JavaScript 中对象的工作机制：<strong>当访问对象的属性或方法时，先在当前实例对象是查找，然后再去原型对象查找，并且原型对象被所有实例共享。</strong></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">	<span class="keyword">function</span> <span class="title function_">Person</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 此处定义同名方法 sayHi</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">this</span>.<span class="property">sayHi</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;嗨!&#x27;</span> + <span class="variable language_">this</span>.<span class="property">name</span>)</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 为构造函数的原型对象添加方法</span></span></span><br><span class="line"><span class="language-javascript">  <span class="title class_">Person</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">sayHi</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Hi~&#x27;</span> + <span class="variable language_">this</span>.<span class="property">name</span>)</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 在构造函数的原型对象上添加属性</span></span></span><br><span class="line"><span class="language-javascript">  <span class="title class_">Person</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">name</span> = <span class="string">&#x27;小明&#x27;</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">let</span> p1 = <span class="keyword">new</span> <span class="title class_">Person</span>()</span></span><br><span class="line"><span class="language-javascript">  p1.<span class="title function_">sayHi</span>(); <span class="comment">// 输出结果为 嗨!</span></span></span><br><span class="line"><span class="language-javascript">  </span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">let</span> p2 = <span class="keyword">new</span> <span class="title class_">Person</span>()</span></span><br><span class="line"><span class="language-javascript">  p2.<span class="title function_">sayHi</span>()</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>总结：<strong>结合构造函数原型的特征，实际开发重往往会将封装的功能函数添加到原型对象中。</strong></p>
<h3 id="constructor-属性"><a href="#constructor-属性" class="headerlink" title="constructor 属性"></a>constructor 属性</h3><p>在哪里？ 每个原型对象里面都有个constructor 属性（constructor 构造函数）</p>
<p>作用：该属性指向该原型对象的构造函数， 简单理解，就是指向我的爸爸，我是有爸爸的孩子</p>
<p><strong>使用场景：</strong></p>
<p>如果有多个对象的方法，我们可以给原型对象采取对象形式赋值.</p>
<p>但是这样就会覆盖构造函数原型对象原来的内容，这样修改后的原型对象 constructor 就不再指向当前构造函数了</p>
<p>此时，我们可以在修改后的原型对象中，添加一个 constructor 指向原来的构造函数。</p>
<h3 id="对象原型"><a href="#对象原型" class="headerlink" title="对象原型"></a>对象原型</h3><p>对象都会有一个属性 <strong>proto</strong> 指向构造函数的 prototype 原型对象，之所以我们对象可以使用构造函数 prototype </p>
<p>原型对象的属性和方法，就是因为对象有 <strong>proto</strong> 原型的存在。</p>
<p>注意：</p>
<ul>
<li><strong>proto</strong> 是JS非标准属性</li>
<li>[[prototype]]和__proto__意义相同</li>
<li>用来表明当前实例对象指向哪个原型对象prototype</li>
<li>__proto__对象原型里面也有一个 constructor属性，指向创建该实例对象的构造函数</li>
</ul>
<h3 id="原型继承"><a href="#原型继承" class="headerlink" title="原型继承"></a>原型继承</h3><p>继承是面向对象编程的另一个特征，通过继承进一步提升代码封装的程度，JavaScript 中大多是借助原型对象实现继承</p>
<p>的特性。</p>
<p>龙生龙、凤生凤、老鼠的儿子会打洞描述的正是继承的含义。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 继续抽取   公共的部分放到原型上</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// const Person1 = &#123;</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//   eyes: 2,</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//   head: 1</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// &#125;</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// const Person2 = &#123;</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//   eyes: 2,</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//   head: 1</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// &#125;</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 构造函数  new 出来的对象 结构一样，但是对象不一样</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">Person</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">this</span>.<span class="property">eyes</span> = <span class="number">2</span></span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">this</span>.<span class="property">head</span> = <span class="number">1</span></span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// console.log(new Person)</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 女人  构造函数   继承  想要 继承 Person</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">Woman</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// Woman 通过原型来继承 Person</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 父构造函数（父类）   子构造函数（子类）</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 子类的原型 =  new 父类  </span></span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">Woman</span>.<span class="property"><span class="keyword">prototype</span></span> = <span class="keyword">new</span> <span class="title class_">Person</span>()   <span class="comment">// &#123;eyes: 2, head: 1&#125; </span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 指回原来的构造函数</span></span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">Woman</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">constructor</span> = <span class="title class_">Woman</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 给女人添加一个方法  生孩子</span></span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">Woman</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">baby</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;宝贝&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> red = <span class="keyword">new</span> <span class="title class_">Woman</span>()</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(red)</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// console.log(Woman.prototype)</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 男人 构造函数  继承  想要 继承 Person</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">Man</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 通过 原型继承 Person</span></span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">Man</span>.<span class="property"><span class="keyword">prototype</span></span> = <span class="keyword">new</span> <span class="title class_">Person</span>()</span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">Man</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">constructor</span> = <span class="title class_">Man</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> pink = <span class="keyword">new</span> <span class="title class_">Man</span>()</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(pink)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="原型链"><a href="#原型链" class="headerlink" title="原型链"></a>原型链</h3><p>基于原型对象的继承使得不同构造函数的原型对象关联在一起，并且这种关联的关系是一种链状的结构，我们将原型对</p>
<p>象的链状结构关系称为原型链</p>
<img data-src="/2024/11/19/JavaScript%E6%8F%90%E9%AB%98/1676793388695.png" class="" width="67679338869">

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// function Objetc() &#123;&#125;</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Object</span>.<span class="property"><span class="keyword">prototype</span></span>)</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Object</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">__proto__</span>)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">Person</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> ldh = <span class="keyword">new</span> <span class="title class_">Person</span>()</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// console.log(ldh.__proto__ === Person.prototype)</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// console.log(Person.prototype.__proto__ === Object.prototype)</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(ldh <span class="keyword">instanceof</span> <span class="title class_">Person</span>)</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(ldh <span class="keyword">instanceof</span> <span class="title class_">Object</span>)</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(ldh <span class="keyword">instanceof</span> <span class="title class_">Array</span>)</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>] <span class="keyword">instanceof</span> <span class="title class_">Array</span>)</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Array</span> <span class="keyword">instanceof</span> <span class="title class_">Object</span>)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>① 当访问一个对象的属性（包括方法）时，首先查找这个对象自身有没有该属性。</p>
<p>② 如果没有就查找它的原型（也就是 __proto__指向的 prototype 原型对象）</p>
<p>③ 如果还没有就查找原型对象的原型（Object的原型对象）</p>
<p>④ 依此类推一直找到 Object 为止（null）</p>
<p>⑤ __proto__对象原型的意义就在于为对象成员查找机制提供一个方向，或者说一条路线</p>
<p>⑥ 可以使用 instanceof 运算符用于检测构造函数的 prototype 属性是否出现在某个实例对象的原型链上</p>
<h1 id="JavaScript-进阶-第4天"><a href="#JavaScript-进阶-第4天" class="headerlink" title="JavaScript 进阶 - 第4天"></a>JavaScript 进阶 - 第4天</h1><h2 id="深浅拷贝"><a href="#深浅拷贝" class="headerlink" title="深浅拷贝"></a>深浅拷贝</h2><h3 id="浅拷贝"><a href="#浅拷贝" class="headerlink" title="浅拷贝"></a>浅拷贝</h3><p>首先浅拷贝和深拷贝只针对引用类型</p>
<p>浅拷贝：拷贝的是地址</p>
<p>常见方法：</p>
<ol>
<li>拷贝对象：Object.assgin() &#x2F; 展开运算符 {…obj} 拷贝对象</li>
<li>拷贝数组：Array.prototype.concat() 或者 […arr]</li>
</ol>
<blockquote>
<p>如果是简单数据类型拷贝值，引用数据类型拷贝的是地址 (简单理解： 如果是单层对象，没问题，如果有多层就有问题)</p>
</blockquote>
<h3 id="深拷贝"><a href="#深拷贝" class="headerlink" title="深拷贝"></a>深拷贝</h3><p>首先浅拷贝和深拷贝只针对引用类型</p>
<p>深拷贝：拷贝的是对象，不是地址</p>
<p>常见方法：</p>
<ol>
<li>通过递归实现深拷贝</li>
<li>lodash&#x2F;cloneDeep</li>
<li>通过JSON.stringify()实现</li>
</ol>
<h4 id="递归实现深拷贝"><a href="#递归实现深拷贝" class="headerlink" title="递归实现深拷贝"></a>递归实现深拷贝</h4><p>函数递归：</p>
<p>如果一个函数在内部可以调用其本身，那么这个函数就是递归函数</p>
<ul>
<li>简单理解:函数内部自己调用自己, 这个函数就是递归函数</li>
<li>递归函数的作用和循环效果类似</li>
<li>由于递归很容易发生“栈溢出”错误（stack overflow），所以必须要加退出条件 return</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> obj = &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">uname</span>: <span class="string">&#x27;pink&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">age</span>: <span class="number">18</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">hobby</span>: [<span class="string">&#x27;乒乓球&#x27;</span>, <span class="string">&#x27;足球&#x27;</span>],</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">family</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">baby</span>: <span class="string">&#x27;小pink&#x27;</span></span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> o = &#123;&#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 拷贝函数</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">deepCopy</span>(<span class="params">newObj, oldObj</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">debugger</span></span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">for</span> (<span class="keyword">let</span> k <span class="keyword">in</span> oldObj) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 处理数组的问题  一定先写数组 在写 对象 不能颠倒</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">if</span> (oldObj[k] <span class="keyword">instanceof</span> <span class="title class_">Array</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">          newObj[k] = []</span></span><br><span class="line"><span class="language-javascript">          <span class="comment">//  newObj[k] 接收 []  hobby</span></span></span><br><span class="line"><span class="language-javascript">          <span class="comment">//  oldObj[k]   [&#x27;乒乓球&#x27;, &#x27;足球&#x27;]</span></span></span><br><span class="line"><span class="language-javascript">          <span class="title function_">deepCopy</span>(newObj[k], oldObj[k])</span></span><br><span class="line"><span class="language-javascript">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (oldObj[k] <span class="keyword">instanceof</span> <span class="title class_">Object</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">          newObj[k] = &#123;&#125;</span></span><br><span class="line"><span class="language-javascript">          <span class="title function_">deepCopy</span>(newObj[k], oldObj[k])</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="comment">//  k  属性名 uname age    oldObj[k]  属性值  18</span></span></span><br><span class="line"><span class="language-javascript">          <span class="comment">// newObj[k]  === o.uname  给新对象添加属性</span></span></span><br><span class="line"><span class="language-javascript">          newObj[k] = oldObj[k]</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">deepCopy</span>(o, obj) <span class="comment">// 函数调用  两个参数 o 新对象  obj 旧对象</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(o)</span></span><br><span class="line"><span class="language-javascript">    o.<span class="property">age</span> = <span class="number">20</span></span></span><br><span class="line"><span class="language-javascript">    o.<span class="property">hobby</span>[<span class="number">0</span>] = <span class="string">&#x27;篮球&#x27;</span></span></span><br><span class="line"><span class="language-javascript">    o.<span class="property">family</span>.<span class="property">baby</span> = <span class="string">&#x27;老pink&#x27;</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(obj)</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>([<span class="number">1</span>, <span class="number">23</span>] <span class="keyword">instanceof</span> <span class="title class_">Object</span>)</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 复习</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// const obj = &#123;</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//   uname: &#x27;pink&#x27;,</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//   age: 18,</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//   hobby: [&#x27;乒乓球&#x27;, &#x27;足球&#x27;]</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// &#125;</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// function deepCopy(&#123; &#125;, oldObj) &#123;</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//   // k 属性名  oldObj[k] 属性值</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//   for (let k in oldObj) &#123;</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//     // 处理数组的问题   k 变量</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//     newObj[k] = oldObj[k]</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//     // o.uname = &#x27;pink&#x27;</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//     // newObj.k  = &#x27;pink&#x27;</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//   &#125;</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// &#125;</span></span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="js库lodash里面cloneDeep内部实现了深拷贝"><a href="#js库lodash里面cloneDeep内部实现了深拷贝" class="headerlink" title="js库lodash里面cloneDeep内部实现了深拷贝"></a>js库lodash里面cloneDeep内部实现了深拷贝</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 先引用 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;./lodash.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> obj = &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">uname</span>: <span class="string">&#x27;pink&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">age</span>: <span class="number">18</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">hobby</span>: [<span class="string">&#x27;乒乓球&#x27;</span>, <span class="string">&#x27;足球&#x27;</span>],</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">family</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">baby</span>: <span class="string">&#x27;小pink&#x27;</span></span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> o = _.<span class="title function_">cloneDeep</span>(obj)</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(o)</span></span><br><span class="line"><span class="language-javascript">    o.<span class="property">family</span>.<span class="property">baby</span> = <span class="string">&#x27;老pink&#x27;</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(obj)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="JSON序列化"><a href="#JSON序列化" class="headerlink" title="JSON序列化"></a>JSON序列化</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> obj = &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">uname</span>: <span class="string">&#x27;pink&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">age</span>: <span class="number">18</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">hobby</span>: [<span class="string">&#x27;乒乓球&#x27;</span>, <span class="string">&#x27;足球&#x27;</span>],</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">family</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">baby</span>: <span class="string">&#x27;小pink&#x27;</span></span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 把对象转换为 JSON 字符串</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// console.log(JSON.stringify(obj))</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> o = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(obj))</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(o)</span></span><br><span class="line"><span class="language-javascript">    o.<span class="property">family</span>.<span class="property">baby</span> = <span class="string">&#x27;123&#x27;</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(obj)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="异常处理"><a href="#异常处理" class="headerlink" title="异常处理"></a>异常处理</h2><blockquote>
<p>了解 JavaScript 中程序异常处理的方法，提升代码运行的健壮性。</p>
</blockquote>
<h3 id="throw"><a href="#throw" class="headerlink" title="throw"></a>throw</h3><p>异常处理是指预估代码执行过程中可能发生的错误，然后最大程度的避免错误的发生导致整个程序无法继续运行</p>
<p>总结：</p>
<ol>
<li>throw 抛出异常信息，程序也会终止执行</li>
<li>throw 后面跟的是错误提示信息</li>
<li>Error 对象配合 throw 使用，能够设置更详细的错误信息</li>
</ol>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">function</span> <span class="title function_">counter</span>(<span class="params">x, y</span>) &#123;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">if</span>(!x || !y) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// throw &#x27;参数不能为空!&#x27;;</span></span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;参数不能为空!&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">return</span> x + y</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">counter</span>()</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>总结：</p>
<ol>
<li><code>throw</code> 抛出异常信息，程序也会终止执行</li>
<li><code>throw</code> 后面跟的是错误提示信息</li>
<li><code>Error</code> 对象配合 <code>throw</code> 使用，能够设置更详细的错误信息</li>
</ol>
<h3 id="try-…-catch"><a href="#try-…-catch" class="headerlink" title="try … catch"></a>try … catch</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">   <span class="keyword">function</span> <span class="title function_">foo</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">try</span> &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 查找 DOM 节点</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> p = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.p&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">        p.<span class="property">style</span>.<span class="property">color</span> = <span class="string">&#x27;red&#x27;</span></span></span><br><span class="line"><span class="language-javascript">      &#125; <span class="keyword">catch</span> (error) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// try 代码段中执行有错误时，会执行 catch 代码段</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 查看错误信息</span></span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(error.<span class="property">message</span>)</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 终止代码继续执行</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">return</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">finally</span> &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="title function_">alert</span>(<span class="string">&#x27;执行&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;如果出现错误，我的语句不会执行&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">foo</span>()</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>总结：</p>
<ol>
<li><code>try...catch</code> 用于捕获错误信息</li>
<li>将预估可能发生错误的代码写在 <code>try</code> 代码段中</li>
<li>如果 <code>try</code> 代码段中出现错误后，会执行 <code>catch</code> 代码段，并截获到错误信息</li>
</ol>
<h3 id="debugger"><a href="#debugger" class="headerlink" title="debugger"></a>debugger</h3><p>相当于断点调试</p>
<h2 id="处理this"><a href="#处理this" class="headerlink" title="处理this"></a>处理this</h2><blockquote>
<p>了解函数中 this 在不同场景下的默认值，知道动态指定函数 this 值的方法。</p>
</blockquote>
<p><code>this</code> 是 JavaScript 最具“魅惑”的知识点，不同的应用场合 <code>this</code> 的取值可能会有意想不到的结果，在此我们对以往学习过的关于【 <code>this</code> 默认的取值】情况进行归纳和总结。</p>
<h3 id="普通函数"><a href="#普通函数" class="headerlink" title="普通函数"></a>普通函数</h3><p><strong>普通函数</strong>的调用方式决定了 <code>this</code> 的值，即【谁调用 <code>this</code> 的值指向谁】，如下代码所示：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 普通函数</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">function</span> <span class="title function_">sayHi</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>)  </span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 函数表达式</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> sayHello = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>)</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 函数的调用方式决定了 this 的值</span></span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">sayHi</span>() <span class="comment">// window</span></span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">window</span>.<span class="title function_">sayHi</span>()</span></span><br><span class="line"><span class="language-javascript">	</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">// 普通对象</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> user = &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">name</span>: <span class="string">&#x27;小明&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">walk</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>)</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 动态为 user 添加方法</span></span></span><br><span class="line"><span class="language-javascript">  user.<span class="property">sayHi</span> = sayHi</span></span><br><span class="line"><span class="language-javascript">  uesr.<span class="property">sayHello</span> = sayHello</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 函数调用方式，决定了 this 的值</span></span></span><br><span class="line"><span class="language-javascript">  user.<span class="title function_">sayHi</span>()</span></span><br><span class="line"><span class="language-javascript">  user.<span class="title function_">sayHello</span>()</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>注： 普通函数没有明确调用者时 <code>this</code> 值为 <code>window</code>，严格模式下没有调用者时 <code>this</code> 的值为 <code>undefined</code>。</p>
<h3 id="箭头函数-1"><a href="#箭头函数-1" class="headerlink" title="箭头函数"></a>箭头函数</h3><p><strong>箭头函数</strong>中的 <code>this</code> 与普通函数完全不同，也不受调用方式的影响，事实上箭头函数中并不存在 <code>this</code> ！箭头函数中访问的 <code>this</code> 不过是箭头函数所在作用域的 <code>this</code> 变量。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>) <span class="comment">// 此处为 window</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 箭头函数</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> sayHi = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>) <span class="comment">// 该箭头函数中的 this 为函数声明环境中 this 一致</span></span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 普通对象</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> user = &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">name</span>: <span class="string">&#x27;小明&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 该箭头函数中的 this 为函数声明环境中 this 一致</span></span></span><br><span class="line"><span class="language-javascript">    <span class="attr">walk</span>: <span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>)</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    <span class="attr">sleep</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">let</span> str = <span class="string">&#x27;hello&#x27;</span></span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>)</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">let</span> <span class="title function_">fn</span> = (<span class="params"></span>) =&gt; &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(str)</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>) <span class="comment">// 该箭头函数中的 this 与 sleep 中的 this 一致</span></span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 调用箭头函数</span></span></span><br><span class="line"><span class="language-javascript">      <span class="title function_">fn</span>();</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 动态添加方法</span></span></span><br><span class="line"><span class="language-javascript">  user.<span class="property">sayHi</span> = sayHi</span></span><br><span class="line"><span class="language-javascript">  </span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 函数调用</span></span></span><br><span class="line"><span class="language-javascript">  user.<span class="title function_">sayHi</span>()</span></span><br><span class="line"><span class="language-javascript">  user.<span class="title function_">sleep</span>()</span></span><br><span class="line"><span class="language-javascript">  user.<span class="title function_">walk</span>()</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>在开发中【使用箭头函数前需要考虑函数中 <code>this</code> 的值】，<strong>事件回调函数</strong>使用箭头函数时，<code>this</code> 为全局的 <code>window</code>，因此DOM事件回调函数不推荐使用箭头函数，如下代码所示：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// DOM 节点</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> btn = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.btn&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 箭头函数 此时 this 指向了 window</span></span></span><br><span class="line"><span class="language-javascript">  btn.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>)</span></span><br><span class="line"><span class="language-javascript">  &#125;)</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 普通函数 此时 this 指向了 DOM 对象</span></span></span><br><span class="line"><span class="language-javascript">  btn.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>)</span></span><br><span class="line"><span class="language-javascript">  &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>同样由于箭头函数 <code>this</code> 的原因，<strong>基于原型的面向对象也不推荐采用箭头函数</strong>，如下代码所示：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">function</span> <span class="title function_">Person</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 原型对像上添加了箭头函数</span></span></span><br><span class="line"><span class="language-javascript">  <span class="title class_">Person</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">walk</span> = <span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;人都要走路...&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>); <span class="comment">// window</span></span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> p1 = <span class="keyword">new</span> <span class="title class_">Person</span>()</span></span><br><span class="line"><span class="language-javascript">  p1.<span class="title function_">walk</span>()</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="改变this指向"><a href="#改变this指向" class="headerlink" title="改变this指向"></a>改变this指向</h3><p>以上归纳了普通函数和箭头函数中关于 <code>this</code> 默认值的情形，不仅如此 JavaScript 中还允许指定函数中 <code>this</code> 的指向，有 3 个方法可以动态指定普通函数中 <code>this</code> 的指向：</p>
<h4 id="call"><a href="#call" class="headerlink" title="call"></a>call</h4><p>使用 <code>call</code> 方法调用函数，同时指定函数中 <code>this</code> 的值，使用方法如下代码所示：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 普通函数</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">function</span> <span class="title function_">sayHi</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>);</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">let</span> user = &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">name</span>: <span class="string">&#x27;小明&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">age</span>: <span class="number">18</span></span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">let</span> student = &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">name</span>: <span class="string">&#x27;小红&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">age</span>: <span class="number">16</span></span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 调用函数并指定 this 的值</span></span></span><br><span class="line"><span class="language-javascript">  sayHi.<span class="title function_">call</span>(user); <span class="comment">// this 值为 user</span></span></span><br><span class="line"><span class="language-javascript">  sayHi.<span class="title function_">call</span>(student); <span class="comment">// this 值为 student</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 求和函数</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">function</span> <span class="title function_">counter</span>(<span class="params">x, y</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">return</span> x + y;</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 调用 counter 函数，并传入参数</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">let</span> result = counter.<span class="title function_">call</span>(<span class="literal">null</span>, <span class="number">5</span>, <span class="number">10</span>);</span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(result);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>总结：</p>
<ol>
<li><code>call</code> 方法能够在调用函数的同时指定 <code>this</code> 的值</li>
<li>使用 <code>call</code> 方法调用函数时，第1个参数为 <code>this</code> 指定的值</li>
<li><code>call</code> 方法的其余参数会依次自动传入函数做为函数的参数</li>
</ol>
<h4 id="apply"><a href="#apply" class="headerlink" title="apply"></a>apply</h4><p>使用 <code>call</code> 方法<strong>调用函数</strong>，同时指定函数中 <code>this</code> 的值，使用方法如下代码所示：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 普通函数</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">function</span> <span class="title function_">sayHi</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>)</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">let</span> user = &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">name</span>: <span class="string">&#x27;小明&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">age</span>: <span class="number">18</span></span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">let</span> student = &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">name</span>: <span class="string">&#x27;小红&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">age</span>: <span class="number">16</span></span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 调用函数并指定 this 的值</span></span></span><br><span class="line"><span class="language-javascript">  sayHi.<span class="title function_">apply</span>(user) <span class="comment">// this 值为 user</span></span></span><br><span class="line"><span class="language-javascript">  sayHi.<span class="title function_">apply</span>(student) <span class="comment">// this 值为 student</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 求和函数</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">function</span> <span class="title function_">counter</span>(<span class="params">x, y</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">return</span> x + y</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 调用 counter 函数，并传入参数</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">let</span> result = counter.<span class="title function_">apply</span>(<span class="literal">null</span>, [<span class="number">5</span>, <span class="number">10</span>])</span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(result)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>总结：</p>
<ol>
<li><code>apply</code> 方法能够在调用函数的同时指定 <code>this</code> 的值</li>
<li>使用 <code>apply</code> 方法调用函数时，第1个参数为 <code>this</code> 指定的值</li>
<li><code>apply</code> 方法第2个参数为数组，数组的单元值依次自动传入函数做为函数的参数</li>
</ol>
<h4 id="bind"><a href="#bind" class="headerlink" title="bind"></a>bind</h4><p><code>bind</code> 方法并<strong>不会调用函数</strong>，而是创建一个指定了 <code>this</code> 值的新函数，使用方法如下代码所示：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 普通函数</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">function</span> <span class="title function_">sayHi</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>)</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">let</span> user = &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">name</span>: <span class="string">&#x27;小明&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">age</span>: <span class="number">18</span></span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 调用 bind 指定 this 的值</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">let</span> sayHello = sayHi.<span class="title function_">bind</span>(user);</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 调用使用 bind 创建的新函数</span></span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">sayHello</span>()</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>注：<code>bind</code> 方法创建新的函数，与原函数的唯一的变化是改变了 <code>this</code> 的值。</p>
<h2 id="防抖节流"><a href="#防抖节流" class="headerlink" title="防抖节流"></a>防抖节流</h2><ol>
<li>防抖（debounce）<br>所谓防抖，就是指触发事件后在 n 秒内函数只能执行一次，如果在 n 秒内又触发了事件，则会重新计算函数执行时间</li>
<li>节流（throttle）<br>所谓节流，就是指连续触发事件但是在 n 秒中只执行一次函数</li>
</ol>
]]></content>
      <categories>
        <category>前端</category>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>css</tag>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title>Node.js与Webpack</title>
    <url>/2024/11/19/Node-js%E4%B8%8EWebpack/</url>
    <content><![CDATA[<h1 id="01-Node-js入门"><a href="#01-Node-js入门" class="headerlink" title="01_Node.js入门"></a>01_Node.js入门</h1><h2 id="知识点自测"><a href="#知识点自测" class="headerlink" title="知识点自测"></a>知识点自测</h2><ol>
<li><p>从 index.js 出发，访问到 student&#x2F;data.json 的相对路径如何写?</p>
<img data-src="/2024/11/19/Node-js%E4%B8%8EWebpack/image-20230330104904311.png" class="" title="image-20230330104904311">

<p>A：<code>../public/teacher/data.json</code></p>
<p>B：<code>./public/student/data.json</code></p>
<p>C：<code>../student/data.json</code></p>
<details>
<summary>答案</summary>
<ul>
<li>A选项正确</li>
</ul>
</details>


</li>
<li><p>如下代码运行结果是多少?</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> str = <span class="string">`我们都是好人，好人就是我`</span></span><br><span class="line"><span class="keyword">const</span> result = str.<span class="title function_">replace</span>(<span class="regexp">/好/g</span>, <span class="string">&#x27;&#x27;</span>)</span><br></pre></td></tr></table></figure>

<p>A：<code>我们都是人，好人就是我</code></p>
<p>B：<code>我们都是人，人就是我</code></p>
<details>
<summary>答案</summary>
<ul>
<li>B选项正确</li>
</ul>
</details>


</li>
<li><p>以下哪个正则表达式，能匹配字符串中的小括号？</p>
<p>A：<code>/(/</code></p>
<p>B：<code>/\(/</code></p>
<details>
<summary>答案</summary>
<ul>
<li>B选项正确，因为在正则表达式里直接写小括号，相当于分组功能，而不是匹配字符串小括号里，可以加一个斜杠代表转义，转换它去匹配小括号字符串而不再是分组</li>
</ul>
</details>


</li>
<li><p>如下代码返回的结果是什么？</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> str = <span class="string">&#x27;/api/hello?a=10&amp;b=20&#x27;</span></span><br><span class="line"><span class="keyword">const</span> result = str.<span class="title function_">startsWith</span>(<span class="string">&#x27;/api/hello&#x27;</span>)</span><br></pre></td></tr></table></figure>

<p>A：true</p>
<p>B：false</p>
<details>
<summary>答案</summary>
<ul>
<li>A 项正确，startsWith 用于判断调用的字符串是否以传入的目标字符串开头，是返回 true，否则返回 false 在原地</li>
</ul>
</details></li>
</ol>
<h2 id="提前安装软件"><a href="#提前安装软件" class="headerlink" title="提前安装软件"></a>提前安装软件</h2><p>在配套的资料文件夹中，先安装好 Node.js 环境，上课可以节省时间</p>
<p>具体安装过程可以参考 PPT 和 配套视频！</p>
<h2 id="01-什么是-Node-js"><a href="#01-什么是-Node-js" class="headerlink" title="01.什么是 Node.js"></a>01.什么是 Node.js</h2><h3 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h3><p>什么是 Node.js，有什么用，为何能独立执行 JS 代码，演示安装和执行 JS 文件内代码</p>
<h3 id="讲解"><a href="#讲解" class="headerlink" title="讲解"></a>讲解</h3><ol>
<li><p>Node.js 是一个独立的 JavaScript 运行环境，能独立执行 JS 代码，因为这个特点，它可以用来编写服务器后端的应用程序</p>
</li>
<li><p>Node.js 作用除了编写后端应用程序，也可以对前端代码进行压缩，转译，整合等等，提高前端开发和运行效率</p>
</li>
<li><p>Node.js 基于Chrome V8 引擎封装，独立执行 JS 代码，但是语法和浏览器环境的 V8 有所不同，没有 document 和 window 但是都支持 ECMAScript 标准的代码语法</p>
</li>
<li><p>想要得到 Node.js 需要把这个软件安装到电脑，在素材里有安装程序（window 和 mac 环境的）参考 PPT 默认下一步安装即可</p>
</li>
<li><p>Node.js 没有图形化界面，需要使用 cmd 终端命令行（利用一些命令来操控电脑执行某些程序软件）输入，node -v 检查是否安装成功</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">node -v</span><br></pre></td></tr></table></figure>


</li>
<li><p>需求：新建 index.js 文件，编写打印代码和 for 循环打印 3 个 6</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 目标：编写 js 代码，用 node 命令执行</span></span><br><span class="line"><span class="comment"> * 终端作用：敲击命令，调用对应程序执行</span></span><br><span class="line"><span class="comment"> * 终端打开：目标文件-&gt;右键-&gt;在集成终端中打开</span></span><br><span class="line"><span class="comment"> * 命令：node xxx.js （注意路径）</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Hello, World&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">6</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


</li>
<li><p>Node.js 执行目标 JS 文件，需要使用 node xxx.js 命令来执行（我们可以借助 VSCode 集成终端使用，好处：可以快速切换到目标 JS 文件所在终端目录，利用相对路径找到要执行的目标 JS 文件</p>
<img data-src="/2024/11/19/Node-js%E4%B8%8EWebpack/image-20230330112925228.png" class="" title="image-20230330112925228"></li>
</ol>
<h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><ol>
<li><p>Node.js 有什么用？</p>
<details>
<summary>答案</summary>
<ul>
<li>编写后端程序，提供数据和网页资源，还可以作为前端工程化的工具，翻译压缩整合代码等，提高开发效率</li>
</ul>
</details>


</li>
<li><p>Node.js 为何能执行 JS 代码？</p>
<details>
<summary>答案</summary>
<ul>
<li>基于 Chrome 的 V8 引擎封装</li>
</ul>
</details>


</li>
<li><p>Node.js 与浏览器环境的 JS 最大区别？</p>
<details>
<summary>答案</summary>
<ul>
<li>Node.js 环境中没有 BOM 和 DOM，但是也用 JS 语法</li>
</ul>
</details>


</li>
<li><p>Node.js 如何执行代码？</p>
<details>
<summary>答案</summary>
<ul>
<li>在 VSCode 终端中输入：node xxx.js 回车即可执行（注意路径）</li>
</ul>
</details></li>
</ol>
<h2 id="02-fs模块-读写文件"><a href="#02-fs模块-读写文件" class="headerlink" title="02.fs模块-读写文件"></a>02.fs模块-读写文件</h2><h3 id="目标-1"><a href="#目标-1" class="headerlink" title="目标"></a>目标</h3><p>了解模块概念，使用 fs 模块封装的方法读写文件内容</p>
<h3 id="讲解-1"><a href="#讲解-1" class="headerlink" title="讲解"></a>讲解</h3><ol>
<li><p>模块：类似插件，封装了方法和属性供我们使用</p>
</li>
<li><p>fs 模块：封装了与本机文件系统进行交互的，方法和属性</p>
</li>
<li><p>fs 模块使用语法如下：</p>
<ul>
<li><p>加载 fs 模块，得到 fs 对象</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>)</span><br></pre></td></tr></table></figure>
</li>
<li><p>写入文件内容语法：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">fs.<span class="title function_">writeFile</span>(<span class="string">&#x27;文件路径&#x27;</span>, <span class="string">&#x27;写入内容&#x27;</span>, <span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 写入后的回调函数</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
</li>
<li><p>读取文件内容的语法：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">fs.<span class="title function_">readFile</span>(<span class="string">&#x27;文件路径&#x27;</span>, <span class="function">(<span class="params">err, data</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 读取后的回调函数</span></span><br><span class="line">  <span class="comment">// data 是文件内容的 Buffer 数据流</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li><p>需求：向 test.txt 文件写入内容并读取打印</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 目标：使用 fs 模块，读写文件内容</span></span><br><span class="line"><span class="comment"> * 语法：</span></span><br><span class="line"><span class="comment"> * 1. 引入 fs 模块</span></span><br><span class="line"><span class="comment"> * 2. 调用 writeFile 写入内容</span></span><br><span class="line"><span class="comment"> * 3. 调用 readFile  读取内容</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">// 1. 引入 fs 模块</span></span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>)</span><br><span class="line"><span class="comment">// 2. 调用 writeFile 写入内容</span></span><br><span class="line"><span class="comment">// 注意：建议写入字符串内容，会覆盖目标文件所有内容</span></span><br><span class="line">fs.<span class="title function_">writeFile</span>(<span class="string">&#x27;./text.txt&#x27;</span>, <span class="string">&#x27;欢迎使用 fs 模块读写文件内容&#x27;</span>, <span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (err) <span class="variable language_">console</span>.<span class="title function_">log</span>(err)</span><br><span class="line">  <span class="keyword">else</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;写入成功&#x27;</span>)</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// 3. 调用 readFile  读取内容</span></span><br><span class="line">fs.<span class="title function_">readFile</span>(<span class="string">&#x27;./text.txt&#x27;</span>, <span class="function">(<span class="params">err, data</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (err) <span class="variable language_">console</span>.<span class="title function_">log</span>(err)</span><br><span class="line">  <span class="keyword">else</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(data.<span class="title function_">toString</span>()) <span class="comment">// 把 Buffer 数据流转成字符串类型</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li>
</ol>
<h3 id="小结-1"><a href="#小结-1" class="headerlink" title="小结"></a>小结</h3><ol>
<li><p>什么是模块？</p>
<details>
<summary>答案</summary>
<ul>
<li>类似插件，封装了方法和属性</li>
</ul>
</details>


</li>
<li><p>fs 模块的作用？</p>
<details>
<summary>答案</summary>
<ul>
<li>读写本机文件内容</li>
</ul>
</details></li>
</ol>
<h2 id="03-path模块-路径处理"><a href="#03-path模块-路径处理" class="headerlink" title="03.path模块-路径处理"></a>03.path模块-路径处理</h2><h3 id="目标-2"><a href="#目标-2" class="headerlink" title="目标"></a>目标</h3><p>使用 path 模块来得到绝对路径</p>
<h3 id="讲解-2"><a href="#讲解-2" class="headerlink" title="讲解"></a>讲解</h3><ol>
<li><p>为什么在 Node.js 待执行的 JS 代码中要用绝对路径：</p>
<blockquote>
<p>Node.js 执行 JS 代码时，代码中的路径都是以终端所在文件夹出发查找相对路径，而不是以我们认为的从代码本身出发，会遇到问题，所以在 Node.js 要执行的代码中，访问其他文件，建议使用绝对路径</p>
</blockquote>
</li>
<li><p>新建 03 文件夹编写待执行的 JS 代码，访问外层相对路径下的文件，<span style="color: red;">然后在最外层终端路径来执行目标文件，造成问题</span></p>
<img data-src="/2024/11/19/Node-js%E4%B8%8EWebpack/image-20230330113929178.png" class="" title="image-20230330113929178">

<img data-src="/2024/11/19/Node-js%E4%B8%8EWebpack/image-20230330113942679.png" class="" title="image-20230330113942679">


</li>
<li><p>问题原因：就是从代码文件夹出发，使用<code>../text.txt</code>解析路径，找不到目标文件，报错了！</p>
</li>
<li><p>解决方案：使用模块内置变量 <code>__dirname</code>配合 path.join() 来得到绝对路径使用</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(__dirname) <span class="comment">// D:\备课代码\2_node_3天\Node_代码\Day01_Node.js入门\代码\03</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 1. 加载 path 模块</span></span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>)</span><br><span class="line"><span class="comment">// 2. 使用 path.join() 来拼接路径</span></span><br><span class="line"><span class="keyword">const</span> pathStr = path.<span class="title function_">join</span>(__dirname, <span class="string">&#x27;..&#x27;</span>, <span class="string">&#x27;text.txt&#x27;</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(pathStr)</span><br><span class="line"></span><br><span class="line">fs.<span class="title function_">readFile</span>(pathStr, <span class="function">(<span class="params">err, data</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (err) <span class="variable language_">console</span>.<span class="title function_">log</span>(err)</span><br><span class="line">  <span class="keyword">else</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(data.<span class="title function_">toString</span>())</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>


</li>
<li><p>再次执行查看问题就被修复了！以后在 Node.js 要执行的 JS 代码中访问其他文件的路径，都建议使用绝度路径</p>
</li>
</ol>
<h3 id="小结-2"><a href="#小结-2" class="headerlink" title="小结"></a>小结</h3><ol>
<li><p>path.join() 方法有什么用？</p>
<details>
<summary>答案</summary>
<ul>
<li>按照所在本机系统的分隔符作为定界符来链接你传入的路径</li>
</ul>
</details>


</li>
<li><p><code>__dirname</code> 模块内置变量的值是多少？</p>
<details>
<summary>答案</summary>
<ul>
<li>动态获取当前文件所在文件夹的绝对路径</li>
</ul>
</details></li>
</ol>
<h2 id="04-案例-压缩前端html"><a href="#04-案例-压缩前端html" class="headerlink" title="04.案例-压缩前端html"></a>04.案例-压缩前端html</h2><h3 id="目标-3"><a href="#目标-3" class="headerlink" title="目标"></a>目标</h3><p>压缩前端代码，体验前端工程化的例子</p>
<h3 id="讲解-3"><a href="#讲解-3" class="headerlink" title="讲解"></a>讲解</h3><ol>
<li><p>前端工程化：前端代码压缩，整合，转译，测试，自动部署等等工具的集成统称，为了提高前端开发项目的效率</p>
</li>
<li><p>需求：把准备好的 html 文件里的回车符（\r）和换行符（\n）去掉进行压缩，写入到新 html 中</p>
</li>
<li><p>步骤：</p>
<ol>
<li>读取源 html 文件内容</li>
<li>正则替换字符串</li>
<li>写入到新的 html 文件中，并运行查看是否能正常打开网页</li>
</ol>
</li>
<li><p>代码如下：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 目标一：压缩 html 里代码</span></span><br><span class="line"><span class="comment"> * 需求：把 public/index.html 里的，回车/换行符去掉，写入到 dist/index.html 中</span></span><br><span class="line"><span class="comment"> *  1.1 读取 public/index.html 内容</span></span><br><span class="line"><span class="comment"> *  1.2 使用正则替换内容字符串里的，回车符\r 换行符\n</span></span><br><span class="line"><span class="comment"> *  1.3 确认后，写入到 dist/index.html 内</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>)</span><br><span class="line"><span class="comment">// 1.1 读取 public/index.html 内容</span></span><br><span class="line">fs.<span class="title function_">readFile</span>(path.<span class="title function_">join</span>(__dirname, <span class="string">&#x27;public&#x27;</span>, <span class="string">&#x27;index.html&#x27;</span>), <span class="function">(<span class="params">err, data</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> htmlStr = data.<span class="title function_">toString</span>()</span><br><span class="line">  <span class="comment">// 1.2 使用正则替换内容字符串里的，回车符\r 换行符\n</span></span><br><span class="line">  <span class="keyword">const</span> resultStr = htmlStr.<span class="title function_">replace</span>(<span class="regexp">/[\r\n]/g</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">  <span class="comment">// 1.3 确认后，写入到 dist/index.html 内</span></span><br><span class="line">  fs.<span class="title function_">writeFile</span>(path.<span class="title function_">join</span>(__dirname, <span class="string">&#x27;dist&#x27;</span>, <span class="string">&#x27;index.html&#x27;</span>), resultStr, <span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (err) <span class="variable language_">console</span>.<span class="title function_">log</span>(err)</span><br><span class="line">    <span class="keyword">else</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;压缩成功&#x27;</span>)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li>
</ol>
<h3 id="小结-3"><a href="#小结-3" class="headerlink" title="小结"></a>小结</h3><ol>
<li><p>前端工程化的理解？</p>
<details>
<summary>答案</summary>
<ul>
<li>对前端代码进行优化，集成各种提高前端开发效率的工具等</li>
</ul>
</details></li>
</ol>
<h2 id="05-认识URL中的端口号"><a href="#05-认识URL中的端口号" class="headerlink" title="05.认识URL中的端口号"></a>05.认识URL中的端口号</h2><h3 id="目标-4"><a href="#目标-4" class="headerlink" title="目标"></a>目标</h3><p>认识 URL 中端口号的作用，以及 Web 服务的作用</p>
<h3 id="讲解-4"><a href="#讲解-4" class="headerlink" title="讲解"></a>讲解</h3><ol>
<li>URL 是统一资源定位符，简称网址，用于访问网络上的资源</li>
<li>端口号的作用：标记服务器里对应的服务程序，值为（0-65535 之间的任意整数）</li>
<li>注意：http 协议，默认访问的是 80 端口</li>
<li>Web服务：一个程序，用于提供网上信息浏览功能</li>
<li>注意：0-1023 和一些特定的端口号被占用，我们自己编写服务程序请避开使用</li>
</ol>
<h3 id="小结-4"><a href="#小结-4" class="headerlink" title="小结"></a>小结</h3><ol>
<li><p>端口号的作用？</p>
<details>
<summary>答案</summary>
<ul>
<li>标记区分服务器里不同的服务程序</li>
</ul>
</details>
</li>
<li><p>什么是 Web 服务？</p>
<details>
<summary>答案</summary>
<ul>
<li>提供网上信息浏览的服务的一个程序</li>
</ul>
</details></li>
</ol>
<h2 id="06-http模块-创建Web服务"><a href="#06-http模块-创建Web服务" class="headerlink" title="06.http模块-创建Web服务"></a>06.http模块-创建Web服务</h2><h3 id="目标-5"><a href="#目标-5" class="headerlink" title="目标"></a>目标</h3><p>基于 Node.js 环境，使用内置 http 模块，创建 Web 服务程序</p>
<h3 id="讲解-5"><a href="#讲解-5" class="headerlink" title="讲解"></a>讲解</h3><ol>
<li><p>需求：引入 http 模块，使用相关语法，创建 Web 服务程序，响应返回给请求方一句提示 ‘hello，world’</p>
</li>
<li><p>步骤：</p>
<ol>
<li>引入 http 模块，创建 Web 服务对象</li>
<li>监听 request 请求事件，对本次请求，做一些响应处理</li>
<li>启动 Web 服务监听对应端口号</li>
<li>运行本服务在终端进程中，用浏览器发起请求</li>
</ol>
</li>
<li><p>注意：本机的域名叫做 localhost</p>
</li>
<li><p>代码如下：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 目标：基于 http 模块创建 Web 服务程序</span></span><br><span class="line"><span class="comment"> *  1.1 加载 http 模块，创建 Web 服务对象</span></span><br><span class="line"><span class="comment"> *  1.2 监听 request 请求事件，设置响应头和响应体</span></span><br><span class="line"><span class="comment"> *  1.3 配置端口号并启动 Web 服务</span></span><br><span class="line"><span class="comment"> *  1.4 浏览器请求（http://localhost:3000）测试</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">// 1.1 加载 http 模块，创建 Web 服务对象</span></span><br><span class="line"><span class="keyword">const</span> http = <span class="built_in">require</span>(<span class="string">&#x27;http&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> server = http.<span class="title function_">createServer</span>()</span><br><span class="line"><span class="comment">// 1.2 监听 request 请求事件，设置响应头和响应体</span></span><br><span class="line">server.<span class="title function_">on</span>(<span class="string">&#x27;request&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 设置响应头-内容类型-普通文本以及中文编码格式</span></span><br><span class="line">  res.<span class="title function_">setHeader</span>(<span class="string">&#x27;Content-Type&#x27;</span>, <span class="string">&#x27;text/plain;charset=utf-8&#x27;</span>)</span><br><span class="line">  <span class="comment">// 设置响应体内容，结束本次请求与响应</span></span><br><span class="line">  res.<span class="title function_">end</span>(<span class="string">&#x27;欢迎使用 Node.js 和 http 模块创建的 Web 服务&#x27;</span>)</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// 1.3 配置端口号并启动 Web 服务</span></span><br><span class="line">server.<span class="title function_">listen</span>(<span class="number">3000</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Web 服务启动成功了&#x27;</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li>
</ol>
<h3 id="小结-5"><a href="#小结-5" class="headerlink" title="小结"></a>小结</h3><ol>
<li><p>如何访问本机里运行的 Web 服务？</p>
<details>
<summary>答案</summary>
<ul>
<li>http://localhost:Web服务的端口号/资源路径</li>
</ul>
</details></li>
</ol>
<h2 id="07-案例-浏览时钟"><a href="#07-案例-浏览时钟" class="headerlink" title="07.案例-浏览时钟"></a>07.案例-浏览时钟</h2><h3 id="目标-6"><a href="#目标-6" class="headerlink" title="目标"></a>目标</h3><p>体验 Web 服务除了接口数据以外，还能返回网页资源等</p>
<h3 id="讲解-6"><a href="#讲解-6" class="headerlink" title="讲解"></a>讲解</h3><ol>
<li><p>需求：基于 Web 服务，开发提供网页资源的功能，了解下后端的代码工作过程</p>
<img data-src="/2024/11/19/Node-js%E4%B8%8EWebpack/image-20230330175243783.png" class="" title="image-20230330175243783">
</li>
<li><p>步骤：</p>
<ol>
<li>基于 http 模块，创建 Web 服务</li>
<li>使用 req.url 获取请求资源路径为 &#x2F;index.html 的时候，读取 index.html 文件内容字符串返回给请求方</li>
<li>其他路径，暂时返回不存在的提示</li>
<li>运行 Web 服务，用浏览器发起请求</li>
</ol>
</li>
<li><p>代码如下：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 目标：编写 web 服务，监听请求的是 /index.html 路径的时候，返回 dist/index.html 时钟案例页面内容</span></span><br><span class="line"><span class="comment"> * 步骤：</span></span><br><span class="line"><span class="comment"> *  1. 基于 http 模块，创建 Web 服务</span></span><br><span class="line"><span class="comment"> *  2. 使用 req.url 获取请求资源路径，并读取 index.html 里字符串内容返回给请求方</span></span><br><span class="line"><span class="comment"> *  3. 其他路径，暂时返回不存在提示</span></span><br><span class="line"><span class="comment"> *  4. 运行 Web 服务，用浏览器发起请求</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>)</span><br><span class="line"><span class="comment">// 1. 基于 http 模块，创建 Web 服务</span></span><br><span class="line"><span class="keyword">const</span> http = <span class="built_in">require</span>(<span class="string">&#x27;http&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> server = http.<span class="title function_">createServer</span>()</span><br><span class="line">server.<span class="title function_">on</span>(<span class="string">&#x27;request&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 2. 使用 req.url 获取请求资源路径，并读取 index.html 里字符串内容返回给请求方</span></span><br><span class="line">  <span class="keyword">if</span> (req.<span class="property">url</span> === <span class="string">&#x27;/index.html&#x27;</span>) &#123;</span><br><span class="line">    fs.<span class="title function_">readFile</span>(path.<span class="title function_">join</span>(__dirname, <span class="string">&#x27;dist/index.html&#x27;</span>), <span class="function">(<span class="params">err, data</span>) =&gt;</span> &#123;</span><br><span class="line">      res.<span class="title function_">setHeader</span>(<span class="string">&#x27;Content-Type&#x27;</span>, <span class="string">&#x27;text/html;charset=utf-8&#x27;</span>)</span><br><span class="line">      res.<span class="title function_">end</span>(data.<span class="title function_">toString</span>())</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// 3. 其他路径，暂时返回不存在提示</span></span><br><span class="line">    res.<span class="title function_">setHeader</span>(<span class="string">&#x27;Content-Type&#x27;</span>, <span class="string">&#x27;text/html;charset=utf-8&#x27;</span>)</span><br><span class="line">    res.<span class="title function_">end</span>(<span class="string">&#x27;你要访问的资源路径不存在&#x27;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line">server.<span class="title function_">listen</span>(<span class="number">8080</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Web 服务启动了&#x27;</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li>
</ol>
<h3 id="小结-6"><a href="#小结-6" class="headerlink" title="小结"></a>小结</h3><ol>
<li><p>Web 服务程序都有什么功能？</p>
<details>
<summary>答案</summary>
<ul>
<li>提供数据和网页资源等等功能，其他它的功能远不止于此</li>
</ul>
</details></li>
</ol>
<h1 id="02-Node-js模块化"><a href="#02-Node-js模块化" class="headerlink" title="02_Node.js模块化"></a>02_Node.js模块化</h1><h2 id="知识点自测-1"><a href="#知识点自测-1" class="headerlink" title="知识点自测"></a>知识点自测</h2><ol>
<li><p>以下代码运行的结果是多少？</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> arr = [<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>]</span><br><span class="line"><span class="keyword">const</span> result = arr.<span class="title function_">map</span>(<span class="function"><span class="params">val</span> =&gt;</span> val + <span class="number">1</span>).<span class="title function_">reduce</span>(<span class="function">(<span class="params">sum, val</span>) =&gt;</span> sum += val, <span class="number">0</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(result)</span><br></pre></td></tr></table></figure>

<p>A：60</p>
<p>B：63</p>
<details>
<summary>答案</summary>
<ul>
<li>B选项正确</li>
</ul>
</details>


</li>
<li><p>以下代码运行的结果是多少？</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> obj = &#123; <span class="attr">username</span>: <span class="string">&#x27;itheima&#x27;</span>, <span class="attr">password</span>: <span class="string">&#x27;777777&#x27;</span> &#125;</span><br><span class="line"><span class="keyword">const</span> &#123; uname &#125; = obj</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(uname)</span><br></pre></td></tr></table></figure>

<p>A：itheima</p>
<p>B：undefined</p>
<details>
<summary>答案</summary>
<ul>
<li>A选项正确</li>
</ul>
</details></li>
</ol>
<h2 id="01-模块化简介"><a href="#01-模块化简介" class="headerlink" title="01.模块化简介"></a>01.模块化简介</h2><h3 id="目标-7"><a href="#目标-7" class="headerlink" title="目标"></a>目标</h3><p>了解模块化概念和好处，以及 CommonJS 标准语法导出和导入</p>
<h3 id="讲解-7"><a href="#讲解-7" class="headerlink" title="讲解"></a>讲解</h3><ol>
<li><p>在 Node.js 中每个文件都被当做是一个独立的模块，模块内定义的变量和函数都是独立作用域的，因为 Node.js 在执行模块代码时，将使用如下所示的函数封装器对其进行封装</p>
<img data-src="/2024/11/19/Node-js%E4%B8%8EWebpack/image-20230331150152299.png" class="" title="image-20230331150152299"></li>
</ol>
<p>​	</p>
<ol start="2">
<li><p>而且项目是由多个模块组成的，每个模块之间都是独立的，而且提高模块代码复用性，按需加载，独立作用域</p>
<img data-src="/2024/11/19/Node-js%E4%B8%8EWebpack/image-20230331150407659.png" class="" title="image-20230331150407659">
</li>
<li><p>但是因为模块内的属性和函数都是私有的，如果对外使用，需要使用标准语法导出和导入才可以，而这个标准叫 CommonJS 标准，接下来我们在一个需求中，体验下模块化导出和导入语法的使用</p>
</li>
<li><p>需求：定义 utils.js 模块，封装基地址和求数组总和的函数，导入到 index.js 使用查看效果</p>
<img data-src="/2024/11/19/Node-js%E4%B8%8EWebpack/image-20230331150506876.png" class="" title="image-20230331150506876">
</li>
<li><p>导出语法：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  对外属性名: 模块内私有变量</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>导入语法：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> 变量名 = <span class="built_in">require</span>(<span class="string">&#x27;模块名或路径&#x27;</span>)</span><br><span class="line"><span class="comment">// Node.js 环境内置模块直接写模块名（例如：fs，path，http）</span></span><br><span class="line"><span class="comment">// 自定义模块：写模块文件路径（例如：./utils.js)</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>变量名的值接收的就是目标模块导出的对象</p>
</blockquote>
</li>
<li><p>代码实现</p>
<ul>
<li><p>utils.js：导出</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 目标：基于 CommonJS 标准语法，封装属性和方法并导出</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> baseURL = <span class="string">&#x27;http://hmajax.itheima.net&#x27;</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">getArraySum</span> = arr =&gt; arr.<span class="title function_">reduce</span>(<span class="function">(<span class="params">sum, item</span>) =&gt;</span> sum += item, <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 导出</span></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="attr">url</span>: baseURL,</span><br><span class="line">  <span class="attr">arraySum</span>: getArraySum</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>index.js：导入使用</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 目标：基于 CommonJS 标准语法，导入工具属性和方法使用</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">// 导入</span></span><br><span class="line"><span class="keyword">const</span> obj = <span class="built_in">require</span>(<span class="string">&#x27;./utils.js&#x27;</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(obj)</span><br><span class="line"><span class="keyword">const</span> result = obj.<span class="title function_">arraySum</span>([<span class="number">5</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>])</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(result)</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
</ol>
<h3 id="小结-7"><a href="#小结-7" class="headerlink" title="小结"></a>小结</h3><ol>
<li><p>Node.js 中什么是模块化?</p>
<details>
<summary>答案</summary>
<ul>
<li>每个文件都是独立的模块</li>
</ul>
</details>
</li>
<li><p>模块之间如何联系呢?</p>
<details>
<summary>答案</summary>
<ul>
<li>使用特定语法，导出和导入使用</li>
</ul>
</details>
</li>
<li><p>CommonJS 标准规定如何导出和导入模块?</p>
<details>
<summary>答案</summary>
<ul>
<li>导出：module.exports = {},导入：require('模块名或路径')</li>
</ul>
</details>
</li>
<li><p>模块名&#x2F;路径如何选择?</p>
<details>
<summary>答案</summary>
<ul>
<li>内置模块：写名字。例如：fs，path，http等。自定义模块：写模块文件路径，例如：./utils.js</li>
</ul>
</details></li>
</ol>
<h2 id="02-ECMAScript标准-默认导出和导入"><a href="#02-ECMAScript标准-默认导出和导入" class="headerlink" title="02.ECMAScript标准-默认导出和导入"></a>02.ECMAScript标准-默认导出和导入</h2><h3 id="目标-8"><a href="#目标-8" class="headerlink" title="目标"></a>目标</h3><p>掌握 ECMAScript 标准语法中，默认导出和导入的使用</p>
<h3 id="讲解-8"><a href="#讲解-8" class="headerlink" title="讲解"></a>讲解</h3><ol>
<li><p>CommonJS 规范是 Node.js 环境中默认的，后来官方推出 ECMAScript 标准语法，我们接下来在一个需求中，体验下这个标准中默认导出和导入的语法要如何使用</p>
</li>
<li><p>需求：封装并导出基地址和求数组元素和的函数，导入到 index.js 使用查看效果</p>
</li>
<li><p>导出语法：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  对外属性名: 模块内私有变量</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>导入语法：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> 变量名 <span class="keyword">from</span> <span class="string">&#x27;模块名或路径&#x27;</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>变量名的值接收的就是目标模块导出的对象</p>
</blockquote>
</li>
<li><p>注意：Node.js 默认只支持 CommonJS 标准语法，如果想要在当前项目环境下使用 ECMAScript 标准语法，请新建 package.json 文件设置 type: ‘module’ 来进行设置</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span> “type”<span class="punctuation">:</span> <span class="string">&quot;module&quot;</span> <span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>


</li>
<li><p>代码实现：</p>
<ul>
<li><p>utils.js：导出</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 目标：基于 ECMAScript 标准语法，封装属性和方法并&quot;默认&quot;导出</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> baseURL = <span class="string">&#x27;http://hmajax.itheima.net&#x27;</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">getArraySum</span> = arr =&gt; arr.<span class="title function_">reduce</span>(<span class="function">(<span class="params">sum, item</span>) =&gt;</span> sum += item, <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 默认导出</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">url</span>: baseURL,</span><br><span class="line">  <span class="attr">arraySum</span>: getArraySum</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>index.js：导入</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 目标：基于 ECMAScript 标准语法，&quot;默认&quot;导入，工具属性和方法使用</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">// 默认导入</span></span><br><span class="line"><span class="keyword">import</span> obj <span class="keyword">from</span> <span class="string">&#x27;./utils.js&#x27;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(obj)</span><br><span class="line"><span class="keyword">const</span> result = obj.<span class="title function_">arraySum</span>([<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>])</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(result)</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
</ol>
<h3 id="小结-8"><a href="#小结-8" class="headerlink" title="小结"></a>小结</h3><ol>
<li><p>ECMAScript 标准规定如何默认导出和导入模块?</p>
<details>
<summary>答案</summary>
<ul>
<li>导出：export default {} 导入：import 变量名 from '模块名或路径'</li>
</ul>
</details>
</li>
<li><p>如何让 Node.js 切换模块标准为 ECMAScript？</p>
<details>
<summary>答案</summary>
<ul>
<li>运行模块所在文件夹，新建 package.json 并设置 {“type”：“module”}</li>
</ul>
</details></li>
</ol>
<h2 id="03-ECMAScript标准-命名导出和导入"><a href="#03-ECMAScript标准-命名导出和导入" class="headerlink" title="03.ECMAScript标准-命名导出和导入"></a>03.ECMAScript标准-命名导出和导入</h2><h3 id="目标-9"><a href="#目标-9" class="headerlink" title="目标"></a>目标</h3><p>掌握 ECMAScript 标准语法中，命名导出和导入的使用</p>
<h3 id="讲解-9"><a href="#讲解-9" class="headerlink" title="讲解"></a>讲解</h3><ol>
<li><p>ECMAScript 标准的语法有很多，常用的就是默认和命名导出和导入，这节课我们来学习下命名导出和导入的使用</p>
</li>
<li><p>需求：封装并导出基地址和数组求和函数，导入到 index.js 使用查看效果</p>
</li>
<li><p>命名导出语法：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> 修饰定义语句</span><br></pre></td></tr></table></figure>
</li>
<li><p>命名导入语法：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; 同名变量 &#125; <span class="keyword">from</span> <span class="string">&#x27;模块名或路径&#x27;</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>注意：同名变量指的是模块内导出的变量名</p>
</blockquote>
</li>
<li><p>代码示例：</p>
<ul>
<li><p>utils.js 导出</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 目标：基于 ECMAScript 标准语法，封装属性和方法并&quot;命名&quot;导出</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> baseURL = <span class="string">&#x27;http://hmajax.itheima.net&#x27;</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">getArraySum</span> = arr =&gt; arr.<span class="title function_">reduce</span>(<span class="function">(<span class="params">sum, item</span>) =&gt;</span> sum += item, <span class="number">0</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>
</li>
<li><p>index.js 导入</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 目标：基于 ECMAScript 标准语法，&quot;命名&quot;导入，工具属性和方法使用</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">// 命名导入</span></span><br><span class="line"><span class="keyword">import</span> &#123;baseURL, getArraySum&#125; <span class="keyword">from</span> <span class="string">&#x27;./utils.js&#x27;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(obj)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(baseURL)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(getArraySum)</span><br><span class="line"><span class="keyword">const</span> result = <span class="title function_">getArraySum</span>([<span class="number">10</span>, <span class="number">21</span>, <span class="number">33</span>])</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(result)</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li><p>与默认导出如何选择：</p>
<ul>
<li>按需加载，使用命名导出和导入</li>
<li>全部加载，使用默认导出和导入</li>
</ul>
</li>
</ol>
<h3 id="小结-9"><a href="#小结-9" class="headerlink" title="小结"></a>小结</h3><ol>
<li><p>Node.js 支持哪 2 种模块化标准?</p>
<details>
<summary>答案</summary>
<ul>
<li>CommonJS 标准语法（默认）</li>
<li>ECMAScript 标准语法</li>
</ul>
</details>
</li>
<li><p>ECMAScript 标准，命名导出和导入的语法?</p>
<details>
<summary>答案</summary>
<ul>
<li>导出：export 修饰定义的语句，import { 同名变量 } from '模块名或路径'</li>
</ul>
</details>
</li>
<li><p>ECMAScript 标准，默认导出和导入的语法？</p>
<details>
<summary>答案</summary>
<ul>
<li>导出：export default {} 导入：import 变量名 from '模块名或路径'</li>
</ul>
</details></li>
</ol>
<h2 id="04-包的概念"><a href="#04-包的概念" class="headerlink" title="04.包的概念"></a>04.包的概念</h2><h3 id="目标-10"><a href="#目标-10" class="headerlink" title="目标"></a>目标</h3><p>了解 Node.js 环境中包的概念</p>
<h3 id="讲解-10"><a href="#讲解-10" class="headerlink" title="讲解"></a>讲解</h3><ol>
<li><p>包：将模块，代码，其他资料整合成一个文件夹，这个文件夹就叫包</p>
</li>
<li><p>包分类：</p>
<ul>
<li>项目包：主要用于编写项目和业务逻辑</li>
<li>软件包：封装工具和方法进行使用</li>
</ul>
</li>
<li><p>包要求：根目录中，必须有 package.json 文件（记录包的清单信息）</p>
<img data-src="/2024/11/19/Node-js%E4%B8%8EWebpack/image-20230331154702306.png" class="" title="image-20230331154702306">

<img data-src="/2024/11/19/Node-js%E4%B8%8EWebpack/image-20230331154639881.png" class="" title="image-20230331154639881">
</li>
<li><p>包使用：在引入一个包文件夹到代码中，默认引入的是包文件节下的 index.js 模块文件里导出的对象，如果没有 index.js 文件，则会引入 package.json 里 main 属性指定的文件模块导出的对象</p>
</li>
<li><p>需求：封装数组求和函数的模块，封装判断用户名和密码长度函数的模块，形成一个软件包，并导入到 index.js 中使用查看效果</p>
</li>
<li><p>代码示例：</p>
<ul>
<li><p>utils&#x2F;lib 相关代码在素材里准备好了，只需要自己在 utils&#x2F;index.js 统一出口进行导出</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 本文件是，utils 工具包的唯一出口</span></span><br><span class="line"><span class="comment"> * 作用：把所有工具模块方法集中起来，统一向外暴露</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> &#123; getArraySum &#125; = <span class="built_in">require</span>(<span class="string">&#x27;./lib/arr.js&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> &#123; checkUser, checkPwd &#125; = <span class="built_in">require</span>(<span class="string">&#x27;./lib/str.js&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 统一导出所有函数</span></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  getArraySum,</span><br><span class="line">  checkUser,</span><br><span class="line">  checkPwd</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
</li>
<li><p>index.js 导入软件包文件夹使用（注意：这次导入的是包文件夹，不是模块文件）</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 目标：导入 utils 软件包，使用里面封装的工具函数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> obj = <span class="built_in">require</span>(<span class="string">&#x27;./utils&#x27;</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(obj)</span><br><span class="line"><span class="keyword">const</span> result = obj.<span class="title function_">getArraySum</span>([<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>])</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(result)</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
</ol>
<h3 id="小结-10"><a href="#小结-10" class="headerlink" title="小结"></a>小结</h3><ol>
<li><p>什么是包?</p>
<details>
<summary>答案</summary>
<ul>
<li>将模块，代码，其他资料聚合成的文件夹</li>
</ul>
</details>
</li>
<li><p>包分为哪 2 类呢?</p>
<details>
<summary>答案</summary>
<ul>
<li>项目包：编写项目代码的文件夹，软件包：封装工具和方法供开发者使用</li>
</ul>
</details>
</li>
<li><p>package.json 文件的作用?</p>
<details>
<summary>答案</summary>
<ul>
<li>记录软件包的名字，作者，入口文件等信息</li>
</ul>
</details>
</li>
<li><p>导入一个包文件夹的时候，导入的是哪个文件?</p>
<details>
<summary>答案</summary>
<ul>
<li>默认 index.js 文件，或者 main 属性指定的文件</li>
</ul>
</details></li>
</ol>
<h2 id="05-npm软件包管理器"><a href="#05-npm软件包管理器" class="headerlink" title="05.npm软件包管理器"></a>05.npm软件包管理器</h2><h3 id="目标-11"><a href="#目标-11" class="headerlink" title="目标"></a>目标</h3><p>掌握使用 npm 管理软件包</p>
<h3 id="讲解-11"><a href="#讲解-11" class="headerlink" title="讲解"></a>讲解</h3><ol>
<li><p>npm 简介<a href="%5Bhttp://dev.nodejs.cn/learn/an-introduction-to-the-npm-package-manager#npm-%E7%AE%80%E4%BB%8B%5D(http://dev.nodejs.cn/learn/an-introduction-to-the-npm-package-manager)">链接</a>： 软件包管理器，用于下载和管理 Node.js 环境中的软件包</p>
<img data-src="/2024/11/19/Node-js%E4%B8%8EWebpack/image-20230331155406652.png" class="" title="image-20230331155406652">
</li>
<li><p>npm 使用步骤：</p>
<ol>
<li><p>初始化清单文件： npm init -y （得到 package.json 文件，有则跳过此命令）</p>
<blockquote>
<p>注意 -y 就是所有选项用默认值，所在文件夹不要有中文&#x2F;特殊符号，建议英文和数字组成，因为 npm 包名限制建议用英文和数字或者下划线中划线</p>
</blockquote>
</li>
<li><p>下载软件包：npm i 软件包名称</p>
</li>
<li><p>使用软件包</p>
</li>
</ol>
</li>
<li><p>需求：使用 npm 下载 dayjs 软件包到本地项目文件夹中，引入到 index.js 中格式化日期打印，运行观察效果</p>
</li>
<li><p>具体使用流程图：</p>
<img data-src="/2024/11/19/Node-js%E4%B8%8EWebpack/image-20230331155537983.png" class="" title="image-20230331155537983"></li>
</ol>
<h3 id="小结-11"><a href="#小结-11" class="headerlink" title="小结"></a>小结</h3><ol>
<li><p>npm 软件包管理器作用？</p>
<details>
<summary>答案</summary>
<ul>
<li>下载软件包以及管理版本</li>
</ul>
</details>
</li>
<li><p>初始化项目清单文件 package.json 命令?</p>
<details>
<summary>答案</summary>
<ul>
<li>npm init -y</li>
</ul>
</details>
</li>
<li><p>下载软件包的命令？</p>
<details>
<summary>答案</summary>
<ul>
<li>npm i 软件包名字</li>
</ul>
</details>
</li>
<li><p>下载的包会存放在哪里?</p>
<details>
<summary>答案</summary>
<ul>
<li>当前项目下的 node_modules 中，并记录在 package.json 中</li>
</ul>
</details></li>
</ol>
<h2 id="06-npm安装所有依赖"><a href="#06-npm安装所有依赖" class="headerlink" title="06.npm安装所有依赖"></a>06.npm安装所有依赖</h2><h3 id="目标-12"><a href="#目标-12" class="headerlink" title="目标"></a>目标</h3><p>掌握 npm 安装所有依赖功能</p>
<h3 id="讲解-12"><a href="#讲解-12" class="headerlink" title="讲解"></a>讲解</h3><ol>
<li><p>我们拿到了一个别人编写的项目，但是没有 node_modules，项目能否正确运行？</p>
<blockquote>
<p>不能，因为缺少了项目需要的依赖软件包，比如要使用 dayjs 和 lodash 但是你项目里没有这个对应的源码，项目会报错的</p>
</blockquote>
<img data-src="/2024/11/19/Node-js%E4%B8%8EWebpack/image-20230331162320775.png" class="" title="image-20230331162320775">
</li>
<li><p>为何没有给我 node_modules？</p>
<blockquote>
<p>因为每个人在自己的本机使用 npm 下载，要比磁盘间传递要快（npm 有缓存在本机）</p>
</blockquote>
</li>
<li><p>如何得到需要的所有依赖软件包呢？</p>
<blockquote>
<p>直接在项目目录下，运行终端命令：npm i 即可安装 package.json 里记录的所有包和对应版本到本项目中的 node_modules</p>
</blockquote>
<img data-src="/2024/11/19/Node-js%E4%B8%8EWebpack/image-20230331162341684.png" class="" title="image-20230331162341684">


</li>
<li><p>需求：请在准备好的素材项目中，安装项目所有需要的依赖软件包，并运行 index.js 代码看是否正常！</p>
</li>
</ol>
<h3 id="小结-12"><a href="#小结-12" class="headerlink" title="小结"></a>小结</h3><ol>
<li><p>当前项目中只有 package.json 没有 node_modules 怎么办?</p>
<details>
<summary>答案</summary>
<ul>
<li>当前项目目录下，打开终端，执行 npm i 安装所有依赖软件包</li>
</ul>
</details>
</li>
<li><p>为什么 node_modules 不进行传递?</p>
<details>
<summary>答案</summary>
<ul>
<li>因为用 npm 下载有缓存在本机，比磁盘之间传递要快</li>
</ul>
</details></li>
</ol>
<h2 id="07-npm全局软件包-nodemon"><a href="#07-npm全局软件包-nodemon" class="headerlink" title="07.npm全局软件包-nodemon"></a>07.npm全局软件包-nodemon</h2><h3 id="目标-13"><a href="#目标-13" class="headerlink" title="目标"></a>目标</h3><p>掌握本地软件包和全局软件包区别，体验 nodemon 的使用</p>
<h3 id="讲解-13"><a href="#讲解-13" class="headerlink" title="讲解"></a>讲解</h3><ol>
<li><p>软件包区别：</p>
<ul>
<li>本地软件包：当前项目内使用，<span style="color: red;">封装属性和方法</span>，存在于 node_modules</li>
<li>全局软件包：本机所有项目使用，<span style="color: red;">封装命令和工具</span>，存在于系统设置的位置</li>
</ul>
</li>
<li><p>nodemon 作用：替代 node 命令，检测代码更改，自动重启程序</p>
</li>
<li><p>使用：</p>
<ol>
<li>安装：npm i nodemon -g （-g 代表安装到全局环境中）</li>
<li>运行：nodemon 待执行的目标 js 文件</li>
</ol>
</li>
<li><p>需求：使用 nodemon 命令来启动素材里准备好的项目，然后修改代码保存后，观察终端重启应用程序</p>
</li>
</ol>
<h3 id="小结-13"><a href="#小结-13" class="headerlink" title="小结"></a>小结</h3><ol>
<li><p>本地软件包和全局软件包区别?</p>
<details>
<summary>答案</summary>
<ul>
<li>本地软件包，作用在当前项目，封装属性和方法</li>
<li>全局软件包，本地所有项目使用，封装命令和工具</li>
</ul>
</details>
</li>
<li><p>nodemon 作用?</p>
<details>
<summary>答案</summary>
<ul>
<li>替代 node 命令，检测代码更改，自动重启程序</li>
</ul>
</details>
</li>
<li><p>nodemon 怎么用?</p>
<details>
<summary>答案</summary>
<ul>
<li>先确保安装 npm i nodemon -g</li>
<li>使用 nodemon 执行目标 js 文件</li>
</ul>
</details></li>
</ol>
<h2 id="08-Node-js概念和常用命令总结"><a href="#08-Node-js概念和常用命令总结" class="headerlink" title="08.Node.js概念和常用命令总结"></a>08.Node.js概念和常用命令总结</h2><h3 id="目标-14"><a href="#目标-14" class="headerlink" title="目标"></a>目标</h3><p>把上面学的模块化语法，包的概念，常用命令进行总结</p>
<h3 id="讲解-14"><a href="#讲解-14" class="headerlink" title="讲解"></a>讲解</h3><ol>
<li><p>Node.js 模块化：把每个文件当做一个模块，独立作用域，按需加载，使用特定标准语法导出和导入使用</p>
<blockquote>
<p>CommonJS 标准：一般应用在 Node.js 项目环境中</p>
<p>ECMAScript 标准：一般应用在前端工程化项目中</p>
</blockquote>
<img data-src="/2024/11/19/Node-js%E4%B8%8EWebpack/image-20230331170210113.png" class="" title="image-20230331170210113">

<img data-src="/2024/11/19/Node-js%E4%B8%8EWebpack/image-20230331170220045.png" class="" title="image-20230331170220045">


</li>
<li><p>Node.js 包：把模块文件，代码文件，其他资料聚合成一个文件夹就是包</p>
<blockquote>
<p>项目包：编写项目需求和业务逻辑的文件夹</p>
<p>软件包：封装工具和方法进行使用的文件夹（一般使用 npm 管理）</p>
<ul>
<li>本地软件包：作用在当前项目，封装的属性&#x2F;方法，供项目调用编写业务需求</li>
<li>全局软件包：作用在所有项目，一般封装的命令&#x2F;工具，支撑项目运行</li>
</ul>
</blockquote>
<img data-src="/2024/11/19/Node-js%E4%B8%8EWebpack/image-20230331170539931.png" class="" title="image-20230331170539931">


</li>
<li><p>Node.js 常用命令：</p>
<img data-src="/2024/11/19/Node-js%E4%B8%8EWebpack/image-20230331171411780.png" class="" title="image-20230331171411780"></li>
</ol>
<h3 id="小结-14"><a href="#小结-14" class="headerlink" title="小结"></a>小结</h3><ol>
<li><p>安装本地软件包的命令是什么？</p>
<details>
<summary>答案</summary>
<ul>
<li>npm i 软件包名</li>
</ul>
</details></li>
</ol>
<h1 id="03-Webpack模块打包工具"><a href="#03-Webpack模块打包工具" class="headerlink" title="03_Webpack模块打包工具"></a>03_Webpack模块打包工具</h1><h2 id="知识点自测-2"><a href="#知识点自测-2" class="headerlink" title="知识点自测"></a>知识点自测</h2><ol>
<li><p>以下哪个选项是 ECMAScript 默认导出和导入的语法？</p>
<p>A：export 和 require</p>
<p>B：module.exports &#x3D; {} 和 import 变量名</p>
<p>C：export default 和 import 变量名</p>
<p>D：export 和 import { 同名变量名 }</p>
<details>
<summary>答案</summary>
<ul>
<li>C选项正确</li>
</ul>
</details>


</li>
<li><p>对以下 less 样式代码描述正确的是？</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">.<span class="property">title</span> &#123;</span><br><span class="line">  span &#123;</span><br><span class="line">    <span class="attr">color</span>: red;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>A：查找 class 名字叫 title 元素范围内，所有 span 标签</p>
<p>B：查找 class 名字叫 title 和 span 标签</p>
<details>
<summary>答案</summary>
<ul>
<li>A选项正确</li>
</ul>
</details>


</li>
<li><p>以下代码运行结果是多少？</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>].<span class="title function_">map</span>(<span class="function"><span class="params">val</span> =&gt;</span> val * <span class="number">2</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr)</span><br></pre></td></tr></table></figure>

<p>A：[undefined, undefined, undefined, undefined]</p>
<p>B：[2, 4, 6, 8]</p>
<details>
<summary>答案</summary>
<ul>
<li>B选项正确</li>
</ul>
</details>


</li>
<li><p>以下针对 axios 函数使用时的配置项描述正确的选项？</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="title function_">axios</span>(&#123;</span><br><span class="line"> <span class="comment">// 这里</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<p>A：url：请求的方法，method：传递参数</p>
<p>B：data：传递查询参数，params：传递请求体参数</p>
<p>C：url：请求的网址，method：请求的方法</p>
<p>D：data：传递请求体参数，params：传递请求体参数</p>
<details>
<summary>答案</summary>
<ul>
<li>C选项正确</li>
</ul>
</details></li>
</ol>
<h2 id="01-Webpack-简介以及体验"><a href="#01-Webpack-简介以及体验" class="headerlink" title="01.Webpack 简介以及体验"></a>01.Webpack 简介以及体验</h2><h3 id="目标-15"><a href="#目标-15" class="headerlink" title="目标"></a>目标</h3><p>了解 Webpack 的概念和作用，以及使用</p>
<h3 id="讲解-15"><a href="#讲解-15" class="headerlink" title="讲解"></a>讲解</h3><ol>
<li><p>Webpack 是一个静态模块打包工具，从入口构建依赖图，打包有关的模块，最后用于展示你的内容</p>
<img data-src="/2024/11/19/Node-js%E4%B8%8EWebpack/image-20230403105744257.png" class="" title="image-20230403105744257">



</li>
<li><p>静态模块：编写代码过程中的，html，css， js，图片等固定内容的文件</p>
</li>
<li><p>打包过程，注意：只有和入口有直接&#x2F;间接引入关系的模块，才会被打包</p>
<img data-src="/2024/11/19/Node-js%E4%B8%8EWebpack/image-20230403105848637.png" class="" title="image-20230403105848637">


</li>
<li><p>Webpack 的作用：把静态模块内容，压缩，这个和，转译等（前端工程化）</p>
<ul>
<li>把 less&#x2F;sass 转成 css 代码</li>
<li>把 ES6+ 降级成 ES5 等</li>
<li>支持多种模块文件类型，多种模块标准语法</li>
</ul>
</li>
<li><p>为何不学 vite？</p>
<blockquote>
<p>现在很多项目还是基于 Webpack 来进行构建的，所以还是要掌握 Webpack 的使用</p>
</blockquote>
</li>
<li><p>体验 Webpack 打包 2 个 JS 文件内容</p>
</li>
<li><p>需求：封装 utils 包，校验手机号和验证码长度，在 src&#x2F;index.js 中使用，使用 Webpack 打包</p>
</li>
<li><p>步骤：</p>
<ol>
<li><p>新建项目文件夹 Webpack_study，初始化包环境，得到 package.json 文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm init -y</span><br></pre></td></tr></table></figure>
</li>
<li><p>新建 src 源代码文件夹（书写代码）包括 utils&#x2F;check.js 封装用户名和密码长度函数，引入到 src&#x2F;index.js 进行使用</p>
<ul>
<li><p>src&#x2F;utils&#x2F;check.js</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 封装校验手机号长度和校验验证码长度的函数</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">checkPhone</span> = phone =&gt; phone.<span class="property">length</span> === <span class="number">11</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">checkCode</span> = code =&gt; code.<span class="property">length</span> === <span class="number">6</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>src&#x2F;index.js</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 目标1：体验 webpack 打包过程</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">// 1.1 准备项目和源代码</span></span><br><span class="line"><span class="keyword">import</span> &#123; checkPhone, checkCode &#125; <span class="keyword">from</span> <span class="string">&#x27;../utils/check.js&#x27;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">checkPhone</span>(<span class="string">&#x27;13900002020&#x27;</span>))</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">checkCode</span>(<span class="string">&#x27;123123123123&#x27;</span>))</span><br><span class="line"><span class="comment">// 1.2 准备 webpack 打包的环境</span></span><br><span class="line"><span class="comment">// 1.3 运行自定义命令打包观察效果（npm run 自定义命令）</span></span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li><p>下载 webpack webpack-cli 到项目（版本独立）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm i webpack webpack-cli --save-dev</span><br></pre></td></tr></table></figure>

<blockquote>
<p>注意：虽然 webpack 是全局软件包，封装的是命令工具，但是为了保证项目之间版本分别独立，所以这次比较特殊，下载到某个项目环境下，但是需要把 webpack 命令配置到 package.json 的 scripts 自定义命令，作为局部命令使用</p>
</blockquote>
<img data-src="/2024/11/19/Node-js%E4%B8%8EWebpack/image-20230403110640647.png" class="" title="image-20230403110640647">
</li>
<li><p>项目中运行工具命令，采用自定义命令的方式（局部命令）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm run build</span><br></pre></td></tr></table></figure>

<blockquote>
<p>npm run 自定义命令名字</p>
<p>注意：实际上在终端运行的是 build 右侧的具体命名</p>
</blockquote>
</li>
<li><p>自动产生 dist 分发文件夹（压缩和优化后，用于最终运行的代码）</p>
</li>
</ol>
</li>
<li><p>需求最终流程图：</p>
<img data-src="/2024/11/19/Node-js%E4%B8%8EWebpack/image-20230403111445196.png" class="" title="image-20230403111445196"></li>
</ol>
<h3 id="小结-15"><a href="#小结-15" class="headerlink" title="小结"></a>小结</h3><ol>
<li><p>Webpack 有什么用?</p>
<details>
<summary>答案</summary>
<ul>
<li>压缩，转译，整合，打包我们的静态模块</li>
</ul>
</details>
</li>
<li><p>Webpack 怎么用？</p>
<details>
<summary>答案</summary>
<ul>
<li>初始化环境，编写代码，安装 Webpack 软件包，配置自定义命令，打包体验查看结果</li>
</ul>
</details>
</li>
<li><p>如何运行 package.json 里的自定义命令？</p>
<details>
<summary>答案</summary>
<ul>
<li>npm run 自定义命令</li>
</ul>
</details>
</li>
<li><p>Webpack 默认入口和出口？</p>
<details>
<summary>答案</summary>
<ul>
<li>src/index.js 和 dist/main.js</li>
</ul>
</details></li>
</ol>
<h2 id="02-Webpack-修改入口和出口"><a href="#02-Webpack-修改入口和出口" class="headerlink" title="02.Webpack 修改入口和出口"></a>02.Webpack 修改入口和出口</h2><h3 id="目标-16"><a href="#目标-16" class="headerlink" title="目标"></a>目标</h3><p>了解 Webpack 配置文件使用，影响 Webpack 打包过程和结果</p>
<h3 id="讲解-16"><a href="#讲解-16" class="headerlink" title="讲解"></a>讲解</h3><ol>
<li><p><a href="%5Bhttps://webpack.docschina.org/concepts/#entry%5D(https://webpack.docschina.org/concepts/)">Webpack 配置</a>：影响 Webpack 打包过程</p>
</li>
<li><p>步骤：</p>
<ol>
<li><p>项目根目录，新建 Webpack.config.js 配置文件</p>
</li>
<li><p>导出配置对象，配置入口，出口文件路径（别忘了修改磁盘文件夹和文件的名字）</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="attr">entry</span>: path.<span class="title function_">resolve</span>(__dirname, <span class="string">&#x27;src/login/index.js&#x27;</span>),</span><br><span class="line">  <span class="attr">output</span>: &#123;</span><br><span class="line">    <span class="attr">path</span>: path.<span class="title function_">resolve</span>(__dirname, <span class="string">&#x27;dist&#x27;</span>),</span><br><span class="line">    <span class="attr">filename</span>: <span class="string">&#x27;./login/index.js&#x27;</span>  </span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>重新打包观察</p>
</li>
</ol>
</li>
<li><p>图解：</p>
<img data-src="/2024/11/19/Node-js%E4%B8%8EWebpack/image-20230518101043103.png" class="" title="image-20230518101043103"></li>
</ol>
<h3 id="小结-16"><a href="#小结-16" class="headerlink" title="小结"></a>小结</h3><ol>
<li><p>如何影响 Webpack 打包过程?</p>
<details>
<summary>答案</summary>
<ul>
<li>查文档，新建配置文件和配置属性</li>
</ul>
</details></li>
</ol>
<h2 id="03-案例-用户登录-长度判断"><a href="#03-案例-用户登录-长度判断" class="headerlink" title="03.案例-用户登录-长度判断"></a>03.案例-用户登录-长度判断</h2><h3 id="目标-17"><a href="#目标-17" class="headerlink" title="目标"></a>目标</h3><p>体验前端项目代码，如何被 Webpack 打包和使用</p>
<h3 id="讲解-17"><a href="#讲解-17" class="headerlink" title="讲解"></a>讲解</h3><ol>
<li><p>需求：点击登录按钮，判断手机号和验证码长度是否符合要求</p>
</li>
<li><p>步骤：</p>
<ol>
<li><p>新建 public&#x2F;login.html 准备网页模板（方便查找标签和后期自动生成 html 文件做准备）</p>
<img data-src="/2024/11/19/Node-js%E4%B8%8EWebpack/image-20230518101137662.png" class="" title="image-20230518101137662">
</li>
<li><p>核心 JS 代码写在 src&#x2F;login&#x2F;index.js 文件</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 目标3：用户登录-长度判断案例</span></span><br><span class="line"><span class="comment"> *  3.1 准备用户登录页面</span></span><br><span class="line"><span class="comment"> *  3.2 编写核心 JS 逻辑代码</span></span><br><span class="line"><span class="comment"> *  3.3 打包并手动复制网页到 dist 下，引入打包后的 js，运行</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">// 3.2 编写核心 JS 逻辑代码</span></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.btn&#x27;</span>).<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> phone = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.login-form [name=mobile]&#x27;</span>).<span class="property">value</span></span><br><span class="line">  <span class="keyword">const</span> code = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.login-form [name=code]&#x27;</span>).<span class="property">value</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (!<span class="title function_">checkPhone</span>(phone)) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;手机号长度必须是11位&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (!<span class="title function_">checkCode</span>(code)) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;验证码长度必须是6位&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;提交到服务器登录...&#x27;</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>


</li>
<li><p>运行自定义命令，让 Webpack 打包 JS 代码</p>
</li>
<li><p>手动复制 public&#x2F;login.html 到 dist 下，手动引入打包后的 JS 代码文件，运行 dist&#x2F;login.html 在浏览器查看效果</p>
<img data-src="/2024/11/19/Node-js%E4%B8%8EWebpack/image-20230518101404084.png" class="" title="image-20230518101404084"></li>
</ol>
</li>
</ol>
<h3 id="小结-17"><a href="#小结-17" class="headerlink" title="小结"></a>小结</h3><ol>
<li><p>Webpack 打包后的前端代码是如何运行的?</p>
<details>
<summary>答案</summary>
<ul>
<li>手动引入到 html 文件中，再交给浏览器运行</li>
</ul>
</details></li>
</ol>
<h2 id="04-Webpack-自动生成-html-文件"><a href="#04-Webpack-自动生成-html-文件" class="headerlink" title="04.Webpack 自动生成 html 文件"></a>04.Webpack 自动生成 html 文件</h2><h3 id="目标-18"><a href="#目标-18" class="headerlink" title="目标"></a>目标</h3><p>让 Webpack 拥有自动生成 html 文件能力，并引入打包后的其他资源</p>
<h3 id="讲解-18"><a href="#讲解-18" class="headerlink" title="讲解"></a>讲解</h3><ol>
<li><p><a href="https://webpack.docschina.org/plugins/html-webpack-plugin/">插件 html-webpack-plugin 作用</a>：在 Webpack 打包时生成 html 文件，并引入其他打包后的资源</p>
</li>
<li><p>步骤：</p>
<ol>
<li><p>下载 html-webpack-plugin 本地软件包到项目中</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm i html-webpack-plugin --save-dev</span><br></pre></td></tr></table></figure>
</li>
<li><p>配置 webpack.config.js 让 Webpack 拥有插件功能</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// ...</span></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">HtmlWebpackPlugin</span> = <span class="built_in">require</span>(<span class="string">&#x27;html-webpack-plugin&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">  <span class="attr">plugins</span>: [</span><br><span class="line">    <span class="keyword">new</span> <span class="title class_">HtmlWebpackPlugin</span>(&#123;</span><br><span class="line">      <span class="attr">template</span>: <span class="string">&#x27;./public/login.html&#x27;</span>, <span class="comment">// 模板文件</span></span><br><span class="line">      <span class="attr">filename</span>: <span class="string">&#x27;./login/index.html&#x27;</span> <span class="comment">// 输出文件</span></span><br><span class="line">    &#125;)</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>指定以 public&#x2F;login.html 为模板复制到 dist&#x2F;login&#x2F;index.html，并自动引入其他打包后资源</p>
</li>
</ol>
</li>
<li><p>运行打包命令，观察打包后 dist 文件夹下内容并运行查看效果</p>
</li>
</ol>
<h3 id="小结-18"><a href="#小结-18" class="headerlink" title="小结"></a>小结</h3><ol>
<li><p>html-webpack-plugin 插件怎么用?</p>
<details>     
<summary>答案</summary> 
<ul>
<li>找到插件文档，下载到项目中，配置到 Webpack 的配置文件中即可使用</li>
</ul> 
</details></li>
</ol>
<h2 id="05-Webpack-打包-css-代码"><a href="#05-Webpack-打包-css-代码" class="headerlink" title="05.Webpack-打包 css 代码"></a>05.Webpack-打包 css 代码</h2><h3 id="目标-19"><a href="#目标-19" class="headerlink" title="目标"></a>目标</h3><p>让 Webpack 能够打包 css 代码</p>
<h3 id="讲解-19"><a href="#讲解-19" class="headerlink" title="讲解"></a>讲解</h3><ol>
<li><p>注意：Webpack 默认只识别 JS 和 JSON 文件内容，所以想要让 Webpack 识别更多不同内容，需要使用加载器</p>
</li>
<li><p>介绍需要的 2 个加载器来辅助 Webpack 才能打包 css 代码</p>
<ul>
<li><a href="https://webpack.docschina.org/loaders/css-loader/">加载器 css-loader</a>：解析 css 代码</li>
<li><a href="https://webpack.docschina.org/loaders/style-loader/">加载器 style-loader</a>：把解析后的 css 代码插入到 DOM（style 标签之间）</li>
</ul>
</li>
<li><p>步骤：</p>
<ol>
<li><p>准备 css 文件引入到 src&#x2F;login&#x2F;index.js 中（压缩转译处理等）</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 目标5：打包 css 代码</span></span><br><span class="line"><span class="comment"> *  5.1 准备 css 代码，并引入到 js 中</span></span><br><span class="line"><span class="comment"> *  5.2 下载 css-loader 和 style-loader 本地软件包</span></span><br><span class="line"><span class="comment"> *  5.3 配置 webpack.config.js 让 Webpack 拥有该加载器功能</span></span><br><span class="line"><span class="comment"> *  5.4 打包后观察效果</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">// 5.1 准备 css 代码，并引入到 js 中</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;bootstrap/dist/css/bootstrap.min.css&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;./index.css&#x27;</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>注意：这里只是引入代码内容让 Webpack 处理，不需定义变量接收在 JS 代码中继续使用，所以没有定义变量接收</p>
</blockquote>
</li>
<li><p>下载 css-loader 和 style-loader 本地软件包</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm i css-loader style-loader --save-dev</span><br></pre></td></tr></table></figure>
</li>
<li><p>配置 webpack.config.js 让 Webpack 拥有该加载器功能</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">  <span class="attr">module</span>: &#123; <span class="comment">// 加载器</span></span><br><span class="line">    <span class="attr">rules</span>: [ <span class="comment">// 规则列表</span></span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">test</span>: <span class="regexp">/\.css$/i</span>, <span class="comment">// 匹配 .css 结尾的文件</span></span><br><span class="line">        <span class="attr">use</span>: [<span class="string">&#x27;style-loader&#x27;</span>, <span class="string">&#x27;css-loader&#x27;</span>], <span class="comment">// 使用从后到前的加载器来解析 css 代码和插入到 DOM</span></span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
</li>
<li><p>打包后运行 dist&#x2F;login&#x2F;index.html 观察效果，看看准备好的样式是否作用在网页上</p>
</li>
</ol>
</li>
</ol>
<h3 id="小结-19"><a href="#小结-19" class="headerlink" title="小结"></a>小结</h3><ol>
<li><p>加载器的作用是什么?</p>
<details>     
<summary>答案</summary> 
<ul>
<li>让 Webpack 识别更多的代码内容类型</li>
</ul> 
</details></li>
</ol>
<h2 id="06-优化-提取-css-代码"><a href="#06-优化-提取-css-代码" class="headerlink" title="06.优化-提取 css 代码"></a>06.优化-提取 css 代码</h2><h3 id="目标-20"><a href="#目标-20" class="headerlink" title="目标"></a>目标</h3><p>让 Webpack 能够提取 css 代码到独立的 css 文件中</p>
<h3 id="讲解-20"><a href="#讲解-20" class="headerlink" title="讲解"></a>讲解</h3><ol>
<li><p>需求：让 webpack 把 css 代码内容字符串单独提取到 dist 下的 css 文件中</p>
</li>
<li><p>需要：mini-css-extract-plugin 插件来实现</p>
</li>
<li><p>步骤：</p>
<ol>
<li><p>下载 mini-css-extract-plugin 插件软件包到本地项目中</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm i --save-dev mini-css-extract-plugin</span><br></pre></td></tr></table></figure>
</li>
<li><p>配置 webpack.config.js 让 Webpack 拥有该插件功能</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// ...</span></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">MiniCssExtractPlugin</span> = <span class="built_in">require</span>(<span class="string">&quot;mini-css-extract-plugin&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">  <span class="attr">module</span>: &#123;</span><br><span class="line">    <span class="attr">rules</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">test</span>: <span class="regexp">/\.css$/i</span>,</span><br><span class="line">        <span class="comment">// use: [&#x27;style-loader&#x27;, &#x27;css-loader&#x27;]</span></span><br><span class="line">        <span class="attr">use</span>: [<span class="title class_">MiniCssExtractPlugin</span>.<span class="property">loader</span>, <span class="string">&quot;css-loader&quot;</span>],</span><br><span class="line">      &#125;,</span><br><span class="line">    ],</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">plugins</span>: [</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    <span class="keyword">new</span> <span class="title class_">MiniCssExtractPlugin</span>()</span><br><span class="line">  ]</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>


</li>
<li><p>打包后观察效果</p>
</li>
<li><p>注意：不能和 style-loader 一起使用</p>
</li>
<li><p>好处：css 文件可以被浏览器缓存，减少 JS 文件体积，让浏览器并行下载 css 和 js 文件</p>
</li>
</ol>
</li>
</ol>
<h3 id="小结-20"><a href="#小结-20" class="headerlink" title="小结"></a>小结</h3><h2 id="07-优化压缩过程"><a href="#07-优化压缩过程" class="headerlink" title="07.优化压缩过程"></a>07.优化压缩过程</h2><h3 id="目标-21"><a href="#目标-21" class="headerlink" title="目标"></a>目标</h3><p>把单独提取的 css 文件内代码压缩</p>
<h3 id="讲解-21"><a href="#讲解-21" class="headerlink" title="讲解"></a>讲解</h3><ol>
<li><p>需求：把提出的 css 文件内样式代码压缩</p>
</li>
<li><p>需要：css-minimizer-webpack-plugin 插件来实现</p>
</li>
<li><p>步骤：</p>
<ol>
<li><p>下载 mini-css-extract-plugin 插件软件包到本地项目中</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm i css-minimizer-webpack-plugin --save-dev </span><br></pre></td></tr></table></figure>
</li>
<li><p>配置 webpack.config.js 让 Webpack 拥有该插件功能</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// ...</span></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">CssMinimizerPlugin</span> = <span class="built_in">require</span>(<span class="string">&quot;css-minimizer-webpack-plugin&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">  <span class="comment">// 优化</span></span><br><span class="line">  <span class="attr">optimization</span>: &#123;</span><br><span class="line">    <span class="comment">// 最小化</span></span><br><span class="line">    <span class="attr">minimizer</span>: [</span><br><span class="line">      <span class="comment">// 在 webpack@5 中，你可以使用 `...` 语法来扩展现有的 minimizer（即 </span></span><br><span class="line">      <span class="comment">// `terser-webpack-plugin`），将下一行取消注释（保证 JS 代码还能被压缩处理）</span></span><br><span class="line">      <span class="string">`...`</span>,</span><br><span class="line">      <span class="keyword">new</span> <span class="title class_">CssMinimizerPlugin</span>(),</span><br><span class="line">    ],</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
</li>
<li><p>打包后观察 css 文件内自己代码是否被压缩了</p>
</li>
</ol>
</li>
</ol>
<h3 id="小结-21"><a href="#小结-21" class="headerlink" title="小结"></a>小结</h3><h2 id="08-Webpack-打包-less-代码"><a href="#08-Webpack-打包-less-代码" class="headerlink" title="08.Webpack-打包 less 代码"></a>08.Webpack-打包 less 代码</h2><h3 id="目标-22"><a href="#目标-22" class="headerlink" title="目标"></a>目标</h3><p>让 Webpack 拥有打包 less 代码功能</p>
<h3 id="讲解-22"><a href="#讲解-22" class="headerlink" title="讲解"></a>讲解</h3><ol>
<li><p><a href="https://webpack.docschina.org/loaders/less-loader/">加载器 less-loader</a>：把 less 代码编译为 css 代码，还需要依赖 less 软件包</p>
</li>
<li><p>步骤：</p>
<ol>
<li><p>新建 login&#x2F;index.less 文件，设置背景图样式（图片在配套资料-素材文件夹中）</p>
<figure class="highlight less"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">html</span> &#123;</span><br><span class="line">  <span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: url(<span class="string">&#x27;./assets/login-bg.png&#x27;</span>) no-repeat center/cover;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


</li>
<li><p>less 样式引入到 src&#x2F;login&#x2F;index.js 中</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 目标8：打包 less 代码</span></span><br><span class="line"><span class="comment"> *  8.1 新建 less 代码（设置背景图）并引入到 src/login/index.js 中</span></span><br><span class="line"><span class="comment"> *  8.2 下载 less 和 less-loader 本地软件包</span></span><br><span class="line"><span class="comment"> *  8.3 配置 webpack.config.js 让 Webpack 拥有功能</span></span><br><span class="line"><span class="comment"> *  8.4 打包后观察效果</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">// 8.1 新建 less 代码（设置背景图）并引入到 src/login/index.js 中</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;./index.less&#x27;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>下载 less 和 less-loader 本地软件包</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm i less less-loader --save-dev</span><br></pre></td></tr></table></figure>
</li>
<li><p>配置 webpack.config.js 让 Webpack 拥有功能</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">  <span class="attr">module</span>: &#123;</span><br><span class="line">    <span class="attr">rules</span>: [</span><br><span class="line">      <span class="comment">// ...</span></span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">test</span>: <span class="regexp">/\.less$/i</span>,</span><br><span class="line">        <span class="attr">use</span>: [<span class="title class_">MiniCssExtractPlugin</span>.<span class="property">loader</span>, <span class="string">&quot;css-loader&quot;</span>, <span class="string">&quot;less-loader&quot;</span>]</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>打包后运行  观察效果</p>
</li>
</ol>
</li>
</ol>
<h3 id="小结-22"><a href="#小结-22" class="headerlink" title="小结"></a>小结</h3><ol>
<li><p>Webpack 支持 less 代码打包需要哪 2 个软件包?</p>
<details>     
<summary>答案</summary> 
<ul>
<li>需要 less less-loader 这 2 个软件包</li>
</ul> 
</details></li>
</ol>
<h2 id="09-Webpack-打包图片"><a href="#09-Webpack-打包图片" class="headerlink" title="09.Webpack-打包图片"></a>09.Webpack-打包图片</h2><h3 id="目标-23"><a href="#目标-23" class="headerlink" title="目标"></a>目标</h3><p> 让 Webpack 支持图片等资源打包</p>
<h3 id="讲解-23"><a href="#讲解-23" class="headerlink" title="讲解"></a>讲解</h3><ol>
<li><p><a href="https://webpack.docschina.org/guides/asset-modules/">资源模块</a>：Webpack 内置了资源模块的打包，无需下载额外 loader </p>
</li>
<li><p>步骤：</p>
<ol>
<li><p>配置 webpack.config.js 让 Webpack 拥有打包图片功能</p>
<p>占位符 【hash】对模块内容做算法计算，得到映射的数字字母组合的字符串</p>
<p>占位符 【ext】使用当前模块原本的占位符，例如：.png &#x2F; .jpg 等字符串</p>
<p>占位符 【query】保留引入文件时代码中查询参数（只有 URL 下生效）</p>
</li>
<li><p>注意：判断临界值默认为 8KB</p>
<p>大于 8KB 文件：发送一个单独的文件并导出 URL 地址</p>
<p>小于 8KB 文件：导出一个 data URI（base64字符串）</p>
</li>
<li><p>在 src&#x2F;login&#x2F;index.js 中给 img 标签添加 logo 图片</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 目标9：打包资源模块（图片处理）</span></span><br><span class="line"><span class="comment"> *  9.1 创建 img 标签并动态添加到页面，配置 webpack.config.js</span></span><br><span class="line"><span class="comment"> *  9.2 打包后观察效果和区别</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">// 9.1 创建 img 标签并动态添加到页面，配置 webpack.config.js</span></span><br><span class="line"><span class="comment">// 注意：js 中引入本地图片资源要用 import 方式（如果是网络图片http地址，字符串可以直接写）</span></span><br><span class="line"><span class="keyword">import</span> imgObj <span class="keyword">from</span> <span class="string">&#x27;./assets/logo.png&#x27;</span></span><br><span class="line"><span class="keyword">const</span> theImg = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;img&#x27;</span>)</span><br><span class="line">theImg.<span class="property">src</span> = imgObj</span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.login-wrap&#x27;</span>).<span class="title function_">appendChild</span>(theImg)</span><br></pre></td></tr></table></figure>
</li>
<li><p>配置 webpack.config.js 让 Webpack 拥有打包图片功能</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">  <span class="attr">module</span>: &#123;</span><br><span class="line">    <span class="attr">rules</span>: [</span><br><span class="line">      <span class="comment">// ...</span></span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">test</span>: <span class="regexp">/\.(png|jpg|jpeg|gif)$/i</span>,</span><br><span class="line">        <span class="attr">type</span>: <span class="string">&#x27;asset&#x27;</span>,</span><br><span class="line">        <span class="attr">generator</span>: &#123;</span><br><span class="line">          <span class="attr">filename</span>: <span class="string">&#x27;assets/[hash][ext][query]&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>打包后运行观察效果</p>
</li>
</ol>
</li>
</ol>
<h3 id="小结-23"><a href="#小结-23" class="headerlink" title="小结"></a>小结</h3><ol>
<li><p>资源模块指的是什么?</p>
<details>     
<summary>答案</summary> 
<ul>
<li>图片，字体文件等等</li>
</ul> 
</details></li>
</ol>
<h2 id="10-案例-用户登录-完成功能"><a href="#10-案例-用户登录-完成功能" class="headerlink" title="10.案例-用户登录-完成功能"></a>10.案例-用户登录-完成功能</h2><h3 id="目标-24"><a href="#目标-24" class="headerlink" title="目标"></a>目标</h3><p>在 Webpack 环境下，使用 npm 下包作用在前端项目</p>
<h3 id="讲解-24"><a href="#讲解-24" class="headerlink" title="讲解"></a>讲解</h3><ol>
<li><p>需求：点击登录按钮，基于 npm 下载 axios 包，完成验证码登录功能</p>
<img data-src="/2024/11/19/Node-js%E4%B8%8EWebpack/image-20230518103430262.png" class="" title="image-20230518103430262">
</li>
<li><p>步骤：</p>
<ol>
<li><p>使用 npm 下载 axios</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm i axios</span><br></pre></td></tr></table></figure>
</li>
<li><p>引入到 src&#x2F;login&#x2F;index.js 中编写业务实现</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 目标10：完成登录功能</span></span><br><span class="line"><span class="comment"> *  10.1 使用 npm 下载 axios（体验 npm 作用在前端项目中）</span></span><br><span class="line"><span class="comment"> *  10.2 准备并修改 utils 工具包源代码导出实现函数</span></span><br><span class="line"><span class="comment"> *  10.3 导入并编写逻辑代码，打包后运行观察效果</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">// 10.3 导入并编写逻辑代码，打包后运行观察效果</span></span><br><span class="line"><span class="keyword">import</span> myAxios <span class="keyword">from</span> <span class="string">&#x27;../utils/request.js&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; myAlert &#125; <span class="keyword">from</span> <span class="string">&#x27;../utils/alert.js&#x27;</span></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.btn&#x27;</span>).<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> phone = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.login-form [name=mobile]&#x27;</span>).<span class="property">value</span></span><br><span class="line">  <span class="keyword">const</span> code = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.login-form [name=code]&#x27;</span>).<span class="property">value</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (!<span class="title function_">checkPhone</span>(phone)) &#123;</span><br><span class="line">    <span class="title function_">myAlert</span>(<span class="literal">false</span>, <span class="string">&#x27;手机号长度必须是11位&#x27;</span>)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;手机号长度必须是11位&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (!<span class="title function_">checkCode</span>(code)) &#123;</span><br><span class="line">    <span class="title function_">myAlert</span>(<span class="literal">false</span>, <span class="string">&#x27;验证码长度必须是6位&#x27;</span>)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;验证码长度必须是6位&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">myAxios</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">&#x27;/v1_0/authorizations&#x27;</span>,</span><br><span class="line">    <span class="attr">method</span>: <span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line">    <span class="attr">data</span>: &#123;</span><br><span class="line">      <span class="attr">mobile</span>: phone,</span><br><span class="line">      <span class="attr">code</span>: code</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;).<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="title function_">myAlert</span>(<span class="literal">true</span>, <span class="string">&#x27;登录成功&#x27;</span>)</span><br><span class="line">    <span class="variable language_">localStorage</span>.<span class="title function_">setItem</span>(<span class="string">&#x27;token&#x27;</span>, res.<span class="property">data</span>.<span class="property">token</span>)</span><br><span class="line">    location.<span class="property">href</span> = <span class="string">&#x27;../content/index.html&#x27;</span></span><br><span class="line">  &#125;).<span class="title function_">catch</span>(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="title function_">myAlert</span>(<span class="literal">false</span>, error.<span class="property">response</span>.<span class="property">data</span>.<span class="property">message</span>)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
</li>
<li><p>打包后运行观察效果</p>
</li>
</ol>
</li>
</ol>
<h3 id="小结-24"><a href="#小结-24" class="headerlink" title="小结"></a>小结</h3><ol>
<li><p>npm 下载的包如何作用在前端项目上?</p>
<details>     
<summary>答案</summary> 
<ul>
<li>被 Webpack 打包处理后，再引入到 html 文件中运行</li>      
</ul> 
</details></li>
</ol>
<h2 id="10-Webpack-搭建开发环境"><a href="#10-Webpack-搭建开发环境" class="headerlink" title="10.Webpack 搭建开发环境"></a>10.Webpack 搭建开发环境</h2><h3 id="目标-25"><a href="#目标-25" class="headerlink" title="目标"></a>目标</h3><p>体验 webpack-dev-server 开发服务器，快速开发应用程序</p>
<h3 id="讲解-25"><a href="#讲解-25" class="headerlink" title="讲解"></a>讲解</h3><ol>
<li><p>每次改动代码，都要重新打包，很麻烦，所以这里给项目集成 webpack-dev-server 开发服务器</p>
</li>
<li><p>作用：启动 Web 服务，打包输出源码在内存，并会自动检测代码变化热更新到网页</p>
</li>
<li><p>步骤；</p>
<ol>
<li><p>下载 webpack-dev-server 软件包到当前项目</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm i webpack-dev-server --save-dev</span><br></pre></td></tr></table></figure>
</li>
<li><p>配置自定义命令，并设置打包的模式为开发模式</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">  <span class="attr">mode</span>: <span class="string">&#x27;development&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="attr">&quot;scripts&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">  <span class="attr">&quot;dev&quot;</span><span class="punctuation">:</span> <span class="string">&quot;webpack serve --mode=development&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>使用 npm run dev 来启动开发服务器，访问提示的域名+端口号，在浏览器访问打包后的项目网页，修改代码后试试热更新效果</p>
<blockquote>
<p>在 js &#x2F; css 文件中修改代码保存后，会实时反馈到浏览器</p>
</blockquote>
</li>
</ol>
</li>
</ol>
<h3 id="小结-25"><a href="#小结-25" class="headerlink" title="小结"></a>小结</h3><ol>
<li><p>webpack-dev-server 的作用?</p>
<details>     
<summary>答案</summary> 
<ul>
<li>启动 Webpack 开发服务器，会启动一个 Web 服务，实时检测代码变化重新打包，并快速反应最新效果到浏览器页面上</li>
</ul> 
</details></li>
</ol>
<h2 id="11-Webpack-打包模式"><a href="#11-Webpack-打包模式" class="headerlink" title="11.Webpack 打包模式"></a>11.Webpack 打包模式</h2><h3 id="目标-26"><a href="#目标-26" class="headerlink" title="目标"></a>目标</h3><p>了解不同打包模式对代码和环境的影响</p>
<h3 id="讲解-26"><a href="#讲解-26" class="headerlink" title="讲解"></a>讲解</h3><ol>
<li><p><a href="https://webpack.docschina.org/configuration/mode/">打包模式</a>：告知 Webpack 使用相应模式的内置优化</p>
</li>
<li><p>分类：</p>
<table>
<thead>
<tr>
<th><strong>模式名称</strong></th>
<th><strong>模式名字</strong></th>
<th><strong>特点</strong></th>
<th>场景</th>
</tr>
</thead>
<tbody><tr>
<td>开发模式</td>
<td>development</td>
<td>调试代码，实时加载，模块热替换等</td>
<td>本地开发</td>
</tr>
<tr>
<td>生产模式</td>
<td>production</td>
<td>压缩代码，资源优化，更轻量等</td>
<td>打包上线</td>
</tr>
</tbody></table>
</li>
<li><p>如何设置影响 Webpack呢？</p>
<ul>
<li><p>方式1：在 webpack.config.js 配置文件设置 mode 选项</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">  <span class="attr">mode</span>: <span class="string">&#x27;production&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>方式2：在 package.json 命令行设置 mode 参数</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="attr">&quot;scripts&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;build&quot;</span><span class="punctuation">:</span> <span class="string">&quot;webpack --mode=production&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;dev&quot;</span><span class="punctuation">:</span> <span class="string">&quot;webpack serve --mode=development&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li><p>注意：命令行设置的优先级高于配置文件中的，推荐用命令行设置</p>
</li>
<li><p>体验：在 build 命令后 修改 mode 的值，打包输出观察打包后的 js 文件内容</p>
</li>
</ol>
<h3 id="小结-26"><a href="#小结-26" class="headerlink" title="小结"></a>小结</h3><ol>
<li><p>两种模式的区别?</p>
<details>     
<summary>答案</summary> 
<ul>
<li>开发模式注重代码热替换更快，让开发调试代码更便捷，生产模式注重项目体积更小，更轻量，适配不同的浏览器环境</li>
</ul> 
</details></li>
</ol>
<h2 id="12-Webpack-打包模式的应用"><a href="#12-Webpack-打包模式的应用" class="headerlink" title="12.Webpack 打包模式的应用"></a>12.Webpack 打包模式的应用</h2><h3 id="目标-27"><a href="#目标-27" class="headerlink" title="目标"></a>目标</h3><p>了解 Webpack 打包模式的应用</p>
<h3 id="讲解-27"><a href="#讲解-27" class="headerlink" title="讲解"></a>讲解</h3><ol>
<li><p>需求：在开发模式下用 style-loader 内嵌更快，在生产模式下提取 css 代码</p>
</li>
<li><p><a href="https://webpack.docschina.org/configuration/mode/">方案</a><a href="https://webpack.docschina.org/configuration/mode/">1</a>：webpack.config.js 配置导出函数，但是局限性大（只接受 2 种模式）</p>
<p>方案2：借助 cross-env （跨平台通用）包命令，设置参数区分环境</p>
<p><a href="https://webpack.docschina.org/guides/production/">方案</a><a href="https://webpack.docschina.org/guides/production/">3</a>：配置不同的 webpack.config.js （适用多种模式差异性较大情况）</p>
</li>
<li><p>主要使用方案 2 尝试，其他方案可以结合点击跳转的官方文档查看尝试</p>
</li>
<li><p>步骤：</p>
<p>1.下载 cross-env 软件包到当前项目</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">npm i cross-env --save-dev</span><br></pre></td></tr></table></figure>



<p>2.配置自定义命令，传入参数名和值（会绑定到 process.env 对象下）</p>
<img data-src="/2024/11/19/Node-js%E4%B8%8EWebpack/image-20230518104016802.png" class="" title="image-20230518104016802">

<p>3.在 webpack.config.js 区分不同环境使用不同配置</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="attr">module</span>: &#123;</span><br><span class="line">    <span class="attr">rules</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">test</span>: <span class="regexp">/\.css$/i</span>,</span><br><span class="line">        <span class="comment">// use: [&#x27;style-loader&#x27;, &quot;css-loader&quot;],</span></span><br><span class="line">        <span class="attr">use</span>: [process.<span class="property">env</span>.<span class="property">NODE_ENV</span> === <span class="string">&#x27;development&#x27;</span> ? <span class="string">&#x27;style-loader&#x27;</span> : <span class="title class_">MiniCssExtractPlugin</span>.<span class="property">loader</span>, <span class="string">&quot;css-loader&quot;</span>]</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">test</span>: <span class="regexp">/\.less$/i</span>,</span><br><span class="line">        <span class="attr">use</span>: [</span><br><span class="line">          <span class="comment">// compiles Less to CSS</span></span><br><span class="line">          process.<span class="property">env</span>.<span class="property">NODE_ENV</span> === <span class="string">&#x27;development&#x27;</span> ? <span class="string">&#x27;style-loader&#x27;</span> : <span class="title class_">MiniCssExtractPlugin</span>.<span class="property">loader</span>,</span><br><span class="line">          <span class="string">&#x27;css-loader&#x27;</span>,</span><br><span class="line">          <span class="string">&#x27;less-loader&#x27;</span>,</span><br><span class="line">        ],</span><br><span class="line">      &#125;</span><br><span class="line">    ],</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure>



<p>4.重新打包观察两种配置区别</p>
</li>
</ol>
<h3 id="小结-27"><a href="#小结-27" class="headerlink" title="小结"></a>小结</h3><h2 id="13-Webpack-前端注入环境变量"><a href="#13-Webpack-前端注入环境变量" class="headerlink" title="13.Webpack 前端注入环境变量"></a>13.Webpack 前端注入环境变量</h2><h3 id="目标-28"><a href="#目标-28" class="headerlink" title="目标"></a>目标</h3><p>前端项目中，开发模式下打印语句生效，生产模式下打印语句失效</p>
<h3 id="讲解-28"><a href="#讲解-28" class="headerlink" title="讲解"></a>讲解</h3><ol>
<li><p>需求：前端项目中，开发模式下打印语句生效，生产模式下打印语句失效</p>
</li>
<li><p>问题：cross-env 设置的只在 Node.js 环境生效，前端代码无法访问 process.env.NODE_ENV</p>
</li>
<li><p><a href="https://webpack.docschina.org/plugins/define-plugin">解决</a>：使用 Webpack 内置的 DefinePlugin 插件</p>
</li>
<li><p>作用：在编译时，将前端代码中匹配的变量名，替换为值或表达式</p>
</li>
<li><p>配置 webpack.config.js 中给前端注入环境变量</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// ...</span></span><br><span class="line"><span class="keyword">const</span> webpack = <span class="built_in">require</span>(<span class="string">&#x27;webpack&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">  <span class="attr">plugins</span>: [</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    <span class="keyword">new</span> webpack.<span class="title class_">DefinePlugin</span>(&#123;</span><br><span class="line">      <span class="comment">// key 是注入到打包后的前端 JS 代码中作为全局变量</span></span><br><span class="line">      <span class="comment">// value 是变量对应的值（在 corss-env 注入在 node.js 中的环境变量字符串）</span></span><br><span class="line">      <span class="string">&#x27;process.env.NODE_ENV&#x27;</span>: <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(process.<span class="property">env</span>.<span class="property">NODE_ENV</span>)</span><br><span class="line">    &#125;)</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ol>
<h3 id="小结-28"><a href="#小结-28" class="headerlink" title="小结"></a>小结</h3><h2 id="14-Webpack-开发环境调错-source-map"><a href="#14-Webpack-开发环境调错-source-map" class="headerlink" title="14.Webpack 开发环境调错 source map"></a>14.Webpack 开发环境调错 source map</h2><h3 id="目标-29"><a href="#目标-29" class="headerlink" title="目标"></a>目标</h3><p>在开发环境如何精准定位到报错源码位置</p>
<h3 id="讲解-29"><a href="#讲解-29" class="headerlink" title="讲解"></a>讲解</h3><ol>
<li><p><a href="%5Bhttps://webpack.docschina.org/guides/development/#using-source-maps%5D(https://webpack.docschina.org/guides/development/)">source map</a>：可以准确追踪 error 和 warning 在原始代码的位置</p>
</li>
<li><p>问题：代码被压缩和混淆，无法正确定位源代码位置（行数和列数）</p>
</li>
<li><p>设置：webpack.config.js 配置 devtool 选项</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">  <span class="attr">devtool</span>: <span class="string">&#x27;inline-source-map&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>inline-source-map 选项：把源码的位置信息一起打包在 JS 文件内</p>
</blockquote>
</li>
<li><p>注意：source map 适用于开发环境，不要在生产环境使用（防止被轻易查看源码位置）</p>
</li>
</ol>
<h3 id="小结-29"><a href="#小结-29" class="headerlink" title="小结"></a>小结</h3><ol>
<li><p>为何打包后，在控制台无法准确定位到源码的位置信息?</p>
<details>     
<summary>答案</summary> 
<ul>
<li>因为 Webpack 把代码压缩和混淆了</li>
</ul> 
</details></li>
</ol>
<h2 id="15-Webpack-设置解析别名路径"><a href="#15-Webpack-设置解析别名路径" class="headerlink" title="15.Webpack 设置解析别名路径"></a>15.Webpack 设置解析别名路径</h2><h3 id="目标-30"><a href="#目标-30" class="headerlink" title="目标"></a>目标</h3><p>设置 Webpack 如何设置路径别名，方便我们引入目标模块</p>
<h3 id="讲解-30"><a href="#讲解-30" class="headerlink" title="讲解"></a>讲解</h3><ol>
<li><p><a href="%5Bhttps://webpack.docschina.org/configuration/resolve#resolvealias%5D(https://webpack.docschina.org/configuration/resolve)">解析别名</a>：配置模块如何解析，创建 import 或 require 的别名，来确保模块引入变得更简单</p>
</li>
<li><p>例如：</p>
<ol>
<li><p>原来路径如下：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; checkPhone, checkCode &#125; <span class="keyword">from</span> <span class="string">&#x27;../src/utils/check.js&#x27;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>配置解析别名：在 webpack.config.js 中设置</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> config = &#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">  <span class="attr">resolve</span>: &#123;</span><br><span class="line">    <span class="attr">alias</span>: &#123;</span><br><span class="line">      <span class="string">&#x27;@&#x27;</span>: path.<span class="title function_">resolve</span>(__dirname, <span class="string">&#x27;src&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>这样我们以后，引入目标模块写的路径就更简单了</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; checkPhone, checkCode &#125; <span class="keyword">from</span> <span class="string">&#x27;@/utils/check.js&#x27;</span></span><br></pre></td></tr></table></figure></li>
</ol>
</li>
<li><p>修改代码的路径后，重新打包观察效果是否正常！</p>
</li>
</ol>
<h3 id="小结-30"><a href="#小结-30" class="headerlink" title="小结"></a>小结</h3><ol>
<li><p>路径中的 ‘@’ 符号代表什么意思？</p>
<details>     
<summary>答案</summary> 
<ul>
<li>看在 webpack 配置中的别名路径是什么，就会在打包时替换成哪个路径使用</li>
</ul> 
</details></li>
</ol>
<h2 id="16-优化-CDN使用"><a href="#16-优化-CDN使用" class="headerlink" title="16.优化-CDN使用"></a>16.优化-CDN使用</h2><h3 id="目标-31"><a href="#目标-31" class="headerlink" title="目标"></a>目标</h3><p>开发模式使用本地第三方库，生产模式下使用 CDN 加载引入</p>
<h3 id="讲解-31"><a href="#讲解-31" class="headerlink" title="讲解"></a>讲解</h3><ol>
<li><p>需求：开发模式使用本地第三方库，生产模式下使用 CDN 加载引入</p>
</li>
<li><p><a href="https://developer.mozilla.org/zh-CN/docs/Glossary/CDN">CDN</a><a href="https://developer.mozilla.org/zh-CN/docs/Glossary/CDN">定义</a>：内容分发网络，指的是一组分布在各个地区的服务器</p>
</li>
<li><p>作用：把静态资源文件&#x2F;第三方库放在 CDN 网络中各个服务器中，供用户就近请求获取</p>
</li>
<li><p>好处：减轻自己服务器请求压力，就近请求物理延迟低，配套缓存策略</p>
<img data-src="/2024/11/19/Node-js%E4%B8%8EWebpack/image-20230518104603049.png" class="" title="image-20230518104603049">



</li>
<li><p>实现需求的思路图：</p>
<img data-src="/2024/11/19/Node-js%E4%B8%8EWebpack/image-20230518104625088.png" class="" title="image-20230518104625088">
</li>
<li><p>步骤：</p>
<p>1.在 html 中引入第三方库的 <a href="https://www.bootcdn.cn/">CDN </a><a href="https://www.bootcdn.cn/">地址</a><a href="https://www.bootcdn.cn/"> </a>并用模板语法判断</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&lt;% if(htmlWebpackPlugin.options.useCdn)&#123; %&gt;</span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/5.2.3/css/bootstrap.min.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure>



<p>2.配置 webpack.config.js 中 <a href="https://webpack.docschina.org/configuration/externals">externals</a> 外部扩展选项（防止某些 import 的包被打包）</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 生产环境下使用相关配置</span></span><br><span class="line"><span class="keyword">if</span> (process.<span class="property">env</span>.<span class="property">NODE_ENV</span> === <span class="string">&#x27;production&#x27;</span>) &#123;</span><br><span class="line">  <span class="comment">// 外部扩展（让 webpack 防止 import 的包被打包进来）</span></span><br><span class="line">  config.<span class="property">externals</span> = &#123;</span><br><span class="line">    <span class="comment">// key：import from 语句后面的字符串</span></span><br><span class="line">    <span class="comment">// value：留在原地的全局变量（最好和 cdn 在全局暴露的变量一致）</span></span><br><span class="line">    <span class="string">&#x27;bootstrap/dist/css/bootstrap.min.css&#x27;</span>: <span class="string">&#x27;bootstrap&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;axios&#x27;</span>: <span class="string">&#x27;axios&#x27;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// ...</span></span><br><span class="line"><span class="keyword">const</span> config = &#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">  <span class="attr">plugins</span>: [</span><br><span class="line">    <span class="keyword">new</span> <span class="title class_">HtmlWebpackPlugin</span>(&#123;</span><br><span class="line">      <span class="comment">// ...</span></span><br><span class="line">      <span class="comment">// 自定义属性，在 html 模板中 &lt;%=htmlWebpackPlugin.options.useCdn%&gt; 访问使用</span></span><br><span class="line">      <span class="attr">useCdn</span>: process.<span class="property">env</span>.<span class="property">NODE_ENV</span> === <span class="string">&#x27;production&#x27;</span></span><br><span class="line">    &#125;)</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>3.两种模式下打包观察效果</p>
</li>
</ol>
<h3 id="小结-31"><a href="#小结-31" class="headerlink" title="小结"></a>小结</h3><h2 id="17-Webpack-多页面打包"><a href="#17-Webpack-多页面打包" class="headerlink" title="17.Webpack 多页面打包"></a>17.Webpack 多页面打包</h2><h3 id="目标-32"><a href="#目标-32" class="headerlink" title="目标"></a>目标</h3><p>让 Webpack 同时打包登录和内容列表页面</p>
<h3 id="讲解-32"><a href="#讲解-32" class="headerlink" title="讲解"></a>讲解</h3><ol>
<li><p>概念：<a href="https://developer.mozilla.org/zh-CN/docs/Glossary/SPA">单页面</a>：单个 html 文件，切换 DOM 的方式实现不同业务逻辑展示，后续 Vue&#x2F;React 会学到</p>
<p>多页面：多个 html 文件，切换页面实现不同业务逻辑展示</p>
</li>
<li><p>需求：把黑马头条-数据管理平台-内容页面一起引入打包使用</p>
</li>
<li><p>步骤：</p>
<ol>
<li><p>准备源码（html，css，js）放入相应位置，并改用模块化语法导出</p>
</li>
<li><p>下载 form-serialize 包并导入到核心代码中使用</p>
</li>
<li><p>配置 webpack.config.js 多入口和多页面的设置</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// ...</span></span><br><span class="line"><span class="keyword">const</span> config = &#123;</span><br><span class="line">  <span class="attr">entry</span>: &#123;</span><br><span class="line">    <span class="string">&#x27;模块名1&#x27;</span>: path.<span class="title function_">resolve</span>(__dirname, <span class="string">&#x27;src/入口1.js&#x27;</span>),</span><br><span class="line">    <span class="string">&#x27;模块名2&#x27;</span>: path.<span class="title function_">resolve</span>(__dirname, <span class="string">&#x27;src/入口2.js&#x27;</span>),</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">output</span>: &#123;</span><br><span class="line">    <span class="attr">path</span>: path.<span class="title function_">resolve</span>(__dirname, <span class="string">&#x27;dist&#x27;</span>),</span><br><span class="line">    <span class="attr">filename</span>: <span class="string">&#x27;./[name]/index.js&#x27;</span>  </span><br><span class="line">  &#125;</span><br><span class="line">  <span class="attr">plugins</span>: [</span><br><span class="line">    <span class="keyword">new</span> <span class="title class_">HtmlWebpackPlugin</span>(&#123;</span><br><span class="line">      <span class="attr">template</span>: <span class="string">&#x27;./public/页面2.html&#x27;</span>, <span class="comment">// 模板文件</span></span><br><span class="line">      <span class="attr">filename</span>: <span class="string">&#x27;./路径/index.html&#x27;</span>, <span class="comment">// 输出文件</span></span><br><span class="line">      <span class="attr">chunks</span>: [<span class="string">&#x27;模块名2&#x27;</span>]</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">new</span> <span class="title class_">HtmlWebpackPlugin</span>(&#123;</span><br><span class="line">      <span class="attr">template</span>: <span class="string">&#x27;./public/页面2.html&#x27;</span>, <span class="comment">// 模板文件</span></span><br><span class="line">      <span class="attr">filename</span>: <span class="string">&#x27;./路径/index.html&#x27;</span>, <span class="comment">// 输出文件</span></span><br><span class="line">      <span class="attr">chunks</span>: [<span class="string">&#x27;模块名2&#x27;</span>]</span><br><span class="line">    &#125;)</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>重新打包观察效果</p>
</li>
</ol>
</li>
</ol>
<h3 id="小结-32"><a href="#小结-32" class="headerlink" title="小结"></a>小结</h3><h2 id="18-案例-发布文章页面打包"><a href="#18-案例-发布文章页面打包" class="headerlink" title="18.案例-发布文章页面打包"></a>18.案例-发布文章页面打包</h2><h3 id="目标-33"><a href="#目标-33" class="headerlink" title="目标"></a>目标</h3><p>案例-发布文章页面打包</p>
<h3 id="讲解-33"><a href="#讲解-33" class="headerlink" title="讲解"></a>讲解</h3><ol>
<li><p>需求：把发布文章页面一起打包</p>
<p>步骤：</p>
<p>1.准备发布文章页面源代码，改写成模块化的导出和导入方式</p>
<p>2.修改 webpack.config.js 的配置，增加一个入口和出口</p>
<p>3.打包观察效果</p>
</li>
</ol>
<h3 id="小结-33"><a href="#小结-33" class="headerlink" title="小结"></a>小结</h3><h2 id="19-优化-分割公共代码"><a href="#19-优化-分割公共代码" class="headerlink" title="19.优化-分割公共代码"></a>19.优化-分割公共代码</h2><h3 id="目标-34"><a href="#目标-34" class="headerlink" title="目标"></a>目标</h3><p>优化-分割功能代码</p>
<h3 id="讲解-34"><a href="#讲解-34" class="headerlink" title="讲解"></a>讲解</h3><ol>
<li><p>需求：把 2 个以上页面引用的公共代码提取</p>
<p>步骤：</p>
<p>1.配置 webpack.config.js 的 splitChunks 分割功能</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// ...</span></span><br><span class="line"><span class="keyword">const</span> config = &#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">  <span class="attr">optimization</span>: &#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    <span class="attr">splitChunks</span>: &#123;</span><br><span class="line">      <span class="attr">chunks</span>: <span class="string">&#x27;all&#x27;</span>, <span class="comment">// 所有模块动态非动态移入的都分割分析</span></span><br><span class="line">      <span class="attr">cacheGroups</span>: &#123; <span class="comment">// 分隔组</span></span><br><span class="line">        <span class="attr">commons</span>: &#123; <span class="comment">// 抽取公共模块</span></span><br><span class="line">          <span class="attr">minSize</span>: <span class="number">0</span>, <span class="comment">// 抽取的chunk最小大小字节</span></span><br><span class="line">          <span class="attr">minChunks</span>: <span class="number">2</span>, <span class="comment">// 最小引用数</span></span><br><span class="line">          <span class="attr">reuseExistingChunk</span>: <span class="literal">true</span>, <span class="comment">// 当前 chunk 包含已从主 bundle 中拆分出的模块，则它将被重用</span></span><br><span class="line">          <span class="title function_">name</span>(<span class="params"><span class="variable language_">module</span>, chunks, cacheGroupKey</span>) &#123; <span class="comment">// 分离出模块文件名</span></span><br><span class="line">            <span class="keyword">const</span> allChunksNames = chunks.<span class="title function_">map</span>(<span class="function">(<span class="params">item</span>) =&gt;</span> item.<span class="property">name</span>).<span class="title function_">join</span>(<span class="string">&#x27;~&#x27;</span>) <span class="comment">// 模块名1~模块名2</span></span><br><span class="line">            <span class="keyword">return</span> <span class="string">`./js/<span class="subst">$&#123;allChunksNames&#125;</span>`</span> <span class="comment">// 输出到 dist 目录下位置</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">      </span><br><span class="line"> </span><br></pre></td></tr></table></figure>



<p>2.打包观察效果</p>
</li>
</ol>
<h3 id="小结-34"><a href="#小结-34" class="headerlink" title="小结"></a>小结</h3>]]></content>
      <categories>
        <category>前端</category>
        <category>Node.js与Webpack</category>
      </categories>
      <tags>
        <tag>Node.js</tag>
        <tag>Webpack</tag>
      </tags>
  </entry>
  <entry>
    <title>Vue3.0</title>
    <url>/2024/11/19/Vue3-0/</url>
    <content><![CDATA[<h1 id="认识Vue3"><a href="#认识Vue3" class="headerlink" title="认识Vue3"></a>认识Vue3</h1><h2 id="1-Vue2-选项式-API-vs-Vue3-组合式API"><a href="#1-Vue2-选项式-API-vs-Vue3-组合式API" class="headerlink" title="1. Vue2 选项式 API vs Vue3 组合式API"></a>1. Vue2 选项式 API vs Vue3 组合式API</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  data()&#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      count:0</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods:&#123;</span><br><span class="line">    addCount()&#123;</span><br><span class="line">      this.count++</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; ref &#125; from &#x27;vue&#x27;</span><br><span class="line">const count = ref(0)</span><br><span class="line">const addCount = ()=&gt; count.value++</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<p>特点：</p>
<ol>
<li>代码量变少</li>
<li>分散式维护变成集中式维护</li>
</ol>
<h2 id="2-Vue3的优势"><a href="#2-Vue3的优势" class="headerlink" title="2. Vue3的优势"></a>2. Vue3的优势</h2><img data-src="/2024/11/19/Vue3-0/01.png" class="" title="image.png">


<h1 id="使用create-vue搭建Vue3项目"><a href="#使用create-vue搭建Vue3项目" class="headerlink" title="使用create-vue搭建Vue3项目"></a>使用create-vue搭建Vue3项目</h1><h2 id="1-认识create-vue"><a href="#1-认识create-vue" class="headerlink" title="1. 认识create-vue"></a>1. 认识create-vue</h2><blockquote>
<p>create-vue是Vue官方新的脚手架工具，底层切换到了 vite （下一代前端工具链），为开发提供极速响应</p>
</blockquote>
<img data-src="/2024/11/19/Vue3-0/2.png" class="" title="image.png">

<h2 id="2-使用create-vue创建项目"><a href="#2-使用create-vue创建项目" class="headerlink" title="2. 使用create-vue创建项目"></a>2. 使用create-vue创建项目</h2><blockquote>
<p>前置条件 - 已安装16.0或更高版本的Node.js</p>
</blockquote>
<p>执行如下命令，这一指令将会安装并执行 create-vue</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm init vue@latest</span><br></pre></td></tr></table></figure>

<img data-src="/2024/11/19/Vue3-0/3.png" class="" title="image.png">

<h1 id="熟悉项目和关键文件"><a href="#熟悉项目和关键文件" class="headerlink" title="熟悉项目和关键文件"></a>熟悉项目和关键文件</h1><img data-src="/2024/11/19/Vue3-0/4.png" class="" title="image.png">

<h1 id="组合式API-setup选项"><a href="#组合式API-setup选项" class="headerlink" title="组合式API - setup选项"></a>组合式API - setup选项</h1><h2 id="1-setup选项的写法和执行时机"><a href="#1-setup选项的写法和执行时机" class="headerlink" title="1. setup选项的写法和执行时机"></a>1. setup选项的写法和执行时机</h2><p>写法</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">  export default &#123;</span><br><span class="line">    setup()&#123;</span><br><span class="line">      </span><br><span class="line">    &#125;,</span><br><span class="line">    beforeCreate()&#123;</span><br><span class="line">      </span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<p>执行时机</p>
<blockquote>
<p>在beforeCreate钩子之前执行</p>
</blockquote>
<img data-src="/2024/11/19/Vue3-0/5.png" class="" title="image.png">

<h2 id="2-setup中写代码的特点"><a href="#2-setup中写代码的特点" class="headerlink" title="2. setup中写代码的特点"></a>2. setup中写代码的特点</h2><blockquote>
<p>在setup函数中写的数据和方法需要在末尾以对象的方式return，才能给模版使用</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">  export default &#123;</span><br><span class="line">    setup()&#123;</span><br><span class="line">      const message = &#x27;this is message&#x27;</span><br><span class="line">      const logMessage = ()=&gt;&#123;</span><br><span class="line">        console.log(message)</span><br><span class="line">      &#125;</span><br><span class="line">      // 必须return才可以</span><br><span class="line">      return &#123;</span><br><span class="line">        message,</span><br><span class="line">        logMessage</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<h2 id="3-语法糖"><a href="#3-语法糖" class="headerlink" title="3. 语法糖"></a>3. <script setup>语法糖</h2><blockquote>
<p>script标签添加 setup标记，不需要再写导出语句，默认会添加导出语句</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">  const message = &#x27;this is message&#x27;</span><br><span class="line">  const logMessage = ()=&gt;&#123;</span><br><span class="line">    console.log(message)</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<p><em>setup</em></p>
<p> <em>1. 执行时机，比beforeCreate还要早</em></p>
<p> <em>2. setup函数中，获取不到this (this是undefined)</em></p>
<p> <em>3. 数据 和 函数，需要在 setup 最后 return，才能模板中应用</em></p>
<p>  <em>问题：每次都要return，好麻烦？</em></p>
<p> <em>4. 通过 setup 语法糖简化代码</em></p>
<h1 id="组合式API-reactive和ref函数"><a href="#组合式API-reactive和ref函数" class="headerlink" title="组合式API - reactive和ref函数"></a>组合式API - reactive和ref函数</h1><h2 id="1-reactive"><a href="#1-reactive" class="headerlink" title="1. reactive"></a>1. reactive</h2><blockquote>
<p>接受对象类型数据的参数传入并返回一个响应式的对象</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line"> // 导入</span><br><span class="line"> import &#123; reactive &#125; from &#x27;vue&#x27;</span><br><span class="line"> // 执行函数 传入参数 变量接收</span><br><span class="line"> const state = reactive(&#123;</span><br><span class="line">   msg:&#x27;this is msg&#x27;</span><br><span class="line"> &#125;)</span><br><span class="line"> const setSate = ()=&gt;&#123;</span><br><span class="line">   // 修改数据更新视图</span><br><span class="line">   state.msg = &#x27;this is new msg&#x27;</span><br><span class="line"> &#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &#123;&#123; state.msg &#125;&#125;</span><br><span class="line">  &lt;button @click=&quot;setState&quot;&gt;change msg&lt;/button&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure>

<h2 id="2-ref"><a href="#2-ref" class="headerlink" title="2. ref"></a>2. ref</h2><blockquote>
<p>接收简单类型或者对象类型的数据传入并返回一个响应式的对象</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line"> // 导入</span><br><span class="line"> import &#123; ref &#125; from &#x27;vue&#x27;</span><br><span class="line"> // 执行函数 传入参数 变量接收</span><br><span class="line"> const count = ref(0)</span><br><span class="line"> const setCount = ()=&gt;&#123;</span><br><span class="line">   // 修改数据更新视图必须加上.value</span><br><span class="line">   count.value++</span><br><span class="line"> &#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;button @click=&quot;setCount&quot;&gt;&#123;&#123;count&#125;&#125;&lt;/button&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure>

<h2 id="3-reactive-对比-ref"><a href="#3-reactive-对比-ref" class="headerlink" title="3. reactive 对比 ref"></a>3. reactive 对比 ref</h2><ol>
<li>都是用来生成响应式数据</li>
<li>不同点<ol>
<li>reactive不能处理简单类型的数据</li>
<li>ref参数类型支持更好，但是必须通过.value做访问修改</li>
<li>ref函数内部的实现依赖于reactive函数</li>
</ol>
</li>
<li>在实际工作中的推荐<ol>
<li>推荐使用ref函数，减少记忆负担，小兔鲜项目都使用ref</li>
</ol>
</li>
</ol>
<h1 id="组合式API-computed"><a href="#组合式API-computed" class="headerlink" title="组合式API - computed"></a>组合式API - computed</h1><blockquote>
<p>计算属性基本思想和Vue2保持一致，组合式API下的计算属性只是修改了API写法</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">// 导入</span><br><span class="line">import &#123;ref, computed &#125; from &#x27;vue&#x27;</span><br><span class="line">// 原始数据</span><br><span class="line">const count = ref(0)</span><br><span class="line">// 计算属性</span><br><span class="line">const doubleCount = computed(()=&gt;count.value * 2)</span><br><span class="line"></span><br><span class="line">// 原始数据</span><br><span class="line">const list = ref([1,2,3,4,5,6,7,8])</span><br><span class="line">// 计算属性list</span><br><span class="line">const filterList = computed(item=&gt;item &gt; 2)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">// const 计算属性 = computed(() =&gt; &#123;</span><br><span class="line">//    return 计算返回的结果</span><br><span class="line">// &#125;)</span><br><span class="line"></span><br><span class="line">import &#123; computed, ref &#125; from &#x27;vue&#x27;</span><br><span class="line"></span><br><span class="line">// 声明数据</span><br><span class="line">const list = ref([1, 2, 3, 4, 5, 6, 7, 8])</span><br><span class="line"></span><br><span class="line">// 基于list派生一个计算属性，从list中过滤出 &gt; 2</span><br><span class="line">const computedList = computed(() =&gt; &#123;</span><br><span class="line">  return list.value.filter(item =&gt; item &gt; 2)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">// 定义一个修改数组的方法</span><br><span class="line">const addFn = () =&gt; &#123;</span><br><span class="line">  list.value.push(666)</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div&gt;原始数据: &#123;&#123; list &#125;&#125;&lt;/div&gt;</span><br><span class="line">    &lt;div&gt;计算后的数据: &#123;&#123; computedList &#125;&#125;&lt;/div&gt;</span><br><span class="line">    &lt;button @click=&quot;addFn&quot; type=&quot;button&quot;&gt;修改&lt;/button&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure>



<h1 id="组合式API-watch"><a href="#组合式API-watch" class="headerlink" title="组合式API - watch"></a>组合式API - watch</h1><blockquote>
<p>侦听一个或者多个数据的变化，数据变化时执行回调函数，俩个额外参数 immediate控制立刻执行，deep开启深度侦听</p>
</blockquote>
<h2 id="1-侦听单个数据"><a href="#1-侦听单个数据" class="headerlink" title="1. 侦听单个数据"></a>1. 侦听单个数据</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">  // 1. 导入watch</span><br><span class="line">  import &#123; ref, watch &#125; from &#x27;vue&#x27;</span><br><span class="line">  const count = ref(0)</span><br><span class="line">  // 2. 调用watch 侦听变化</span><br><span class="line">  watch(count, (newValue, oldValue)=&gt;&#123;</span><br><span class="line">    console.log(`count发生了变化，老值为$&#123;oldValue&#125;,新值为$&#123;newValue&#125;`)</span><br><span class="line">  &#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<h2 id="2-侦听多个数据"><a href="#2-侦听多个数据" class="headerlink" title="2. 侦听多个数据"></a>2. 侦听多个数据</h2><blockquote>
<p>侦听多个数据，第一个参数可以改写成数组的写法</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">  // 1. 导入watch</span><br><span class="line">  import &#123; ref, watch &#125; from &#x27;vue&#x27;</span><br><span class="line">  const count = ref(0)</span><br><span class="line">  const name = ref(&#x27;cp&#x27;)</span><br><span class="line">  // 2. 调用watch 侦听变化</span><br><span class="line">  watch([count, name], ([newCount, newName],[oldCount,oldName])=&gt;&#123;</span><br><span class="line">    console.log(`count或者name变化了，[newCount, newName],[oldCount,oldName])</span><br><span class="line">  &#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<h2 id="3-immediate"><a href="#3-immediate" class="headerlink" title="3. immediate"></a>3. immediate</h2><blockquote>
<p>在侦听器创建时立即出发回调，响应式数据变化之后继续执行回调</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">  // 1. 导入watch</span><br><span class="line">  import &#123; ref, watch &#125; from &#x27;vue&#x27;</span><br><span class="line">  const count = ref(0)</span><br><span class="line">  // 2. 调用watch 侦听变化</span><br><span class="line">  watch(count, (newValue, oldValue)=&gt;&#123;</span><br><span class="line">    console.log(`count发生了变化，老值为$&#123;oldValue&#125;,新值为$&#123;newValue&#125;`)</span><br><span class="line">  &#125;,&#123;</span><br><span class="line">    immediate: true</span><br><span class="line">  &#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<h2 id="4-deep"><a href="#4-deep" class="headerlink" title="4. deep"></a>4. deep</h2><blockquote>
<p>通过watch监听的ref对象默认是浅层侦听的，直接修改嵌套的对象属性不会触发回调执行，需要开启deep</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">  // 1. 导入watch</span><br><span class="line">  import &#123; ref, watch &#125; from &#x27;vue&#x27;</span><br><span class="line">  const state = ref(&#123; count: 0 &#125;)</span><br><span class="line">  // 2. 监听对象state</span><br><span class="line">  watch(state, ()=&gt;&#123;</span><br><span class="line">    console.log(&#x27;数据变化了&#x27;)</span><br><span class="line">  &#125;)</span><br><span class="line">  const changeStateByCount = ()=&gt;&#123;</span><br><span class="line">    // 直接修改不会引发回调执行</span><br><span class="line">    state.value.count++</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">  // 1. 导入watch</span><br><span class="line">  import &#123; ref, watch &#125; from &#x27;vue&#x27;</span><br><span class="line">  const state = ref(&#123; count: 0 &#125;)</span><br><span class="line">  // 2. 监听对象state 并开启deep</span><br><span class="line">  watch(state, ()=&gt;&#123;</span><br><span class="line">    console.log(&#x27;数据变化了&#x27;)</span><br><span class="line">  &#125;,&#123;deep:true&#125;)</span><br><span class="line">  const changeStateByCount = ()=&gt;&#123;</span><br><span class="line">    // 此时修改可以触发回调</span><br><span class="line">    state.value.count++</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">deep 深度监视, 默认 watch 进行的是 浅层监视</span><br><span class="line">//    const ref1 = ref(简单类型) 可以直接监视</span><br><span class="line">//    const ref2 = ref(复杂类型) 监视不到复杂类型内部数据的变化</span><br><span class="line">const userInfo = ref(&#123;</span><br><span class="line">  name: &#x27;zs&#x27;,</span><br><span class="line">  age: 18</span><br><span class="line">&#125;)</span><br><span class="line">const setUserInfo = () =&gt; &#123;</span><br><span class="line">  // 修改了 userInfo.value 修改了对象的地址，才能监视到</span><br><span class="line">  // userInfo.value = &#123; name: &#x27;ls&#x27;, age: 50 &#125;</span><br><span class="line">  userInfo.value.age++</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// deep 深度监视</span><br><span class="line">// watch(userInfo, (newValue) =&gt; &#123;</span><br><span class="line">//   console.log(newValue)</span><br><span class="line">// &#125;, &#123;</span><br><span class="line">//   deep: true</span><br><span class="line">// &#125;)</span><br></pre></td></tr></table></figure>

<h2 id="5-对于对象中的单个属性，进行监视"><a href="#5-对于对象中的单个属性，进行监视" class="headerlink" title="5. 对于对象中的单个属性，进行监视"></a>5. 对于对象中的单个属性，进行监视</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">watch(() =&gt; userInfo.value.age, (newValue, oldValue) =&gt; &#123;</span><br><span class="line">  console.log(newValue, oldValue)</span><br><span class="line">&#125;)</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;&#123;&#123; count &#125;&#125;&lt;/div&gt;</span><br><span class="line">  &lt;button @click=&quot;changeCount&quot;&gt;改数字&lt;/button&gt;</span><br><span class="line">  &lt;div&gt;&#123;&#123; nickname &#125;&#125;&lt;/div&gt;</span><br><span class="line">  &lt;button @click=&quot;changeNickname&quot;&gt;改昵称&lt;/button&gt;</span><br><span class="line">  &lt;div&gt;-----------------------&lt;/div&gt;</span><br><span class="line">  &lt;div&gt;&#123;&#123; userInfo &#125;&#125;&lt;/div&gt;</span><br><span class="line">  &lt;button @click=&quot;setUserInfo&quot;&gt;修改userInfo&lt;/button&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure>



<h1 id="组合式API-生命周期函数"><a href="#组合式API-生命周期函数" class="headerlink" title="组合式API - 生命周期函数"></a>组合式API - 生命周期函数</h1><h2 id="1-选项式对比组合式"><a href="#1-选项式对比组合式" class="headerlink" title="1. 选项式对比组合式"></a>1. 选项式对比组合式</h2><img data-src="/2024/11/19/Vue3-0/6.png" class="" title="image.png">

<h2 id="2-生命周期函数基本使用"><a href="#2-生命周期函数基本使用" class="headerlink" title="2. 生命周期函数基本使用"></a>2. 生命周期函数基本使用</h2><blockquote>
<ol>
<li>导入生命周期函数</li>
<li>执行生命周期函数，传入回调</li>
</ol>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;scirpt setup&gt;</span><br><span class="line">import &#123; onMounted &#125; from &#x27;vue&#x27;</span><br><span class="line">onMounted(()=&gt;&#123;</span><br><span class="line">  // 自定义逻辑</span><br><span class="line">&#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<h2 id="3-执行多次"><a href="#3-执行多次" class="headerlink" title="3. 执行多次"></a>3. 执行多次</h2><blockquote>
<p>生命周期函数执行多次的时候，会按照顺序依次执行</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;scirpt setup&gt;</span><br><span class="line">import &#123; onMounted &#125; from &#x27;vue&#x27;</span><br><span class="line">onMounted(()=&gt;&#123;</span><br><span class="line">  // 自定义逻辑</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">onMounted(()=&gt;&#123;</span><br><span class="line">  // 自定义逻辑</span><br><span class="line">&#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<p>示例</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; onMounted &#125; from &#x27;vue&#x27;;</span><br><span class="line"></span><br><span class="line">// beforeCreate 和 created 的相关代码</span><br><span class="line">// 一律放在 setup 中执行</span><br><span class="line"></span><br><span class="line">const getList = () =&gt; &#123;</span><br><span class="line">  setTimeout(() =&gt; &#123;</span><br><span class="line">    console.log(&#x27;发送请求，获取数据&#x27;)</span><br><span class="line">  &#125;, 2000)</span><br><span class="line">&#125;</span><br><span class="line">// 一进入页面的请求</span><br><span class="line">getList()</span><br><span class="line"></span><br><span class="line">// 如果有些代码需要在mounted生命周期中执行</span><br><span class="line">onMounted(() =&gt; &#123;</span><br><span class="line">  console.log(&#x27;mounted生命周期函数 - 逻辑1&#x27;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">// 写成函数的调用方式，可以调用多次，并不会冲突，而是按照顺序依次执行</span><br><span class="line">onMounted(() =&gt; &#123;</span><br><span class="line">  console.log(&#x27;mounted生命周期函数 - 逻辑2&#x27;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure>



<h1 id="组合式API-父子通信"><a href="#组合式API-父子通信" class="headerlink" title="组合式API - 父子通信"></a>组合式API - 父子通信</h1><h2 id="1-父传子"><a href="#1-父传子" class="headerlink" title="1. 父传子"></a>1. 父传子</h2><blockquote>
<p>基本思想</p>
<ol>
<li>父组件中给子组件绑定属性</li>
<li>子组件内部通过props选项接收数据</li>
</ol>
</blockquote>
<img data-src="/2024/11/19/Vue3-0/7.png" class="" title="image.png">

<h2 id="2-子传父"><a href="#2-子传父" class="headerlink" title="2. 子传父"></a>2. 子传父</h2><blockquote>
<p>基本思想</p>
<ol>
<li>父组件中给子组件标签通过@绑定事件</li>
<li>子组件内部通过 emit 方法触发事件</li>
</ol>
</blockquote>
<img data-src="/2024/11/19/Vue3-0/8.png" class="" title="image.png">

<h1 id="组合式API-模版引用"><a href="#组合式API-模版引用" class="headerlink" title="组合式API - 模版引用"></a>组合式API - 模版引用</h1><blockquote>
<p>概念：通过 ref标识 获取真实的 dom对象或者组件实例对象</p>
</blockquote>
<h2 id="1-基本使用"><a href="#1-基本使用" class="headerlink" title="1. 基本使用"></a>1. 基本使用</h2><blockquote>
<p>实现步骤：</p>
<ol>
<li>调用ref函数生成一个ref对象</li>
<li>通过ref标识绑定ref对象到标签</li>
</ol>
</blockquote>
<img data-src="/2024/11/19/Vue3-0/9.png" class="" title="image.png">

<h2 id="2-defineExpose"><a href="#2-defineExpose" class="headerlink" title="2. defineExpose"></a>2. defineExpose</h2><blockquote>
<p>默认情况下在 <script setup>语法糖下组件内部的属性和方法是不开放给父组件访问的，可以通过defineExpose编译宏指定哪些属性和方法容许访问<br>说明：指定testMessage属性可以被访问到</p>
</blockquote>
<img data-src="/2024/11/19/Vue3-0/10.png" class="" title="image.png">

<p>示例</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">import TestCom from &#x27;@/components/test-com.vue&#x27;</span><br><span class="line">import &#123; onMounted, ref &#125; from &#x27;vue&#x27;</span><br><span class="line"></span><br><span class="line">// 模板引用(可以获取dom，也可以获取组件)</span><br><span class="line">// 1. 调用ref函数，生成一个ref对象</span><br><span class="line">// 2. 通过ref标识，进行绑定</span><br><span class="line">// 3. 通过ref对象.value即可访问到绑定的元素(必须渲染完成后，才能拿到)</span><br><span class="line">const inp = ref(null)</span><br><span class="line"></span><br><span class="line">// 生命周期钩子 onMounted</span><br><span class="line">onMounted(() =&gt; &#123;</span><br><span class="line">  // console.log(inp.value)</span><br><span class="line">  // inp.value.focus()</span><br><span class="line">&#125;)</span><br><span class="line">const clickFn = () =&gt; &#123;</span><br><span class="line">  inp.value.focus()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// --------------------------------------</span><br><span class="line">const testRef = ref(null)</span><br><span class="line">const getCom = () =&gt; &#123;</span><br><span class="line">  console.log(testRef.value.count)</span><br><span class="line">  testRef.value.sayHi()</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;input ref=&quot;inp&quot; type=&quot;text&quot;&gt;</span><br><span class="line">    &lt;button @click=&quot;clickFn&quot;&gt;点击让输入框聚焦&lt;/button&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">  &lt;TestCom ref=&quot;testRef&quot;&gt;&lt;/TestCom&gt;</span><br><span class="line">  &lt;button @click=&quot;getCom&quot;&gt;获取组件&lt;/button&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure>



<h1 id="组合式API-provide和inject"><a href="#组合式API-provide和inject" class="headerlink" title="组合式API - provide和inject"></a>组合式API - provide和inject</h1><h2 id="1-作用和场景"><a href="#1-作用和场景" class="headerlink" title="1. 作用和场景"></a>1. 作用和场景</h2><blockquote>
<p>顶层组件向任意的底层组件传递数据和方法，实现跨层组件通信</p>
</blockquote>
<img data-src="/2024/11/19/Vue3-0/11.png" class="" title="image.png">

<h2 id="2-跨层传递普通数据"><a href="#2-跨层传递普通数据" class="headerlink" title="2. 跨层传递普通数据"></a>2. 跨层传递普通数据</h2><blockquote>
<p>实现步骤</p>
<ol>
<li>顶层组件通过 <code>provide</code> 函数提供数据</li>
<li>底层组件通过 <code>inject</code> 函数提供数据</li>
</ol>
</blockquote>
<img data-src="/2024/11/19/Vue3-0/12.png" class="" title="image.png">

<h2 id="3-跨层传递响应式数据"><a href="#3-跨层传递响应式数据" class="headerlink" title="3. 跨层传递响应式数据"></a>3. 跨层传递响应式数据</h2><blockquote>
<p>在调用provide函数时，第二个参数设置为ref对象</p>
</blockquote>
<img data-src="/2024/11/19/Vue3-0/13.png" class="" title="image.png">

<h2 id="4-跨层传递方法"><a href="#4-跨层传递方法" class="headerlink" title="4. 跨层传递方法"></a>4. 跨层传递方法</h2><blockquote>
<p>顶层组件可以向底层组件传递方法，底层组件调用方法修改顶层组件的数据</p>
</blockquote>
<img data-src="/2024/11/19/Vue3-0/14.png" class="" title="image.png">



<p>示例</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">import CenterCom from &#x27;@/components/center-com.vue&#x27;</span><br><span class="line">import &#123; provide, ref &#125; from &#x27;vue&#x27;</span><br><span class="line"></span><br><span class="line">// 1. 跨层传递普通数据</span><br><span class="line">provide(&#x27;theme-color&#x27;, &#x27;pink&#x27;)</span><br><span class="line"></span><br><span class="line">// 2. 跨层传递响应式数据</span><br><span class="line">const count = ref(100)</span><br><span class="line">provide(&#x27;count&#x27;, count)</span><br><span class="line"></span><br><span class="line">setTimeout(() =&gt; &#123;</span><br><span class="line">  count.value = 500</span><br><span class="line">&#125;, 2000)</span><br><span class="line"></span><br><span class="line">// 3. 跨层传递函数 =&gt; 给子孙后代传递可以修改数据的方法</span><br><span class="line">provide(&#x27;changeCount&#x27;, (newCount) =&gt; &#123;</span><br><span class="line">  count.value = newCount</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">&lt;div&gt;</span><br><span class="line">  &lt;h1&gt;我是顶层组件&lt;/h1&gt;</span><br><span class="line">  &lt;CenterCom&gt;&lt;/CenterCom&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure>



<h1 id="Vue3-3-新特性-defineOptions"><a href="#Vue3-3-新特性-defineOptions" class="headerlink" title="Vue3.3 新特性-defineOptions"></a>Vue3.3 新特性-defineOptions</h1><p>背景说明：</p>
<p>有 <script setup> 之前，如果要定义 props, emits 可以轻而易举地添加一个与 setup 平级的属性。 </p>
<p>但是用了 <script setup> 后，就没法这么干了 setup 属性已经没有了，自然无法添加与其平级的属性。</p>
<hr>
<p>为了解决这一问题，引入了 defineProps 与 defineEmits 这两个宏。但这只解决了 props 与 emits 这两个属性。</p>
<p>如果我们要定义组件的 name 或其他自定义的属性，还是得回到最原始的用法——再添加一个普通的 <script> 标签。</p>
<p>这样就会存在两个 <script> 标签。让人无法接受。</p>
<hr>
<p>所以在 Vue 3.3 中新引入了 defineOptions 宏。顾名思义，主要是用来定义 Options API 的选项。可以用 defineOptions 定义任意的选项， props, emits, expose, slots 除外（因为这些可以使用 defineXXX 来做到）</p>
<img data-src="/2024/11/19/Vue3-0/image-20230704082955748.png" class="" title="image-20230704082955748">





<h1 id="Vue3-3新特性-defineModel"><a href="#Vue3-3新特性-defineModel" class="headerlink" title="Vue3.3新特性-defineModel"></a>Vue3.3新特性-defineModel</h1><p>在Vue3中，自定义组件上使用v-model, 相当于传递一个modelValue属性，同时触发 update:modelValue 事件</p>
<img data-src="/2024/11/19/Vue3-0/image-20230704083027349.png" class="" title="image-20230704083027349">

<p>我们需要先定义 props，再定义 emits 。其中有许多重复的代码。如果需要修改此值，还需要手动调用 emit 函数。</p>
<p>于是乎 defineModel 诞生了。</p>
<img data-src="/2024/11/19/Vue3-0/image-20230704083056549.png" class="" title="image-20230704083056549">



<p>生效需要配置 vite.config.js</p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; fileURLToPath, <span class="variable constant_">URL</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;node:url&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; defineConfig &#125; <span class="keyword">from</span> <span class="string">&#x27;vite&#x27;</span></span><br><span class="line"><span class="keyword">import</span> vue <span class="keyword">from</span> <span class="string">&#x27;@vitejs/plugin-vue&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// https://vitejs.dev/config/</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">defineConfig</span>(&#123;</span><br><span class="line">  <span class="attr">plugins</span>: [</span><br><span class="line">    <span class="title function_">vue</span>(&#123;</span><br><span class="line">      <span class="attr">script</span>: &#123;</span><br><span class="line">        <span class="attr">defineModel</span>: <span class="literal">true</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;),</span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">resolve</span>: &#123;</span><br><span class="line">    <span class="attr">alias</span>: &#123;</span><br><span class="line">      <span class="string">&#x27;@&#x27;</span>: <span class="title function_">fileURLToPath</span>(<span class="keyword">new</span> <span class="title function_">URL</span>(<span class="string">&#x27;./src&#x27;</span>, <span class="keyword">import</span>.<span class="property">meta</span>.<span class="property">url</span>))</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h1 id="Vue3-状态管理-Pinia"><a href="#Vue3-状态管理-Pinia" class="headerlink" title="Vue3 状态管理 - Pinia"></a>Vue3 状态管理 - Pinia</h1><h2 id="1-什么是Pinia"><a href="#1-什么是Pinia" class="headerlink" title="1. 什么是Pinia"></a>1. 什么是Pinia</h2><p>Pinia 是 Vue 的专属的最新状态管理库 ，是 Vuex 状态管理工具的替代品</p>




<h2 id="2-手动添加Pinia到Vue项目"><a href="#2-手动添加Pinia到Vue项目" class="headerlink" title="2. 手动添加Pinia到Vue项目"></a>2. 手动添加Pinia到Vue项目</h2><p>后面在实际开发项目的时候，Pinia可以在项目创建时自动添加，现在我们初次学习，从零开始：</p>
<ol>
<li>使用 Vite 创建一个空的 Vue3项目</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm init vite@latest</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>按照官方文档安装 pinia 到项目中</li>
</ol>
<h2 id="3-Pinia基础使用"><a href="#3-Pinia基础使用" class="headerlink" title="3. Pinia基础使用"></a>3. Pinia基础使用</h2><ol>
<li>定义store</li>
<li>组件使用store</li>
</ol>




<h2 id="4-getters实现"><a href="#4-getters实现" class="headerlink" title="4. getters实现"></a>4. getters实现</h2><p>Pinia中的 getters 直接使用 computed函数 进行模拟, 组件中需要使用需要把 getters return出去</p>




<h2 id="5-action异步实现"><a href="#5-action异步实现" class="headerlink" title="5. action异步实现"></a>5. action异步实现</h2><p>方式：异步action函数的写法和组件中获取异步数据的写法完全一致</p>
<ul>
<li><p>接口地址：<a href="http://geek.itheima.net/v1_0/channels">http://geek.itheima.net/v1_0/channels</a></p>
</li>
<li><p>请求方式：get</p>
</li>
<li><p>请求参数：无</p>
</li>
</ul>


<p>需求：在Pinia中获取频道列表数据并把数据渲染App组件的模板中</p>






<h2 id="6-storeToRefs工具函数"><a href="#6-storeToRefs工具函数" class="headerlink" title="6. storeToRefs工具函数"></a>6. storeToRefs工具函数</h2><p>使用storeToRefs函数可以辅助保持数据（state + getter）的响应式解构</p>




<h2 id="7-Pinia的调试"><a href="#7-Pinia的调试" class="headerlink" title="7. Pinia的调试"></a>7. Pinia的调试</h2><p>Vue官方的 dev-tools 调试工具 对 Pinia直接支持，可以直接进行调试</p>






<h2 id="8-Pinia持久化插件"><a href="#8-Pinia持久化插件" class="headerlink" title="8. Pinia持久化插件"></a>8. Pinia持久化插件</h2><p>官方文档：<a href="https://prazdevs.github.io/pinia-plugin-persistedstate/zh/">https://prazdevs.github.io/pinia-plugin-persistedstate/zh/</a></p>
<ol>
<li>安装插件 pinia-plugin-persistedstate</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">npm i pinia-plugin-persistedstate</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>使用 main.js</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createApp &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; createPinia &#125; <span class="keyword">from</span> <span class="string">&#x27;pinia&#x27;</span></span><br><span class="line"><span class="comment">// 导入持久化的插件</span></span><br><span class="line"><span class="keyword">import</span> persist <span class="keyword">from</span> <span class="string">&#x27;pinia-plugin-persistedstate&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">App</span> <span class="keyword">from</span> <span class="string">&#x27;./App.vue&#x27;</span></span><br><span class="line"><span class="keyword">const</span> pinia = <span class="title function_">createPinia</span>() <span class="comment">// 创建Pinia实例</span></span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">createApp</span>(<span class="title class_">App</span>) <span class="comment">// 创建根实例</span></span><br><span class="line">app.<span class="title function_">use</span>(pinia.<span class="title function_">use</span>(persist)) <span class="comment">// pinia插件的安装配置</span></span><br><span class="line">app.<span class="title function_">mount</span>(<span class="string">&#x27;#app&#x27;</span>) <span class="comment">// 视图的挂载</span></span><br></pre></td></tr></table></figure>

<ol start="3">
<li>配置 store/counter.js</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; defineStore &#125; <span class="keyword">from</span> <span class="string">&#x27;pinia&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; computed, ref &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义store</span></span><br><span class="line"><span class="comment">// defineStore(仓库的唯一标识, () =&gt; &#123; ... &#125;)</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> useCounterStore = <span class="title function_">defineStore</span>(<span class="string">&#x27;counter&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 声明数据 state - count</span></span><br><span class="line">  <span class="keyword">const</span> count = <span class="title function_">ref</span>(<span class="number">100</span>)</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 声明操作数据的方法 action (普通函数)</span></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">addCount</span> = (<span class="params"></span>) =&gt; count.<span class="property">value</span>++</span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">subCount</span> = (<span class="params"></span>) =&gt; count.<span class="property">value</span>--</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 声明基于数据派生的计算属性 getters (computed)</span></span><br><span class="line">  <span class="keyword">const</span> double = <span class="title function_">computed</span>(<span class="function">() =&gt;</span> count.<span class="property">value</span> * <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 声明数据 state - msg</span></span><br><span class="line">  <span class="keyword">const</span> msg = <span class="title function_">ref</span>(<span class="string">&#x27;hello pinia&#x27;</span>)</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    count,</span><br><span class="line">    double,</span><br><span class="line">    addCount,</span><br><span class="line">    subCount,</span><br><span class="line"></span><br><span class="line">    msg,</span><br><span class="line">  &#125;</span><br><span class="line">&#125;, &#123;</span><br><span class="line">  <span class="comment">// persist: true // 开启当前模块的持久化</span></span><br><span class="line">  <span class="attr">persist</span>: &#123;</span><br><span class="line">    <span class="attr">key</span>: <span class="string">&#x27;hm-counter&#x27;</span>, <span class="comment">// 修改本地存储的唯一标识</span></span><br><span class="line">    <span class="attr">paths</span>: [<span class="string">&#x27;count&#x27;</span>] <span class="comment">// 存储的是哪些数据</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<ol start="4">
<li>其他配置，看官网文档即可</li>
</ol>
]]></content>
      <categories>
        <category>前端</category>
        <category>Vue</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>Vue3.0</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2024/11/13/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<span id="more"></span>

<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>JavaScript-Web-APIs</title>
    <url>/2024/11/19/webAPIs/</url>
    <content><![CDATA[<p>复习：</p>
<p>splice() 方法用于添加或删除数组中的元素。</p>
<p><strong>注意：</strong>这种方法会改变原始数组。</p>
<ol>
<li><strong>删除数组：</strong></li>
</ol>
<p>splice(起始位置， 删除的个数)</p>
<p>比如：1</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="string">&#x27;red&#x27;</span>, <span class="string">&#x27;green&#x27;</span>, <span class="string">&#x27;blue&#x27;</span>]</span><br><span class="line">arr.<span class="title function_">splice</span>(<span class="number">1</span>,<span class="number">1</span>) <span class="comment">// 删除green元素</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr) <span class="comment">// [&#x27;red, &#x27;blue&#x27;]</span></span><br></pre></td></tr></table></figure>

<ol start="2">
<li><strong>添加元素</strong></li>
</ol>
<p>splice(起始位置，删除个数，添加数组元素)</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="string">&#x27;red&#x27;</span>, <span class="string">&#x27;green&#x27;</span>, <span class="string">&#x27;blue&#x27;</span>]</span><br><span class="line"><span class="comment">//arr.splice(1, 0, &#x27;pink&#x27;) // 在索引号是1的位置添加 pink</span></span><br><span class="line"><span class="comment">//console.log(arr) // [&#x27;red&#x27;, &#x27;pink&#x27;, &#x27;green&#x27;, &#x27;blue&#x27;]</span></span><br><span class="line">arr.<span class="title function_">splice</span>(<span class="number">1</span>, <span class="number">0</span>, <span class="string">&#x27;pink&#x27;</span>, <span class="string">&#x27;hotpink&#x27;</span>) <span class="comment">// 在索引号是1的位置添加 pink  hotpink</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr) <span class="comment">// [&#x27;red&#x27;, &#x27;pink&#x27;, &#x27;hotpink&#x27;, &#x27;green&#x27;, &#x27;blue&#x27;]</span></span><br></pre></td></tr></table></figure>

<h1 id="Web-APIs-第1天笔记"><a href="#Web-APIs-第1天笔记" class="headerlink" title="Web APIs - 第1天笔记"></a>Web APIs - 第1天笔记</h1><blockquote>
<p>了解 DOM 的结构并掌握其基本的操作，体验 DOM 的在开发中的作用</p>
</blockquote>
<ul>
<li>知道 ECMAScript 与 JavaScript 的关系</li>
<li>了解 DOM 的相关概念及DOM 的本质是一个对象</li>
<li>掌握查找节点的基本方法</li>
<li>掌握节点属性和文本的操作</li>
<li>能够使用间歇函数创建定时任务</li>
</ul>
<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><blockquote>
<p>知道 ECMAScript 与 JavaScript 的关系，Web APIs 是浏览器扩展的功能。</p>
</blockquote>
<p>严格意义上讲，我们在 JavaScript 阶段学习的知识绝大部分属于 ECMAScript 的知识体系，ECMAScript 简称 ES 它提供了一套语言标准规范，如变量、数据类型、表达式、语句、函数等语法规则都是由 ECMAScript 规定的。浏览器将 ECMAScript 大部分的规范加以实现，并且在此基础上又扩展一些实用的功能，这些被扩展出来的内容我们称为 Web APIs。</p>
<p><img data-src="/./webAPIs/guide.png" alt="guide"></p>
<p>ECMAScript 运行在浏览器中然后再结合 Web APIs 才是真正的 JavaScript，Web APIs 的核心是 DOM 和 BOM。</p>
<p>扩展阅读：ECMAScript 规范在不断的更新中，存在多个不同的版本，早期的版本号采用数字顺序编号如 ECMAScript3、ECMAScript5，后来由于更新速度较快便采用年份做为版本号，如 ECMAScript2017、ECMAScript2018 这种格式，ECMAScript6 是 2015 年发布的，常叫做 EMCAScript2015。</p>
<p>关于 JavaScript 历史的<a href="https://javascript.ruanyifeng.com/introduction/history.html">扩展阅读</a>。</p>
<blockquote>
<p>知道 DOM 相关的概念，建立对 DOM 的初步认识，学习 DOM 的基本操作，体会 DOM 的作用</p>
</blockquote>
<p>DOM（Document Object Model）是将整个 HTML 文档的每一个标签元素视为一个对象，这个对象下包含了许多的属性和方法，通过操作这些属性或者调用这些方法实现对 HTML 的动态更新，为实现网页特效以及用户交互提供技术支撑。</p>
<p>简言之 DOM 是用来动态修改 HTML 的，其目的是开发网页特效及用户交互。</p>
<p>观察一个小例子：</p>
<img data-src="/2024/11/19/webAPIs/demo.gif" class="" title="demo">

<p>上述的例子中当用户分分别点击【开始】或【结束】按钮后，通过右侧调试窗口可以观察到 html 标签的内容在不断的发生改变，这便是通过 DOM 实现的。</p>
<h3 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h3><h4 id="DOM-树"><a href="#DOM-树" class="headerlink" title="DOM 树"></a>DOM 树</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>标题<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  文本</span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>链接名<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;&quot;</span>&gt;</span>文本<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>如下图所示，将 HTML 文档以树状结构直观的表现出来，我们称之为文档树或 DOM 树，<strong>文档树直观的体现了标签与标签之间的关系。</strong></p>
<p><img data-src="/./webAPIs/web-api.jpg" alt="dom"></p>
<h4 id="DOM-节点"><a href="#DOM-节点" class="headerlink" title="DOM 节点"></a>DOM 节点</h4><p>节点是文档树的组成部分，<strong>每一个节点都是一个 DOM 对象</strong>，主要分为元素节点、属性节点、文本节点等。</p>
<ol>
<li>【元素节点】其实就是 HTML 标签，如上图中 <code>head</code>、<code>div</code>、<code>body</code> 等都属于元素节点。</li>
<li>【属性节点】是指 HTML 标签中的属性，如上图中 <code>a</code> 标签的 <code>href</code> 属性、<code>div</code> 标签的 <code>class</code> 属性。</li>
<li>【文本节点】是指 HTML 标签的文字内容，如 <code>title</code> 标签中的文字。</li>
<li>【根节点】特指 <code>html</code> 标签。</li>
<li>其它…</li>
</ol>
<h4 id="document"><a href="#document" class="headerlink" title="document"></a>document</h4><p><code>document</code> 是 JavaScript 内置的专门用于 DOM 的对象，该对象包含了若干的属性和方法，<code>document</code> 是学习 DOM 的核心。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// document 是内置的对象</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// console.log(typeof document);</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 1. 通过 document 获取根节点</span></span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">document</span>.<span class="property">documentElement</span>); <span class="comment">// 对应 html 标签</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 2. 通过 document 节取 body 节点</span></span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">document</span>.<span class="property">body</span>); <span class="comment">// 对应 body 标签</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 3. 通过 document.write 方法向网页输出内容</span></span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">&#x27;Hello World!&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>上述列举了 <code>document</code> 对象的部分属性和方法，我们先对 <code>document</code> 有一个整体的认识。</p>
<h2 id="获取DOM对象"><a href="#获取DOM对象" class="headerlink" title="获取DOM对象"></a>获取DOM对象</h2><ol>
<li>querySelector   满足条件的第一个元素</li>
<li>querySelectorAll  满足条件的元素集合 返回伪数组</li>
<li>了解其他方式<ol>
<li>getElementById</li>
<li>getElementsByTagName</li>
</ol>
</li>
</ol>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>DOM - 查找节点<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h3</span>&gt;</span>查找元素类型节点<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>从整个 DOM 树中查找 DOM 节点是学习 DOM 的第一个步骤。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span>元素<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span>元素<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span>元素<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span>元素<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  	<span class="keyword">const</span> p = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;p&#x27;</span>)  <span class="comment">// 获取第一个p元素</span></span></span><br><span class="line"><span class="language-javascript">  	<span class="keyword">const</span> lis = <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;li&#x27;</span>)  <span class="comment">// 获取第一个p元素</span></span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>总结：</p>
<ul>
<li>document.getElementById 专门获取元素类型节点，根据标签的 <code>id</code>  属性查找</li>
<li>任意 DOM 对象都包含 nodeType 属性，用来检检测节点类型</li>
</ul>
<h2 id="操作元素内容"><a href="#操作元素内容" class="headerlink" title="操作元素内容"></a>操作元素内容</h2><p>通过修改 DOM 的文本内容，动态改变网页的内容。</p>
<ol>
<li><code>innerText</code> 将文本内容添加&#x2F;更新到任意标签位置，<strong>文本中包含的标签不会被解析。</strong></li>
</ol>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// innerText 将文本内容添加/更新到任意标签位置</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> intro = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.intro&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// intro.innerText = &#x27;嗨~ 我叫李雷！&#x27;</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// intro.innerText = &#x27;&lt;h4&gt;嗨~ 我叫李雷！&lt;/h4&gt;&#x27;</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ol start="2">
<li><code>innerHTML</code> 将文本内容添加&#x2F;更新到任意标签位置，<strong>文本中包含的标签会被解析。</strong></li>
</ol>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// innerHTML 将文本内容添加/更新到任意标签位置</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> intro = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.intro&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">  intro.<span class="property">innerHTML</span> = <span class="string">&#x27;嗨~ 我叫韩梅梅！&#x27;</span></span></span><br><span class="line"><span class="language-javascript">  intro.<span class="property">innerHTML</span> = <span class="string">&#x27;&lt;h4&gt;嗨~ 我叫韩梅梅！&lt;/h4&gt;&#x27;</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>总结：如果文本内容中包含 <code>html</code> 标签时推荐使用 <code>innerHTML</code>，否则建议使用 <code>innerText</code> 属性。</p>
<p>##操作元素属性 </p>
<p>有3种方式可以实现对属性的修改：</p>
<h4 id="常用属性修改"><a href="#常用属性修改" class="headerlink" title="常用属性修改"></a>常用属性修改</h4><ol>
<li>直接能过属性名修改，最简洁的语法</li>
</ol>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 1. 获取 img 对应的 DOM 元素</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> pic = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.pic&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">	<span class="comment">// 2. 修改属性</span></span></span><br><span class="line"><span class="language-javascript">  pic.<span class="property">src</span> = <span class="string">&#x27;./images/lion.webp&#x27;</span></span></span><br><span class="line"><span class="language-javascript">  pic.<span class="property">width</span> = <span class="number">400</span>;</span></span><br><span class="line"><span class="language-javascript">  pic.<span class="property">alt</span> = <span class="string">&#x27;图片不见了...&#x27;</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="控制样式属性"><a href="#控制样式属性" class="headerlink" title="控制样式属性"></a>控制样式属性</h4><ol>
<li>应用【修改样式】，通过修改行内样式 <code>style</code> 属性，实现对样式的动态修改。</li>
</ol>
<p>通过元素节点获得的 <code>style</code> 属性本身的数据类型也是对象，如 <code>box.style.color</code>、<code>box.style.width</code> 分别用来获取元素节点 CSS 样式的 <code>color</code> 和 <code>width</code> 的值。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>练习 - 修改样式<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span>随便一些文本内容<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 获取 DOM 节点</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> box = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.intro&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">    box.<span class="property">style</span>.<span class="property">color</span> = <span class="string">&#x27;red&#x27;</span></span></span><br><span class="line"><span class="language-javascript">    box.<span class="property">style</span>.<span class="property">width</span> = <span class="string">&#x27;300px&#x27;</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// css 属性的 - 连接符与 JavaScript 的 减运算符</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 冲突，所以要改成驼峰法</span></span></span><br><span class="line"><span class="language-javascript">    box.<span class="property">style</span>.<span class="property">backgroundColor</span> = <span class="string">&#x27;pink&#x27;</span></span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>任何标签都有 <code>style</code> 属性，通过 <code>style</code> 属性可以动态更改网页标签的样式，如要遇到 <code>css</code> 属性中包含字符 <code>-</code> 时，要将 <code>-</code> 去掉并将其后面的字母改成大写，如 <code>background-color</code> 要写成 <code>box.style.backgroundColor</code></p>
<ol start="2">
<li>操作类名(className) 操作CSS</li>
</ol>
<p>如果修改的样式比较多，直接通过style属性修改比较繁琐，我们可以通过借助于css类名的形式。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>练习 - 修改样式<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.pink</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background</span>: pink;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: hotpink;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span>随便一些文本内容<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 获取 DOM 节点</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> box = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.intro&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">    box.<span class="property">className</span> = <span class="string">&#x27;pink&#x27;</span></span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>注意：</p>
<p>1.由于class是关键字, 所以使用className去代替</p>
<p>2.className是使用新值换旧值, 如果需要添加一个类,需要保留之前的类名</p>
</blockquote>
<ol start="3">
<li>通过 classList 操作类控制CSS</li>
</ol>
<p>为了解决className 容易覆盖以前的类名，我们可以通过classList方式追加和删除类名</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.active</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: hotpink;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-left</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;one&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 1.获取元素</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// let box = document.querySelector(&#x27;css选择器&#x27;)</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">let</span> box = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;div&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// add是个方法 添加  追加</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// box.classList.add(&#x27;active&#x27;)</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// remove() 移除 类</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// box.classList.remove(&#x27;one&#x27;)</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 切换类</span></span></span><br><span class="line"><span class="language-javascript">        box.<span class="property">classList</span>.<span class="title function_">toggle</span>(<span class="string">&#x27;one&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="操作表单元素属性"><a href="#操作表单元素属性" class="headerlink" title="操作表单元素属性"></a>操作表单元素属性</h4><p>表单很多情况，也需要修改属性，比如点击眼睛，可以看到密码，本质是把表单类型转换为文本框</p>
<p>正常的有属性有取值的跟其他的标签属性没有任何区别</p>
<p>获取:DOM对象.属性名</p>
<p>设置:DOM对象.属性名&#x3D; 新值</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">value</span>=<span class="string">&quot;请输入&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">disabled</span>&gt;</span>按钮<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;agree&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 1. 获取元素</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">let</span> input = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;input&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 2. 取值或者设置值  得到input里面的值可以用 value</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// console.log(input.value)</span></span></span><br><span class="line"><span class="language-javascript">        input.<span class="property">value</span> = <span class="string">&#x27;小米手机&#x27;</span></span></span><br><span class="line"><span class="language-javascript">        input.<span class="property">type</span> = <span class="string">&#x27;password&#x27;</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 2. 启用按钮</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">let</span> btn = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;button&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// disabled 不可用   =  false  这样可以让按钮启用</span></span></span><br><span class="line"><span class="language-javascript">        btn.<span class="property">disabled</span> = <span class="literal">false</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 3. 勾选复选框</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">let</span> checkbox = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.agree&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">        checkbox.<span class="property">checked</span> = <span class="literal">false</span></span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="自定义属性"><a href="#自定义属性" class="headerlink" title="自定义属性"></a>自定义属性</h4><p>标准属性: 标签天生自带的属性 比如class id title等, 可以直接使用点语法操作比如： disabled、checked、selected</p>
<p>自定义属性：</p>
<p>在html5中推出来了专门的data-自定义属性  </p>
<p>在标签上一律以data-开头</p>
<p>在DOM对象上一律以dataset对象方式获取</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">data-id</span>=<span class="string">&quot;1&quot;</span>&gt;</span> 自定义属性 <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 1. 获取元素</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">let</span> div = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;div&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 2. 获取自定义属性值</span></span></span><br><span class="line"><span class="language-javascript">         <span class="variable language_">console</span>.<span class="title function_">log</span>(div.<span class="property">dataset</span>.<span class="property">id</span>)</span></span><br><span class="line"><span class="language-javascript">      </span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="间歇函数"><a href="#间歇函数" class="headerlink" title="间歇函数"></a>间歇函数</h2><blockquote>
<p>知道间歇函数的作用，利用间歇函数创建定时任务。</p>
</blockquote>
<p><code>setInterval</code> 是 JavaScript 中内置的函数，它的作用是间隔固定的时间自动重复执行另一个函数，也叫定时器函数。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 1. 定义一个普通函数</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">function</span> <span class="title function_">repeat</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;不知疲倦的执行下去....&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 2. 使用 setInterval 调用 repeat 函数</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 间隔 1000 毫秒，重复调用 repeat</span></span></span><br><span class="line"><span class="language-javascript">  <span class="built_in">setInterval</span>(repeat, <span class="number">1000</span>)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="今日单词"><a href="#今日单词" class="headerlink" title="今日单词"></a>今日单词</h2><table>
<thead>
<tr>
<th>单词</th>
<th>说明</th>
<th>解释</th>
</tr>
</thead>
<tbody><tr>
<td>setInterval</td>
<td>定时器</td>
<td>setInterval(repeat, 1000)</td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
</tbody></table>
<h1 id="Web-APIs-第2天"><a href="#Web-APIs-第2天" class="headerlink" title="Web APIs - 第2天"></a>Web APIs - 第2天</h1><blockquote>
<p>学会通过为DOM注册事件来实现可交互的网页特效。</p>
</blockquote>
<ul>
<li>能够判断函数运行的环境并确字 this 所指代的对象</li>
<li>理解事件的作用，知道应用事件的 3 个步骤</li>
</ul>
<blockquote>
<p>学习会为 DOM 注册事件，实现简单可交互的网页特交。</p>
</blockquote>
<h2 id="事件"><a href="#事件" class="headerlink" title="事件"></a>事件</h2><p>事件是编程语言中的术语，它是用来描述程序的行为或状态的，<strong>一旦行为或状态发生改变，便立即调用一个函数。</strong></p>
<p>例如：用户使用【鼠标点击】网页中的一个按钮、用户使用【鼠标拖拽】网页中的一张图片</p>
<h3 id="事件监听"><a href="#事件监听" class="headerlink" title="事件监听"></a>事件监听</h3><p>结合 DOM 使用事件时，需要为 DOM 对象添加事件监听，等待事件发生（触发）时，便立即调用一个函数。</p>
<p><code>addEventListener</code> 是 DOM 对象专门用来添加事件监听的方法，它的两个参数分别为【事件类型】和【事件回调】。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>事件监听<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h3</span>&gt;</span>事件监听<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;text&quot;</span>&gt;</span>为 DOM 元素添加事件监听，等待事件发生，便立即执行一个函数。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;btn&quot;</span>&gt;</span>点击改变文字颜色<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 1. 获取 button 对应的 DOM 对象</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> btn = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;#btn&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 2. 添加事件监听</span></span></span><br><span class="line"><span class="language-javascript">    btn.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;等待事件被触发...&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 改变 p 标签的文字颜色</span></span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">let</span> text = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;text&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">      text.<span class="property">style</span>.<span class="property">color</span> = <span class="string">&#x27;red&#x27;</span></span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 3. 只要用户点击了按钮，事件便触发了！！！</span></span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>完成事件监听分成3个步骤：</p>
<ol>
<li>获取 DOM 元素</li>
<li>通过 <code>addEventListener</code> 方法为 DOM 节点添加事件监听</li>
<li>等待事件触发，如用户点击了某个按钮时便会触发 <code>click</code> 事件类型</li>
<li>事件触发后，相对应的回调函数会被执行</li>
</ol>
<p>大白话描述：所谓的事件无非就是找个机会（事件触发）调用一个函数（回调函数）。</p>
<h3 id="事件类型"><a href="#事件类型" class="headerlink" title="事件类型"></a>事件类型</h3><p><code>click</code> 译成中文是【点击】的意思，它的含义是监听（等着）用户鼠标的单击操作，除了【单击】还有【双击】<code>dblclick</code></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 双击事件类型</span></span></span><br><span class="line"><span class="language-javascript">  btn.<span class="title function_">addEventListener</span>(<span class="string">&#x27;dblclick&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;等待事件被触发...&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 改变 p 标签的文字颜色</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> text = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.text&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">    text.<span class="property">style</span>.<span class="property">color</span> = <span class="string">&#x27;red&#x27;</span></span></span><br><span class="line"><span class="language-javascript">  &#125;)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 只要用户双击击了按钮，事件便触发了！！！</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>结论：【事件类型】决定了事件被触发的方式，如 <code>click</code> 代表鼠标单击，<code>dblclick</code> 代表鼠标双击。</p>
<h3 id="事件处理程序"><a href="#事件处理程序" class="headerlink" title="事件处理程序"></a>事件处理程序</h3><p><code>addEventListener</code> 的第2个参数是函数，这个函数会在事件被触发时立即被调用，在这个函数中可以编写任意逻辑的代码，如改变 DOM 文本颜色、文本内容等。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 双击事件类型</span></span></span><br><span class="line"><span class="language-javascript">  btn.<span class="title function_">addEventListener</span>(<span class="string">&#x27;dblclick&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;等待事件被触发...&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> text = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.text&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 改变 p 标签的文字颜色</span></span></span><br><span class="line"><span class="language-javascript">    text.<span class="property">style</span>.<span class="property">color</span> = <span class="string">&#x27;red&#x27;</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 改变 p 标签的文本内容</span></span></span><br><span class="line"><span class="language-javascript">    text.<span class="property">style</span>.<span class="property">fontSize</span> = <span class="string">&#x27;20px&#x27;</span></span></span><br><span class="line"><span class="language-javascript">  &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>结论：【事件处理程序】决定了事件触发后应该执行的逻辑。</p>
<h2 id="事件类型-1"><a href="#事件类型-1" class="headerlink" title="事件类型"></a>事件类型</h2><p>将众多的事件类型分类可分为：鼠标事件、键盘事件、表单事件、焦点事件等，我们逐一展开学习。</p>
<h3 id="鼠标事件"><a href="#鼠标事件" class="headerlink" title="鼠标事件"></a>鼠标事件</h3><p>鼠标事件是指跟鼠标操作相关的事件，如单击、双击、移动等。</p>
<ol>
<li>&#96;mouseenter 监听鼠标是否移入 DOM 元素</li>
</ol>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h3</span>&gt;</span>鼠标事件<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>监听与鼠标相关的操作<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 需要事件监听的 DOM 元素</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> box = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.box&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 监听鼠标是移入当前 DOM 元素</span></span></span><br><span class="line"><span class="language-javascript">    box.<span class="title function_">addEventListener</span>(<span class="string">&#x27;mouseenter&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 修改文本内容</span></span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">this</span>.<span class="property">innerText</span> = <span class="string">&#x27;鼠标移入了...&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 修改光标的风格</span></span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">this</span>.<span class="property">style</span>.<span class="property">cursor</span> = <span class="string">&#x27;move&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ol>
<li>&#96;mouseleave 监听鼠标是否移出 DOM 元素</li>
</ol>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h3</span>&gt;</span>鼠标事件<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>监听与鼠标相关的操作<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 需要事件监听的 DOM 元素</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> box = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.box&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 监听鼠标是移出当前 DOM 元素</span></span></span><br><span class="line"><span class="language-javascript">    box.<span class="title function_">addEventListener</span>(<span class="string">&#x27;mouseleave&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 修改文本内容</span></span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">this</span>.<span class="property">innerText</span> = <span class="string">&#x27;鼠标移出了...&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="键盘事件"><a href="#键盘事件" class="headerlink" title="键盘事件"></a>键盘事件</h3><p>keydown   键盘按下触发<br>keyup   键盘抬起触发</p>
<h3 id="焦点事件"><a href="#焦点事件" class="headerlink" title="焦点事件"></a>焦点事件</h3><p>focus  获得焦点</p>
<p>blur 失去焦点</p>
<h3 id="文本框输入事件"><a href="#文本框输入事件" class="headerlink" title="文本框输入事件"></a>文本框输入事件</h3><p>input  </p>
<h2 id="事件对象"><a href="#事件对象" class="headerlink" title="事件对象"></a>事件对象</h2><p>任意事件类型被触发时与事件相关的信息会被以对象的形式记录下来，我们称这个对象为事件对象。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h3</span>&gt;</span>事件对象<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>任意事件类型被触发时与事件相关的信息会被以对象的形式记录下来，我们称这个对象为事件对象。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 获取 .box 元素</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> box = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.box&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 添加事件监听</span></span></span><br><span class="line"><span class="language-javascript">    box.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;任意事件类型被触发后，相关信息会以对象形式被记录下来...&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 事件回调函数的第1个参数即所谓的事件对象</span></span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">console</span>.<span class="title function_">log</span>(e)</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>事件回调函数的【第1个参数】即所谓的事件对象，通常习惯性的将这个对数命名为 <code>event</code>、<code>ev</code> 、<code>ev</code> 。</p>
<p>接下来简单看一下事件对象中包含了哪些有用的信息：</p>
<ol>
<li><code>ev.type</code> 当前事件的类型</li>
<li><code>ev.clientX/Y</code> 光标相对浏览器窗口的位置</li>
<li><code>ev.offsetX/Y</code> 光标相于当前 DOM 元素的位置</li>
</ol>
<p>注：在事件回调函数内部通过 window.event 同样可以获取事件对象。</p>
<h2 id="环境对象"><a href="#环境对象" class="headerlink" title="环境对象"></a>环境对象</h2><blockquote>
<p>能够分析判断函数运行在不同环境中 this 所指代的对象。</p>
</blockquote>
<p>环境对象指的是函数内部特殊的变量 <code>this</code> ，它代表着当前函数运行时所处的环境。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 声明函数</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">function</span> <span class="title function_">sayHi</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// this 是一个变量</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>);</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 声明一个对象</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">let</span> user = &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">name</span>: <span class="string">&#x27;张三&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">sayHi</span>: sayHi <span class="comment">// 此处把 sayHi 函数，赋值给 sayHi 属性</span></span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">  </span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">let</span> person = &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">name</span>: <span class="string">&#x27;李四&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">sayHi</span>: sayHi</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 直接调用</span></span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">sayHi</span>() <span class="comment">// window</span></span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">window</span>.<span class="title function_">sayHi</span>() <span class="comment">// window</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 做为对象方法调用</span></span></span><br><span class="line"><span class="language-javascript">  user.<span class="title function_">sayHi</span>()<span class="comment">// user</span></span></span><br><span class="line"><span class="language-javascript">	person.<span class="title function_">sayHi</span>()<span class="comment">// person</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>结论：</p>
<ol>
<li><code>this</code> 本质上是一个变量，数据类型为对象</li>
<li>函数的调用方式不同 <code>this</code> 变量的值也不同</li>
<li>【谁调用 <code>this</code> 就是谁】是判断 <code>this</code> 值的粗略规则</li>
<li>函数直接调用时实际上 <code>window.sayHi()</code> 所以 <code>this</code> 的值为 <code>window</code></li>
</ol>
<h2 id="回调函数"><a href="#回调函数" class="headerlink" title="回调函数"></a>回调函数</h2><p>如果将函数 A 做为参数传递给函数 B 时，我们称函数 A 为回调函数。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 声明 foo 函数</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">function</span> <span class="title function_">foo</span>(<span class="params">arg</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(arg);</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 普通的值做为参数</span></span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">foo</span>(<span class="number">10</span>);</span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">foo</span>(<span class="string">&#x27;hello world!&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">foo</span>([<span class="string">&#x27;html&#x27;</span>, <span class="string">&#x27;css&#x27;</span>, <span class="string">&#x27;javascript&#x27;</span>]);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">function</span> <span class="title function_">bar</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;函数也能当参数...&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 函数也可以做为参数！！！！</span></span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">foo</span>(bar);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>函数 <code>bar</code> 做参数传给了 <code>foo</code> 函数，<code>bar</code> 就是所谓的回调函数了！！！</p>
<p>我们回顾一下间歇函数 <code>setInterval</code> </p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">	<span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;我是回调函数...&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 调用定时器</span></span></span><br><span class="line"><span class="language-javascript">  <span class="built_in">setInterval</span>(fn, <span class="number">1000</span>);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><code>fn</code> 函数做为参数传给了 <code>setInterval</code> ，这便是回调函数的实际应用了，结合刚刚学习的函数表达式上述代码还有另一种更常见写法。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 调用定时器，匿名函数做为参数</span></span></span><br><span class="line"><span class="language-javascript">  <span class="built_in">setInterval</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;我是回调函数...&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">  &#125;, <span class="number">1000</span>);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>结论：</p>
<ol>
<li>回调函数本质还是函数，只不过把它当成参数使用</li>
<li>使用匿名函数做为回调函数比较常见</li>
</ol>
<h1 id="Web-APIs-第3天"><a href="#Web-APIs-第3天" class="headerlink" title="Web APIs - 第3天"></a>Web APIs - 第3天</h1><blockquote>
<p>进一步学习 事件进阶，实现更多交互的网页特效，结合事件流的特征优化事件执行的效率</p>
</blockquote>
<ul>
<li>掌握阻止事件冒泡的方法</li>
<li>理解事件委托的实现原理</li>
</ul>
<h2 id="事件流"><a href="#事件流" class="headerlink" title="事件流"></a>事件流</h2><p>事件流是对事件执行过程的描述，了解事件的执行过程有助于加深对事件的理解，提升开发实践中对事件运用的灵活度。</p>
<p><img data-src="/./webAPIs/event.png" alt="event"></p>
<p>如上图所示，任意事件被触发时总会经历两个阶段：【捕获阶段】和【冒泡阶段】。</p>
<p>简言之，捕获阶段是【从父到子】的传导过程，冒泡阶段是【从子向父】的传导过程。</p>
<h3 id="捕获和冒泡"><a href="#捕获和冒泡" class="headerlink" title="捕获和冒泡"></a>捕获和冒泡</h3><p>了解了什么是事件流之后，我们来看事件流是如何影响事件执行的：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h3</span>&gt;</span>事件流<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>事件流是事件在执行时的底层机制，主要体现在父子盒子之间事件的执行上。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;outer&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;inner&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;child&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 获取嵌套的3个节点</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> outer = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.outer&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> inner = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.inner&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> child = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.child&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">		</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// html 元素添加事件</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">document</span>.<span class="property">documentElement</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;html...&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">		</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// body 元素添加事件</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;body...&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 外层的盒子添加事件</span></span></span><br><span class="line"><span class="language-javascript">    outer.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;outer...&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 中间的盒子添加事件</span></span></span><br><span class="line"><span class="language-javascript">    outer.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;inner...&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 内层的盒子添加事件</span></span></span><br><span class="line"><span class="language-javascript">    outer.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;child...&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>执行上述代码后发现，当单击事件触发时，其祖先元素的单击事件也【相继触发】，这是为什么呢？</p>
<p>结合事件流的特征，我们知道当某个元素的事件被触发时，事件总是会先经过其祖先才能到达当前元素，然后再由当前元素向祖先传递，事件在流动的过程中遇到相同的事件便会被触发。</p>
<p>再来关注一个细节就是事件相继触发的【执行顺序】，事件的执行顺序是可控制的，即可以在捕获阶段被执行，也可以在冒泡阶段被执行。</p>
<p>如果事件是在冒泡阶段执行的，我们称为冒泡模式，它会先执行子盒子事件再去执行父盒子事件，默认是冒泡模式。</p>
<p>如果事件是在捕获阶段执行的，我们称为捕获模式，它会先执行父盒子事件再去执行子盒子事件。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h3</span>&gt;</span>事件流<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>事件流是事件在执行时的底层机制，主要体现在父子盒子之间事件的执行上。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;outer&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;inner&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 获取嵌套的3个节点</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> outer = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.outer&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> inner = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.inner&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 外层的盒子</span></span></span><br><span class="line"><span class="language-javascript">    outer.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;outer...&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">    &#125;, <span class="literal">true</span>) <span class="comment">// true 表示在捕获阶段执行事件</span></span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 中间的盒子</span></span></span><br><span class="line"><span class="language-javascript">    outer.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;inner...&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">    &#125;, <span class="literal">true</span>)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>结论：</p>
<ol>
<li><code>addEventListener</code> 第3个参数决定了事件是在捕获阶段触发还是在冒泡阶段触发</li>
<li><code>addEventListener</code> 第3个参数为  <code>true</code> 表示捕获阶段触发，<code>false</code> 表示冒泡阶段触发，默认值为 <code>false</code></li>
<li>事件流只会在父子元素具有相同事件类型时才会产生影响</li>
<li>绝大部分场景都采用默认的冒泡模式（其中一个原因是早期 IE 不支持捕获）</li>
</ol>
<h3 id="阻止冒泡"><a href="#阻止冒泡" class="headerlink" title="阻止冒泡"></a>阻止冒泡</h3><p>阻止冒泡是指阻断事件的流动，保证事件只在当前元素被执行，而不再去影响到其对应的祖先元素。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h3</span>&gt;</span>阻止冒泡<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>阻止冒泡是指阻断事件的流动，保证事件只在当前元素被执行，而不再去影响到其对应的祖先元素。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;outer&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;inner&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;child&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 获取嵌套的3个节点</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> outer = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.outer&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> inner = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.inner&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> child = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.child&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 外层的盒子</span></span></span><br><span class="line"><span class="language-javascript">    outer.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;outer...&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 中间的盒子</span></span></span><br><span class="line"><span class="language-javascript">    inner.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span> (<span class="params">ev</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;inner...&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 阻止事件冒泡</span></span></span><br><span class="line"><span class="language-javascript">      ev.<span class="title function_">stopPropagation</span>()</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 内层的盒子</span></span></span><br><span class="line"><span class="language-javascript">    child.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span> (<span class="params">ev</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;child...&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 借助事件对象，阻止事件向上冒泡</span></span></span><br><span class="line"><span class="language-javascript">      ev.<span class="title function_">stopPropagation</span>()</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>结论：事件对象中的 <code>ev.stopPropagation</code> 方法，专门用来阻止事件冒泡。</p>
<blockquote>
<p>鼠标经过事件：</p>
<p>mouseover 和 mouseout 会有冒泡效果</p>
<p>mouseenter  和 mouseleave   没有冒泡效果 (推荐)</p>
</blockquote>
<h2 id="事件委托"><a href="#事件委托" class="headerlink" title="事件委托"></a>事件委托</h2><p>事件委托是利用事件流的特征解决一些现实开发需求的知识技巧，主要的作用是提升程序效率。</p>
<p>大量的事件监听是比较耗费性能的，如下代码所示</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 假设页面中有 10000 个 button 元素</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> buttons = <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;table button&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>; i &lt;= buttons.<span class="property">length</span>; i++) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 为 10000 个 button 元素添加了事件</span></span></span><br><span class="line"><span class="language-javascript">    buttons.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 省略具体执行逻辑...</span></span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>利用事件流的特征，可以对上述的代码进行优化，事件的的冒泡模式总是会将事件流向其父元素的，如果父元素监听了相同的事件类型，那么父元素的事件就会被触发并执行，正是利用这一特征对上述代码进行优化，如下代码所示：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 假设页面中有 10000 个 button 元素</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">let</span> buttons = <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;table button&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">  </span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 假设上述的 10000 个 buttom 元素共同的祖先元素是 table</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">let</span> parents = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;table&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">  parents.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;点击任意子元素都会触发事件...&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">  &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>我们的最终目的是保证只有点击 button 子元素才去执行事件的回调函数，如何判断用户点击是哪一个子元素呢？</p>
<img data-src="/2024/11/19/webAPIs/event.png" class="" title="event">

<p>事件对象中的属性 <code>target</code> 或 <code>srcElement</code>属性表示真正触发事件的元素，它是一个元素类型的节点。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 假设页面中有 10000 个 button 元素</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> buttons = <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;table button&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">  </span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 假设上述的 10000 个 buttom 元素共同的祖先元素是 table</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> parents = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;table&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">  parents.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span> (<span class="params">ev</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// console.log(ev.target);</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 只有 button 元素才会真正去执行逻辑</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">if</span>(ev.<span class="property">target</span>.<span class="property">tagName</span> === <span class="string">&#x27;BUTTON&#x27;</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 执行的逻辑</span></span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>优化过的代码只对祖先元素添加事件监听，相比对 10000 个元素添加事件监听执行效率要高许多！！！</p>
<h2 id="其他事件"><a href="#其他事件" class="headerlink" title="其他事件"></a>其他事件</h2><h3 id="页面加载事件"><a href="#页面加载事件" class="headerlink" title="页面加载事件"></a>页面加载事件</h3><p>加载外部资源（如图片、外联CSS和JavaScript等）加载完毕时触发的事件</p>
<p>有些时候需要等页面资源全部处理完了做一些事情</p>
<p><strong>事件名：load</strong></p>
<p>监听页面所有资源加载完毕：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;load&#x27;</span>, <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// xxxxx</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h3 id="元素滚动事件"><a href="#元素滚动事件" class="headerlink" title="元素滚动事件"></a>元素滚动事件</h3><p>滚动条在滚动的时候持续触发的事件</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;scroll&#x27;</span>, <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// xxxxx</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h3 id="页面尺寸事件"><a href="#页面尺寸事件" class="headerlink" title="页面尺寸事件"></a>页面尺寸事件</h3><p>会在窗口尺寸改变的时候触发事件：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;resize&#x27;</span>, <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// xxxxx</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h2 id="元素尺寸与位置"><a href="#元素尺寸与位置" class="headerlink" title="元素尺寸与位置"></a>元素尺寸与位置</h2><p>获取元素的自身宽高、包含元素自身设置的宽高、padding、border</p>
<p>offsetWidth和offsetHeight  </p>
<p>获取出来的是数值,方便计算</p>
<p>注意: 获取的是可视宽高, 如果盒子是隐藏的,获取的结果是0</p>
<h1 id="Web-APIs-第4天"><a href="#Web-APIs-第4天" class="headerlink" title="Web APIs - 第4天"></a>Web APIs - 第4天</h1><blockquote>
<p>进一步学习 DOM 相关知识，实现可交互的网页特效</p>
</blockquote>
<ul>
<li>能够插入、删除和替换元素节点</li>
<li>能够依据元素节点关系查找节点</li>
</ul>
<h2 id="日期对象"><a href="#日期对象" class="headerlink" title="日期对象"></a>日期对象</h2><p>掌握 Date 日期对象的使用，动态获取当前计算机的时间。</p>
<p>ECMAScript 中内置了获取系统时间的对象 Date，使用 Date 时与之前学习的内置对象 console 和 Math 不同，它需要借助 new 关键字才能使用。</p>
<h3 id="实例化"><a href="#实例化" class="headerlink" title="实例化"></a>实例化</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 1. 实例化</span></span><br><span class="line"><span class="comment">// const date = new Date(); // 系统默认时间</span></span><br><span class="line"><span class="keyword">const</span> date = <span class="keyword">new</span> <span class="title class_">Date</span>(<span class="string">&#x27;2020-05-01&#x27;</span>) <span class="comment">// 指定时间</span></span><br><span class="line"><span class="comment">// date 变量即所谓的时间对象</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> date)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h3> <figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"> <span class="comment">// 1. 实例化</span></span><br><span class="line"><span class="keyword">const</span> date = <span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line"><span class="comment">// 2. 调用时间对象方法</span></span><br><span class="line"><span class="comment">// 通过方法分别获取年、月、日，时、分、秒</span></span><br><span class="line"><span class="keyword">const</span> year = date.<span class="title function_">getFullYear</span>(); <span class="comment">// 四位年份</span></span><br><span class="line"><span class="keyword">const</span> month = date.<span class="title function_">getMonth</span>(); <span class="comment">// 0 ~ 11</span></span><br></pre></td></tr></table></figure>


<p>getFullYear 获取四位年份</p>
<p>getMonth 获取月份，取值为 0 ~ 11</p>
<p>getDate 获取月份中的每一天，不同月份取值也不相同</p>
<p>getDay 获取星期，取值为 0 ~ 6</p>
<p>getHours 获取小时，取值为 0 ~ 23</p>
<p>getMinutes 获取分钟，取值为 0 ~ 59</p>
<p>getSeconds 获取秒，取值为 0 ~ 59</p>
<h3 id="时间戳"><a href="#时间戳" class="headerlink" title="时间戳"></a>时间戳</h3><p>时间戳是指1970年01月01日00时00分00秒起至现在的总秒数或毫秒数，它是一种特殊的计量时间的方式。</p>
<p>注：ECMAScript 中时间戳是以毫秒计的。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">    <span class="comment">// 1. 实例化</span></span><br><span class="line">  <span class="keyword">const</span> date = <span class="keyword">new</span> <span class="title class_">Date</span>()</span><br><span class="line">  <span class="comment">// 2. 获取时间戳</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(date.<span class="title function_">getTime</span>())</span><br><span class="line"><span class="comment">// 还有一种获取时间戳的方法</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(+<span class="keyword">new</span> <span class="title class_">Date</span>())</span><br><span class="line">  <span class="comment">// 还有一种获取时间戳的方法</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Date</span>.<span class="title function_">now</span>())</span><br><span class="line"></span><br></pre></td></tr></table></figure>


<p>获取时间戳的方法，分别为 getTime 和 Date.now 和  +new Date()</p>
<h2 id="DOM-节点-1"><a href="#DOM-节点-1" class="headerlink" title="DOM 节点"></a>DOM 节点</h2><blockquote>
<p>掌握元素节点创建、复制、插入、删除等操作的方法，能够依据元素节点的结构关系查找节点</p>
</blockquote>
<p>回顾之前 DOM 的操作都是针对元素节点的属性或文本的，除此之外也有专门针对元素节点本身的操作，如插入、复制、删除、替换等。</p>
<h3 id="插入节点"><a href="#插入节点" class="headerlink" title="插入节点"></a>插入节点</h3><p>在已有的 DOM 节点中插入新的 DOM 节点时，需要关注两个关键因素：首先要得到新的 DOM 节点，其次在哪个位置插入这个节点。</p>
<p>如下代码演示：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h3</span>&gt;</span>插入节点<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>在现有 dom 结构基础上插入新的元素节点<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 普通盒子 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 点击按钮向 box 盒子插入节点 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn&quot;</span>&gt;</span>插入节点<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 点击按钮，在网页中插入节点</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> btn = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.btn&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">    btn.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 1. 获得一个 DOM 元素节点</span></span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">const</span> p = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;p&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">      p.<span class="property">innerText</span> = <span class="string">&#x27;创建的新的p标签&#x27;</span></span></span><br><span class="line"><span class="language-javascript">      p.<span class="property">className</span> = <span class="string">&#x27;info&#x27;</span></span></span><br><span class="line"><span class="language-javascript">      </span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 复制原有的 DOM 节点</span></span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">const</span> p2 = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;p&#x27;</span>).<span class="title function_">cloneNode</span>(<span class="literal">true</span>)</span></span><br><span class="line"><span class="language-javascript">      p2.<span class="property">style</span>.<span class="property">color</span> = <span class="string">&#x27;red&#x27;</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 2. 插入盒子 box 盒子</span></span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.box&#x27;</span>).<span class="title function_">appendChild</span>(p)</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.box&#x27;</span>).<span class="title function_">appendChild</span>(p2)</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>结论：</p>
<ul>
<li><p><code>createElement</code> 动态创建任意 DOM 节点</p>
</li>
<li><p><code>cloneNode</code> 复制现有的 DOM 节点，传入参数 true 会复制所有子节点</p>
</li>
<li><p><code>appendChild</code> 在末尾（结束标签前）插入节点</p>
</li>
</ul>
<p>再来看另一种情形的代码演示：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h3</span>&gt;</span>插入节点<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>在现有 dom 结构基础上插入新的元素节点<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn1&quot;</span>&gt;</span>在任意节点前插入<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>HTML<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>CSS<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>JavaScript<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 点击按钮，在已有 DOM 中插入新节点</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> btn1 = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.btn1&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">    btn1.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 第 2 个 li 元素</span></span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">const</span> relative = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;li:nth-child(2)&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 1. 动态创建新的节点</span></span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">const</span> li1 = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;li&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">      li1.<span class="property">style</span>.<span class="property">color</span> = <span class="string">&#x27;red&#x27;</span></span></span><br><span class="line"><span class="language-javascript">      li1.<span class="property">innerText</span> = <span class="string">&#x27;Web APIs&#x27;</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 复制现有的节点</span></span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">const</span> li2 = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;li:first-child&#x27;</span>).<span class="title function_">cloneNode</span>(<span class="literal">true</span>)</span></span><br><span class="line"><span class="language-javascript">      li2.<span class="property">style</span>.<span class="property">color</span> = <span class="string">&#x27;blue&#x27;</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 2. 在 relative 节点前插入</span></span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;ul&#x27;</span>).<span class="title function_">insertBefore</span>(li1, relative)</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;ul&#x27;</span>).<span class="title function_">insertBefore</span>(li2, relative)</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>结论：</p>
<ul>
<li><p><code>createElement</code> 动态创建任意 DOM 节点</p>
</li>
<li><p><code>cloneNode</code> 复制现有的 DOM 节点，传入参数 true 会复制所有子节点</p>
</li>
<li><p><code>insertBefore</code> 在父节点中任意子节点之前插入新节点</p>
</li>
</ul>
<h3 id="删除节点"><a href="#删除节点" class="headerlink" title="删除节点"></a>删除节点</h3><p>删除现有的 DOM 节点，也需要关注两个因素：首先由父节点删除子节点，其次是要删除哪个子节点。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 点击按钮删除节点 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span>&gt;</span>删除节点<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>HTML<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>CSS<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>Web APIs<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> btn = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;button&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">    btn.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 获取 ul 父节点</span></span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">let</span> ul = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;ul&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 待删除的子节点</span></span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">let</span> lis = <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;li&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 删除节点</span></span></span><br><span class="line"><span class="language-javascript">      ul.<span class="title function_">removeChild</span>(lis[<span class="number">0</span>])</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>结论：<code>removeChild</code> 删除节点时一定是由父子关系。</p>
<h3 id="查找节点"><a href="#查找节点" class="headerlink" title="查找节点"></a>查找节点</h3><p>DOM 树中的任意节点都不是孤立存在的，它们要么是父子关系，要么是兄弟关系，不仅如此，我们可以依据节点之间的关系查找节点。</p>
<h4 id="父子关系"><a href="#父子关系" class="headerlink" title="父子关系"></a>父子关系</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn1&quot;</span>&gt;</span>所有的子节点<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 获取 ul 的子节点 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>HTML<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>CSS<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>JavaScript 基础<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>Web APIs<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> btn1 = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.btn1&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">    btn1.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 父节点</span></span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">const</span> ul = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;ul&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 所有的子节点</span></span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">console</span>.<span class="title function_">log</span>(ul.<span class="property">childNodes</span>)</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 只包含元素子节点</span></span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">console</span>.<span class="title function_">log</span>(ul.<span class="property">children</span>)</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>结论：</p>
<ul>
<li><code>childNodes</code> 获取全部的子节点，回车换行会被认为是空白文本节点</li>
<li><code>children</code> 只获取元素类型节点</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span> <span class="attr">width</span>=<span class="string">&quot;60&quot;</span>&gt;</span>序号<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>课程名<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>难度<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span> <span class="attr">width</span>=<span class="string">&quot;80&quot;</span>&gt;</span>操作<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>HTML<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>初级<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">button</span>&gt;</span>变色<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>CSS<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>初级<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">button</span>&gt;</span>变色<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>3<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>Web APIs<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>中级<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">button</span>&gt;</span>变色<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 获取所有 button 节点，并添加事件监听</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> buttons = <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;table button&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; buttons.<span class="property">length</span>; i++) &#123;</span></span><br><span class="line"><span class="language-javascript">      buttons[i].<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// console.log(this.parentNode); // 父节点 td</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// console.log(this.parentNode.parentNode); // 爷爷节点 tr</span></span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">this</span>.<span class="property">parentNode</span>.<span class="property">parentNode</span>.<span class="property">style</span>.<span class="property">color</span> = <span class="string">&#x27;red&#x27;</span></span></span><br><span class="line"><span class="language-javascript">      &#125;)</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>结论：<code>parentNode</code> 获取父节点，以相对位置查找节点，实际应用中非常灵活。</p>
<h4 id="兄弟关系"><a href="#兄弟关系" class="headerlink" title="兄弟关系"></a>兄弟关系</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>HTML<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>CSS<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>JavaScript 基础<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>Web APIs<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 获取所有 li 节点</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> lis = <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;ul li&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 对所有的 li 节点添加事件监听</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; lis.<span class="property">length</span>; i++) &#123;</span></span><br><span class="line"><span class="language-javascript">      lis[i].<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 前一个节点</span></span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">previousSibling</span>)</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 下一下节点</span></span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">nextSibling</span>)</span></span><br><span class="line"><span class="language-javascript">      &#125;)</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>结论：</p>
<ul>
<li><code>previousSibling</code> 获取前一个节点，以相对位置查找节点，实际应用中非常灵活。</li>
<li><code>nextSibling</code> 获取后一个节点，以相对位置查找节点，实际应用中非常灵活。</li>
</ul>
<h1 id="Web-APIs-第5天笔记"><a href="#Web-APIs-第5天笔记" class="headerlink" title="Web APIs - 第5天笔记"></a>Web APIs - 第5天笔记</h1><blockquote>
<p>目标： 能够利用JS操作浏览器,具备利用本地存储实现学生就业表的能力</p>
</blockquote>
<ul>
<li>BOM操作</li>
<li>综合案例</li>
</ul>
<h2 id="js组成"><a href="#js组成" class="headerlink" title="js组成"></a>js组成</h2><p>JavaScript的组成</p>
<ul>
<li><p>ECMAScript:</p>
<ul>
<li>规定了js基础语法核心知识。</li>
<li>比如：变量、分支语句、循环语句、对象等等</li>
</ul>
</li>
<li><p>Web APIs :</p>
<ul>
<li>DOM   文档对象模型， 定义了一套操作HTML文档的API</li>
<li>BOM   浏览器对象模型，定义了一套操作浏览器窗口的API</li>
</ul>
</li>
</ul>
 <img data-src="/2024/11/19/webAPIs/1676047389456.png" class="" width="67604738945">

<h2 id="window对象"><a href="#window对象" class="headerlink" title="window对象"></a>window对象</h2><p><strong>BOM</strong> (Browser Object Model ) 是浏览器对象模型</p>
<ul>
<li>window对象是一个全局对象，也可以说是JavaScript中的顶级对象</li>
<li>像document、alert()、console.log()这些都是window的属性，基本BOM的属性和方法都是window的</li>
<li>所有通过var定义在全局作用域中的变量、函数都会变成window对象的属性和方法</li>
<li>window对象下的属性和方法调用的时候可以省略window</li>
</ul>
 <img data-src="/2024/11/19/webAPIs/1676047436362.png" class="" width="67604743636">

<h2 id="定时器-延迟函数"><a href="#定时器-延迟函数" class="headerlink" title="定时器-延迟函数"></a>定时器-延迟函数</h2><p>JavaScript 内置的一个用来让代码延迟执行的函数，叫 setTimeout</p>
<p><strong>语法：</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">setTimeout</span>(回调函数, 延迟时间)</span><br></pre></td></tr></table></figure>

<p>setTimeout 仅仅只执行一次，所以可以理解为就是把一段代码延迟执行, 平时省略window</p>
<p>间歇函数 setInterval : 每隔一段时间就执行一次， , 平时省略window</p>
<p>清除延时函数：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">clearTimeout</span>(timerId)</span><br></pre></td></tr></table></figure>

<blockquote>
<p>注意点</p>
<ol>
<li>延时函数需要等待,所以后面的代码先执行</li>
<li>返回值是一个正整数，表示定时器的编号</li>
</ol>
</blockquote>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 定时器之延迟函数</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 1. 开启延迟函数</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">let</span> timerId = <span class="built_in">setTimeout</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;我只执行一次&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">    &#125;, <span class="number">3000</span>)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 1.1 延迟函数返回的还是一个正整数数字，表示延迟函数的编号</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(timerId)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 1.2 延迟函数需要等待时间，所以下面的代码优先执行</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 2. 关闭延迟函数</span></span></span><br><span class="line"><span class="language-javascript">    <span class="built_in">clearTimeout</span>(timerId)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="location对象"><a href="#location对象" class="headerlink" title="location对象"></a>location对象</h2><p>location (地址) 它拆分并保存了 URL 地址的各个组成部分， 它是一个对象</p>
<table>
<thead>
<tr>
<th>属性&#x2F;方法</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>href</td>
<td>属性，获取完整的 URL 地址，赋值时用于地址的跳转</td>
</tr>
<tr>
<td>search</td>
<td>属性，获取地址中携带的参数，符号 ？后面部分</td>
</tr>
<tr>
<td>hash</td>
<td>属性，获取地址中的啥希值，符号 # 后面部分</td>
</tr>
<tr>
<td>reload()</td>
<td>方法，用来刷新当前页面，传入参数 true 时表示强制刷新</td>
</tr>
</tbody></table>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;search&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">button</span>&gt;</span>搜索<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#/music&quot;</span>&gt;</span>音乐<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#/download&quot;</span>&gt;</span>下载<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;reload&quot;</span>&gt;</span>刷新页面<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// location 对象  </span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 1. href属性 （重点） 得到完整地址，赋值则是跳转到新地址</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(location.<span class="property">href</span>)</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// location.href = &#x27;http://www.itcast.cn&#x27;</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 2. search属性  得到 ? 后面的地址 </span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(location.<span class="property">search</span>)  <span class="comment">// ?search=笔记本</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 3. hash属性  得到 # 后面的地址</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(location.<span class="property">hash</span>)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 4. reload 方法  刷新页面</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> btn = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.reload&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">    btn.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// location.reload() // 页面刷新</span></span></span><br><span class="line"><span class="language-javascript">      location.<span class="title function_">reload</span>(<span class="literal">true</span>) <span class="comment">// 强制页面刷新 ctrl+f5</span></span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="navigator对象"><a href="#navigator对象" class="headerlink" title="navigator对象"></a>navigator对象</h2><p>navigator是对象，该对象下记录了浏览器自身的相关信息</p>
<p>常用属性和方法：</p>
<ul>
<li>通过 userAgent 检测浏览器的版本及平台</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 检测 userAgent（浏览器信息）</span></span><br><span class="line">(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> userAgent = navigator.<span class="property">userAgent</span></span><br><span class="line">  <span class="comment">// 验证是否为Android或iPhone</span></span><br><span class="line">  <span class="keyword">const</span> android = userAgent.<span class="title function_">match</span>(<span class="regexp">/(Android);?[\s\/]+([\d.]+)?/</span>)</span><br><span class="line">  <span class="keyword">const</span> iphone = userAgent.<span class="title function_">match</span>(<span class="regexp">/(iPhone\sOS)\s([\d_]+)/</span>)</span><br><span class="line">  <span class="comment">// 如果是Android或iPhone，则跳转至移动站点</span></span><br><span class="line">  <span class="keyword">if</span> (android || iphone) &#123;</span><br><span class="line">    location.<span class="property">href</span> = <span class="string">&#x27;http://m.itcast.cn&#x27;</span></span><br><span class="line">  &#125;&#125;)();</span><br></pre></td></tr></table></figure>

<h2 id="histroy对象"><a href="#histroy对象" class="headerlink" title="histroy对象"></a>histroy对象</h2><p>history (历史)是对象，主要管理历史记录， 该对象与浏览器地址栏的操作相对应，如前进、后退等</p>
<p><strong>使用场景</strong></p>
<p>history对象一般在实际开发中比较少用，但是会在一些OA 办公系统中见到。</p>
 <img data-src="/2024/11/19/webAPIs/1676047834796.png" class="" width="67604783479">

<p>常见方法：</p>
 <img data-src="/2024/11/19/webAPIs/1676047846593.png" class="" width="67604784659">

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;back&quot;</span>&gt;</span>←后退<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;forward&quot;</span>&gt;</span>前进→<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// histroy对象</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 1.前进</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> forward = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.forward&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">    forward.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// history.forward() </span></span></span><br><span class="line"><span class="language-javascript">      history.<span class="title function_">go</span>(<span class="number">1</span>)</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 2.后退</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> back = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.back&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">    back.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// history.back()</span></span></span><br><span class="line"><span class="language-javascript">      history.<span class="title function_">go</span>(-<span class="number">1</span>)</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="本地存储（今日重点）"><a href="#本地存储（今日重点）" class="headerlink" title="本地存储（今日重点）"></a>本地存储（今日重点）</h2><p>本地存储：将数据存储在本地浏览器中</p>
<p>常见的使用场景：</p>
<p><a href="https://todomvc.com/examples/vanilla-es6/">https://todomvc.com/examples/vanilla-es6/</a>    页面刷新数据不丢失</p>
<p>好处：</p>
<p>1、页面刷新或者关闭不丢失数据，实现数据持久化</p>
<p>2、容量较大，sessionStorage和 localStorage 约 5M 左右</p>
<h3 id="localStorage（重点）"><a href="#localStorage（重点）" class="headerlink" title="localStorage（重点）"></a>localStorage（重点）</h3><p><strong>作用:</strong> 数据可以长期保留在本地浏览器中，刷新页面和关闭页面，数据也不会丢失</p>
<p><strong>特性：</strong>以键值对的形式存储，并且存储的是字符串， 省略了window</p>
<img data-src="/2024/11/19/webAPIs/1676049635087.png" class="" width="67604963508">

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>本地存储-localstorage<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 本地存储 - localstorage 存储的是字符串 </span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 1. 存储</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">localStorage</span>.<span class="title function_">setItem</span>(<span class="string">&#x27;age&#x27;</span>, <span class="number">18</span>)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 2. 获取</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> <span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&#x27;age&#x27;</span>))</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 3. 删除</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">localStorage</span>.<span class="title function_">removeItem</span>(<span class="string">&#x27;age&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="sessionStorage（了解）"><a href="#sessionStorage（了解）" class="headerlink" title="sessionStorage（了解）"></a>sessionStorage（了解）</h3><p>特性：</p>
<ul>
<li>用法跟localStorage基本相同</li>
<li>区别是：当页面浏览器被关闭时，存储在 sessionStorage 的数据会被清除</li>
</ul>
<p>存储：sessionStorage.setItem(key,value)</p>
<p>获取：sessionStorage.getItem(key)</p>
<p>删除：sessionStorage.removeItem(key)</p>
<h3 id="localStorage-存储复杂数据类型"><a href="#localStorage-存储复杂数据类型" class="headerlink" title="localStorage 存储复杂数据类型"></a>localStorage 存储复杂数据类型</h3><p><strong>问题：</strong>本地只能存储字符串,无法存储复杂数据类型.</p>
<p><strong>解决：</strong>需要将复杂数据类型转换成 JSON字符串,在存储到本地</p>
<p><strong>语法：</strong>JSON.stringify(复杂数据类型)</p>
<p>JSON字符串：</p>
<ul>
<li>首先是1个字符串</li>
<li>属性名使用双引号引起来，不能单引号</li>
<li>属性值如果是字符串型也必须双引号</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 本地存储复杂数据类型</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> goods = &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">name</span>: <span class="string">&#x27;小米&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">price</span>: <span class="number">1999</span></span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// localStorage.setItem(&#x27;goods&#x27;, goods)</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// console.log(localStorage.getItem(&#x27;goods&#x27;))</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 1. 把对象转换为JSON字符串  JSON.stringify</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">localStorage</span>.<span class="title function_">setItem</span>(<span class="string">&#x27;goods&#x27;</span>, <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(goods))</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// console.log(typeof localStorage.getItem(&#x27;goods&#x27;))</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>



<p><strong>问题：</strong>因为本地存储里面取出来的是字符串，不是对象，无法直接使用</p>
<p>**解决： **把取出来的字符串转换为对象</p>
<p><strong>语法：</strong>JSON.parse(JSON字符串)</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 本地存储复杂数据类型</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> goods = &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">name</span>: <span class="string">&#x27;小米&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">price</span>: <span class="number">1999</span></span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// localStorage.setItem(&#x27;goods&#x27;, goods)</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// console.log(localStorage.getItem(&#x27;goods&#x27;))</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 1. 把对象转换为JSON字符串  JSON.stringify</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">localStorage</span>.<span class="title function_">setItem</span>(<span class="string">&#x27;goods&#x27;</span>, <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(goods))</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// console.log(typeof localStorage.getItem(&#x27;goods&#x27;))</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 2. 把JSON字符串转换为对象  JSON.parse</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">JSON</span>.<span class="title function_">parse</span>(<span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&#x27;goods&#x27;</span>)))</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="综合案例"><a href="#综合案例" class="headerlink" title="综合案例"></a>综合案例</h2><h3 id="数组map-方法"><a href="#数组map-方法" class="headerlink" title="数组map 方法"></a>数组map 方法</h3><p><strong>使用场景：</strong></p>
<p>map 可以遍历数组处理数据，并且返回新的数组</p>
<p><strong>语法：</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="keyword">const</span> arr = [<span class="string">&#x27;red&#x27;</span>, <span class="string">&#x27;blue&#x27;</span>, <span class="string">&#x27;pink&#x27;</span>]</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="comment">// 1. 数组 map方法 处理数据并且 返回一个数组</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">   <span class="keyword">const</span> newArr = arr.<span class="title function_">map</span>(<span class="keyword">function</span> (<span class="params">ele, index</span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="comment">// console.log(ele)  // 数组元素</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="comment">// console.log(index) // 索引号</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">return</span> ele + <span class="string">&#x27;颜色&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">	&#125;)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="variable language_">console</span>.<span class="title function_">log</span>(newArr)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>map 也称为映射。映射是个术语，指两个元素的集之间元素相互“对应”的关系。</p>
<p>map重点在于有返回值，forEach没有返回值（undefined）</p>
</blockquote>
<h3 id="数组join方法"><a href="#数组join方法" class="headerlink" title="数组join方法"></a>数组join方法</h3><p><strong>作用：</strong>join() 方法用于把数组中的所有元素转换一个字符串</p>
<p><strong>语法：</strong></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> arr = [<span class="string">&#x27;red&#x27;</span>, <span class="string">&#x27;blue&#x27;</span>, <span class="string">&#x27;pink&#x27;</span>]</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 1. 数组 map方法 处理数据并且 返回一个数组</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> newArr = arr.<span class="title function_">map</span>(<span class="keyword">function</span> (<span class="params">ele, index</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// console.log(ele)  // 数组元素</span></span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// console.log(index) // 索引号</span></span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">return</span> ele + <span class="string">&#x27;颜色&#x27;</span></span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(newArr)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 2. 数组join方法  把数组转换为字符串</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 小括号为空则逗号分割</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(newArr.<span class="title function_">join</span>())  <span class="comment">// red颜色,blue颜色,pink颜色</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 小括号是空字符串，则元素之间没有分隔符</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(newArr.<span class="title function_">join</span>(<span class="string">&#x27;&#x27;</span>))  <span class="comment">//red颜色blue颜色pink颜色</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(newArr.<span class="title function_">join</span>(<span class="string">&#x27;|&#x27;</span>))  <span class="comment">//red颜色|blue颜色|pink颜色</span></span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h1 id="Web-APIs-第6天笔记"><a href="#Web-APIs-第6天笔记" class="headerlink" title="Web APIs - 第6天笔记"></a>Web APIs - 第6天笔记</h1><blockquote>
<p>目标：能够利用正则表达式完成小兔鲜注册页面的表单验证，具备常见的表单验证能力</p>
</blockquote>
<ul>
<li>正则表达式</li>
<li>综合案例</li>
<li>阶段案例</li>
</ul>
<h2 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h2><p><strong>正则表达式</strong>（Regular Expression）是一种字符串匹配的模式（规则）</p>
<p><strong>使用场景：</strong></p>
<ul>
<li>例如验证表单：手机号表单要求用户只能输入11位的数字 (匹配)</li>
<li>过滤掉页面内容中的一些敏感词(替换)，或从字符串中获取我们想要的特定部分(提取)等</li>
</ul>
 <img data-src="/2024/11/19/webAPIs/1676079666366.png" class="" width="67607966636">





<h3 id="正则基本使用"><a href="#正则基本使用" class="headerlink" title="正则基本使用"></a>正则基本使用</h3><ol>
<li><p>定义规则</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> reg =  <span class="regexp">/表达式/</span></span><br></pre></td></tr></table></figure>

<ul>
<li>其中<code>/   /</code>是正则表达式字面量</li>
<li>正则表达式也是<code>对象 </code></li>
</ul>
</li>
<li><p>使用正则</p>
<ul>
<li><code>test()方法</code>   用来查看正则表达式与指定的字符串是否匹配</li>
<li>如果正则表达式与指定的字符串匹配 ，返回<code>true</code>，否则<code>false</code></li>
</ul>
</li>
</ol>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 正则表达式的基本使用</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> str = <span class="string">&#x27;web前端开发&#x27;</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 1. 定义规则</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> reg = <span class="regexp">/web/</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 2. 使用正则  test()</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(reg.<span class="title function_">test</span>(str))  <span class="comment">// true  如果符合规则匹配上则返回true</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(reg.<span class="title function_">test</span>(<span class="string">&#x27;java开发&#x27;</span>))  <span class="comment">// false  如果不符合规则匹配上则返回 false</span></span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="元字符"><a href="#元字符" class="headerlink" title="元字符"></a>元字符</h3><ol>
<li><strong>普通字符:</strong></li>
</ol>
<ul>
<li>大多数的字符仅能够描述它们本身，这些字符称作普通字符，例如所有的字母和数字。</li>
<li>普通字符只能够匹配字符串中与它们相同的字符。    </li>
<li>比如，规定用户只能输入英文26个英文字母，普通字符的话  &#x2F;[abcdefghijklmnopqrstuvwxyz]&#x2F;</li>
</ul>
<ol start="2">
<li><strong>元字符(特殊字符）</strong></li>
</ol>
<ul>
<li>是一些具有特殊含义的字符，可以极大提高了灵活性和强大的匹配功能。</li>
<li>比如，规定用户只能输入英文26个英文字母，换成元字符写法： &#x2F;[a-z]&#x2F;</li>
</ul>
<h4 id="边界符"><a href="#边界符" class="headerlink" title="边界符"></a>边界符</h4><p>正则表达式中的边界符（位置符）用来提示字符所处的位置，主要有两个字符</p>
<img data-src="/2024/11/19/webAPIs/1676080081650.png" class="" width="67608008165">

<blockquote>
<p>如果 ^ 和 $ 在一起，表示必须是精确匹配</p>
</blockquote>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 元字符之边界符</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 1. 匹配开头的位置 ^</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> reg = <span class="regexp">/^web/</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(reg.<span class="title function_">test</span>(<span class="string">&#x27;web前端&#x27;</span>))  <span class="comment">// true</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(reg.<span class="title function_">test</span>(<span class="string">&#x27;前端web&#x27;</span>))  <span class="comment">// false</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(reg.<span class="title function_">test</span>(<span class="string">&#x27;前端web学习&#x27;</span>))  <span class="comment">// false</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(reg.<span class="title function_">test</span>(<span class="string">&#x27;we&#x27;</span>))  <span class="comment">// false</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 2. 匹配结束的位置 $</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> reg1 = <span class="regexp">/web$/</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(reg1.<span class="title function_">test</span>(<span class="string">&#x27;web前端&#x27;</span>))  <span class="comment">//  false</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(reg1.<span class="title function_">test</span>(<span class="string">&#x27;前端web&#x27;</span>))  <span class="comment">// true</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(reg1.<span class="title function_">test</span>(<span class="string">&#x27;前端web学习&#x27;</span>))  <span class="comment">// false</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(reg1.<span class="title function_">test</span>(<span class="string">&#x27;we&#x27;</span>))  <span class="comment">// false  </span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 3. 精确匹配 ^ $</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> reg2 = <span class="regexp">/^web$/</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(reg2.<span class="title function_">test</span>(<span class="string">&#x27;web前端&#x27;</span>))  <span class="comment">//  false</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(reg2.<span class="title function_">test</span>(<span class="string">&#x27;前端web&#x27;</span>))  <span class="comment">// false</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(reg2.<span class="title function_">test</span>(<span class="string">&#x27;前端web学习&#x27;</span>))  <span class="comment">// false</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(reg2.<span class="title function_">test</span>(<span class="string">&#x27;we&#x27;</span>))  <span class="comment">// false </span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(reg2.<span class="title function_">test</span>(<span class="string">&#x27;web&#x27;</span>))  <span class="comment">// true</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(reg2.<span class="title function_">test</span>(<span class="string">&#x27;webweb&#x27;</span>))  <span class="comment">// flase </span></span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="量词"><a href="#量词" class="headerlink" title="量词"></a>量词</h4><p>量词用来设定某个模式重复次数</p>
<img data-src="/2024/11/19/webAPIs/1676080185383.png" class="" width="67608018538">

<blockquote>
<p>注意： 逗号左右两侧千万不要出现空格</p>
</blockquote>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 元字符之量词</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 1. * 重复次数 &gt;= 0 次</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> reg1 = <span class="regexp">/^w*$/</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(reg1.<span class="title function_">test</span>(<span class="string">&#x27;&#x27;</span>))  <span class="comment">// true</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(reg1.<span class="title function_">test</span>(<span class="string">&#x27;w&#x27;</span>))  <span class="comment">// true</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(reg1.<span class="title function_">test</span>(<span class="string">&#x27;ww&#x27;</span>))  <span class="comment">// true</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;-----------------------&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 2. + 重复次数 &gt;= 1 次</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> reg2 = <span class="regexp">/^w+$/</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(reg2.<span class="title function_">test</span>(<span class="string">&#x27;&#x27;</span>))  <span class="comment">// false</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(reg2.<span class="title function_">test</span>(<span class="string">&#x27;w&#x27;</span>))  <span class="comment">// true</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(reg2.<span class="title function_">test</span>(<span class="string">&#x27;ww&#x27;</span>))  <span class="comment">// true</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;-----------------------&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 3. ? 重复次数  0 || 1 </span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> reg3 = <span class="regexp">/^w?$/</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(reg3.<span class="title function_">test</span>(<span class="string">&#x27;&#x27;</span>))  <span class="comment">// true</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(reg3.<span class="title function_">test</span>(<span class="string">&#x27;w&#x27;</span>))  <span class="comment">// true</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(reg3.<span class="title function_">test</span>(<span class="string">&#x27;ww&#x27;</span>))  <span class="comment">// false</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;-----------------------&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 4. &#123;n&#125; 重复 n 次</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> reg4 = <span class="regexp">/^w&#123;3&#125;$/</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(reg4.<span class="title function_">test</span>(<span class="string">&#x27;&#x27;</span>))  <span class="comment">// false</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(reg4.<span class="title function_">test</span>(<span class="string">&#x27;w&#x27;</span>))  <span class="comment">// flase</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(reg4.<span class="title function_">test</span>(<span class="string">&#x27;ww&#x27;</span>))  <span class="comment">// false</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(reg4.<span class="title function_">test</span>(<span class="string">&#x27;www&#x27;</span>))  <span class="comment">// true</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(reg4.<span class="title function_">test</span>(<span class="string">&#x27;wwww&#x27;</span>))  <span class="comment">// false</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;-----------------------&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 5. &#123;n,&#125; 重复次数 &gt;= n </span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> reg5 = <span class="regexp">/^w&#123;2,&#125;$/</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(reg5.<span class="title function_">test</span>(<span class="string">&#x27;&#x27;</span>))  <span class="comment">// false</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(reg5.<span class="title function_">test</span>(<span class="string">&#x27;w&#x27;</span>))  <span class="comment">// false</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(reg5.<span class="title function_">test</span>(<span class="string">&#x27;ww&#x27;</span>))  <span class="comment">// true</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(reg5.<span class="title function_">test</span>(<span class="string">&#x27;www&#x27;</span>))  <span class="comment">// true</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;-----------------------&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 6. &#123;n,m&#125;   n =&lt; 重复次数 &lt;= m</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> reg6 = <span class="regexp">/^w&#123;2,4&#125;$/</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(reg6.<span class="title function_">test</span>(<span class="string">&#x27;w&#x27;</span>))  <span class="comment">// false</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(reg6.<span class="title function_">test</span>(<span class="string">&#x27;ww&#x27;</span>))  <span class="comment">// true</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(reg6.<span class="title function_">test</span>(<span class="string">&#x27;www&#x27;</span>))  <span class="comment">// true</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(reg6.<span class="title function_">test</span>(<span class="string">&#x27;wwww&#x27;</span>))  <span class="comment">// true</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(reg6.<span class="title function_">test</span>(<span class="string">&#x27;wwwww&#x27;</span>))  <span class="comment">// false</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 7. 注意事项： 逗号两侧千万不要加空格否则会匹配失败</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="范围"><a href="#范围" class="headerlink" title="范围"></a>范围</h4><p>表示字符的范围，定义的规则限定在某个范围，比如只能是英文字母，或者数字等等，用表示范围</p>
 <img data-src="/2024/11/19/webAPIs/1676080296168.png" class="" width="67608029616">

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 元字符之范围  []  </span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 1. [abc] 匹配包含的单个字符， 多选1</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> reg1 = <span class="regexp">/^[abc]$/</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(reg1.<span class="title function_">test</span>(<span class="string">&#x27;a&#x27;</span>))  <span class="comment">// true</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(reg1.<span class="title function_">test</span>(<span class="string">&#x27;b&#x27;</span>))  <span class="comment">// true</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(reg1.<span class="title function_">test</span>(<span class="string">&#x27;c&#x27;</span>))  <span class="comment">// true</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(reg1.<span class="title function_">test</span>(<span class="string">&#x27;d&#x27;</span>))  <span class="comment">// false</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(reg1.<span class="title function_">test</span>(<span class="string">&#x27;ab&#x27;</span>))  <span class="comment">// false</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 2. [a-z] 连字符 单个</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> reg2 = <span class="regexp">/^[a-z]$/</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(reg2.<span class="title function_">test</span>(<span class="string">&#x27;a&#x27;</span>))  <span class="comment">// true</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(reg2.<span class="title function_">test</span>(<span class="string">&#x27;p&#x27;</span>))  <span class="comment">// true</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(reg2.<span class="title function_">test</span>(<span class="string">&#x27;0&#x27;</span>))  <span class="comment">// false</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(reg2.<span class="title function_">test</span>(<span class="string">&#x27;A&#x27;</span>))  <span class="comment">// false</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 想要包含小写字母，大写字母 ，数字</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> reg3 = <span class="regexp">/^[a-zA-Z0-9]$/</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(reg3.<span class="title function_">test</span>(<span class="string">&#x27;B&#x27;</span>))  <span class="comment">// true</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(reg3.<span class="title function_">test</span>(<span class="string">&#x27;b&#x27;</span>))  <span class="comment">// true</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(reg3.<span class="title function_">test</span>(<span class="number">9</span>))  <span class="comment">// true</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(reg3.<span class="title function_">test</span>(<span class="string">&#x27;,&#x27;</span>))  <span class="comment">// flase</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 用户名可以输入英文字母，数字，可以加下划线，要求 6~16位</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> reg4 = <span class="regexp">/^[a-zA-Z0-9_]&#123;6,16&#125;$/</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(reg4.<span class="title function_">test</span>(<span class="string">&#x27;abcd1&#x27;</span>))  <span class="comment">// false </span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(reg4.<span class="title function_">test</span>(<span class="string">&#x27;abcd12&#x27;</span>))  <span class="comment">// true</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(reg4.<span class="title function_">test</span>(<span class="string">&#x27;ABcd12&#x27;</span>))  <span class="comment">// true</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(reg4.<span class="title function_">test</span>(<span class="string">&#x27;ABcd12_&#x27;</span>))  <span class="comment">// true</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 3. [^a-z] 取反符</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> reg5 = <span class="regexp">/^[^a-z]$/</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(reg5.<span class="title function_">test</span>(<span class="string">&#x27;a&#x27;</span>))  <span class="comment">// false </span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(reg5.<span class="title function_">test</span>(<span class="string">&#x27;A&#x27;</span>))  <span class="comment">// true</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(reg5.<span class="title function_">test</span>(<span class="number">8</span>))  <span class="comment">// true</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="字符类"><a href="#字符类" class="headerlink" title="字符类"></a>字符类</h4><p>某些常见模式的简写方式，区分字母和数字</p>
<img data-src="/2024/11/19/webAPIs/1676080353637.png" class="" width="67608035363">

 <img data-src="/2024/11/19/webAPIs/1676080372325.png" class="" width="67608037232">

<h2 id="替换和修饰符"><a href="#替换和修饰符" class="headerlink" title="替换和修饰符"></a>替换和修饰符</h2><p>replace 替换方法，可以完成字符的替换</p>
 <img data-src="/2024/11/19/webAPIs/1676080437160.png" class="" width="67608043716">

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 替换和修饰符</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> str = <span class="string">&#x27;欢迎大家学习前端，相信大家一定能学好前端，都成为前端大神&#x27;</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 1. 替换  replace  需求：把前端替换为 web</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 1.1 replace 返回值是替换完毕的字符串</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// const strEnd = str.replace(/前端/, &#x27;web&#x27;) 只能替换一个</span></span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>修饰符约束正则执行的某些细节行为，如是否区分大小写、是否支持多行匹配等</p>
<ul>
<li>i 是单词 ignore 的缩写，正则匹配时字母不区分大小写</li>
<li>g 是单词 global 的缩写，匹配所有满足正则表达式的结果</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 替换和修饰符</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> str = <span class="string">&#x27;欢迎大家学习前端，相信大家一定能学好前端，都成为前端大神&#x27;</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 1. 替换  replace  需求：把前端替换为 web</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 1.1 replace 返回值是替换完毕的字符串</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// const strEnd = str.replace(/前端/, &#x27;web&#x27;) 只能替换一个</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 2. 修饰符 g 全部替换</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> strEnd = str.<span class="title function_">replace</span>(<span class="regexp">/前端/g</span>, <span class="string">&#x27;web&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(strEnd) </span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="正则插件"><a href="#正则插件" class="headerlink" title="正则插件"></a>正则插件</h2> <img data-src="/2024/11/19/webAPIs/1676080548639.png" class="" width="67608054863">



<h2 id="change-事件"><a href="#change-事件" class="headerlink" title="change 事件"></a>change 事件</h2><p>给input注册 change 事件，值被修改并且失去焦点后触发</p>
<h2 id="判断是否有类"><a href="#判断是否有类" class="headerlink" title="判断是否有类"></a>判断是否有类</h2> <img data-src="/2024/11/19/webAPIs/1676080618794.png" class="" width="67608061879">

<p>元素.classList.contains() 看看有没有包含某个类，如果有则返回true，么有则返回false</p>
]]></content>
      <categories>
        <category>前端</category>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>css</tag>
        <tag>JavaScript</tag>
        <tag>Web APIs</tag>
      </tags>
  </entry>
  <entry>
    <title>css基础</title>
    <url>/2024/11/18/css%E5%9F%BA%E7%A1%80/</url>
    <content><![CDATA[<h2 id="「学习笔记」CSS-基础"><a href="#「学习笔记」CSS-基础" class="headerlink" title="「学习笔记」CSS 基础"></a>「学习笔记」CSS 基础</h2><img data-src="/2024/11/18/css%E5%9F%BA%E7%A1%80/52hmahze.png" class="">

<h1 id="css第一天总结"><a href="#css第一天总结" class="headerlink" title="css第一天总结"></a>css第一天总结</h1><h3 id="css简介"><a href="#css简介" class="headerlink" title="css简介"></a>css简介</h3><pre><code>CSS 是层叠样式表 ( Cascading Style Sheets ) 的简称.
有时我们也会称之为 CSS 样式表或级联样式表。
CSS 是也是一种标记语言
CSS 主要用于设置 HTML 页面中的文本内容（字体、大小、对齐方式等）、图片的外形（宽高、边框样式、边距等）以及版面的布局和外观显示样式。
CSS 让我们的网页更加丰富多彩，布局更加灵活自如。简单理解：CSS 可以美化 HTML , 让 HTML 更漂亮， 让页面布局更简单。
CSS 最大价值: 由 HTML 专注去做结构呈现，样式交给 CSS，即 结构 ( HTML ) 与样式( CSS ) 相分离
</code></pre>
<img data-src="/2024/11/18/css%E5%9F%BA%E7%A1%80/%E5%B0%8F%E9%B8%9F.png" class="">

<h3 id="css语法规范"><a href="#css语法规范" class="headerlink" title="css语法规范"></a>css语法规范</h3><pre><code>1.使用 HTML 时，需要遵从一定的规范，CSS 也是如此。要想熟练地使用 CSS 对网页进行修饰，首先需要了解CSS 样式规则。
2.CSS 规则由两个主要的部分构成：选择器以及一条或多条声明。
</code></pre>
<img data-src="/2024/11/18/css%E5%9F%BA%E7%A1%80/css%E5%B1%9E%E6%80%A7%E8%A7%84%E5%88%99.png" class="">

<p> 1.选择器是用于指定 CSS 样式的 HTML 标签，花括号内是对该对象设置的具体样式<br> 2.属性和属性值以“键值对”的形式出现<br> 3.属性是对指定的对象设置的样式属性，例如字体大小、文本颜色等<br> 4.属性和属性值之间用英文“:”分开<br> 5.多个“键值对”之间用英文“;”进行区分<br> 例如：<br>    所有的样式，都包含在 <style> 标签内，表示是样式表。<style> 一般写到 </head> 上方<br>    <head><br>        <style><br>            h4 {<br>                color: blue;<br>                font-size: 100px;<br>            }<br>        </style><br>    </head></p>
<h3 id="css代码风格："><a href="#css代码风格：" class="headerlink" title="css代码风格："></a>css代码风格：</h3><pre><code>1. 样式格式书写
    1.紧凑格式   
        h3 &#123; color: deeppink;font-size: 20px;&#125;
    2.展开格式   
     h3 &#123;
        color: pink;
        font-size: 20px;    
     &#125;
强烈推荐第二种格式， 因为更直观。
2. 样式大小写风格
    1.小写格式
        h3 &#123;
            color: pink;
        &#125;
    2.大写格式
         H3 &#123;
            COLOR: PINK;   
        &#125;
强烈推荐样式选择器，属性名，属性值关键字全部使用小写字母，特殊情况除外。
3. 样式空格风格
    1. h3 &#123;
        color: pink;    
    &#125;
属性值前面，冒号后面，保留一个空格
选择器（标签）和大括号中间保留空格
</code></pre>
<h3 id="css选择器的作用"><a href="#css选择器的作用" class="headerlink" title="css选择器的作用"></a>css选择器的作用</h3><pre><code>答：选择器(选择符)就是根据不同需求把不同的标签选出来这就是选择器的作用。  简单来说，就是选择标签用的。
</code></pre>
<p>​    <img data-src="/2024/11/18/css%E5%9F%BA%E7%A1%80/css%E5%B1%9E%E6%80%A7%E8%A7%84%E5%88%99.png" class=""><br>    找到所有的 h1 标签。  选择器（选对人）<br>    设置这些标签的样式，比如颜色为红色（做对事）。<br>##css基础选择器</p>
<p>基础选择器又包括：标签选择器、类选择器、id 选择器和通配符选择器</p>
<h3 id="标签选择器："><a href="#标签选择器：" class="headerlink" title="标签选择器："></a>标签选择器：</h3><pre><code>标签选择器（元素选择器）是指用 HTML 标签名称作为选择器，按标签名称分类，为页面中某一类标签指定统一的 CSS 样式。
</code></pre>
<p>语法：<br>    标签选择器{<br>        属性：属性值<br>        …<br>    }<br>作用：<br>    标签选择器（元素选择器）是指用 HTML 标签名称作为选择器，按标签名称分类，为页面中某一类标签指定统一的 CSS 样式。</p>
<h3 id="类选择器"><a href="#类选择器" class="headerlink" title="类选择器"></a>类选择器</h3><pre><code>如果想要差异化选择不同的标签，单独选一个或者某几个标签，可以使用类选择器.
</code></pre>
<p>语法：<br>    .类名 {<br>        属性1: 属性值1;<br>        …<br>    }<br>    结构需要用class属性来调用  class  类的意思<br>     <div class="类名"> 变红色 </div><br>    1.如果想要差异化选择不同的标签，单独选一个或者某几个标签，可以使用类选择器。<br>    2.类选择器在 HTML 中以 class 属性表示，在 CSS 中，类选择器以一个点“.”号显示。<br>    3.类选择器使用“.”（英文点号）进行标识，后面紧跟类名（自定义，我们自己命名的）。<br>    4.可以理解为给这个标签起了一个名字，来表示。<br>    5.长名称或词组可以使用中横线来为选择器命名。<br>    6.不要使用纯数字、中文等命名，尽量使用英文字母来表示。<br>    7.命名要有意义，尽量使别人一眼就知道这个类名的目的。<br>    8.命名规范：见附件（ Web 前端开发规范手册.doc）</p>
<h3 id="多类名选择器"><a href="#多类名选择器" class="headerlink" title="多类名选择器"></a>多类名选择器</h3><pre><code>我们可以给一个标签指定多个类名，从而达到更多的选择目的。 这些类名都可以选出这个标签.
简单理解就是一个标签有多个名字. 
</code></pre>
<img data-src="/2024/11/18/css%E5%9F%BA%E7%A1%80/%E6%B7%98%E5%AE%9D%E7%BD%91%E5%A4%9A%E7%B1%BB%E5%90%8D.png" class="">
<pre><code>多类名的具体使用：
    1. &lt;div class=&quot;red font20&quot;&gt;亚瑟&lt;/div&gt;
注意：
    1.在标签class 属性中写 多个类名
    2.多个类名中间必须用空格分开
    3.这个标签就可以分别具有这些类名的样式
</code></pre>
<h3 id="id选择器："><a href="#id选择器：" class="headerlink" title="id选择器："></a>id选择器：</h3><pre><code>id 选择器可以为标有特定 id 的 HTML 元素指定特定的样式。
HTML 元素以 id 属性来设置 id 选择器，CSS 中 id 选择器以“#&quot; 来定义。
语法：
     #id名 &#123;
        属性1: 属性值1;  
        ...
    &#125; 
    注意：id 属性只能在每个 HTML 文档中出现一次
</code></pre>
<h3 id="id选择器和类选择器的区别："><a href="#id选择器和类选择器的区别：" class="headerlink" title="id选择器和类选择器的区别："></a>id选择器和类选择器的区别：</h3><pre><code>1.类选择器（class）好比人的名字，一个人可以有多个名字，同时一个名字也可以被多个人使用。
2.id 选择器好比人的身份证号码，全中国是唯一的，不得重复。
3.id 选择器和类选择器最大的不同在于使用次数上。
4.类选择器在修改样式中用的最多，id 选择器一般用于页面唯一性的元素上，经常和 JavaScript 搭配使用。
</code></pre>
<img data-src="/2024/11/18/css%E5%9F%BA%E7%A1%80/id%E4%B8%8E%E7%B1%BB%E5%90%8D%E7%9A%84%E5%8C%BA%E5%88%AB.png" class="">
<h3 id="通配符选择器："><a href="#通配符选择器：" class="headerlink" title="通配符选择器："></a>通配符选择器：</h3><pre><code>语法：
    * &#123;
        属性1: 属性值1;  
        ...
    &#125;
通配符选择器不需要调用， 自动就给所有的元素使用样式
特殊情况才使用，后面讲解使用场景(以下是清除所有的元素标签的内外边距,后期讲)
 * &#123;
        margin: 0;
        padding: 0;
    &#125; 
</code></pre>
<h3 id="选择器总结"><a href="#选择器总结" class="headerlink" title="选择器总结"></a>选择器总结</h3><img data-src="/2024/11/18/css%E5%9F%BA%E7%A1%80/%E5%9F%BA%E7%A1%80%E9%80%89%E6%8B%A9%E5%99%A8%E6%80%BB%E7%BB%93.png" class="">

<p>##css字体属性:</p>
<h3 id="字体大小："><a href="#字体大小：" class="headerlink" title="字体大小："></a>字体大小：</h3><pre><code>CSS 使用 font-size 属性定义字体大小。 
</code></pre>
<p>语法：<br>     p {<br>        font-size: 20px;<br>    }<br>    1.px（像素）大小是我们网页的最常用的单位<br>    2.谷歌浏览器默认的文字大小为16px<br>    3.不同浏览器可能默认显示的字号大小不一致，我们尽量给一个明确值大小，不要默认大小<br>    4.可以给 body 指定整个页面文字的大小</p>
<h3 id="字体粗细："><a href="#字体粗细：" class="headerlink" title="字体粗细："></a>字体粗细：</h3><pre><code>CSS 使用 font-weight 属性设置文本字体的粗细。
</code></pre>
<p>语法：<br>    p {<br>        font-weight: bold;<br>    }</p>
<img data-src="/2024/11/18/css%E5%9F%BA%E7%A1%80/%E5%AD%97%E4%BD%93%E7%B2%97%E7%BB%86.png" class="">

<p>1.学会让加粗标签（比如 h 和 strong 等) 不加粗，或者其他标签加粗<br>2.实际开发时，我们更喜欢用数字表示粗细</p>
<h3 id="字体样式："><a href="#字体样式：" class="headerlink" title="字体样式："></a>字体样式：</h3><pre><code>CSS 使用 font-style 属性设置文本的风格。
</code></pre>
<p>语法：<br>    p {<br>        font-style: normal;<br>    }</p>
<img data-src="/2024/11/18/css%E5%9F%BA%E7%A1%80/%E6%96%87%E5%AD%97%E5%80%BE%E6%96%9C.png" class="">

<h3 id="字体的综合写法"><a href="#字体的综合写法" class="headerlink" title="字体的综合写法"></a>字体的综合写法</h3><p>字体属性可以把以上文字样式综合来写, 这样可以更节约代码:</p>
<p> body {   font: font-style  font-weight  font-size&#x2F;line-height  font-family;}</p>
<p>使用 font 属性时，必须按上面语法格式中的顺序书写，不能更换顺序，并且各个属性间以空格隔开 不需要设置的属性可以省略（取默认值），但必须保留 font-size 和 font-family 属性，否则 font 属性将不起作用</p>
<h3 id="字体总结："><a href="#字体总结：" class="headerlink" title="字体总结："></a>字体总结：</h3><img data-src="/2024/11/18/css%E5%9F%BA%E7%A1%80/%E5%AD%97%E4%BD%93%E6%80%BB%E7%BB%93.png" class="">

<p>##css文本属性：</p>
<h3 id="文本颜色："><a href="#文本颜色：" class="headerlink" title="文本颜色："></a>文本颜色：</h3><pre><code>color 属性用于定义文本的颜色。
</code></pre>
<p>语法：<br>    div {<br>        color: red;<br>    }</p>
<img data-src="/2024/11/18/css%E5%9F%BA%E7%A1%80/%E9%A2%9C%E8%89%B2%E5%80%BC.png" class="">

<p>开发中最常用的是十六进制</p>
<h3 id="文本对齐："><a href="#文本对齐：" class="headerlink" title="文本对齐："></a>文本对齐：</h3><p>text-align 属性用于设置元素内文本内容的水平对齐方式。<br>语法：<br>    div {<br>        text-align: center;<br>    }</p>
<img data-src="/2024/11/18/css%E5%9F%BA%E7%A1%80/%E5%AF%B9%E9%BD%90%E6%96%87%E6%9C%AC.png" class="">

<h3 id="修饰文本："><a href="#修饰文本：" class="headerlink" title="修饰文本："></a>修饰文本：</h3><pre><code>语法：
 div &#123; 
    text-decoration：underline；
 &#125;
</code></pre>
<img data-src="/2024/11/18/css%E5%9F%BA%E7%A1%80/%E4%BF%AE%E9%A5%B0%E6%96%87%E6%9C%AC.png" class="">

<p>重点记住如何添加下划线 ? 如何删除下划线 ? 其余了解即可.</p>
<h3 id="文本缩进"><a href="#文本缩进" class="headerlink" title="文本缩进"></a>文本缩进</h3><p>语法：<br>    div {<br>        text-indent：20px；<br>    }<br>    div {<br>        text-indent：2em；<br>    }</p>
<img data-src="/2024/11/18/css%E5%9F%BA%E7%A1%80/%E6%96%87%E6%9C%AC%E7%BC%A9%E8%BF%9B.png" class="">

<pre><code>em 是一个相对单位，就是当前元素（font-size) 1 个文字的大小, 如果当前元素没有设置大小，则会按照父元素的 1 个文字大小。
</code></pre>
<h3 id="行间距："><a href="#行间距：" class="headerlink" title="行间距："></a>行间距：</h3><pre><code>line-height 属性用于设置行间的距离（行高）。可以控制文字行与行之间的距离
</code></pre>
<p>语法：<br>    p {<br>        line-height: 26px;<br>    }<br>    行高的文本分为 上间距  文本高度 下间距 &#x3D; 行间距<br>##css样式表：<br>    按照 CSS 样式书写的位置（或者引入的方式），CSS 样式表可以分为三大类： </p>
<h3 id="行内样式表（行内式）"><a href="#行内样式表（行内式）" class="headerlink" title="行内样式表（行内式）"></a>行内样式表（行内式）</h3><pre><code>    行内样式表（内联样式表）是在元素标签内部的 style 属性中设定 CSS 样式。适合于修改简单样式.
    语法：
        &lt;div style=&quot;color: red; font-size: 12px;&quot;&gt;青春不常在，抓紧谈恋爱&lt;/div&gt;
    1.style 其实就是标签的属性
    在双引号中间，写法要符合 CSS 规范
    2.可以控制当前的标签设置样式
    3.由于书写繁琐，并且没有体现出结构与样式相分离的思想，所以不推荐大量使用，只有对当前元素添加简单样式的时候，可以考虑使用
    4.使用行内样式表设定 CSS，通常也被称为行内式引入
</code></pre>
<h3 id="内部样式表（嵌入式）"><a href="#内部样式表（嵌入式）" class="headerlink" title="内部样式表（嵌入式）"></a>内部样式表（嵌入式）</h3><pre><code>    内部样式表（内嵌样式表）是写到html页面内部. 是将所有的 CSS 代码抽取出来，单独放到一个 &lt;style&gt; 标签中
    语法：
        &lt;style&gt;
            div &#123;
            color: red;
            font-size: 12px;
            &#125;
        &lt;/style&gt;
    1.&lt;style&gt; 标签理论上可以放在 HTML 文档的任何地方，但一般会放在文档的&lt;head&gt;标签中
    2.通过此种方式，可以方便控制当前整个页面中的元素样式设置
    3.代码结构清晰，但是并没有实现结构与样式完全分离
    4.使用内部样式表设定 CSS，通常也被称为嵌入式引入，这种方式是我们练习时常用的方式
</code></pre>
<h3 id="外部样式表（链接式）"><a href="#外部样式表（链接式）" class="headerlink" title="外部样式表（链接式）"></a>外部样式表（链接式）</h3><pre><code>实际开发都是外部样式表. 适合于样式比较多的情况. 核心是:样式单独写到CSS 文件中，之后把CSS文件引入到 HTML 页面中使用.
引入外部样式表分为两步：
1. 新建一个后缀名为 .css 的样式文件，把所有 CSS 代码都放入此文件中。
2. 在 HTML 页面中，使用&lt;link&gt; 标签引入这个文件。
语法：
    &lt;link rel=&quot;stylesheet&quot;  href=&quot;css文件路径&quot;&gt;
</code></pre>
<img data-src="/2024/11/18/css%E5%9F%BA%E7%A1%80/css%E5%BC%95%E5%85%A5%E6%96%B9%E5%BC%8F%E6%80%BB%E7%BB%93.png" class="">

<p>##Chrome调试工具：</p>
<img data-src="/2024/11/18/css%E5%9F%BA%E7%A1%80/%E8%B0%B7%E6%AD%8C%E8%B0%83%E8%AF%95%E5%B7%A5%E5%85%B7.png" class="">

<p> 1.Ctrl+滚轮 可以放大开发者工具代码大小。<br> 2.左边是 HTML 元素结构，右边是 CSS 样式。<br> 3.右边 CSS 样式可以改动数值（左右箭头或者直接输入）和查看颜色。<br> 4.Ctrl + 0 复原浏览器大小。<br> 5.如果点击元素，发现右侧没有样式引入，极有可能是类名或者样式引入错误。<br> 6.如果有样式，但是样式前面有黄色叹号提示，则是样式属性书写错误。</p>
<h1 id="css第二天"><a href="#css第二天" class="headerlink" title="css第二天"></a>css第二天</h1><h2 id="一、emmet语法"><a href="#一、emmet语法" class="headerlink" title="一、emmet语法"></a>一、emmet语法</h2><h3 id="1、简介"><a href="#1、简介" class="headerlink" title="1、简介"></a>1、简介</h3><p>​		Emmet语法的前身是Zen coding,它使用缩写,来提高html&#x2F;css的编写速度, Vscode内部已经集成该语法。</p>
<p>​		快速生成HTML结构语法</p>
<p>​		快速生成CSS样式语法</p>
<h3 id="2、快速生成HTML结构语法"><a href="#2、快速生成HTML结构语法" class="headerlink" title="2、快速生成HTML结构语法"></a>2、快速生成HTML结构语法</h3><ul>
<li>生成标签 直接输入标签名 按tab键即可   比如  div   然后tab 键， 就可以生成 <div></div></li>
<li>如果想要生成多个相同标签  加上 * 就可以了 比如   div*3  就可以快速生成3个div</li>
<li>如果有父子级关系的标签，可以用 &gt;  比如   ul &gt; li就可以了</li>
<li>如果有兄弟关系的标签，用  +  就可以了 比如 div+p  </li>
<li>如果生成带有类名或者id名字的，  直接写  .demo  或者  #two   tab 键就可以了</li>
<li>如果生成的div 类名是有顺序的， 可以用 自增符号  $ </li>
<li>如果想要在生成的标签内部写内容可以用  { }  表示</li>
</ul>
<h3 id="3、快速生成CSS样式语法"><a href="#3、快速生成CSS样式语法" class="headerlink" title="3、快速生成CSS样式语法"></a>3、快速生成CSS样式语法</h3><p>CSS 基本采取简写形式即可</p>
<p>​		比如 w200   按tab  可以 生成  width: 200px;</p>
<p>​		比如 lh26px   按tab  可以生成  line-height: 26px;</p>
<h3 id="4、快速格式化代码"><a href="#4、快速格式化代码" class="headerlink" title="4、快速格式化代码"></a>4、快速格式化代码</h3><p>Vscode  快速格式化代码:   shift+alt+f</p>
<p>也可以设置 当我们 保存页面的时候自动格式化代码:</p>
<p>1）文件 ——.&gt;【首选项】———-&gt;【设置】；</p>
<p>2）搜索emmet.include;</p>
<p>3）在settings.json下的【工作区设置】中添加以下语句：</p>
<p>​		“editor.formatOnType”: true,</p>
<p>​		“editor.formatOnSave”: true</p>
<h2 id="二、css的复合选择器"><a href="#二、css的复合选择器" class="headerlink" title="二、css的复合选择器"></a>二、css的复合选择器</h2><h3 id="1、什么是复合选择器？"><a href="#1、什么是复合选择器？" class="headerlink" title="1、什么是复合选择器？"></a>1、什么是复合选择器？</h3><p>​		在 CSS 中，可以根据选择器的类型把选择器分为<em><strong>基础选择器</strong></em>和<em><strong>复合选择器</strong></em>，复合选择器是建立在基础选择器之上，对基本选择器进行组合形成的。<br>​		复合选择器是由两个或多个基础选择器，通过不同的方式组合而成的，可以更准确、更高效的选择目标元素（标签）<br>​		常用的复合选择器包括：<strong>后代选择器、子选择器、并集选择器、伪类选择器</strong>等等</p>
<h3 id="2、后代选择器-重要）"><a href="#2、后代选择器-重要）" class="headerlink" title="2、后代选择器 (重要）"></a>2、后代选择器 (重要）</h3><p><strong>定义：</strong></p>
<p>​		后代选择器又称为包含选择器，可以选择父元素里面子元素。其写法就是把外层标签写在前面，内层标签写在后面，中间用空格分隔。当标签发生嵌套时，内层标签就成为外层标签的后代。</p>
<p><strong>语法：</strong></p>
<img data-src="/2024/11/18/css%E5%9F%BA%E7%A1%80/01.png" class="" width="1570867555401">

<p>​		上述语法表示选择元素 1 里面的所有元素 2 (后代元素)。</p>
<p><strong>语法说明</strong>：</p>
<ul>
<li>元素1 和 元素2 中间用空格隔开</li>
<li>元素1 是父级，元素2 是子级，最终选择的是元素2</li>
<li>元素2 可以是儿子，也可以是孙子等，只要是元素1 的后代即可</li>
<li>元素1 和 元素2 可以是任意基础选择器</li>
</ul>
<p><strong>例子：</strong></p>
<img data-src="/2024/11/18/css%E5%9F%BA%E7%A1%80/02.png" class="" width="1570867652832">

<h3 id="3、子选择器-重要）"><a href="#3、子选择器-重要）" class="headerlink" title="3、子选择器 (重要）"></a>3、子选择器 (重要）</h3><p><strong>定义：</strong></p>
<p>​		子元素选择器（子选择器）只能选择作为某元素的最近一级子元素。</p>
<p>​		（简单理解就是选亲儿子元素）</p>
<p><strong>语法：</strong></p>
<style>.jkgoxdgxjhto{}</style><img data-src="/2024/11/18/css%E5%9F%BA%E7%A1%80/03.png" class="jkgoxdgxjhto">

<p>​		上述语法表示选择元素1 里面的所有直接后代(子元素) 元素2。</p>
<p><strong>语法说明</strong>：</p>
<ul>
<li>元素1 和 元素2 中间用 大于号 隔开</li>
<li>元素1 是父级，元素2 是子级，最终选择的是元素2</li>
<li>元素2 必须是亲儿子，其孙子、重孙之类都不归他管. 你也可以叫他 亲儿子选择器</li>
</ul>
<p><strong>例子：</strong></p>
<img data-src="/2024/11/18/css%E5%9F%BA%E7%A1%80/04.png" class="" width="1570867652832">

<h3 id="4、并集选择器-重要）"><a href="#4、并集选择器-重要）" class="headerlink" title="4、并集选择器 (重要）"></a>4、并集选择器 (重要）</h3><p><strong>定义：</strong></p>
<p>​		并集选择器可以选择多组标签, 同时为他们定义相同的样式，通常用于集体声明。并集选择器是各选择器通过英文逗号（,）连接而成，任何形式的选择器都可以作为并集选择器的一部分。</p>
<p><strong>语法：</strong></p>
<style>.ooidfigrjbnn{}</style><img data-src="/2024/11/18/css%E5%9F%BA%E7%A1%80/05.png" class="ooidfigrjbnn">

<p>​		上述语法表示选择元素1 和 元素2。</p>
<p><strong>语法说明</strong>：</p>
<ul>
<li>元素1 和 元素2 中间用逗号隔开</li>
<li>逗号可以理解为和的意思</li>
<li>并集选择器通常用于集体声明</li>
</ul>
<p><strong>例子：</strong></p>
<img data-src="/2024/11/18/css%E5%9F%BA%E7%A1%80/06.png" class="" width="1570867652832">

<h3 id="5、伪类选择器"><a href="#5、伪类选择器" class="headerlink" title="5、伪类选择器"></a>5、伪类选择器</h3><p><strong>定义：</strong></p>
<p>​		伪类选择器用于向某些选择器添加特殊的效果，比如给链接添加特殊效果，或选择第1个，第n个元素。</p>
<p><strong>语法：</strong></p>
<p>​		伪类选择器书写最大的特点是用冒号（:）表示，比如 :hover 、 :first-child 。</p>
<h3 id="6、链接伪类选择器"><a href="#6、链接伪类选择器" class="headerlink" title="6、链接伪类选择器"></a>6、链接伪类选择器</h3><p><strong>定义：</strong></p>
<p>​		伪类选择器用于向某些选择器添加特殊的效果，比如给链接添加特殊效果，或选择第1个，第n个元素。</p>
<p><strong>语法：</strong></p>
<p>​		伪类选择器书写最大的特点是用冒号（:）表示，比如 :hover 、 :first-child 。</p>
<p>​		a:link	没有点击过的(访问过的)链接<br>​		a:visited	点击过的(访问过的)链接<br>​		a:hover	鼠标经过的那个链接<br>​		a:active	鼠标正在按下还没有弹起鼠标的那个链接</p>
<p><strong>链接伪类选择器注意事项</strong></p>
<p>​		为了确保生效，请按照 LVHA 的循顺序声明 :link－:visited－:hover－:active。</p>
<p>​		记忆法：love hate 或者 lv 包包 hao 。</p>
<p>​		因为 a 链接在浏览器中具有默认样式，所以我们实际工作中都需要给链接单独指定样式。</p>
<p><strong>链接伪类选择器实际工作开发中的写法</strong>：</p>
<img data-src="/2024/11/18/css%E5%9F%BA%E7%A1%80/1570868845786.png" class="" width="1570868845786">



<h3 id="7、-focus-伪类选择器"><a href="#7、-focus-伪类选择器" class="headerlink" title="7、:focus 伪类选择器"></a>7、:focus 伪类选择器</h3><p><strong>定义：</strong></p>
<p>​		:focus 伪类选择器用于选取获得焦点的表单元素。</p>
<p>​		焦点就是光标，一般情况 <input> 类表单元素才能获取</p>
<p>例子：</p>
<img data-src="/2024/11/18/css%E5%9F%BA%E7%A1%80/1570868891669.png" class="" width="1570868891669">



<h3 id="复合选择器总结"><a href="#复合选择器总结" class="headerlink" title="复合选择器总结"></a>复合选择器总结</h3><img data-src="/2024/11/18/css%E5%9F%BA%E7%A1%80/1570868930472.png" class="" width="1570868930472">

<h2 id="三、css的显示模式"><a href="#三、css的显示模式" class="headerlink" title="三、css的显示模式"></a>三、css的显示模式</h2><h3 id="1、什么是元素的显示模式"><a href="#1、什么是元素的显示模式" class="headerlink" title="1、什么是元素的显示模式"></a>1、什么是元素的显示模式</h3><p><strong>定义：</strong></p>
<p>​		元素显示模式就是元素（标签）以什么方式进行显示，比如<div>自己占一行，比如一行可以放多个<span>。</p>
<p><strong>作用：</strong></p>
<p>​		网页的标签非常多，在不同地方会用到不同类型的标签，了解他们的特点可以更好的布局我们的网页。</p>
<h3 id="2、元素显示模式的分类"><a href="#2、元素显示模式的分类" class="headerlink" title="2、元素显示模式的分类"></a>2、元素显示模式的分类</h3><h4 id="2-1、块元素"><a href="#2-1、块元素" class="headerlink" title="2.1、块元素"></a>2.1、块元素</h4><p><strong>常见的块元素</strong>：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;h1&gt;~&lt;h6&gt;、&lt;p&gt;、&lt;div&gt;、&lt;ul&gt;、&lt;ol&gt;、&lt;li&gt;</span><br></pre></td></tr></table></figure>

<p>​		<div> 标签是最典型的块元素。</p>
<p><strong>块级元素的特点</strong>：</p>
<ul>
<li>比较霸道，自己独占一行。</li>
<li>高度，宽度、外边距以及内边距都可以控制。</li>
<li>宽度默认是容器（父级宽度）的100%。</li>
<li>是一个容器及盒子，里面可以放行内或者块级元素。</li>
</ul>
<p><strong>注意：</strong></p>
<p>​		文字类的元素内不能放块级元素</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;p&gt; 标签主要用于存放文字，因此 &lt;p&gt; 里面不能放块级元素，特别是不能放&lt;div&gt; </span><br><span class="line">同理， &lt;h1&gt;~&lt;h6&gt;等都是文字类块级标签，里面也不能放其他块级元素</span><br></pre></td></tr></table></figure>



<h4 id="2-2、行内元素"><a href="#2-2、行内元素" class="headerlink" title="2.2、行内元素"></a>2.2、行内元素</h4><p><strong>常见的行内元素：</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;a&gt;、&lt;strong&gt;、&lt;b&gt;、&lt;em&gt;、&lt;i&gt;、&lt;del&gt;、&lt;s&gt;、&lt;ins&gt;、&lt;u&gt;、&lt;span&gt;</span><br></pre></td></tr></table></figure>

<p>​		<span> 标签是最典型的行内元素。有的地方也将行内元素称为内联元素。</p>
<p><strong>行内元素的特点：</strong></p>
<ul>
<li><p>相邻行内元素在一行上，一行可以显示多个。</p>
</li>
<li><p>高、宽直接设置是无效的。</p>
</li>
<li><p>默认宽度就是它本身内容的宽度。</p>
</li>
<li><p>行内元素只能容纳文本或其他行内元素。</p>
</li>
</ul>
<p><strong>注意：</strong><br>        链接里面不能再放链接<br>        特殊情况链接 <a> 里面可以放块级元素，但是给 <a> 转换一下块级模式最安全</p>
<h4 id="2-3、行内块元素"><a href="#2-3、行内块元素" class="headerlink" title="2.3、行内块元素"></a>2.3、行内块元素</h4><p><strong>常见的行内块标签</strong>：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;img /&gt;、&lt;input /&gt;、&lt;td&gt;</span><br></pre></td></tr></table></figure>

<p>​		它们同时具有块元素和行内元素的特点。有些资料称它们为行内块元素。</p>
<p><strong>行内块元素的特点</strong>：</p>
<ul>
<li>和相邻行内元素（行内块）在一行上，但是他们之间会有空白缝隙。</li>
<li>一行可以显示多个（行内元素特点）。</li>
<li>默认宽度就是它本身内容的宽度（行内元素特点）。</li>
<li>高度，行高、外边距以及内边距都可以控制（块级元素特点）。</li>
</ul>
<h4 id="2-4、元素显示模式总结"><a href="#2-4、元素显示模式总结" class="headerlink" title="2.4、元素显示模式总结"></a>2.4、元素显示模式总结</h4><img data-src="/2024/11/18/css%E5%9F%BA%E7%A1%80/1570870718415.png" class="" width="1570870718415">

<p>​		学习元素显示模式的主要目的就是分清它们各自的特点，当我们网页布局的时候，在合适的地方用合适的标签元素。</p>
<h3 id="3、元素显示模式的转换"><a href="#3、元素显示模式的转换" class="headerlink" title="3、元素显示模式的转换"></a>3、元素显示模式的转换</h3><p><strong>简单理解</strong>: </p>
<p>​		一个模式的元素需要另外一种模式的特性<br>​		比如想要增加链接 <a> 的触发范围。   </p>
<p><strong>转换方式</strong></p>
<ul>
<li>转换为块元素：display:block;</li>
<li>转换为行内元素：display:inline;</li>
<li>转换为行内块：display: inline-block;</li>
</ul>
<h3 id="4、单行文字垂直居中的代码"><a href="#4、单行文字垂直居中的代码" class="headerlink" title="4、单行文字垂直居中的代码"></a>4、单行文字垂直居中的代码</h3><p><strong>解决方案</strong>:    </p>
<p>​		让文字的行高等于盒子的高度  就可以让文字在当前盒子内垂直居中</p>
<img data-src="/2024/11/18/css%E5%9F%BA%E7%A1%80/1570870368253.png" class="" width="1570870368253">

<img data-src="/2024/11/18/css%E5%9F%BA%E7%A1%80/1570870387089.png" class="" width="1570870387089">



<p><strong>简单理解</strong>: </p>
<p>​		行高的上空隙和下空隙把文字挤到中间了，</p>
<p>​		如果行高小于盒子高度,文字会偏上，</p>
<p>​		如果行高大于盒子高度,则文字偏下。</p>
<h2 id="四、css的背景"><a href="#四、css的背景" class="headerlink" title="四、css的背景"></a>四、css的背景</h2><p>通过 CSS 背景属性，可以给页面元素添加背景样式。<br>背景属性可以设置背景颜色、背景图片、背景平铺、背景图片位置、背景图像固定等。</p>
<h3 id="1、背景颜色"><a href="#1、背景颜色" class="headerlink" title="1、背景颜色"></a>1、背景颜色</h3><p><strong>样式名称</strong>：</p>
<p>​		background-color 定义元素的背景颜色</p>
<p><strong>使用方式</strong>：</p>
<img data-src="/2024/11/18/css%E5%9F%BA%E7%A1%80/1570886137899.png" class="" width="1570886137899">

<p><strong>其他说明</strong>：</p>
<p>​		元素背景颜色默认值是 transparent（透明）</p>
<img data-src="/2024/11/18/css%E5%9F%BA%E7%A1%80/1570886176292.png" class="" width="1570886176292">

<h3 id="2、背景图片"><a href="#2、背景图片" class="headerlink" title="2、背景图片"></a>2、背景图片</h3><p><strong>样式名称</strong>：</p>
<p>​		background-image  定义元素的背景图片</p>
<p><strong>使用方式</strong>：</p>
<img data-src="/2024/11/18/css%E5%9F%BA%E7%A1%80/1570886322557.png" class="" width="1570886322557">

<img data-src="/2024/11/18/css%E5%9F%BA%E7%A1%80/1570886362813.png" class="" width="1570886362813">

<p><strong>其他说明</strong>：</p>
<p>​		实际开发常见于 logo 或者一些装饰性的小图片或者是超大的背景图片, 优点是非常便于控制位置. (精灵图也是一种运用场景)</p>
<p>​		注意：背景图片后面的地址，千万不要忘记加 URL， 同时里面的路径<strong>不要加引号</strong>。</p>
<h3 id="3、背景平铺"><a href="#3、背景平铺" class="headerlink" title="3、背景平铺"></a>3、背景平铺</h3><p><strong>样式名称：</strong></p>
<p>​		background-repeat 设置元素背景图像的平铺 </p>
<p><strong>使用方式：</strong></p>
<img data-src="/2024/11/18/css%E5%9F%BA%E7%A1%80/1570886648887.png" class="" width="1570886648887">

<img data-src="/2024/11/18/css%E5%9F%BA%E7%A1%80/1570886688306.png" class="" width="1570886688306">

<h3 id="4、背景图片位置"><a href="#4、背景图片位置" class="headerlink" title="4、背景图片位置"></a>4、背景图片位置</h3><p><strong>样式名称：</strong></p>
<p>​		background-position 属性可以改变图片在背景中的位置</p>
<p><strong>使用方式：</strong></p>
<p>​		<img data-src="/2024/11/18/css%E5%9F%BA%E7%A1%80/1570886973530.png" class="" width="1570886973530"></p>
<p>​		参数代表的意思是：x 坐标和 y 坐标。 可以使用 方位名词 或者 精确单位</p>
<img data-src="/2024/11/18/css%E5%9F%BA%E7%A1%80/1570887034135.png" class="" width="1570887034135">

<p><strong>其他说明：</strong></p>
<p>1、参数是方位名词</p>
<p>​		如果指定的两个值都是方位名词，则两个值前后顺序无关，比如 left  top 和 top  left 效果一致</p>
<p>​		如果只指定了一个方位名词，另一个值省略，则第二个值默认居中对齐</p>
<p>2、参数是精确单位</p>
<p>​		如果参数值是精确坐标，那么第一个肯定是 x 坐标，第二个一定是 y 坐标</p>
<p>​		如果只指定一个数值，那该数值一定是 x 坐标，另一个默认垂直居中</p>
<p>3、参数是混合单位</p>
<p>​		如果指定的两个值是精确单位和方位名词混合使用，则第一个值是 x 坐标，第二个值是 y 坐标</p>
<h3 id="5、背景图片固定"><a href="#5、背景图片固定" class="headerlink" title="5、背景图片固定"></a>5、背景图片固定</h3><p><strong>样式名称：</strong></p>
<p>​		background-attachment 属性设置背景图像是否固定或者随着页面的其余部分滚动。</p>
<p><strong>使用方式：</strong></p>
<p>​		<img data-src="/2024/11/18/css%E5%9F%BA%E7%A1%80/1570887652404.png" class="" width="1570887652404"></p>
<img data-src="/2024/11/18/css%E5%9F%BA%E7%A1%80/1570887699177.png" class="" width="1570887699177">

<p><strong>其他说明：</strong></p>
<p>​		background-attachment 后期可以制作视差滚动的效果。</p>
<h3 id="6、背景样式合写"><a href="#6、背景样式合写" class="headerlink" title="6、背景样式合写"></a>6、背景样式合写</h3><p><strong>背景合写样式：</strong></p>
<p>​		background: 背景颜色 背景图片地址 背景平铺 背景图像滚动 背景图片位置;</p>
<p><strong>使用方式：</strong></p>
<img data-src="/2024/11/18/css%E5%9F%BA%E7%A1%80/1570887809455.png" class="" width="1570887809455">

<h3 id="7、背景色半透明"><a href="#7、背景色半透明" class="headerlink" title="7、背景色半透明"></a>7、背景色半透明</h3><p>CSS3 提供了背景颜色半透明的效果。 </p>
<p><strong>使用方式：</strong></p>
<img data-src="/2024/11/18/css%E5%9F%BA%E7%A1%80/1570887978061.png" class="" width="1570887978061">

<ul>
<li>最后一个参数是 alpha 透明度，取值范围在 0~1之间</li>
<li>我们习惯把 0.3 的 0 省略掉，写为 background: rgba(0, 0, 0, .3);</li>
</ul>
<p><strong>注意</strong>：</p>
<ul>
<li>背景半透明是指盒子背景半透明，盒子里面的内容不受影响</li>
<li>CSS3 新增属性，是 IE9+ 版本浏览器才支持的，但是现在实际开发,我们不太关注兼容性写法了,可以放心使用</li>
</ul>
<h3 id="8、背景总结"><a href="#8、背景总结" class="headerlink" title="8、背景总结"></a>8、背景总结</h3><img data-src="/2024/11/18/css%E5%9F%BA%E7%A1%80/1570888283511.png" class="" width="1570888283511">

<h1 id="css第03天"><a href="#css第03天" class="headerlink" title="css第03天"></a>css第03天</h1><h2 id="一、css三大特性"><a href="#一、css三大特性" class="headerlink" title="一、css三大特性"></a>一、css三大特性</h2><h3 id="1、层叠性"><a href="#1、层叠性" class="headerlink" title="1、层叠性"></a>1、层叠性</h3><p>​		相同选择器给设置相同的样式，此时一个样式就会覆盖（层叠）另一个冲突的样式。层叠性主要解决样式冲突的问题</p>
<p>​		层叠性原则:</p>
<ul>
<li>样式冲突，遵循的原则是就近原则，哪个样式离结构近，就执行哪个样式</li>
<li>样式不冲突，不会层叠</li>
</ul>
<p><img data-src="/css%E5%9F%BA%E7%A1%80%5C1571490015544.png" alt="1571490015544"></p>
<h3 id="2、继承性"><a href="#2、继承性" class="headerlink" title="2、继承性"></a>2、继承性</h3><p>​		CSS中的继承: 子标签会继承父标签的某些样式，如文本颜色和字号。恰当地使用继承可以简化代码，降低 CSS 样式的复杂性。</p>
<p><img data-src="/css%E5%9F%BA%E7%A1%80%5C1571490049279.png" alt="1571490049279"></p>
<p>子元素可以继承父元素的样式：</p>
<p>​	（text-，font-，line-这些元素开头的可以继承，以及color属性）</p>
<p>继承性口诀：龙生龙，凤生凤，老鼠生的孩子会打洞</p>
<p>行高的继承性：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">  <span class="attribute">font</span>:<span class="number">12px</span>/<span class="number">1.5</span> Microsoft YaHei；</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>行高可以跟单位也可以不跟单位</li>
<li>如果子元素没有设置行高，则会继承父元素的行高为 1.5</li>
<li>此时子元素的行高是：当前子元素的文字大小 * 1.5</li>
<li>body 行高 1.5  这样写法最大的优势就是里面子元素可以根据自己文字大小自动调整行高</li>
</ul>
<h3 id="3、优先级"><a href="#3、优先级" class="headerlink" title="3、优先级"></a>3、优先级</h3><p>当同一个元素指定多个选择器，就会有优先级的产生。</p>
<ul>
<li>选择器相同，则执行层叠性</li>
<li>选择器不同，则根据选择器权重执行</li>
</ul>
<p>选择器优先级计算表格：</p>
<p><img data-src="/css%E5%9F%BA%E7%A1%80%5C1571490129794.png" alt="1571490129794"></p>
<p>优先级注意点:</p>
<ol>
<li><p>权重是有4组数字组成,但是不会有进位。</p>
</li>
<li><p>可以理解为类选择器永远大于元素选择器, id选择器永远大于类选择器,以此类推..</p>
</li>
<li><p>等级判断从左向右，如果某一位数值相同，则判断下一位数值。</p>
</li>
<li><p>可以简单记忆法:  通配符和继承权重为0, 标签选择器为1,类(伪类)选择器为 10, id选择器 100, 行内样式表为 1000, !important 无穷大.</p>
</li>
<li><p>继承的权重是0， 如果该元素没有直接选中，不管父元素权重多高，子元素得到的权重都是 0。</p>
</li>
</ol>
<p>权重叠加：如果是复合选择器，则会有权重叠加，需要计算权重。</p>
<ul>
<li>div ul  li   ——&gt;      0,0,0,3</li>
<li>.nav ul li   ——&gt;      0,0,1,2</li>
<li>a:hover      —–—&gt;   0,0,1,1</li>
<li>.nav a       ——&gt;      0,0,1,1</li>
</ul>
<h2 id="二、盒子模型"><a href="#二、盒子模型" class="headerlink" title="二、盒子模型"></a>二、盒子模型</h2><h3 id="1、网页布局的本质"><a href="#1、网页布局的本质" class="headerlink" title="1、网页布局的本质"></a>1、网页布局的本质</h3><p>网页布局的核心本质： 就是利用 CSS 摆盒子。</p>
<p><img data-src="/css%E5%9F%BA%E7%A1%80%5C1571492334739.png" alt="1571492334739"></p>
<p>网页布局过程：</p>
<ol>
<li>先准备好相关的网页元素，网页元素基本都是盒子 Box 。</li>
<li>利用 CSS 设置好盒子样式，然后摆放到相应位置。</li>
<li>往盒子里面装内容</li>
</ol>
<h3 id="2、盒子模型（Box-Model）组成"><a href="#2、盒子模型（Box-Model）组成" class="headerlink" title="2、盒子模型（Box Model）组成"></a>2、盒子模型（Box Model）组成</h3><p>​		盒子模型：把 HTML 页面中的布局元素看作是一个矩形的盒子，也就是一个盛装内容的容器。</p>
<p>​		CSS 盒子模型本质上是一个盒子，封装周围的 HTML 元素，它包括：<strong>边框</strong>、<strong>外边距</strong>、<strong>内边距</strong>、和 <strong>实际内容</strong></p>
<p><img data-src="/css%E5%9F%BA%E7%A1%80%5C1571492536942.png" alt="1571492536942"></p>
<h3 id="3、边框（border）"><a href="#3、边框（border）" class="headerlink" title="3、边框（border）"></a>3、边框（border）</h3><h4 id="3-1、边框的使用"><a href="#3-1、边框的使用" class="headerlink" title="3.1、边框的使用"></a>3.1、边框的使用</h4><p>1、border可以设置元素的边框。边框有三部分组成：边框宽度(粗细) 边框样式  边框颜色；</p>
<p>2、语法：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">border</span> : border-width || border-style || border-color;   </span><br></pre></td></tr></table></figure>

<p><img data-src="/css%E5%9F%BA%E7%A1%80%5C1571492659260.png" alt="1571492659260"></p>
<p>边框样式 border-style 可以设置如下值：</p>
<ul>
<li>none：没有边框即忽略所有边框的宽度（默认值）</li>
<li>solid：边框为单实线(最为常用的)</li>
<li>dashed：边框为虚线  </li>
<li>dotted：边框为点线</li>
</ul>
<p>3、边框的合写分写</p>
<p>边框简写：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">border</span>: <span class="number">1px</span> solid red;  </span><br></pre></td></tr></table></figure>

<p>边框分开写法：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">border-top</span>: <span class="number">1px</span> solid red;  <span class="comment">/* 只设定上边框， 其余同理 */</span>   </span><br></pre></td></tr></table></figure>

<h4 id="3-2、表格的细线边框"><a href="#3-2、表格的细线边框" class="headerlink" title="3.2、表格的细线边框"></a>3.2、表格的细线边框</h4><p>1、border-collapse 属性控制浏览器绘制表格边框的方式。它控制相邻单元格的边框。</p>
<p>2、语法：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">border-collapse</span>:collapse; </span><br></pre></td></tr></table></figure>

<p>collapse 单词是合并的意思</p>
<p>border-collapse: collapse; 表示相邻边框合并在一起</p>
<h4 id="3-3、边框会影响盒子实际大小"><a href="#3-3、边框会影响盒子实际大小" class="headerlink" title="3.3、边框会影响盒子实际大小"></a>3.3、边框会影响盒子实际大小</h4><p>边框会额外增加盒子的实际大小。因此我们有两种方案解决：</p>
<ul>
<li>测量盒子大小的时候,不量边框。</li>
<li>如果测量的时候包含了边框,则需要 width&#x2F;height 减去边框宽度</li>
</ul>
<h3 id="4、内边距（padding）"><a href="#4、内边距（padding）" class="headerlink" title="4、内边距（padding）"></a>4、内边距（padding）</h3><h4 id="4-1、内边距的使用方式"><a href="#4-1、内边距的使用方式" class="headerlink" title="4.1、内边距的使用方式"></a>4.1、内边距的使用方式</h4><p>1、padding 属性用于设置内边距，即边框与内容之间的距离。</p>
<p>2、语法：</p>
<p>合写属性：</p>
<p><img data-src="/css%E5%9F%BA%E7%A1%80%5C1571493298248.png" alt="1571493298248"></p>
<p>分写属性：</p>
<p><img data-src="/css%E5%9F%BA%E7%A1%80%5C1571493260536.png" alt="1571493260536"></p>
<h4 id="4-2、内边距会影响盒子实际大小"><a href="#4-2、内边距会影响盒子实际大小" class="headerlink" title="4.2、内边距会影响盒子实际大小"></a>4.2、内边距会影响盒子实际大小</h4><p>1、当我们给盒子指定 padding 值之后，发生了 2 件事情：</p>
<ol>
<li>内容和边框有了距离，添加了内边距。</li>
<li>padding影响了盒子实际大小。</li>
</ol>
<p>2、内边距对盒子大小的影响：</p>
<ul>
<li>如果盒子已经有了宽度和高度，此时再指定内边框，会撑大盒子。</li>
<li>如何盒子本身没有指定width&#x2F;height属性, 则此时padding不会撑开盒子大小。</li>
</ul>
<p>3、解决方案：</p>
<p>​		如果保证盒子跟效果图大小保持一致，则让 width&#x2F;height 减去多出来的内边距大小即可。</p>
<h3 id="5、外边距（margin）"><a href="#5、外边距（margin）" class="headerlink" title="5、外边距（margin）"></a>5、外边距（margin）</h3><h4 id="5-1、外边距的使用方式"><a href="#5-1、外边距的使用方式" class="headerlink" title="5.1、外边距的使用方式"></a>5.1、外边距的使用方式</h4><p>margin 属性用于设置外边距，即控制盒子和盒子之间的距离。</p>
<p><img data-src="/css%E5%9F%BA%E7%A1%80%5C1571493741272.png" alt="1571493741272"></p>
<h4 id="5-2、外边距典型应用"><a href="#5-2、外边距典型应用" class="headerlink" title="5.2、外边距典型应用"></a>5.2、外边距典型应用</h4><p>外边距可以让块级盒子水平居中的两个条件：</p>
<ul>
<li>盒子必须指定了宽度（width）。</li>
<li>盒子左右的外边距都设置为 auto 。</li>
</ul>
<p>常见的写法，以下三种都可以：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">margin-left</span>: auto;   <span class="attribute">margin-right</span>: auto;</span><br><span class="line"><span class="attribute">margin</span>: auto;</span><br><span class="line"><span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br></pre></td></tr></table></figure>

<p>注意：以上方法是让块级元素水平居中，行内元素或者行内块元素水平居中给其父元素添加 text-align:center 即可。</p>
<h4 id="5-3、外边距合并"><a href="#5-3、外边距合并" class="headerlink" title="5.3、外边距合并"></a>5.3、外边距合并</h4><p>使用 margin 定义块元素的垂直外边距时，可能会出现外边距的合并。</p>
<p>主要有两种情况:</p>
<p>1、相邻块元素垂直外边距的合并</p>
<p>​		当上下相邻的两个块元素（兄弟关系）相遇时，如果上面的元素有下外边距 margin-bottom，下面的元素有上外边距 margin-top ，则他们之间的垂直间距不是 margin-bottom 与 margin-top 之和。取两个值中的较大者这种现象被称为相邻块元素垂直外边距的合并。</p>
<p><img data-src="/css%E5%9F%BA%E7%A1%80%5C1571494239103.png" alt="1571494239103"></p>
<p>解决方案：<br>        尽量只给一个盒子添加 margin 值。</p>
<p>2、嵌套块元素垂直外边距的塌陷</p>
<p>​		对于两个嵌套关系（父子关系）的块元素，父元素有上外边距同时子元素也有上外边距，此时父元素会塌陷较大的外边距值。</p>
<p><img data-src="/css%E5%9F%BA%E7%A1%80%5C1571494373778.png" alt="1571494373778"></p>
<p>解决方案：</p>
<ul>
<li>可以为父元素定义上边框。</li>
<li>可以为父元素定义上内边距。</li>
<li>可以为父元素添加 overflow:hidden。</li>
</ul>
<h4 id="5-4、清除内外边距"><a href="#5-4、清除内外边距" class="headerlink" title="5.4、清除内外边距"></a>5.4、清除内外边距</h4><p>​		网页元素很多都带有默认的内外边距，而且不同浏览器默认的也不一致。因此我们在布局前，首先要清除下网页元素的内外边距。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">* &#123;</span><br><span class="line">   <span class="attribute">padding</span>:<span class="number">0</span>;   <span class="comment">/* 清除内边距 */</span></span><br><span class="line">   <span class="attribute">margin</span>:<span class="number">0</span>;    <span class="comment">/* 清除外边距 */</span></span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>

<p>​		注意：行内元素为了照顾兼容性，尽量只设置左右内外边距，不要设置上下内外边距。但是转换为块级和行内块元素就可以了</p>
<h2 id="三、PS-基本操作"><a href="#三、PS-基本操作" class="headerlink" title="三、PS 基本操作"></a>三、PS 基本操作</h2><p>​		因为网页美工大部分效果图都是利用 PS（Photoshop）来做的，所以以后我们大部分切图工作都是在 PS 里面完成。</p>
<p>​		部分操作：</p>
<ul>
<li>文件→打开 ：可以打开我们要测量的图片</li>
<li>Ctrl+R：可以打开标尺，或者 视图→标尺</li>
<li>右击标尺，把里面的单位改为像素</li>
<li>Ctrl+ 加号(+)可以放大视图， Ctrl+ 减号(-)可以缩小视图</li>
<li>按住空格键，鼠标可以变成小手，拖动 PS 视图</li>
<li>用选区拖动  可以测量大小</li>
<li>Ctrl+ D 可以取消选区，或者在旁边空白处点击一下也可以取消选区</li>
</ul>
<p><img data-src="/css%E5%9F%BA%E7%A1%80%5C1571494543539.png" alt="1571494543539"></p>
<h1 id="css第03天-1"><a href="#css第03天-1" class="headerlink" title="css第03天"></a>css第03天</h1><h2 id="一、其他样式"><a href="#一、其他样式" class="headerlink" title="一、其他样式"></a>一、其他样式</h2><h3 id="1、圆角边框"><a href="#1、圆角边框" class="headerlink" title="1、圆角边框"></a>1、圆角边框</h3><p>在 CSS3 中，新增了圆角边框样式，这样我们的盒子就可以变圆角了。</p>
<p>border-radius 属性用于设置元素的外边框圆角。</p>
<p>语法：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">border-radius</span>:length;    </span><br></pre></td></tr></table></figure>

<ul>
<li>参数值可以为数值或百分比的形式</li>
<li>如果是正方形，想要设置为一个圆，把数值修改为高度或者宽度的一半即可，或者直接写为 50%</li>
<li>该属性是一个简写属性，可以跟四个值，分别代表左上角、右上角、右下角、左下角</li>
<li>分开写：border-top-left-radius、border-top-right-radius、border-bottom-right-radius 和border-bottom-left-radius</li>
<li>兼容性 ie9+ 浏览器支持, 但是不会影响页面布局,可以放心使用</li>
</ul>
<h3 id="2、盒子阴影"><a href="#2、盒子阴影" class="headerlink" title="2、盒子阴影"></a>2、盒子阴影</h3><p>CSS3 中新增了盒子阴影，我们可以使用 box-shadow 属性为盒子添加阴影。<br>语法：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">box-shadow</span>: h-shadow v-shadow blur spread color inset; </span><br></pre></td></tr></table></figure>

<p><img data-src="/css%E5%9F%BA%E7%A1%80%5C1571541874805.png" alt="1571541874805"></p>
<h3 id="3、文字阴影"><a href="#3、文字阴影" class="headerlink" title="3、文字阴影"></a>3、文字阴影</h3><p>在 CSS3 中，我们可以使用 text-shadow 属性将阴影应用于文本。<br>语法：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">text-shadow</span>: h-shadow v-shadow blur color;</span><br></pre></td></tr></table></figure>

<p><img data-src="/css%E5%9F%BA%E7%A1%80%5C1571541954222.png" alt="1571541954222"></p>
<h2 id="二、浮动"><a href="#二、浮动" class="headerlink" title="二、浮动"></a>二、浮动</h2><h3 id="1、传统网页布局的三种方式"><a href="#1、传统网页布局的三种方式" class="headerlink" title="1、传统网页布局的三种方式"></a>1、传统网页布局的三种方式</h3><p>​	CSS 提供了三种传统布局方式(简单说,就是盒子如何进行排列顺序)：</p>
<ul>
<li><p>普通流（标准流）</p>
</li>
<li><p>浮动</p>
</li>
<li><p>定位</p>
<p>这三种布局方式都是用来摆放盒子的，盒子摆放到合适位置，布局自然就完成了。</p>
</li>
</ul>
<p>注意：实际开发中，一个页面基本都包含了这三种布局方式（后面移动端学习新的布局方式） 。</p>
<h3 id="2、标准流（普通流-文档流）"><a href="#2、标准流（普通流-文档流）" class="headerlink" title="2、标准流（普通流&#x2F;文档流）"></a>2、标准流（普通流&#x2F;文档流）</h3><p>所谓的标准流:  就是标签按照规定好默认方式排列</p>
<ol>
<li>块级元素会独占一行，从上向下顺序排列。常用元素：div、hr、p、h1~h6、ul、ol、dl、form、table</li>
<li>行内元素会按照顺序，从左到右顺序排列，碰到父元素边缘则自动换行。常用元素：span、a、i、em 等</li>
</ol>
<p>以上都是标准流布局，我们前面学习的就是标准流，标准流是最基本的布局方式。</p>
<h3 id="3、为什么需要浮动？"><a href="#3、为什么需要浮动？" class="headerlink" title="3、为什么需要浮动？"></a>3、为什么需要浮动？</h3><p>​		总结： 有很多的布局效果，标准流没有办法完成，此时就可以利用浮动完成布局。 因为浮动可以改变元素标签默认的排列方式.</p>
<p>​		浮动最典型的应用：可以让多个块级元素一行内排列显示。</p>
<p>​		网页布局第一准则：<strong>多个块级元素纵向排列找标准流，多个块级元素横向排列找浮动</strong>。</p>
<h3 id="4、什么是浮动？"><a href="#4、什么是浮动？" class="headerlink" title="4、什么是浮动？"></a>4、什么是浮动？</h3><p>​		float 属性用于创建浮动框，将其移动到一边，直到左边缘或右边缘触及包含块或另一个浮动框的边缘。</p>
<p>语法：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">选择器 &#123; <span class="attribute">float</span>: 属性值; &#125;</span><br></pre></td></tr></table></figure>

<p><img data-src="/css%E5%9F%BA%E7%A1%80%5C1571543209934.png" alt="1571543209934"></p>
<h3 id="5、浮动特性"><a href="#5、浮动特性" class="headerlink" title="5、浮动特性"></a>5、浮动特性</h3><p>加了浮动之后的元素,会具有很多特性,需要我们掌握的.</p>
<p>1、浮动元素会脱离标准流(脱标：浮动的盒子不再保留原先的位置)</p>
<p><img data-src="/css%E5%9F%BA%E7%A1%80%5C1571544664994.png" alt="1571544664994"></p>
<p>2、浮动的元素会一行内显示并且元素顶部对齐</p>
<p><img data-src="/css%E5%9F%BA%E7%A1%80%5C1571544725757.png" alt="1571544725757"></p>
<p>注意： </p>
<p>​		浮动的元素是互相贴靠在一起的（不会有缝隙），如果父级宽度装不下这些浮动的盒子，多出的盒子会另起一行对齐。</p>
<p>3、浮动的元素会具有行内块元素的特性</p>
<p>​		浮动元素的大小根据内容来决定</p>
<p>​		浮动的盒子中间是没有缝隙的</p>
<h3 id="6、浮动元素经常和标准流父级搭配使用"><a href="#6、浮动元素经常和标准流父级搭配使用" class="headerlink" title="6、浮动元素经常和标准流父级搭配使用"></a>6、浮动元素经常和标准流父级搭配使用</h3><p>为了约束浮动元素位置, 我们网页布局一般采取的策略是:</p>
<p>​		先用标准流父元素排列上下位置, 之后内部子元素采取浮动排列左右位置.  符合网页布局第一准侧</p>
<p><img data-src="/css%E5%9F%BA%E7%A1%80%5C1571544991989.png" alt="1571544991989"></p>
<h2 id="三、常见网页布局"><a href="#三、常见网页布局" class="headerlink" title="三、常见网页布局"></a>三、常见网页布局</h2><h3 id="浮动布局注意点"><a href="#浮动布局注意点" class="headerlink" title="浮动布局注意点"></a>浮动布局注意点</h3><p>1、浮动和标准流的父盒子搭配。</p>
<p>先用标准流的父元素排列上下位置, 之后内部子元素采取浮动排列左右位置</p>
<p>2、一个元素浮动了，理论上其余的兄弟元素也要浮动。</p>
<p>一个盒子里面有多个子盒子，如果其中一个盒子浮动了，其他兄弟也应该浮动，以防止引起问题。</p>
<p>浮动的盒子只会影响浮动盒子后面的标准流,不会影响前面的标准流.</p>
<h2 id="四、清除浮动"><a href="#四、清除浮动" class="headerlink" title="四、清除浮动"></a>四、清除浮动</h2><h3 id="1、为什么需要清除浮动？"><a href="#1、为什么需要清除浮动？" class="headerlink" title="1、为什么需要清除浮动？"></a>1、为什么需要清除浮动？</h3><p>​		由于父级盒子很多情况下，不方便给高度，但是子盒子浮动又不占有位置，最后父级盒子高度为 0 时，就会影响下面的标准流盒子。</p>
<p><img data-src="/css%E5%9F%BA%E7%A1%80%5C1571555883628.png" alt="1571555883628"></p>
<h3 id="2、清除浮动本质"><a href="#2、清除浮动本质" class="headerlink" title="2、清除浮动本质"></a>2、清除浮动本质</h3><p>清除浮动的本质是清除浮动元素造成的影响：浮动的子标签无法撑开父盒子的高度</p>
<p>注意：</p>
<ul>
<li>如果父盒子本身有高度，则不需要清除浮动</li>
<li>清除浮动之后，父级就会根据浮动的子盒子自动检测高度。</li>
<li>父级有了高度，就不会影响下面的标准流了</li>
</ul>
<h3 id="3、清除浮动样式"><a href="#3、清除浮动样式" class="headerlink" title="3、清除浮动样式"></a>3、清除浮动样式</h3><p>语法：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">选择器&#123;<span class="attribute">clear</span>:属性值;&#125; </span><br></pre></td></tr></table></figure>

<p><img data-src="/css%E5%9F%BA%E7%A1%80%5C1571555980419.png" alt="1571555980419"></p>
<p>我们实际工作中， 几乎只用 clear: both;</p>
<p>清除浮动的策略是:  闭合浮动. </p>
<h3 id="4、清除浮动的多种方式"><a href="#4、清除浮动的多种方式" class="headerlink" title="4、清除浮动的多种方式"></a>4、清除浮动的多种方式</h3><h4 id="4-1、额外标签法"><a href="#4-1、额外标签法" class="headerlink" title="4.1、额外标签法"></a>4.1、额外标签法</h4><p>额外标签法也称为隔墙法，是 W3C 推荐的做法。</p>
<p>使用方式：</p>
<p>​		额外标签法会在浮动元素末尾添加一个空的标签。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">例如 <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;clear:both&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span>，或者其他标签（如<span class="tag">&lt;<span class="name">br</span> /&gt;</span>等）。</span><br></pre></td></tr></table></figure>

<p>​		优点： 通俗易懂，书写方便</p>
<p>​		缺点： 添加许多无意义的标签，结构化较差</p>
<p>​		注意： 要求这个新的空标签必须是块级元素。</p>
<p>总结:</p>
<p>​	1、清除浮动本质是?</p>
<p>​			清除浮动的本质是清除浮动元素脱离标准流造成的影响</p>
<p>​	2、清除浮动策略是?</p>
<p>​			闭合浮动.  只让浮动在父盒子内部影响,不影响父盒子外面的其他盒子.</p>
<p>​	3、额外标签法?</p>
<p>​			隔墙法, 就是在最后一个浮动的子元素后面添</p>
<p>​	4、加一个额外标签, 添加 清除浮动样式.</p>
<p>​			实际工作可能会遇到,但是不常用</p>
<h4 id="4-2、父级添加-overflow-属性"><a href="#4-2、父级添加-overflow-属性" class="headerlink" title="4.2、父级添加 overflow 属性"></a>4.2、父级添加 overflow 属性</h4><p>可以给父级添加 overflow 属性，将其属性值设置为 hidden、 auto 或 scroll 。</p>
<p>例如：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">overflow</span>:hidden | auto | scroll;</span><br></pre></td></tr></table></figure>

<p>优点：代码简洁</p>
<p>缺点：无法显示溢出的部分</p>
<p>注意：是给父元素添加代码</p>
<h4 id="4-3、父级添加after伪元素"><a href="#4-3、父级添加after伪元素" class="headerlink" title="4.3、父级添加after伪元素"></a>4.3、父级添加after伪元素</h4><p>:after 方式是额外标签法的升级版。给父元素添加：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.clearfix</span><span class="selector-pseudo">:after</span> &#123;  </span><br><span class="line">  <span class="attribute">content</span>: <span class="string">&quot;&quot;</span>; </span><br><span class="line">  <span class="attribute">display</span>: block; </span><br><span class="line">  <span class="attribute">height</span>: <span class="number">0</span>; </span><br><span class="line">  <span class="attribute">clear</span>: both; </span><br><span class="line">  <span class="attribute">visibility</span>: hidden;  </span><br><span class="line">&#125; </span><br><span class="line"><span class="selector-class">.clearfix</span> &#123;  <span class="comment">/* IE6、7 专有 */</span> </span><br><span class="line">  *zoom: <span class="number">1</span>;</span><br><span class="line">&#125;   </span><br></pre></td></tr></table></figure>

<p>优点：没有增加标签，结构更简单</p>
<p>缺点：照顾低版本浏览器</p>
<p>代表网站： 百度、淘宝网、网易等</p>
<h4 id="4-4、父级添加双伪元素"><a href="#4-4、父级添加双伪元素" class="headerlink" title="4.4、父级添加双伪元素"></a>4.4、父级添加双伪元素</h4><p>给父元素添加</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.clearfix</span><span class="selector-pseudo">:before</span>,<span class="selector-class">.clearfix</span><span class="selector-pseudo">:after</span> &#123;</span><br><span class="line">  <span class="attribute">content</span>:<span class="string">&quot;&quot;</span>;</span><br><span class="line">  <span class="attribute">display</span>:table; </span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.clearfix</span><span class="selector-pseudo">:after</span> &#123;</span><br><span class="line">  <span class="attribute">clear</span>:both;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.clearfix</span> &#123;</span><br><span class="line">   *zoom:<span class="number">1</span>;</span><br><span class="line">&#125;   </span><br></pre></td></tr></table></figure>

<p>优点：代码更简洁</p>
<p>缺点：照顾低版本浏览器</p>
<p>代表网站：小米、腾讯等</p>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>为什么需要清除浮动？</p>
<ol>
<li>父级没高度。</li>
<li>子盒子浮动了。</li>
<li>影响下面布局了，我们就应该清除浮动了。</li>
</ol>
<p><img data-src="/css%E5%9F%BA%E7%A1%80%5C1571556500074.png" alt="1571556500074"></p>
<h2 id="五、PS-切图"><a href="#五、PS-切图" class="headerlink" title="五、PS 切图"></a>五、PS 切图</h2><h3 id="1、图层切图"><a href="#1、图层切图" class="headerlink" title="1、图层切图"></a>1、图层切图</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">最简单的切图方式：右击图层 → 导出 → 切片。</span><br></pre></td></tr></table></figure>

<h3 id="2、切片切图"><a href="#2、切片切图" class="headerlink" title="2、切片切图"></a>2、切片切图</h3><p>2.1、利用切片选中图片</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">利用切片工具手动划出</span><br></pre></td></tr></table></figure>

<p>2.2、导出选中的图片</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">文件菜单 → 存储为 web 设备所用格式 → 选择我们要的图片格式 → 存储 。</span><br></pre></td></tr></table></figure>

<h3 id="3、PS插件切图"><a href="#3、PS插件切图" class="headerlink" title="3、PS插件切图"></a>3、PS插件切图</h3><p>​		Cutterman 是一款运行在 Photoshop 中的插件，能够自动将你需要的图层进行输出，以替代传统的手工 “导出 web 所用格式” 以及使用切片工具进行挨个切图的繁琐流程。</p>
<p>官网：<a href="http://www.cutterman.cn/zh/cutterman">http://www.cutterman.cn/zh/cutterman</a></p>
<p>注意：Cutterman 插件要求你的 PS 必须是完整版，不能是绿色版，所以大家需要安装完整版本。</p>
<p><img data-src="/css%E5%9F%BA%E7%A1%80%5C1571556821045.png" alt="1571556821045"></p>
<h1 id="前端基础CSS第五天"><a href="#前端基础CSS第五天" class="headerlink" title="前端基础CSS第五天"></a>前端基础CSS第五天</h1><blockquote>
<p>学习目标：</p>
<p>​	了解  PS切图</p>
<p>​	掌握  CSS属性书写顺序</p>
<p>​	掌握  学成在线案例</p>
</blockquote>
<h2 id="1-PS-切图"><a href="#1-PS-切图" class="headerlink" title="1. PS 切图"></a>1. PS 切图</h2><h3 id="1-1-常见的图片格式"><a href="#1-1-常见的图片格式" class="headerlink" title="1.1. 常见的图片格式"></a>1.1. 常见的图片格式</h3><table>
<thead>
<tr>
<th>序号</th>
<th>格式</th>
<th>特点和常用的用途</th>
</tr>
</thead>
<tbody><tr>
<td>1</td>
<td>jpg</td>
<td>JPEG（.JPG）对色彩的信息保留较好，高清，颜色较多，我们<strong>产品类的图片</strong> 经常用jpg格式的</td>
</tr>
<tr>
<td>2</td>
<td>gif</td>
<td>GIF格式最多只能储存256色，所以通常用来显示简单图形及字体，但是可以保存透明背景和动画效果, 实际 <strong>经常用于一些图片小动画效果</strong></td>
</tr>
<tr>
<td>3</td>
<td>png</td>
<td>png图像格式，是一种新兴的网络图形格式，结合了GIF和JPEG的优点，具有存储形式丰富的特点，能够保持透明背景. 如果想要切成 <strong>背景透明的图片</strong> ,请选择png格式.</td>
</tr>
<tr>
<td>4</td>
<td>psd</td>
<td>PSD图像格式，Photoshop的专用格式，里面可以存放图层、通道、遮罩等多种设计稿. <strong>对我们前端人员来说,最大的优点,我们可以直接从上面复制文字,获得图片,还可以测量大小和距离</strong>.</td>
</tr>
</tbody></table>
<p>PS 有很多的切图方式：图层切图、切片切图、PS 插件切图等。 </p>
<h3 id="1-2-图层切图"><a href="#1-2-图层切图" class="headerlink" title="1.2. 图层切图"></a>1.2. 图层切图</h3><p>简单版步骤：</p>
<p>​	① 使用<strong>移动工具</strong>，点击需要的图片</p>
<img data-src="/2024/11/18/css%E5%9F%BA%E7%A1%80/1571299959992.png" class="" width="1571299959992">

<p>​	② 查看右侧，找到图片对应的图层，右击图层 → 快速导出为 PNG</p>
<img data-src="/2024/11/18/css%E5%9F%BA%E7%A1%80/1571300150618.png" class="" width="1571300150618">



<p>但是很多情况下,我们需要合并图层再导出:</p>
<p>步骤：</p>
<p>​	① 选中需要的若干个图层：选择一个图层，再按住shift键，继续选第二个图层:  </p>
<p>​	② 图层菜单 → 合并图层(ctrl+e)   </p>
<p>​	<img data-src="/2024/11/18/css%E5%9F%BA%E7%A1%80/1571300529539.png" class="" width="1571300529539"></p>
<p>​	③ 查看右侧生成的新图层，在合并后的图层上，右击 →  快速导出为 PNG</p>
<h3 id="1-3-切片切图"><a href="#1-3-切片切图" class="headerlink" title="1.3. 切片切图"></a>1.3. 切片切图</h3><p>步骤：</p>
<p>​	① 利用切片选中图片 ：利用切片工具手动划出</p>
<img data-src="/2024/11/18/css%E5%9F%BA%E7%A1%80/1571301270696.png" class="" width="1571301270696"> 

<p>​	② 导出选中的图片：文件菜单  →  导出  → 存储为 web 设备所用格式  →  选择我们要的图片格式 →  存储 。</p>
<p>​	注意：保存的时候，要选“选中的切片”：</p>
<img data-src="/2024/11/18/css%E5%9F%BA%E7%A1%80/1571301357818.png" class="" width="1571301357818"> 

<h3 id="1-4-插件切图"><a href="#1-4-插件切图" class="headerlink" title="1.4. 插件切图"></a>1.4. 插件切图</h3><h4 id="1-4-1-介绍"><a href="#1-4-1-介绍" class="headerlink" title="1.4.1. 介绍"></a>1.4.1. 介绍</h4><p>Cutterman是一款运行在photoshop中的插件，能够自动将你需要的图层进行输出， 以替代传统的手工 “导出web所用格式” 以及使用切片工具进行挨个切图的繁琐流程。 </p>
<p>它支持各种各样的图片尺寸、格式、形态输出，方便你在pc、ios、Android等端上使用。 它不需要你记住一堆的语法、规则，纯点击操作，方便、快捷，易于上手。</p>
<h4 id="1-4-2-安装"><a href="#1-4-2-安装" class="headerlink" title="1.4.2. 安装"></a>1.4.2. 安装</h4><p>注意： <strong>cutterman插件要求你的ps 必须是完整版</strong>，不能是绿色版，所以大家需要从新安装完整版本。</p>
<p>查看 “窗口菜单”里面的“扩展功能”：</p>
<p>​	① 如果是扩展功能的是灰色的，表示就是绿色版的，需要重新安装PS</p>
<p>​	② 如果是扩展功能右侧是可以使用的，表示就是完整版的，可以安装cutterman插件快速切图</p>
<img data-src="/2024/11/18/css%E5%9F%BA%E7%A1%80/1571302032310.png" class="" width="1571302032310">





<p>官网: <a href="http://www.cutterman.cn/zh/cutterman">http://www.cutterman.cn/zh/cutterman</a></p>
<p>当cutterman 安装完成后，重启PS，会发现扩展功能里面多了一个cutterman工具：</p>
<img data-src="/2024/11/18/css%E5%9F%BA%E7%A1%80/1571302286467.png" class="" width="1571302286467">



<p>1.4.3 使用步骤</p>
<p>​	① 选择需要的图层</p>
<p>​	② 选择web端，点击web下面的下拉三角</p>
<p>​	③ 选择需要的图片格式</p>
<p>​	④ 设置好存储路径</p>
<p>​	⑤ 点击 “导出选中图层” 按钮</p>
<img data-src="/2024/11/18/css%E5%9F%BA%E7%A1%80/1571303715362.png" class="" width="1571303715362"> 

<p>示意图：</p>
<style>.szppmdkysjct{}</style><img data-src="/2024/11/18/css%E5%9F%BA%E7%A1%80/sample1.gif" class="szppmdkysjct"> 





<h2 id="2-CSS属性书写顺序（重点）"><a href="#2-CSS属性书写顺序（重点）" class="headerlink" title="2. CSS属性书写顺序（重点）"></a>2. CSS属性书写顺序（重点）</h2><p><strong>生活中衡量一个人有气质：</strong></p>
<p>​	穿着打扮  举止言行  等等  </p>
<p><strong>编程中如何衡量一个人的代码能力</strong>：</p>
<p>​	规范标准  优雅高质量 等等   一个词形容   专业    从代码中看出是否有经验..</p>
<p>建议遵循以下顺序：</p>
<ol>
<li><strong>布局定位属性</strong>：display &#x2F; position &#x2F; float &#x2F; clear &#x2F; visibility &#x2F; overflow（建议 display 第一个写，毕竟关系到模式）</li>
<li><strong>自身属性</strong>：width &#x2F; height &#x2F; margin &#x2F; padding &#x2F; border &#x2F; background</li>
<li><strong>文本属性</strong>：color &#x2F; font &#x2F; text-decoration &#x2F; text-align &#x2F; vertical-align &#x2F; white- space &#x2F; break-word</li>
<li><strong>其他属性（CSS3）</strong>：content &#x2F; cursor &#x2F; border-radius &#x2F; box-shadow &#x2F; text-shadow &#x2F; background:linear-gradient …</li>
</ol>
<p><strong>举例：</strong></p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.jdc</span> &#123;</span><br><span class="line">   <span class="attribute">display</span>: block;</span><br><span class="line">   <span class="attribute">position</span>: relative;</span><br><span class="line">   <span class="attribute">float</span>: left;</span><br><span class="line">   <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">   <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">   <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">10px</span>;</span><br><span class="line">   <span class="attribute">padding</span>: <span class="number">20px</span> <span class="number">0</span>;</span><br><span class="line">   <span class="attribute">font-family</span>: Arial, <span class="string">&#x27;Helvetica Neue&#x27;</span>, Helvetica, sans-serif;</span><br><span class="line">   <span class="attribute">color</span>: <span class="number">#333</span>;</span><br><span class="line">   <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,.<span class="number">5</span>);</span><br><span class="line">   <span class="attribute">border-radius</span>: <span class="number">10px</span>;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>





<h2 id="3-学成在线页面制作"><a href="#3-学成在线页面制作" class="headerlink" title="3. 学成在线页面制作"></a>3. 学成在线页面制作</h2><p>页面展示：</p>
<img data-src="/2024/11/18/css%E5%9F%BA%E7%A1%80/1571304358699.png" class="" width="1571304358699">



<p>学成在线，是典型的企业级网站。</p>
<p>学习学成网的目的，是为了整体感知企业级网站布局流程，带着大家复习以前的知识。</p>
<h3 id="3-1-前期准备素材"><a href="#3-1-前期准备素材" class="headerlink" title="3.1.  前期准备素材"></a>3.1.  前期准备素材</h3><ul>
<li>学成在线PSD源文件</li>
<li>开发工具  &#x3D;  PS（切图） +  sublime（代码） + chrome（测试）</li>
</ul>
<h3 id="3-2-前期准备工作"><a href="#3-2-前期准备工作" class="headerlink" title="3.2.  前期准备工作"></a>3.2.  前期准备工作</h3><p>先把我们的前期准备工作做好， 我们本次采取结构与样式相分离思想。</p>
<ol>
<li><p>创建 study 目录文件夹 (用于存放我们这个页面的相关内容)。</p>
</li>
<li><p>用vscode打开study目录文件夹.</p>
</li>
<li><p>study 目录内新建 css基础 文件夹，用于保存图片。</p>
</li>
<li><p>新建首页文件 index.html（以后我们的网站<strong>首页</strong>统一命名规定为 <strong>index.html</strong> )。</p>
</li>
<li><p>新建 style.css 样式文件。我们本次采用外链样式表。</p>
</li>
<li><p>将样式引入到我们的 HTML 页面文件中。</p>
</li>
<li><p>样式表写入清除内外边距的样式，来检测样式表是否引入成功。</p>
</li>
</ol>
<img data-src="/2024/11/18/css%E5%9F%BA%E7%A1%80/1571305757590.png" class="" width="1571305757590"> 

<h3 id="3-3-页面布局整体思路"><a href="#3-3-页面布局整体思路" class="headerlink" title="3.3. 页面布局整体思路"></a>3.3. 页面布局整体思路</h3><p>为了提高网页制作的效率，布局时通常有以下的整体思路，具体如下：</p>
<p>​	1.必须确定页面的<strong>版心</strong>（可视区），我们<strong>测量</strong>可得知。</p>
<p>​	2.分析页面中的行模块，以及每个行模块中的列模块。其实页面布局第一准则.</p>
<p>​	3.一行中的列模块经常浮动布局, 先确定每个列的大小,之后确定列的位置.  页面布局第二准则</p>
<p>​	4.制作 HTML 结构。我们还是遵循，先有结构，后有样式的原则。结构永远最重要.</p>
<p>​	5.所以, 先理清楚<strong>布局结构</strong>,再写代码尤为重要. 这需要我们多写多积累.</p>
<h3 id="3-4-页面制作"><a href="#3-4-页面制作" class="headerlink" title="3.4. 页面制作"></a>3.4. 页面制作</h3><p><strong>确定版心</strong>：</p>
<p>​	这个页面的版心是 1200像素  ，每个版心都要水平居中对齐，所以，我们可以定义版心为公共类：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.w</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">1200px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: auto;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="3-4-1-header头部制作"><a href="#3-4-1-header头部制作" class="headerlink" title="3.4.1. header头部制作"></a>3.4.1. header头部制作</h4><p><strong>结构图如下：</strong></p>
<style>.eulrmwhpjesq{}</style><img data-src="/2024/11/18/css%E5%9F%BA%E7%A1%80/1.png" class="eulrmwhpjesq">

<ul>
<li>1号是版心盒子 <strong>header</strong>  1200 *  42 的盒子水平居中对齐, 上下给一个margin值就好了。</li>
<li>版心盒子 里面包含 2号盒子 <strong>logo</strong> 图标</li>
<li>版心盒子 里面包含 3号盒子 <strong>nav</strong> 导航栏</li>
<li>版心盒子 里面包含 4号盒子 <strong>search</strong> 搜索框</li>
<li>版心盒子 里面包含 5号盒子 <strong>user</strong> 个人信息</li>
<li>注意，要求里面的 <strong>4个子盒子 必须都浮动</strong></li>
</ul>
<p><strong>导航栏注意点:</strong></p>
<p>实际开发中，<strong>重要的导航栏</strong>，我们不会直接用链接a ，而是<strong>用 li  包含链接(li+a)的做法</strong></p>
<p>​	1.li+a 语义更清晰，一看这就是有条理的列表型内容。</p>
<p>​	2.如果直接用a，搜索引擎容易辨别为有堆砌关键字嫌疑（故意堆砌关键字容易被搜索引擎有降权的风险），从而影响网站排名</p>
<p><strong>注意:</strong> </p>
<p>​	1.让导航栏一行显示, 给 li 加浮动, 因为 li 是块级元素, 需要一行显示.</p>
<p>​	2.这个nav导航栏可以不给宽度,将来可以继续添加其余文字</p>
<p>​	3.因为导航栏里面文字不一样多,所以最好给链接 a 左右padding 撑开盒子,而不是指定宽度 </p>
<p><strong>4号盒子search的细节：</strong></p>
<p>​	search 搜索框的意思:  一个 search 大盒子里面包含 2个 表单</p>
<p>​	技巧：input和button都，属于行内块元素，会有缝隙，使用浮动，可以去缝隙。</p>
<img data-src="/2024/11/18/css%E5%9F%BA%E7%A1%80/1571307430101.png" class="" width="1571307430101">

<h4 id="3-4-2-banner制作"><a href="#3-4-2-banner制作" class="headerlink" title="3.4.2. banner制作"></a>3.4.2. banner制作</h4><p>结构图如下：</p>
<img data-src="/2024/11/18/css%E5%9F%BA%E7%A1%80/1571314623135.png" class="" width="1571314623135">

<style>.nuxnjfpayvyv{}</style><img data-src="/2024/11/18/css%E5%9F%BA%E7%A1%80/2.png" class="nuxnjfpayvyv">



<ul>
<li>1号盒子是通栏的大盒子<strong>banner</strong>， 不给宽度，给高度，给一个蓝色背景。</li>
<li>2号盒子是版心 <strong>w</strong>， 要水平居中对齐。</li>
<li>3号盒子版心内，左对齐 <strong>subnav</strong> 侧导航栏。</li>
<li>4号盒子版心内，右对齐  <strong>course</strong> 课程。</li>
</ul>
<h5 id="3-4-2-1-subnav-侧导航栏-左侧的"><a href="#3-4-2-1-subnav-侧导航栏-左侧的" class="headerlink" title="3.4.2.1  subnav 侧导航栏 (左侧的)"></a>3.4.2.1  subnav 侧导航栏 (左侧的)</h5><img data-src="/2024/11/18/css%E5%9F%BA%E7%A1%80/1571314874385.png" class="" width="1571314874385">   

<ul>
<li>subnav 盒子 背景色 黑色半透明</li>
<li>重要的导航栏，li 包 a ，行高45px</li>
<li>a里面包含文字和span，span右浮动</li>
<li>当鼠标经过a ，a里面的内容（文字和span）变蓝色</li>
</ul>
<h5 id="3-4-2-2-course课程表模块-右侧的"><a href="#3-4-2-2-course课程表模块-右侧的" class="headerlink" title="3.4.2.2  course课程表模块 (右侧的)"></a>3.4.2.2  course课程表模块 (右侧的)</h5><p>结构图如下：</p>
 <style>.uvwdhhixfgmu{}</style><img data-src="/2024/11/18/css%E5%9F%BA%E7%A1%80/6.png" class="uvwdhhixfgmu">

<ul>
<li>1号盒子 是  228 * 300 的盒子 右浮动  <strong>注意 浮动的元素 不会有外边距塌陷的问题</strong></li>
<li>1号盒子内 分为 上下 两个 子盒子</li>
<li>2号子盒子是 上部分  我们命名为 course-hd    (hd  是  head  的简写 头部的意思，我们经常用)</li>
<li>3号子盒子是 下部分  我们命名为 course-bd    (bd  是  body  的简写 主体的意思，我们经常用)</li>
</ul>
<h4 id="3-4-3-精品推荐小模块"><a href="#3-4-3-精品推荐小模块" class="headerlink" title="3.4.3. 精品推荐小模块"></a>3.4.3. 精品推荐小模块</h4><p>结构图如下：</p>
<style>.yowktuyvjgim{}</style><img data-src="/2024/11/18/css%E5%9F%BA%E7%A1%80/3.png" class="yowktuyvjgim">

<ul>
<li><p><strong>复习点：</strong>  因为里面三个盒子都要垂直居中，我们利用 继承性，给 最大的盒子 一个垂直居中的代码就好了，还记得 那些 样式可以继承吗？？？ font-  line-  text- color</p>
</li>
<li><p>大盒子水平居中 goods  精品 ，注意此处有个盒子阴影</p>
</li>
<li><p>1号盒子是标题 H3  左侧浮动</p>
</li>
<li><p>2号盒子 里面放链接  左侧浮动  goods-item    距离可以控制链接的 左右外边距（注意行内元素只给左右内外边距）</p>
</li>
<li><p>3号盒子 右浮动 mod 修改</p>
</li>
</ul>
<h4 id="3-4-4-精品推荐大模块"><a href="#3-4-4-精品推荐大模块" class="headerlink" title="3.4.4. 精品推荐大模块"></a>3.4.4. 精品推荐大模块</h4><p>结构图如下：</p>
<style>.fhdyhbeeqxbe{}</style><img data-src="/2024/11/18/css%E5%9F%BA%E7%A1%80/4.png" class="fhdyhbeeqxbe">

<ul>
<li>1号盒子为最大的盒子 <strong>box</strong>  版心水平居中对齐</li>
<li>2号盒子为上面部分 <strong>box-hd</strong>  – 里面   左侧标题H3 左浮动   右侧 链接 a 右浮动</li>
<li>3号盒子为底下部分 <strong>box-bd</strong> — 里面是无序列表 有 10个 小li 组成</li>
<li>小li 外边距的问题， 这里有个小技巧。  给box-hd 宽度为 1215 就可以一行装开5个 li了</li>
<li>复习点：我们用到清除浮动，因为 box-hd 里面的盒子个数不一定是多少，所以我们就不给高度了，但是里面的盒子浮动会影响下面的布局，因此需要清除浮动。</li>
</ul>
<h4 id="3-4-5-底部模块制作"><a href="#3-4-5-底部模块制作" class="headerlink" title="3.4.5.  底部模块制作"></a>3.4.5.  底部模块制作</h4><p>结构图如下：</p>
<style>.tsbfogaawkto{}</style><img data-src="/2024/11/18/css%E5%9F%BA%E7%A1%80/5.png" class="tsbfogaawkto">

<ul>
<li><p>1号盒子通栏大盒子 底部 <strong>footer</strong>  给高度  底色是白色</p>
</li>
<li><p>2号盒子版心水平居中</p>
</li>
<li><p>3号盒子版权 <strong>copyright</strong>  左对齐 </p>
</li>
<li><p>4号盒子 链接组 <strong>links</strong>  右对齐</p>
</li>
</ul>
<h3 id=""><a href="#" class="headerlink" title=""></a></h3><h1 id="前端基础CSS第六天"><a href="#前端基础CSS第六天" class="headerlink" title="前端基础CSS第六天"></a>前端基础CSS第六天</h1><blockquote>
<p><strong>今日目标</strong></p>
<ul>
<li>能够说出 为什么要用定位</li>
<li>能够说出 定位的 4 种分类</li>
<li>能够说出 4 种定位各自的特点</li>
<li>能够说出 为什么常用子绝父相布局</li>
<li>能够写出 淘宝轮播图布局</li>
<li>能够说出 显示隐藏的 3 种方式以及区别</li>
</ul>
</blockquote>
<h2 id="1-定位-position-介绍"><a href="#1-定位-position-介绍" class="headerlink" title="1. 定位(position) 介绍"></a>1. 定位(position) 介绍</h2><h3 id="1-1-为什么使用定位"><a href="#1-1-为什么使用定位" class="headerlink" title="1.1 为什么使用定位"></a>1.1 为什么使用定位</h3><blockquote>
<p>我们先来看一个效果，同时思考一下<strong>用标准流或浮动能否实现类似的效果</strong>？</p>
</blockquote>
<p><strong>场景1</strong>： 某个元素可以自由的在一个盒子内移动位置，并且压住其他盒子.</p>
<style>.xhyrwesesrty{}</style><img data-src="/2024/11/18/css%E5%9F%BA%E7%A1%80/01_%E5%AE%9A%E4%BD%8D%E7%A4%BA%E4%BE%8B1.gif" class="xhyrwesesrty">



<p><strong>场景2</strong>：当我们滚动窗口的时候，盒子是固定屏幕某个位置的。</p>
<style>.balsrrejurkj{}</style><img data-src="/2024/11/18/css%E5%9F%BA%E7%A1%80/ding.png" class="balsrrejurkj">



<blockquote>
<p>结论<strong>：要实现以上效果，</strong>标准流 或 浮动都无法快速实现</p>
</blockquote>
<p>所以：</p>
<p>1.浮动可以让多个块级盒子一行没有缝隙排列显示， 经常用于横向排列盒子。</p>
<p>2.定位则是可以让盒子自由的在某个盒子内移动位置或者固定屏幕中某个位置，并且可以压住其他盒子。</p>
<h3 id="1-2-定位组成"><a href="#1-2-定位组成" class="headerlink" title="1.2 定位组成"></a>1.2 定位组成</h3><p><strong>定位</strong>：将盒子<strong>定</strong>在某一个位置，所以<strong>定位也是在摆放盒子， 按照定位的方式移动盒子</strong></p>
<p>定位也是用来布局的，它有两部分组成：</p>
<blockquote>
<p><strong>定位 &#x3D; 定位模式 + 边偏移</strong>  </p>
</blockquote>
<p><strong>定位模式</strong> 用于指定一个元素在文档中的定位方式。<strong>边偏移</strong>则决定了该元素的最终位置。</p>
<h4 id="1-2-1-边偏移（方位名词）"><a href="#1-2-1-边偏移（方位名词）" class="headerlink" title="1.2.1 边偏移（方位名词）"></a>1.2.1 边偏移（方位名词）</h4><p><strong>边偏移</strong> 就是定位的盒子移动到最终位置。有 top、bottom、left 和 right  4 个属性。</p>
<table>
<thead>
<tr>
<th>边偏移属性</th>
<th align="left">示例</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td><code>top</code></td>
<td align="left"><code>top: 80px</code></td>
<td><strong>顶端</strong>偏移量，定义元素相对于其父元素<strong>上边线的距离</strong>。</td>
</tr>
<tr>
<td><code>bottom</code></td>
<td align="left"><code>bottom: 80px</code></td>
<td><strong>底部</strong>偏移量，定义元素相对于其父元素<strong>下边线的距离</strong>。</td>
</tr>
<tr>
<td><code>left</code></td>
<td align="left"><code>left: 80px</code></td>
<td><strong>左侧</strong>偏移量，定义元素相对于其父元素<strong>左边线的距离</strong>。</td>
</tr>
<tr>
<td><code>right</code></td>
<td align="left"><code>right: 80px</code></td>
<td><strong>右侧</strong>偏移量，定义元素相对于其父元素<strong>右边线的距离</strong></td>
</tr>
</tbody></table>
<p>定位的盒子有了边偏移才有价值。 一般情况下，凡是有定位地方必定有边偏移。</p>
<h4 id="1-2-2-定位模式-position"><a href="#1-2-2-定位模式-position" class="headerlink" title="1.2.2 定位模式 (position)"></a>1.2.2 定位模式 (position)</h4><p>在 CSS 中，通过 <code>position</code> 属性定义元素的<strong>定位模式</strong>，语法如下：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">选择器 &#123; </span><br><span class="line">    <span class="attribute">position</span>: 属性值; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>定位模式是有不同分类的，在不同情况下，我们用到不同的定位模式。</p>
<p>定位模式决定元素的定位方式 ，它通过 CSS 的 position 属性来设置，其值可以分为四个：</p>
<table>
<thead>
<tr>
<th>值</th>
<th align="center">语义</th>
</tr>
</thead>
<tbody><tr>
<td><code>static</code></td>
<td align="center"><strong>静态</strong>定位</td>
</tr>
<tr>
<td><code>relative</code></td>
<td align="center"><strong>相对</strong>定位</td>
</tr>
<tr>
<td><code>absolute</code></td>
<td align="center"><strong>绝对</strong>定位</td>
</tr>
<tr>
<td><code>fixed</code></td>
<td align="center"><strong>固定</strong>定位</td>
</tr>
</tbody></table>
 <img data-src='./css基础/26定位的概念.png'>

<h3 id="1-3-定位模式介绍"><a href="#1-3-定位模式介绍" class="headerlink" title="1.3 定位模式介绍"></a>1.3 定位模式介绍</h3><h4 id="1-3-1-静态定位-static-了解"><a href="#1-3-1-静态定位-static-了解" class="headerlink" title="1.3.1.  静态定位(static) - 了解"></a>1.3.1.  静态定位(static) - 了解</h4><ul>
<li><p><strong>静态定位</strong>是元素的<strong>默认</strong>定位方式，<strong>无定位的意思</strong>。它相当于 border 里面的none，静态定位static，不要定位的时候用。</p>
</li>
<li><p>语法：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">选择器 &#123; </span><br><span class="line">    position: static; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>静态定位 按照标准流特性摆放位置，它没有边偏移。</p>
</li>
<li><p>静态定位在布局时我们几乎不用的</p>
</li>
</ul>
<h4 id="1-3-2-相对定位-relative-重要"><a href="#1-3-2-相对定位-relative-重要" class="headerlink" title="1.3.2. 相对定位(relative) - 重要"></a>1.3.2. 相对定位(relative) - 重要</h4><ul>
<li><strong>相对定位</strong>是元素在移动位置的时候，是相对于它自己<strong>原来的位置</strong>来说的（自恋型）。</li>
<li>语法：</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">选择器 &#123; </span><br><span class="line">	position: relative; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li><p>相对定位的特点：（务必记住）</p>
<ul>
<li><p>1.它是相对于自己原来的位置来移动的（移动位置的时候参照点是自己原来的位置）。</p>
</li>
<li><p>2.<strong>原来</strong>在标准流的<strong>位置</strong>继续占有，后面的盒子仍然以标准流的方式对待它。</p>
<p>因此，<strong>相对定位并没有脱标</strong>。它最典型的应用是给绝对定位当爹的。。。</p>
</li>
</ul>
</li>
<li><p>效果图：</p>
</li>
</ul>
<p><img data-src="/./css%E5%9F%BA%E7%A1%80/04_%E7%9B%B8%E5%AF%B9%E5%AE%9A%E4%BD%8D%E6%A1%88%E4%BE%8B.png" alt="相对定位案例"></p>
<h4 id="1-3-3-绝对定位-absolute-重要"><a href="#1-3-3-绝对定位-absolute-重要" class="headerlink" title="1.3.3. 绝对定位(absolute) - 重要"></a>1.3.3. 绝对定位(absolute) - 重要</h4><h5 id="1-3-3-1-绝对定位的介绍"><a href="#1-3-3-1-绝对定位的介绍" class="headerlink" title="1.3.3.1 绝对定位的介绍"></a>1.3.3.1 绝对定位的介绍</h5><ul>
<li><p><strong>绝对定位</strong>是元素在移动位置的时候，是相对于它<strong>祖先元素</strong>来说的（拼爹型）。</p>
</li>
<li><p>语法：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">选择器 &#123; </span><br><span class="line">	position: absolute; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ul>
<ol>
<li><p><strong>完全脱标</strong> —— 完全不占位置；  </p>
</li>
<li><p><strong>父元素没有定位</strong>，则以<strong>浏览器</strong>为准定位（Document 文档）。</p>
<img data-src="./css基础/05_绝对定位_父级无定位.png" width="600" />
</li>
<li><p><strong>父元素要有定位</strong></p>
<ul>
<li>元素将依据最近的已经定位（绝对、固定或相对定位）的父元素（祖先）进行定位。</li>
</ul>
</li>
</ol>
<img data-src="./css基础/06_绝对定位_父级有定位.png" width="600" />





<ul>
<li><p><strong>绝对定位的特点总结</strong>：（务必记住）</p>
<p>1.如果<strong>没有祖先元素</strong>或者<strong>祖先元素没有定位</strong>，则以浏览器为基准定位（Document 文档）。</p>
<p>2.如果祖先元素有定位（相对、绝对、固定定位），则以最近一级的有定位祖先元素为参考点移动位置。</p>
<p>3.绝对定位<strong>不再占有原先的位置</strong>。所以绝对定位是脱离标准流的。（脱标）</p>
</li>
</ul>
<h5 id="1-3-3-2-定位口诀-——-子绝父相"><a href="#1-3-3-2-定位口诀-——-子绝父相" class="headerlink" title="1.3.3.2 定位口诀 —— 子绝父相"></a>1.3.3.2 定位口诀 —— 子绝父相</h5><p>弄清楚这个口诀，就明白了绝对定位和相对定位的使用场景。</p>
<p>这个<strong>“子绝父相”</strong>太重要了，是我们学习定位的<strong>口诀</strong>，是定位中最常用的一种方式这句话的意思是：<strong>子级是绝对定位的话，父级要用相对定位。</strong></p>
<p>因为绝对定位的盒子是拼爹的，所以要和父级搭配一起来使用。</p>
<p>①子级绝对定位，不会占有位置，可以放到父盒子里面的任何一个地方，不会影响其他的兄弟盒子。</p>
<p>②父盒子需要加定位限制子盒子在父盒子内显示。</p>
<p>③父盒子布局时，需要占有位置，因此父亲只能是相对定位。</p>
<p>这就是子绝父相的由来，所以<strong>相对定位经常用来作为绝对定位的父级</strong>。</p>
<p>总结： <strong>因为父级需要占有位置，因此是相对定位， 子盒子不需要占有位置，则是绝对定位</strong></p>
<p>当然，子绝父相不是永远不变的，如果父元素不需要占有位置，<strong>子绝父绝</strong>也会遇到。</p>
<p><strong>疑问</strong>：为什么在布局时，<strong>子级元素</strong>使用<strong>绝对定位</strong>时，<strong>父级元素</strong>就要用<strong>相对定位</strong>呢？</p>
<p>观察下图，思考一下在布局时，<strong>左右两个方向的箭头图片</strong>以及<strong>父级盒子</strong>的定位方式。</p>
<p><img data-src="/./css%E5%9F%BA%E7%A1%80/07_%E5%AD%90%E7%BB%9D%E7%88%B6%E7%9B%B8%E6%88%AA%E5%9B%BE.png" alt="子绝父相截图"></p>
<img data-src='./css基础/27子绝父相.png'>

<p><strong>分析</strong>：</p>
<ol>
<li><strong>方向箭头</strong>叠加在其他图片上方，应该使用<strong>绝对定位</strong>，因为<strong>绝对定位完全脱标</strong>，完全不占位置。</li>
<li><strong>父级盒子</strong>应该使用<strong>相对定位</strong>，因为<strong>相对定位不脱标</strong>，后续盒子仍然以标准流的方式对待它。<ul>
<li>如果父级盒子也使用<strong>绝对定位</strong>，会完全脱标，那么下方的<strong>广告盒子</strong>会上移，这显然不是我们想要的。</li>
</ul>
</li>
</ol>
<p><strong>结论</strong>：<strong>父级要占有位置，子级要任意摆放</strong>，这就是<strong>子绝父相</strong>的由来。</p>
<h4 id="1-3-4-固定定位-fixed-重要"><a href="#1-3-4-固定定位-fixed-重要" class="headerlink" title="1.3.4. 固定定位(fixed) - 重要"></a>1.3.4. 固定定位(fixed) - 重要</h4><ul>
<li><p><strong>固定定位</strong>是元素<strong>固定于浏览器可视区的位置</strong>。（认死理型）   主要使用场景： 可以在浏览器页面滚动时元素的位置不会改变。</p>
</li>
<li><p>语法：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">选择器 &#123; </span><br><span class="line">	position: fixed; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>固定定位的特点：（务必记住）：</p>
<p>1.以浏览器的可视窗口为参照点移动元素。</p>
<ul>
<li>跟父元素没有任何关系</li>
<li>不随滚动条滚动。</li>
</ul>
<p>2.固定定位<strong>不在占有原先的位置</strong>。</p>
</li>
<li><p>固定定位也是<strong>脱标</strong>的，其实<strong>固定定位也可以看做是一种特殊的绝对定位</strong>。（认死理型） </p>
<ul>
<li><strong>完全脱标</strong>—— 完全不占位置；</li>
<li>只认<strong>浏览器的可视窗口</strong> —— <code>浏览器可视窗口 + 边偏移属性</code> 来设置元素的位置；<ul>
<li>跟父元素没有任何关系；单独使用的</li>
<li>不随滚动条滚动。</li>
</ul>
</li>
</ul>
</li>
</ul>
<blockquote>
<p>固定定位举例：</p>
</blockquote>
<p><img data-src="/./css%E5%9F%BA%E7%A1%80/08_%E5%9B%BA%E5%AE%9A%E5%AE%9A%E4%BD%8D%E6%A1%88%E4%BE%8B.png" alt="固定定位案例"></p>
<p><strong>提示</strong>：IE 6 等低版本浏览器不支持固定定位。</p>
<h4 id="1-3-5-粘性定位-sticky-了解"><a href="#1-3-5-粘性定位-sticky-了解" class="headerlink" title="1.3.5 粘性定位(sticky) - 了解"></a>1.3.5 粘性定位(sticky) - 了解</h4><ul>
<li><p><strong>粘性定位</strong>可以被认为是相对定位和固定定位的混合。 Sticky  粘性的 </p>
</li>
<li><p>语法：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">选择器 &#123; </span><br><span class="line">    position: sticky; </span><br><span class="line">    top: 10px; </span><br><span class="line">&#125;</span><br><span class="line">  </span><br></pre></td></tr></table></figure>
</li>
<li><p>粘性定位的特点：</p>
<p>1.以浏览器的可视窗口为参照点移动元素（固定定位特点）</p>
<p>2.粘性定位占有原先的位置（相对定位特点）</p>
<p>3.必须添加 top 、left、right、bottom <strong>其中一个</strong>才有效</p>
<p>跟页面滚动搭配使用。 兼容性较差，IE 不支持。</p>
</li>
</ul>
<h4 id="1-3-6-定位总结"><a href="#1-3-6-定位总结" class="headerlink" title="1.3.6 定位总结"></a>1.3.6 定位总结</h4><table>
<thead>
<tr>
<th><strong>定位模式</strong></th>
<th><strong>是否脱标</strong></th>
<th><strong>移动位置</strong></th>
<th><strong>是否常用</strong></th>
</tr>
</thead>
<tbody><tr>
<td>static   静态定位</td>
<td>否</td>
<td>不能使用边偏移</td>
<td>很少</td>
</tr>
<tr>
<td><strong>relative 相对定位</strong></td>
<td><strong>否 (占有位置)</strong></td>
<td><strong>相对于自身位置移动</strong></td>
<td><strong>基本单独使用</strong></td>
</tr>
<tr>
<td><strong>absolute绝对定位</strong></td>
<td><strong>是（不占有位置）</strong></td>
<td><strong>带有定位的父级</strong></td>
<td><strong>要和定位父级元素搭配使用</strong></td>
</tr>
<tr>
<td><strong>fixed 固定定位</strong></td>
<td><strong>是（不占有位置）</strong></td>
<td><strong>浏览器可视区</strong></td>
<td><strong>单独使用，不需要父级</strong></td>
</tr>
<tr>
<td>sticky 粘性定位</td>
<td>否   (占有位置)</td>
<td>浏览器可视区</td>
<td>当前阶段少</td>
</tr>
</tbody></table>
<ul>
<li><p>一定记住 相对定位、固定定位、绝对定位 两个大的特点： 1. 是否占有位置（脱标否） 2. 以谁为基准点移动位置。</p>
</li>
<li><p>学习定位重点学会子绝父相。</p>
</li>
<li><p>注意：</p>
</li>
</ul>
<ol>
<li><strong>边偏移</strong>需要和<strong>定位模式</strong>联合使用，<strong>单独使用无效</strong>；</li>
<li><code>top</code> 和 <code>bottom</code> 不要同时使用；</li>
<li><code>left</code> 和 <code>right</code> 不要同时使用。</li>
</ol>
<h2 id="2-综合案例：学成在线-hot-模块添加"><a href="#2-综合案例：学成在线-hot-模块添加" class="headerlink" title="2. 综合案例：学成在线-hot  模块添加"></a>2. 综合案例：学成在线-hot  模块添加</h2><h3 id="2-1-案例截图："><a href="#2-1-案例截图：" class="headerlink" title="2. 1 案例截图："></a><strong>2. 1 案例截图</strong>：</h3><img data-src="/2024/11/18/css%E5%9F%BA%E7%A1%80/1571385860679.png" class="" width="1571385860679"> 

<h3 id="2-2-案例分析"><a href="#2-2-案例分析" class="headerlink" title="2.2 案例分析"></a>2.2 案例分析</h3><ol>
<li>一个大的 <code>li</code> 中包含 一个课程图片，课程介绍文字信息，还有hot的小图标；</li>
<li>hot图片<strong>重叠</strong>在课程图片上面—— 脱标，不占位置，需要使用<strong>绝对定位</strong>；</li>
<li>hot图片<strong>重叠</strong>在<strong>li的右上方 —— 需要</strong>使用边偏移确定准确位置。</li>
</ol>
<h3 id="2-3-案例小结"><a href="#2-3-案例小结" class="headerlink" title="2.3 案例小结"></a>2.3 案例小结</h3><ol>
<li><strong>子绝父相</strong> —— <strong>子元素</strong>使用<strong>绝对定位</strong>，<strong>父元素</strong>使用<strong>相对定位</strong>；</li>
<li><strong>与浮动的对比</strong>：<ul>
<li><strong>绝对定位</strong>：脱标，<strong>利用边偏移指定准确位置</strong>；</li>
<li><strong>浮动</strong>：脱标，不能指定准确位置，<strong>让多个块级元素在一行显示</strong>。</li>
</ul>
</li>
</ol>
<blockquote>
<p>课堂练习：模拟老师的随堂案例完成<strong>哈根达斯</strong>案例（5 分钟）。</p>
</blockquote>
<p>结构修改：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 修改.box-bd里面的li标签内容，添加一个hot图标 --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">	 <span class="comment">&lt;!-- 添加hot小图片 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">em</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">style</span>&gt;</span>.gbrbgjtiflmu&#123;&#125;<span class="tag">&lt;/<span class="name">style</span>&gt;</span>&#123;% asset_img gbrbgjtiflmu hot.png &#x27;&quot;&quot;&quot;&quot;&#x27; %&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">em</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span>.vyifsrwfseih&#123;&#125;<span class="tag">&lt;/<span class="name">style</span>&gt;</span>&#123;% asset_img vyifsrwfseih pic.png &#x27;&quot;&quot;&quot;&quot;&#x27; %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">h4</span>&gt;</span></span><br><span class="line">        Think PHP 5.0 博客系统实战项目演练</span><br><span class="line">    <span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;info&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>高级<span class="tag">&lt;/<span class="name">span</span>&gt;</span> • 1125人在学习</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>样式修改：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box-bd</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> &#123;</span><br><span class="line">    <span class="comment">/* 子绝父相 */</span></span><br><span class="line">    <span class="comment">/* 父元素相对定位 */</span></span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">228px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">270px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">margin-right</span>: <span class="number">15px</span>;</span><br><span class="line">    <span class="attribute">margin-bottom</span>: <span class="number">15px</span>;</span><br><span class="line">   </span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box-bd</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> &gt; <span class="selector-tag">img</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box-bd</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> <span class="selector-tag">h4</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">20px</span> <span class="number">20px</span> <span class="number">20px</span> <span class="number">25px</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#050505</span>;</span><br><span class="line">    <span class="attribute">font-weight</span>: <span class="number">400</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box-bd</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> <span class="selector-tag">em</span> &#123;</span><br><span class="line">     <span class="comment">/* 子元素绝对定位 */</span></span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">4px</span>;</span><br><span class="line">    <span class="attribute">right</span>: -<span class="number">4px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="3-定位-position-的应用"><a href="#3-定位-position-的应用" class="headerlink" title="3. 定位(position)的应用"></a>3. 定位(position)的应用</h2><h3 id="3-1-固定定位小技巧：-固定在版心左侧位置。"><a href="#3-1-固定定位小技巧：-固定在版心左侧位置。" class="headerlink" title="3.1.  固定定位小技巧： 固定在版心左侧位置。"></a>3.1.  固定定位小技巧： 固定在版心左侧位置。</h3><p>小算法：</p>
<p>1.让固定定位的盒子 left: 50%.  走到浏览器可视区（也可以看做版心） 的一半位置。</p>
<p>2.让固定定位的盒子 margin-left: 版心宽度的一半距离。  多走 版心宽度的一半位置</p>
<p>就可以让固定定位的盒子<strong>贴着版心右侧对齐</strong>了。</p>
<img data-src='css基础/1571388901848.png' width='350'>



<img data-src='css基础/1571389108805.png' width='300'>



<p>案例效果：</p>
<img data-src="/2024/11/18/css%E5%9F%BA%E7%A1%80/1571389241926.png" class="" width="1571389241926">

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.w</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">800px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">1400px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0</span> auto;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.fixed</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: fixed;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 1. 走浏览器宽度的一半 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">left</span>: <span class="number">50%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 2. 利用margin 走版心盒子宽度的一半距离 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-left</span>: <span class="number">405px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">150px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: skyblue;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;fixed&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;w&quot;</span>&gt;</span>版心盒子 800像素<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  </span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h3 id="3-2-堆叠顺序（z-index）"><a href="#3-2-堆叠顺序（z-index）" class="headerlink" title="3.2. 堆叠顺序（z-index）"></a>3.2. 堆叠顺序（z-index）</h3><ul>
<li><p>在使用<strong>定位</strong>布局时，可能会<strong>出现盒子重叠的情况</strong>。此时，可以使用 <strong>z-index</strong> 来控制盒子的前后次序 (z轴)</p>
</li>
<li><p>语法：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">选择器 &#123; </span><br><span class="line">	z-index: 1; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


</li>
<li><p><code>z-index</code> 的特性如下：</p>
<ol>
<li><strong>属性值</strong>：<strong>正整数</strong>、<strong>负整数</strong>或 <strong>0</strong>，默认值是 0，数值越大，盒子越靠上；	</li>
<li>如果<strong>属性值相同</strong>，则按照书写顺序，<strong>后来居上</strong>；</li>
<li>数字后面<strong>不能加单位</strong>。</li>
</ol>
<p><strong>注意</strong>：<code>z-index</code> 只能应用于<strong>相对定位</strong>、<strong>绝对定位</strong>和<strong>固定定位</strong>的元素，其他<strong>标准流</strong>、<strong>浮动</strong>和<strong>静态定位</strong>无效。</p>
</li>
<li><p>应用 <code>z-index</code> 层叠等级属性可以<strong>调整盒子的堆叠顺序</strong>。如下图所示：</p>
</li>
</ul>
<img data-src="/2024/11/18/css%E5%9F%BA%E7%A1%80/12_zindex%E7%A4%BA%E6%84%8F%E5%9B%BE.png" class="" title="zindex示意图">



<blockquote>
<p>案例演示：堆叠顺序。</p>
</blockquote>
<h2 id="4-定位-position-的拓展"><a href="#4-定位-position-的拓展" class="headerlink" title="4. 定位(position)的拓展"></a>4. 定位(position)的拓展</h2><h3 id="4-1-绝对定位的盒子居中"><a href="#4-1-绝对定位的盒子居中" class="headerlink" title="4.1 绝对定位的盒子居中"></a>4.1 绝对定位的盒子居中</h3><blockquote>
<p><strong>注意</strong>：加了<strong>绝对定位&#x2F;固定定位的盒子</strong>不能通过设置 <code>margin: auto</code> 设置<strong>水平居中</strong>。</p>
<p>但是可以通过以下计算方法实现水平和垂直居中，可以按照下图的方法：</p>
</blockquote>
<img data-src="/2024/11/18/css%E5%9F%BA%E7%A1%80/10_%E7%BB%9D%E5%AF%B9%E5%AE%9A%E4%BD%8D%E6%B0%B4%E5%B9%B3%E5%B1%85%E4%B8%AD.png" class="" title="绝对定位水平居中">

<ol>
<li><code>left: 50%;</code>：让<strong>盒子的左侧</strong>移动到<strong>父级元素的水平中心位置</strong>；</li>
<li><code>margin-left: -100px;</code>：让盒子<strong>向左</strong>移动<strong>自身宽度的一半</strong>。</li>
</ol>
<p><strong>盒子居中定位示意图</strong></p>
<img data-src="/2024/11/18/css%E5%9F%BA%E7%A1%80/11_%E7%BB%9D%E5%AF%B9%E5%AE%9A%E4%BD%8D%E5%B1%85%E4%B8%AD%E7%A4%BA%E6%84%8F%E5%9B%BE.png" class="" title="绝对定位居中示意图">

<h3 id="4-2-定位特殊特性"><a href="#4-2-定位特殊特性" class="headerlink" title="4.2 定位特殊特性"></a>4.2 定位特殊特性</h3><p>绝对定位和固定定位也和浮动类似。</p>
<p>1.行内元素添加绝对或者固定定位，可以直接设置高度和宽度。</p>
<p>2.块级元素添加绝对或者固定定位，如果不给宽度或者高度，默认大小是内容的大小。</p>
<p>前面我们讲过， display 是 显示模式， 可以改变显示模式有以下方式:</p>
<ul>
<li>可以用inline-block  转换为行内块</li>
<li>可以用浮动 float 默认转换为行内块（类似，并不完全一样，因为浮动是脱标的）</li>
<li>绝对定位和固定定位也和浮动类似， 默认转换的特性 转换为行内块。</li>
</ul>
<p>所以说， 一个行内的盒子，如果加了<strong>浮动</strong>、<strong>固定定位</strong>和<strong>绝对定位</strong>，不用转换，就可以给这个盒子直接设置宽度和高度等。</p>
<h3 id="4-3-脱标的盒子不会触发外边距塌陷"><a href="#4-3-脱标的盒子不会触发外边距塌陷" class="headerlink" title="4.3 脱标的盒子不会触发外边距塌陷"></a>4.3 脱标的盒子不会触发外边距塌陷</h3><p>浮动元素、<strong>绝对定位(固定定位）</strong>元素的都不会触发外边距合并的问题。 （我们以前是用padding border overflow解决的）</p>
<p>也就是说，我们给盒子改为了浮动或者定位，就不会有垂直<strong>外边距合并的问题</strong>了。</p>
<h3 id="4-4-绝对定位（固定定位）会完全压住盒子"><a href="#4-4-绝对定位（固定定位）会完全压住盒子" class="headerlink" title="4.4 绝对定位（固定定位）会完全压住盒子"></a>4.4 绝对定位（固定定位）会完全压住盒子</h3><p>浮动元素不同，只会压住它下面标准流的盒子，但是不会压住下面标准流盒子里面的文字（图片）</p>
<p>但是绝对定位（固定定位） 会压住下面标准流所有的内容。</p>
<p>浮动之所以不会压住文字，因为浮动产生的目的最初是为了做文字环绕效果的。 文字会围绕浮动元素</p>
<img data-src='css基础/文字环绕图片.png'>

<h2 id="5-综合案例-淘宝轮播图-重点"><a href="#5-综合案例-淘宝轮播图-重点" class="headerlink" title="5. 综合案例 - 淘宝轮播图(重点)"></a>5. 综合案例 - 淘宝轮播图(重点)</h2><h3 id="5-1-效果图"><a href="#5-1-效果图" class="headerlink" title="5.1 效果图"></a>5.1 效果图</h3><img data-src='css基础/淘宝焦点图.png' width='600'>

<h3 id="5-2-布局分析"><a href="#5-2-布局分析" class="headerlink" title="5.2 布局分析"></a>5.2 布局分析</h3><img data-src="/2024/11/18/css%E5%9F%BA%E7%A1%80/1571397019689.png" class="" width="1571397019689">



<h3 id="5-3-步骤"><a href="#5-3-步骤" class="headerlink" title="5.3 步骤"></a>5.3 步骤</h3><ol>
<li><p>大盒子我们类名为：  tb-promo      淘宝广告</p>
</li>
<li><p>里面先放一张图片。</p>
</li>
<li><p>左右两个按钮 用链接就好了。   左箭头 prev    右箭头  next   </p>
<p>​	左按钮样式（border-radius：左上，右上，右下，左下），</p>
<p>​	右按钮定位，提取左右按钮共同的样式代码（并集选择器）</p>
</li>
<li><p>底侧小圆点ul 继续做。 类名为 promo-nav     </p>
<p>​	中间长方形椭圆 ul的定位（水平居中，离底部15px）  </p>
<p>​	长方形需要五个小圆点，ul无序列表，li浮动，椭圆中小圆点的样式</p>
</li>
</ol>
<h3 id="5-4-知识点：圆角矩形设置4个角"><a href="#5-4-知识点：圆角矩形设置4个角" class="headerlink" title="5.4 知识点：圆角矩形设置4个角"></a>5.4 知识点：圆角矩形设置4个角</h3><p>圆角矩形可以为4个角分别设置圆度， 但是是有顺序的</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">border-top-left-radius:20px;</span><br><span class="line">border-top-right-radius:20px;</span><br><span class="line">border-bottom-right-radius:20px;</span><br><span class="line">border-bottom-left-radius:20px;</span><br></pre></td></tr></table></figure>

<ul>
<li><p>如果4个角，数值相同</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">border-radius</span>: <span class="number">15px</span>;</span><br></pre></td></tr></table></figure>
</li>
<li><p>里面数值不同，我们也可以按照简写的形式，具体格式如下:</p>
</li>
</ul>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">border-radius</span>: 左上角 右上角  右下角  左下角;</span><br></pre></td></tr></table></figure>

<p>还是遵循的顺时针。</p>
<h3 id="5-5-代码参考"><a href="#5-5-代码参考" class="headerlink" title="5.5 代码参考"></a>5.5 代码参考</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>淘宝轮播图做法<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        * &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">li</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">list-style</span>: none;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.tb-promo</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">520px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">280px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">100px</span> auto;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.tb-promo</span> <span class="selector-tag">img</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">520px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">280px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 并集选择器可以集体声明相同的样式 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.prev</span>,</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.next</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 绝对定位的盒子垂直居中 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">top</span>: <span class="number">50%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-top</span>: -<span class="number">15px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 加了绝对定位的盒子可以直接设置高度和宽度 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, .<span class="number">3</span>);</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">line-height</span>: <span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: <span class="number">#fff</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-decoration</span>: none;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.prev</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">left</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* border-radius: 15px; */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-top-right-radius</span>: <span class="number">15px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-bottom-right-radius</span>: <span class="number">15px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.next</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 如果一个盒子既有left属性也有right属性，则默认会执行 left属性 同理  top  bottom  会执行 top */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">right</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* border-radius: 15px; */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-top-left-radius</span>: <span class="number">15px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-bottom-left-radius</span>: <span class="number">15px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.promo-nav</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">bottom</span>: <span class="number">15px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">left</span>: <span class="number">50%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-left</span>: -<span class="number">35px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">70px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">13px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* background-color: pink; */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>, .<span class="number">3</span>);</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-radius</span>: <span class="number">7px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.promo-nav</span> <span class="selector-tag">li</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">8px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">8px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">3px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 不要忘记选择器权重的问题 */</span></span></span><br><span class="line"><span class="language-css">       <span class="selector-class">.promo-nav</span> <span class="selector-class">.selected</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#ff5000</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;tb-promo&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">style</span>&gt;</span>.gylddbildlny&#123;&#125;<span class="tag">&lt;/<span class="name">style</span>&gt;</span>&#123;% asset_img gylddbildlny tb.jpg &#x27;&quot;&quot;&quot;&quot;&#x27; %&#125;</span><br><span class="line">        <span class="comment">&lt;!-- 左侧按钮箭头 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;prev&quot;</span>&gt;</span> <span class="symbol">&amp;lt;</span> <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 右侧按钮箭头 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;next&quot;</span>&gt;</span> <span class="symbol">&amp;gt;</span> <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 小圆点 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;promo-nav&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;selected&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h2 id="6-网页布局总结"><a href="#6-网页布局总结" class="headerlink" title="6. 网页布局总结"></a>6. 网页布局总结</h2><p>通过盒子模型，清楚知道大部分html标签是一个盒子。</p>
<p>通过CSS浮动、定位 可以让每个盒子排列成为网页。</p>
<p>一个完整的网页，是标准流、浮动、定位一起完成布局的，每个都有自己的专门用法。</p>
<h3 id="6-1-标准流"><a href="#6-1-标准流" class="headerlink" title="6.1. 标准流"></a>6.1. 标准流</h3><p>可以让盒子上下排列或者左右排列，<strong>垂直的块级盒子显示就用标准流布局</strong>。</p>
<h3 id="6-2-浮动"><a href="#6-2-浮动" class="headerlink" title="6.2. 浮动"></a>6.2. 浮动</h3><p>可以让多个块级元素一行显示或者左右对齐盒子，<strong>多个块级盒子水平显示就用浮动布局</strong></p>
<h3 id="6-3-定位"><a href="#6-3-定位" class="headerlink" title="6.3. 定位"></a>6.3. 定位</h3><p>定位最大的特点是有层叠的概念，就是可以让多个盒子前后叠压来显示。<strong>如果元素自由在某个盒子内移动就用定位布局。</strong></p>
<h2 id="7-元素的显示与隐藏"><a href="#7-元素的显示与隐藏" class="headerlink" title="7. 元素的显示与隐藏"></a>7. 元素的显示与隐藏</h2><ul>
<li><p>目的（本质）</p>
<p>​	让一个元素在页面中消失或者显示出来</p>
</li>
<li><p>场景</p>
<p>​	类似网站广告，当我们点击关闭就不见了，但是我们重新刷新页面，会重新出现！</p>
</li>
</ul>
<h3 id="7-1-display-显示（重点）"><a href="#7-1-display-显示（重点）" class="headerlink" title="7.1. display 显示（重点）"></a>7.1. display 显示（重点）</h3><ul>
<li><p>display 设置或检索对象是否及如何显示。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">display: none 隐藏对象</span><br><span class="line"></span><br><span class="line">display：block 除了转换为块级元素之外，同时还有显示元素的意思。</span><br></pre></td></tr></table></figure>
</li>
<li><p>特点： display 隐藏元素后，<strong>不再占</strong>有原来的位置。</p>
</li>
<li><p>后面应用及其广泛，搭配 JS 可以做很多的网页特效。实际开发场景：</p>
<blockquote>
<p>配合后面js做特效，比如下拉菜单，原先没有，鼠标经过，显示下拉菜单， 应用极为广泛</p>
</blockquote>
</li>
</ul>
<style>.ysxnqpeshchc{}</style><img data-src="/2024/11/18/css%E5%9F%BA%E7%A1%80/29none.png" class="ysxnqpeshchc">

<blockquote>
</blockquote>
<h3 id="7-2-visibility-可见性-（了解）"><a href="#7-2-visibility-可见性-（了解）" class="headerlink" title="7.2. visibility 可见性 （了解）"></a>7.2. visibility 可见性 （了解）</h3><ul>
<li><p>visibility 属性用于指定一个元素应可见还是隐藏。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">visibility：visible ; 　元素可视</span><br><span class="line"></span><br><span class="line">visibility：hidden; 　  元素隐藏</span><br></pre></td></tr></table></figure>
</li>
<li><p>特点：<strong>visibility 隐藏元素后，继续占有原来的位置</strong>。（停职留薪）</p>
</li>
<li><p>如果隐藏元素想要原来位置， 就用 visibility：hidden</p>
</li>
<li><p>如果隐藏元素不想要原来位置， 就用 display：none  (用处更多 重点）</p>
</li>
</ul>
<style>.cfbvsvjgnepd{}</style><img data-src="/2024/11/18/css%E5%9F%BA%E7%A1%80/30visibility.png" class="cfbvsvjgnepd">

<h3 id="7-3-overflow-溢出（重点）"><a href="#7-3-overflow-溢出（重点）" class="headerlink" title="7.3. overflow 溢出（重点）"></a>7.3. overflow 溢出（重点）</h3><ul>
<li>overflow 属性指定了如果内容溢出一个元素的框（超过其指定高度及宽度） 时，会发生什么。</li>
</ul>
<table>
<thead>
<tr>
<th>属性值</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td><strong>visible</strong></td>
<td>不剪切内容也不添加滚动条</td>
</tr>
<tr>
<td><strong>hidden</strong></td>
<td>不显示超过对象尺寸的内容，超出的部分隐藏掉</td>
</tr>
<tr>
<td><strong>scroll</strong></td>
<td>不管超出内容否，总是显示滚动条</td>
</tr>
<tr>
<td><strong>auto</strong></td>
<td>超出自动显示滚动条，不超出不显示滚动条</td>
</tr>
</tbody></table>
<ul>
<li>一般情况下，我们都不想让溢出的内容显示出来，因为溢出的部分会影响布局。</li>
<li>但是如果有定位的盒子， 请慎用overflow:hidden  因为它会隐藏多余的部分。</li>
</ul>
<style>.pdrwngybwmkl{}</style><img data-src="/2024/11/18/css%E5%9F%BA%E7%A1%80/33overflow.png" class="pdrwngybwmkl">



<ul>
<li>实际开发场景：</li>
</ul>
<ol>
<li>清除浮动</li>
<li>隐藏超出内容，隐藏掉,  不允许内容超过父盒子。</li>
</ol>
<h3 id="7-4-显示与隐藏总结"><a href="#7-4-显示与隐藏总结" class="headerlink" title="7.4. 显示与隐藏总结"></a>7.4. 显示与隐藏总结</h3><table>
<thead>
<tr>
<th>属性</th>
<th>区别</th>
<th>用途</th>
</tr>
</thead>
<tbody><tr>
<td><strong>display 显示     （重点）</strong></td>
<td>隐藏对象，不保留位置</td>
<td>配合后面js做特效，比如下拉菜单，原先没有，鼠标经过，显示下拉菜单， 应用极为广泛</td>
</tr>
<tr>
<td><strong>visibility 可见性 （了解）</strong></td>
<td>隐藏对象，保留位置</td>
<td>使用较少</td>
</tr>
<tr>
<td><strong>overflow 溢出（重点）</strong></td>
<td>只是隐藏超出大小的部分</td>
<td>1. 可以清除浮动  2. 保证盒子里面的内容不会超出该盒子范围</td>
</tr>
</tbody></table>
<h2 id="8-综合案例：土豆网鼠标经过显示遮罩"><a href="#8-综合案例：土豆网鼠标经过显示遮罩" class="headerlink" title="8 综合案例：土豆网鼠标经过显示遮罩"></a>8 综合案例：土豆网鼠标经过显示遮罩</h2><h3 id="8-1-效果图"><a href="#8-1-效果图" class="headerlink" title="8.1. 效果图"></a>8.1. 效果图</h3><style>.sotmllsssyny{}</style><img data-src="/2024/11/18/css%E5%9F%BA%E7%A1%80/%E5%9C%9F%E8%B1%86%E7%BD%91%E6%A1%88%E4%BE%8B.png" class="sotmllsssyny">

<h3 id="8-2-案例目标"><a href="#8-2-案例目标" class="headerlink" title="8.2. 案例目标"></a>8.2. 案例目标</h3><p>1.练习元素的显示与隐藏</p>
<p>2.练习元素的定位</p>
<h3 id="8-3-核心原理"><a href="#8-3-核心原理" class="headerlink" title="8.3. 核心原理"></a>8.3. 核心原理</h3><p>原先半透明的黑色遮罩看不见， 鼠标经过 大盒子，就显示出来。</p>
<p>遮罩的盒子不占有位置， 就需要用绝对定位 和 display  配合使用。</p>
<h3 id="8-4-代码参考"><a href="#8-4-代码参考" class="headerlink" title="8.4. 代码参考"></a>8.4. 代码参考</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>仿土豆网显示隐藏遮罩案例<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.tudou</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">444px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">320px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">30px</span> auto;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.tudou</span> <span class="selector-tag">img</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.mask</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 隐藏遮罩层 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: none;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">top</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">left</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, .<span class="number">4</span>) <span class="built_in">url</span>(<span class="string">css基础/arr.png</span>) no-repeat center;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 当我们鼠标经过了 土豆这个盒子，就让里面遮罩层显示出来 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.tudou</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.mask</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 而是显示元素 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: block;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;tudou&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;mask&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">style</span>&gt;</span>.pcionvrnkxvd&#123;&#125;<span class="tag">&lt;/<span class="name">style</span>&gt;</span>&#123;% asset_img pcionvrnkxvd tudou.jpg &#x27;&quot;&quot;&quot;&quot;&#x27; %&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;tudou&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;mask&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">style</span>&gt;</span>.ybdtrurjtclc&#123;&#125;<span class="tag">&lt;/<span class="name">style</span>&gt;</span>&#123;% asset_img ybdtrurjtclc tudou.jpg &#x27;&quot;&quot;&quot;&quot;&#x27; %&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;tudou&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;mask&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">style</span>&gt;</span>.yrrngjlelbvm&#123;&#125;<span class="tag">&lt;/<span class="name">style</span>&gt;</span>&#123;% asset_img yrrngjlelbvm tudou.jpg &#x27;&quot;&quot;&quot;&quot;&#x27; %&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;tudou&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;mask&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">style</span>&gt;</span>.tqqffhqdbmny&#123;&#125;<span class="tag">&lt;/<span class="name">style</span>&gt;</span>&#123;% asset_img tqqffhqdbmny tudou.jpg &#x27;&quot;&quot;&quot;&quot;&#x27; %&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h1 id="前端基础CSS第七天"><a href="#前端基础CSS第七天" class="headerlink" title="前端基础CSS第七天"></a>前端基础CSS第七天</h1><blockquote>
<p>学习目标：</p>
<p>​	能够使用精灵图</p>
<p>​	能够使用字体图标</p>
<p>​	能够写出 CSS 三角</p>
<p>​	能够写出常见的 CSS 用户界面样式</p>
<p>​	能够说出常见的布局技巧</p>
</blockquote>
<h2 id="1-精灵图（重点）"><a href="#1-精灵图（重点）" class="headerlink" title="1. 精灵图（重点）"></a>1. 精灵图（重点）</h2><h3 id="1-1-为什么需要精灵图"><a href="#1-1-为什么需要精灵图" class="headerlink" title="1.1 为什么需要精灵图"></a>1.1 为什么需要精灵图</h3><img data-src="/2024/11/18/css%E5%9F%BA%E7%A1%80/1571482435259.png" class="" width="1571482435259">

<p>一个网页中往往会应用很多小的背景图像作为修饰，当网页中的图像过多时，服务器就会频繁地接收和发送请求图片，造成服务器请求压力过大，这将大大降低页面的加载速度。</p>
<p><strong>为什么使用精灵图（目的）：</strong></p>
<p>​	<strong>为了有效地减少服务器接收和发送请求的次数</strong>，<strong>提高</strong>页面的<strong>加载速度</strong>，出现了 <strong>CSS 精灵技术</strong>（也称 CSS Sprites、CSS 雪碧）。</p>
<p><strong>核心原理</strong>：</p>
<p>​	将网页中的一些小背景图像整合到一张大图中 ，这样服务器只需要一次请求就可以了。</p>
<p><strong>精灵图举例</strong>:</p>
<img data-src="/2024/11/18/css%E5%9F%BA%E7%A1%80/1571519067073.png" class="" width="1571519067073">

<h3 id="1-2-精灵图（sprites）的使用"><a href="#1-2-精灵图（sprites）的使用" class="headerlink" title="1.2 精灵图（sprites）的使用"></a>1.2 精灵图（sprites）的使用</h3><p>使用精灵图核心：</p>
<ol>
<li>精灵技术主要针对于背景图片使用。就是把多个小背景图片整合到一张大图片中。</li>
<li>这个大图片也称为 sprites  精灵图  或者 雪碧图</li>
<li>移动背景图片位置， 此时可以使用 background-position 。</li>
<li>移动的距离就是这个目标图片的 x 和 y 坐标。注意网页中的坐标有所不同</li>
<li>因为一般情况下都是往上往左移动，所以数值是负值。</li>
<li>使用精灵图的时候需要精确测量，每个小背景图片的大小和位置。</li>
</ol>
<p>使用精灵图核心总结：</p>
<ol>
<li><p>精灵图主要<strong>针对于小的背景图片</strong>使用。</p>
</li>
<li><p>主要借助于背景位置来实现—<strong>background-position</strong> 。</p>
</li>
<li><p>一般情况下精灵图都是<strong>负值</strong>。（千万注意网页中的坐标： x轴右边走是正值，左边走是负值， y轴同理。）</p>
</li>
</ol>
<h3 id="1-3-案例：拼出自己名字"><a href="#1-3-案例：拼出自己名字" class="headerlink" title="1.3 案例：拼出自己名字"></a>1.3 案例：拼出自己名字</h3><h4 id="1-3-1-案例效果"><a href="#1-3-1-案例效果" class="headerlink" title="1.3.1 案例效果"></a>1.3.1 案例效果</h4><img data-src="/2024/11/18/css%E5%9F%BA%E7%A1%80/1571519368229.png" class="" width="1571519368229">

<h4 id="1-3-2-代码参考"><a href="#1-3-2-代码参考" class="headerlink" title="1.3.2 代码参考"></a>1.3.2 代码参考</h4><p>结构</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;p&quot;</span>&gt;</span>p<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;i&quot;</span>&gt;</span>i<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;n&quot;</span>&gt;</span>n<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;k&quot;</span>&gt;</span>k<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>样式</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">span</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">css基础/abcd.jpg</span>) no-repeat;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.p</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">112px</span>;</span><br><span class="line">    <span class="comment">/* background-color: pink; */</span></span><br><span class="line">    <span class="attribute">background-position</span>:  -<span class="number">493px</span> -<span class="number">276px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.i</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">60px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">108px</span>;</span><br><span class="line">    <span class="comment">/* background-color: pink; */</span></span><br><span class="line">    <span class="attribute">background-position</span>: -<span class="number">327px</span> -<span class="number">142px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.n</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">108px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">109px</span>;</span><br><span class="line">    <span class="comment">/* background-color: pink; */</span></span><br><span class="line">    <span class="attribute">background-position</span>: -<span class="number">215px</span> -<span class="number">141px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.k</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">105px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">114px</span>;</span><br><span class="line">    <span class="comment">/* background-color: pink; */</span></span><br><span class="line">    <span class="attribute">background-position</span>: -<span class="number">495px</span> -<span class="number">142px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="2-字体图标"><a href="#2-字体图标" class="headerlink" title="2. 字体图标"></a>2. 字体图标</h2><h3 id="2-1-字体图标的产生"><a href="#2-1-字体图标的产生" class="headerlink" title="2.1 字体图标的产生"></a>2.1 字体图标的产生</h3><p>字体图标使用场景：  主要用于显示网页中通用、常用的一些小图标。</p>
<p>精灵图是有诸多优点的，但是缺点很明显。</p>
<p>1.图片文件还是比较大的。</p>
<p>2.图片本身放大和缩小会失真。</p>
<p>3.一旦图片制作完毕想要更换非常复杂。</p>
<p>此时，有一种技术的出现很好的解决了以上问题，就是<strong>字体图标 iconfont</strong>。</p>
<p><strong>字体图标</strong>可以为前端工程师提供一种方便高效的图标使用方式，<strong>展示的是图标，本质属于字体</strong>。</p>
<h3 id="2-2-字体图标的优点"><a href="#2-2-字体图标的优点" class="headerlink" title="2.2 字体图标的优点"></a>2.2 字体图标的优点</h3><p><strong>轻量级</strong>：一个图标字体要比一系列的图像要小。一旦字体加载了，图标就会马上渲染出来，减少了服务器请求</p>
<ul>
<li>灵活性：本质其实是文字，可以很随意的改变颜色、产生阴影、透明效果、旋转等</li>
<li>兼容性：几乎支持所有的浏览器，请放心使用</li>
<li>注意： 字体图标不能替代精灵技术，只是对工作中图标部分技术的提升和优化。</li>
</ul>
<p><strong>总结：</strong></p>
<p>1.如果遇到一些结构和样式比较简单的小图标，就用字体图标。<img data-src="/2024/11/18/css%E5%9F%BA%E7%A1%80/1571519724473.png" class="" width="1571519724473"></p>
<p>2.如果遇到一些结构和样式复杂一点的小图片，就用精灵图。</p>
<img data-src="/2024/11/18/css%E5%9F%BA%E7%A1%80/1571519739775.png" class="" width="1571519739775">



<p><strong>使用步骤</strong></p>
<p>字体图标是一些网页常见的小图标，我们直接网上下载即可。 因此使用可以分为：</p>
<p>1.字体图标的下载 </p>
<p>2.字体图标的引入 （引入到我们html页面中）</p>
<p>3.字体图标的追加 （以后添加新的小图标）</p>
<h3 id="2-3-字体图标的下载"><a href="#2-3-字体图标的下载" class="headerlink" title="2.3 字体图标的下载"></a><strong>2.3</strong> <strong>字体图标的下载</strong></h3><p><strong>推荐下载网站：</strong></p>
<ul>
<li><strong>icomoon</strong> <strong>字库</strong>  <a href="http://icomoon.io/">http://icomoon.io</a>    推荐指数  <strong>★★★★★</strong></li>
</ul>
<p>IcoMoon 成立于 2011 年，推出了第一个自定义图标字体生成器，它允许用户选择所需要的图标，使它们成一字型。该字库内容种类繁多，非常全面，唯一的遗憾是国外服务器，打开网速较慢。</p>
<ul>
<li><strong>阿里</strong> <strong>iconfont</strong> <strong>字库</strong>   <a href="http://www.iconfont.cn/">http://www.iconfont.cn/</a>   推荐指数   <strong>★★★★★</strong></li>
</ul>
<p>这个是阿里妈妈 M2UX 的一个 iconfont 字体图标字库，包含了淘宝图标库和阿里妈妈图标库。可以使用 AI制作图标上传生成。 重点是，免费！</p>
<h3 id="2-4-字体图标的引入"><a href="#2-4-字体图标的引入" class="headerlink" title="2.4 字体图标的引入"></a><strong>2.4</strong> <strong>字体图标的引入</strong></h3><p><strong>下载完毕之后，注意原先的文件不要删，后面会用</strong>。</p>
<ol>
<li>把下载包里面的 <strong>fonts</strong> 文件夹放入页面根目录下</li>
</ol>
<img data-src="/2024/11/18/css%E5%9F%BA%E7%A1%80/1571520092646.png" class="" width="1571520092646">



<ul>
<li><strong>字体文件格式</strong></li>
</ul>
<p>不同浏览器所支持的字体格式是不一样的，字体图标之所以兼容，就是因为包含了主流浏览器支持的字体文件。</p>
<p>1).TureType(  <strong>.ttf</strong>  )格式.ttf字体是Windows和Mac的最常见的字体，支持这种字体的浏览器有IE9+、Firefox3.5+、Chrome4+、Safari3+、Opera10+、iOS Mobile、Safari4.2+；</p>
<p>2).Web Open Font Format( <strong>.woff</strong> )格式woff字体，支持这种字体的浏览器有IE9+、Firefox3.5+、Chrome6+、Safari3.6+、Opera11.1+；</p>
<p>3).Embedded Open Type( <strong>.eot</strong> )格式.eot字体是IE专用字体，支持这种字体的浏览器有IE4+；</p>
<p>4).SVG(  .<strong>svg</strong>  )格式.svg字体是基于SVG字体渲染的一种格式，支持这种字体的浏览器有Chrome4+、Safari3.1+、Opera10.0+、iOS Mobile Safari3.2+；</p>
<p>2.在 CSS 样式中全局声明字体： 简单理解把这些字体文件通过css引入到我们页面中。</p>
<p>一定注意字体文件路径的问题</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">@font-face &#123;</span><br><span class="line">  font-family: &#x27;icomoon&#x27;;</span><br><span class="line">  src:  url(&#x27;fonts/icomoon.eot?7kkyc2&#x27;);</span><br><span class="line">  src:  url(&#x27;fonts/icomoon.eot?7kkyc2#iefix&#x27;) format(&#x27;embedded-opentype&#x27;),</span><br><span class="line">    url(&#x27;fonts/icomoon.ttf?7kkyc2&#x27;) format(&#x27;truetype&#x27;),</span><br><span class="line">    url(&#x27;fonts/icomoon.woff?7kkyc2&#x27;) format(&#x27;woff&#x27;),</span><br><span class="line">    url(&#x27;fonts/icomoon.svg?7kkyc2#icomoon&#x27;) format(&#x27;svg&#x27;);</span><br><span class="line">  font-weight: normal;</span><br><span class="line">  font-style: normal;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<ol start="3">
<li>html 标签内添加小图标。</li>
</ol>
<img data-src="/2024/11/18/css%E5%9F%BA%E7%A1%80/1571520411345.png" class="" width="1571520411345">

<ol start="4">
<li>给标签定义字体。</li>
</ol>
  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">span &#123;</span><br><span class="line">  font-family: &quot;icomoon&quot;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>  注意：务必保证 这个字体和上面@font-face里面的字体保持一致 </p>
  <img data-src="/2024/11/18/css%E5%9F%BA%E7%A1%80/1571520485350.png" class="" width="1571520485350">

<h3 id="2-5-字体图标的追加"><a href="#2-5-字体图标的追加" class="headerlink" title="2.5 字体图标的追加"></a>2.5 字体图标的追加</h3><p>如果工作中，原来的字体图标不够用了，我们需要添加新的字体图标到原来的字体文件中。</p>
<p>把压缩包里面的 <strong>selection.json</strong> 从新上传，然后选中自己想要新的图标，从新下载压缩包，并替换原来的文件即可。</p>
<img data-src="/2024/11/18/css%E5%9F%BA%E7%A1%80/1571520554317.png" class="" width="1571520554317">

<h3 id="2-6-字体图标加载的原理："><a href="#2-6-字体图标加载的原理：" class="headerlink" title="2.6 字体图标加载的原理："></a>2.6 字体图标加载的原理：</h3><img data-src="/2024/11/18/css%E5%9F%BA%E7%A1%80/%E5%AD%97%E4%BD%93%E5%9B%BE%E6%A0%87%E5%8A%A0%E8%BD%BD%E7%9A%84%E5%8E%9F%E7%90%86.gif" class="" width="1571520617270">

<h2 id="3-CSS-三角"><a href="#3-CSS-三角" class="headerlink" title="3. CSS 三角"></a>3. CSS 三角</h2><h3 id="3-1-介绍"><a href="#3-1-介绍" class="headerlink" title="3.1 介绍"></a>3.1 介绍</h3><p>网页中常见一些三角形，使用 CSS 直接画出来就可以，不必做成图片或者字体图标。</p>
<p>一张图， 你就知道 CSS 三角是怎么来的了, 做法如下：</p>
<img data-src="/2024/11/18/css%E5%9F%BA%E7%A1%80/1571520965966.png" class="" width="1571520965966">

<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">	<span class="attribute">width</span>: <span class="number">0</span>; </span><br><span class="line">   <span class="attribute">height</span>: <span class="number">0</span>;</span><br><span class="line">   <span class="attribute">border</span>: <span class="number">50px</span> solid transparent;</span><br><span class="line"><span class="attribute">border-color</span>: red green blue black;</span><br><span class="line"><span class="attribute">line-height</span>:<span class="number">0</span>;</span><br><span class="line">   <span class="attribute">font-size</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol>
<li>我们用css 边框可以模拟三角效果</li>
<li>宽度高度为0</li>
<li>我们4个边框都要写， 只保留需要的边框颜色，其余的不能省略，都改为 transparent 透明就好了</li>
<li>为了照顾兼容性 低版本的浏览器，加上 font-size: 0;  line-height: 0;</li>
</ol>
<h3 id="3-2-案例：京东三角"><a href="#3-2-案例：京东三角" class="headerlink" title="3.2 案例：京东三角"></a>3.2 案例：京东三角</h3><h4 id="3-2-1效果图"><a href="#3-2-1效果图" class="headerlink" title="3.2.1效果图"></a>3.2.1效果图</h4><img data-src="/2024/11/18/css%E5%9F%BA%E7%A1%80/1571521183026.png" class="" width="1571521183026">

<h4 id="3-2-2-代码参考"><a href="#3-2-2-代码参考" class="headerlink" title="3.2.2 代码参考"></a>3.2.2 代码参考</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>CSS 三角制作<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box1</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* border: 10px solid pink; */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-top</span>: <span class="number">10px</span> solid pink;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-right</span>: <span class="number">10px</span> solid red;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-bottom</span>: <span class="number">10px</span> solid blue;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-left</span>: <span class="number">10px</span> solid green;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box2</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: <span class="number">50px</span> solid transparent;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-left-color</span>: pink;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">100px</span> auto;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.jd</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">120px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">249px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.jd</span> <span class="selector-tag">span</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">right</span>: <span class="number">15px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">top</span>: -<span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 为了照顾兼容性 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">line-height</span>: <span class="number">0</span>;  </span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: <span class="number">5px</span> solid transparent;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-bottom-color</span>: pink;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;jd&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h2 id="4-CSS-用户界面样式"><a href="#4-CSS-用户界面样式" class="headerlink" title="4. CSS 用户界面样式"></a>4. CSS 用户界面样式</h2><p><strong>什么是界面样式</strong></p>
<p>所谓的界面样式，就是更改一些用户操作样式，以便提高更好的用户体验。</p>
<ul>
<li>更改用户的鼠标样式 </li>
<li>表单轮廓</li>
<li>防止表单域拖拽</li>
</ul>
<h3 id="4-1-鼠标样式-cursor"><a href="#4-1-鼠标样式-cursor" class="headerlink" title="4.1 鼠标样式 cursor"></a>4.1 鼠标样式 cursor</h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">li</span> &#123;</span><br><span class="line">	<span class="attribute">cursor</span>: pointer; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>设置或检索在对象上移动的鼠标指针采用何种系统预定义的光标形状。</p>
<img data-src="/2024/11/18/css%E5%9F%BA%E7%A1%80/1571521805183.png" class="" width="1571521805183">

<h3 id="4-2-轮廓线-outline"><a href="#4-2-轮廓线-outline" class="headerlink" title="4.2 轮廓线 outline"></a>4.2 轮廓线 outline</h3><p>给表单添加 outline: 0;   或者  outline: none; 样式之后，就可以去掉默认的蓝色边框。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">input</span> &#123;</span><br><span class="line">	<span class="attribute">outline</span>: none; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="4-3-防止拖拽文本域-resize"><a href="#4-3-防止拖拽文本域-resize" class="headerlink" title="4.3 防止拖拽文本域 resize"></a>4.3 防止拖拽文本域 resize</h3><p> 实际开发中，我们文本域右下角是不可以拖拽的。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">textarea</span>&#123; </span><br><span class="line">	<span class="attribute">resize</span>: none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>vertical-align 属性应用</p>
<h2 id="5-vertical-align-属性应用"><a href="#5-vertical-align-属性应用" class="headerlink" title="5. vertical-align 属性应用"></a>5. vertical-align 属性应用</h2><p>CSS 的 <strong>vertical-align</strong> 属性使用场景： 经常用于设置图片或者表单(行内块元素）和文字垂直对齐。</p>
<p>官方解释： 用于设置一个元素的<strong>垂直对齐方式</strong>，但是它只针对于行内元素或者行内块元素有效。</p>
<p>语法：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">vertical-align</span> : baseline | top | middle | bottom </span><br></pre></td></tr></table></figure>

<img data-src="/2024/11/18/css%E5%9F%BA%E7%A1%80/1571522023413.png" class="" width="1571522023413">

<img data-src="/2024/11/18/css%E5%9F%BA%E7%A1%80/1571522040645.png" class="" width="1571522040645">

<h3 id="5-1-图片、表单和文字对齐"><a href="#5-1-图片、表单和文字对齐" class="headerlink" title="5.1 图片、表单和文字对齐"></a><strong>5.1</strong> <strong>图片、表单和文字对齐</strong></h3><p>图片、表单都属于行内块元素，默认的 vertical-align 是基线对齐。</p>
<img data-src="/2024/11/18/css%E5%9F%BA%E7%A1%80/1571522093729.png" class="" width="1571522093729">

<p>此时可以给图片、表单这些行内块元素的 <strong>vertical-align 属性设置为 middle</strong> 就可以让文字和图片垂直居中对齐了。</p>
<h3 id="5-2-解决图片底部默认空白缝隙问题"><a href="#5-2-解决图片底部默认空白缝隙问题" class="headerlink" title="5.2 解决图片底部默认空白缝隙问题"></a>5.2 解决图片底部默认空白缝隙问题</h3><p>bug：图片底侧会有一个空白缝隙，原因是行内块元素会和文字的基线对齐。</p>
<p>主要解决方法有两种：</p>
<p>1.<strong>给图片</strong>添加 <strong>vertical-align:middle | top| bottom</strong> 等。 （提倡使用的）</p>
<p>2.把图片转换为块级元素  <strong>display: block</strong>; </p>
<img data-src="/2024/11/18/css%E5%9F%BA%E7%A1%80/1571522162225.png" class="" width="1571522162225">



<h2 id="6-溢出的文字省略号显示"><a href="#6-溢出的文字省略号显示" class="headerlink" title="6. 溢出的文字省略号显示"></a>6. 溢出的文字省略号显示</h2><h3 id="6-1-单行文本溢出显示省略号"><a href="#6-1-单行文本溢出显示省略号" class="headerlink" title="6.1 单行文本溢出显示省略号"></a>6.1 单行文本溢出显示省略号</h3><img data-src="/2024/11/18/css%E5%9F%BA%E7%A1%80/1571522317809.png" class="" width="1571522317809">

<p>单行文本溢出显示省略号–必须满足三个条件：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*1. 先强制一行内显示文本*/</span></span><br><span class="line"> <span class="attribute">white-space</span>: nowrap;  （ 默认 <span class="attribute">normal</span> 自动换行）</span><br><span class="line"> </span><br><span class="line"><span class="comment">/*2. 超出的部分隐藏*/</span></span><br><span class="line"> <span class="attribute">overflow</span>: hidden;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/*3. 文字用省略号替代超出的部分*/</span></span><br><span class="line"> <span class="attribute">text-overflow</span>: ellipsis;</span><br></pre></td></tr></table></figure>



<h3 id="6-2-多行文本溢出显示省略号（了解）"><a href="#6-2-多行文本溢出显示省略号（了解）" class="headerlink" title="6.2 多行文本溢出显示省略号（了解）"></a>6.2 多行文本溢出显示省略号（了解）</h3><img data-src="/2024/11/18/css%E5%9F%BA%E7%A1%80/1571522334591.png" class="" width="1571522334591">



<p>多行文本溢出显示省略号，<strong>有较大兼容性问题</strong>，适合于webKit浏览器或移动端（移动端大部分是webkit内核）</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*1. 超出的部分隐藏 */</span></span><br><span class="line"><span class="attribute">overflow</span>: hidden;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*2. 文字用省略号替代超出的部分 */</span></span><br><span class="line"><span class="attribute">text-overflow</span>: ellipsis;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 3. 弹性伸缩盒子模型显示 */</span></span><br><span class="line"><span class="attribute">display</span>: -webkit-box;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 4. 限制在一个块元素显示的文本的行数 */</span></span><br><span class="line">-webkit-<span class="selector-tag">line</span>-clamp: <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 5. 设置或检索伸缩盒对象的子元素的排列方式 */</span></span><br><span class="line">-webkit-box-orient: vertical;</span><br></pre></td></tr></table></figure>

<p><strong>更推荐让后台人员来做这个效果，因为后台人员可以设置显示多少个字，操作更简单。</strong></p>
<h2 id="7-常见布局技巧"><a href="#7-常见布局技巧" class="headerlink" title="7. 常见布局技巧"></a>7. 常见布局技巧</h2><p><strong>巧妙利用一个技术更快更好的布局：</strong></p>
<ol>
<li>margin负值的运用</li>
<li>文字围绕浮动元素</li>
<li>行内块的巧妙运用</li>
<li>CSS三角强化</li>
</ol>
<h3 id="7-1-margin负值运用"><a href="#7-1-margin负值运用" class="headerlink" title="7.1. margin负值运用"></a>7.1. margin负值运用</h3><img data-src="/2024/11/18/css%E5%9F%BA%E7%A1%80/1571522666082.png" class="" width="1571522666082">

<img data-src="/2024/11/18/css%E5%9F%BA%E7%A1%80/1571522683897.png" class="" width="1571522683897">

<p>1.让每个盒子margin 往左侧移动 -1px 正好压住相邻盒子边框</p>
<p>2.鼠标经过某个盒子的时候，提高当前盒子的层级即可（如果没有有定位，则加相对定位（保留位置），如果有定位，则加z-index）</p>
<h3 id="7-2-文字围绕浮动元素"><a href="#7-2-文字围绕浮动元素" class="headerlink" title="7.2 文字围绕浮动元素"></a>7.2 文字围绕浮动元素</h3><p><strong>效果</strong></p>
<img data-src="/2024/11/18/css%E5%9F%BA%E7%A1%80/1571522777745.png" class="" width="1571522777745">

<p><strong>布局示意图</strong></p>
<img data-src="/2024/11/18/css%E5%9F%BA%E7%A1%80/1571522761996.png" class="" width="1571522761996">

<p><strong>巧妙运用浮动元素不会压住文字的特性</strong></p>
<h3 id="7-3-行内块巧妙运用"><a href="#7-3-行内块巧妙运用" class="headerlink" title="7.3 行内块巧妙运用"></a>7.3 行内块巧妙运用</h3><img data-src="/2024/11/18/css%E5%9F%BA%E7%A1%80/1571522898744.png" class="" width="1571522898744">

<p>页码在页面中间显示:</p>
<ol>
<li>把这些链接盒子转换为行内块， 之后给父级指定  text-align:center;</li>
<li>利用行内块元素中间有缝隙，并且给父级添加 text-align:center; 行内块元素会水平会居中</li>
</ol>
<img data-src="/2024/11/18/css%E5%9F%BA%E7%A1%80/1571522910580.png" class="" width="1571522910580">

<h3 id="7-4-CSS-三角强化-案例"><a href="#7-4-CSS-三角强化-案例" class="headerlink" title="7.4. CSS 三角强化 案例"></a>7.4. CSS 三角强化 案例</h3><h4 id="7-4-1-原理"><a href="#7-4-1-原理" class="headerlink" title="7.4.1 原理"></a><strong>7.4.1 原理</strong></h4><img data-src="/2024/11/18/css%E5%9F%BA%E7%A1%80/1571550959181.png" class="" width="1571550959181">

<img data-src="/2024/11/18/css%E5%9F%BA%E7%A1%80/1571551000391.png" class="" width="1571551000391">

<img data-src="/2024/11/18/css%E5%9F%BA%E7%A1%80/1571548058053.png" class="" width="1571548058053">



<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.box1</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        </span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 把上边框宽度调大 */</span></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* border-top: 100px solid transparent;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">        border-right: 50px solid skyblue; */</span></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 左边和下边的边框宽度设置为0 */</span></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* border-bottom: 0 solid blue;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">        border-left: 0 solid green; */</span></span></span><br><span class="line"><span class="language-css">        </span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 1.只保留右边的边框有颜色 */</span></span></span><br><span class="line"><span class="language-css">        <span class="attribute">border-color</span>: transparent red transparent transparent;</span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 2. 样式都是solid */</span></span></span><br><span class="line"><span class="language-css">        <span class="attribute">border-style</span>: solid;</span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 3. 上边框宽度要大， 右边框 宽度稍小， 其余的边框该为 0 */</span></span></span><br><span class="line"><span class="language-css">        <span class="attribute">border-width</span>: <span class="number">100px</span> <span class="number">50px</span> <span class="number">0</span> <span class="number">0</span> ;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="7-4-2-案例效果"><a href="#7-4-2-案例效果" class="headerlink" title="7.4.2 案例效果"></a>7.4.2 案例效果</h4><img data-src="/2024/11/18/css%E5%9F%BA%E7%A1%80/1571548099631.png" class="" width="1571548099631">

<h4 id="7-4-3-代码参考"><a href="#7-4-3-代码参考" class="headerlink" title="7.4.3 代码参考"></a><strong>7.4.3 代码参考</strong></h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>CSS三角强化的巧妙运用<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="selector-class">.price</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">width</span>: <span class="number">160px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">height</span>: <span class="number">24px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">line-height</span>: <span class="number">24px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">border</span>: <span class="number">1px</span> solid red;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">margin</span>: <span class="number">0</span> auto;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">            <span class="selector-class">.miaosha</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">width</span>: <span class="number">90px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">height</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">background-color</span>:red;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">color</span>: <span class="number">#fff</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">font-weight</span>: <span class="number">700</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">margin-right</span>: <span class="number">8px</span>;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">            <span class="selector-class">.miaosha</span> <span class="selector-tag">i</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">right</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">top</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">width</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">height</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">border-color</span>: transparent <span class="number">#fff</span> transparent transparent;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">border-style</span>: solid;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">border-width</span>: <span class="number">24px</span> <span class="number">10px</span> <span class="number">0</span> <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">            <span class="selector-class">.origin</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">font-size</span>: <span class="number">12px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">color</span>: gray;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">text-decoration</span>: line-through;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">        </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;price&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;miaosha&quot;</span>&gt;</span></span><br><span class="line">                ¥1650</span><br><span class="line">                <span class="tag">&lt;<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;origin&quot;</span>&gt;</span>¥5650<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="8-CSS-初始化"><a href="#8-CSS-初始化" class="headerlink" title="8. CSS 初始化"></a>8. CSS 初始化</h2><p>不同浏览器对有些标签的默认值是不同的，为了消除不同浏览器对HTML文本呈现的差异，照顾浏览器的兼容，我们需要对CSS 初始化</p>
<p>简单理解： CSS初始化是指重设浏览器的样式。 (也称为CSS reset）</p>
<p>每个网页都必须首先进行 CSS初始化。</p>
<p>这里我们以 京东CSS初始化代码为例。</p>
<p><strong>Unicode编码字体：</strong></p>
<p>把中文字体的名称用相应的Unicode编码来代替，这样就可以有效的避免浏览器解释CSS代码时候出现乱码的问题。</p>
<p>比如：</p>
<p>黑体 \9ED1\4F53<br>宋体 \5B8B\4F53<br>微软雅黑 \5FAE\8F6F\96C5\9ED1</p>
]]></content>
      <categories>
        <category>前端</category>
        <category>前端基础</category>
      </categories>
      <tags>
        <tag>前端基础</tag>
        <tag>前端</tag>
        <tag>css</tag>
      </tags>
  </entry>
  <entry>
    <title>Vue2.0</title>
    <url>/2024/11/19/Vue2-0/</url>
    <content><![CDATA[<h1 id="day01"><a href="#day01" class="headerlink" title="day01"></a>day01</h1><h2 id="一、为什么要学习Vue"><a href="#一、为什么要学习Vue" class="headerlink" title="一、为什么要学习Vue"></a>一、为什么要学习Vue</h2><p>1.前端必备技能</p>
<p>2.岗位多，绝大互联网公司都在使用Vue</p>
<p>3.提高开发效率</p>
<p>4.高薪必备技能（Vue2+Vue3）</p>
<h2 id="二、什么是Vue"><a href="#二、什么是Vue" class="headerlink" title="二、什么是Vue"></a>二、什么是Vue</h2><p>概念：Vue (读音 &#x2F;vjuː&#x2F;，类似于 view) 是一套 **构建用户界面 ** 的 <strong>渐进式</strong> <strong>框架</strong></p>
<p>Vue2官网：<a href="https://v2.cn.vuejs.org/">https://v2.cn.vuejs.org/</a></p>
<h3 id="1-什么是构建用户界面"><a href="#1-什么是构建用户界面" class="headerlink" title="1.什么是构建用户界面"></a>1.什么是构建用户界面</h3><p><strong>基于数据</strong>渲染出用户可以看到的<strong>界面</strong></p>
<img data-src="/2024/11/19/Vue2-0/1681875887026.png" class="" width="68187588702">

<h3 id="2-什么是渐进式"><a href="#2-什么是渐进式" class="headerlink" title="2.什么是渐进式"></a>2.什么是渐进式</h3><p>所谓渐进式就是循序渐进，不一定非得把Vue中的所有API都学完才能开发Vue，可以学一点开发一点</p>
<h4 id="Vue的两种开发方式："><a href="#Vue的两种开发方式：" class="headerlink" title="Vue的两种开发方式："></a>Vue的两种开发方式：</h4><ol>
<li><p>Vue核心包开发</p>
<p>场景：局部模块改造</p>
</li>
<li><p>Vue核心包&amp;Vue插件&amp;工程化</p>
<p>场景：整站开发</p>
</li>
</ol>
<h3 id="3-什么是框架"><a href="#3-什么是框架" class="headerlink" title="3.什么是框架"></a>3.什么是框架</h3><p>所谓框架：就是一套完整的解决方案</p>
<p><strong>举个栗子</strong>	</p>
<p>如果把一个完整的项目比喻为一个装修好的房子，那么框架就是一个毛坯房。</p>
<p>我们只需要在“毛坯房”的基础上，增加功能代码即可。</p>
<p>提到框架，不得不提一下库。</p>
<ul>
<li>库，类似工具箱，是一堆方法的集合，比如 axios、lodash、echarts等</li>
<li>框架，是一套完整的解决方案，实现了大部分功能，我们只需要按照一定的规则去编码即可。</li>
</ul>
<p>下图是 库 和 框架的对比。</p>
<img data-src="/2024/11/19/Vue2-0/1681876620277.png" class="" width="68187662027">

<p>框架的特点：有一套必须让开发者遵守的<strong>规则</strong>或者<strong>约束</strong></p>
<p>咱们学框架就是学习的这些规则 <a href="https://v2.cn.vuejs.org/">官网</a></p>
<h3 id="总结：什么是Vue？"><a href="#总结：什么是Vue？" class="headerlink" title="总结：什么是Vue？"></a>总结：什么是Vue？</h3><p>Vue是什么：</p>
<p>什么是构建用户界面：</p>
<p>什么是渐进式：</p>
<p>什么是框架：</p>
<h2 id="三、创建Vue实例"><a href="#三、创建Vue实例" class="headerlink" title="三、创建Vue实例"></a>三、创建Vue实例</h2><p>我们已经知道了Vue框架可以 基于数据帮助我们渲染出用户界面，那应该怎么做呢？</p>
<img data-src="/2024/11/19/Vue2-0/1681877190137.png" class="" width="68187719013">

<p>比如就上面这个数据，基于提供好的msg 怎么渲染后右侧可展示的数据呢？</p>
<p><strong>核心步骤（4步）：</strong></p>
<ol>
<li>准备容器</li>
<li>引包（官网） — 开发版本&#x2F;生产版本</li>
<li>创建Vue实例  new Vue()</li>
<li>指定配置项，渲染数据<ol>
<li>el:指定挂载点</li>
<li>data提供数据</li>
</ol>
</li>
</ol>
<img data-src="/2024/11/19/Vue2-0/1681877405007.png" class="" width="68187740500">

<p><strong>总结：创建Vue实例需要执行哪4步</strong></p>
<h2 id="四、插值表达式-123-123-125-125"><a href="#四、插值表达式-123-123-125-125" class="headerlink" title="四、插值表达式 &#123;&#123;&#125;&#125;"></a>四、插值表达式 &#123;&#123;&#125;&#125;</h2><p>插值表达式是一种Vue的模板语法</p>
<p>我们可以用插值表达式渲染出Vue提供的数据</p>
<img data-src="/2024/11/19/Vue2-0/1681886494417.png" class="" width="68188649441">

<h3 id="1-作用：利用表达式进行插值，渲染到页面中"><a href="#1-作用：利用表达式进行插值，渲染到页面中" class="headerlink" title="1.作用：利用表达式进行插值，渲染到页面中"></a>1.作用：利用表达式进行插值，渲染到页面中</h3><p>表达式：是可以被求值的代码，JS引擎会讲其计算出一个结果</p>
<p>以下的情况都是表达式：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">money + <span class="number">100</span></span><br><span class="line">money - <span class="number">100</span></span><br><span class="line">money * <span class="number">10</span></span><br><span class="line">money / <span class="number">10</span> </span><br><span class="line">price &gt;= <span class="number">100</span> ? <span class="string">&#x27;真贵&#x27;</span>:<span class="string">&#x27;还行&#x27;</span></span><br><span class="line">obj.<span class="property">name</span></span><br><span class="line">arr[<span class="number">0</span>]</span><br><span class="line"><span class="title function_">fn</span>()</span><br><span class="line">obj.<span class="title function_">fn</span>()</span><br></pre></td></tr></table></figure>



<h3 id="2-语法"><a href="#2-语法" class="headerlink" title="2.语法"></a>2.语法</h3><p>插值表达式语法：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;h3&gt;&#123;&#123;title&#125;&#125;&lt;h3&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123;nickName.toUpperCase()&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123;age &gt;= 18 ? &#x27;成年&#x27;:&#x27;未成年&#x27;&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123;obj.name&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123;fn()&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br></pre></td></tr></table></figure>



<h3 id="3-错误用法"><a href="#3-错误用法" class="headerlink" title="3.错误用法"></a>3.错误用法</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="number">1.</span>在插值表达式中使用的数据 必须在data中进行了提供</span><br><span class="line">&lt;p&gt;&#123;&#123;hobby&#125;&#125;&lt;<span class="regexp">/p&gt;  /</span>/如果在data中不存在 则会报错</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span>支持的是表达式，而非语句，比如：<span class="keyword">if</span>   <span class="keyword">for</span> ...</span><br><span class="line">&lt;p&gt;&#123;&#123;<span class="keyword">if</span>&#125;&#125;&lt;/p&gt;</span><br><span class="line"></span><br><span class="line"><span class="number">3.</span>不能在标签属性中使用 &#123;&#123;  &#125;&#125; 插值 (插值表达式只能标签中间使用)</span><br><span class="line">&lt;p title=<span class="string">&quot;&#123;&#123;username&#125;&#125;&quot;</span>&gt;我是P标签&lt;/p&gt;</span><br></pre></td></tr></table></figure>



<h3 id="4-总结"><a href="#4-总结" class="headerlink" title="4.总结"></a>4.总结</h3><p>1.插值表达式的作用是什么</p>
<p>2.语法是什么</p>
<p>3.插值表达式的注意事项</p>
<h2 id="五、响应式特性"><a href="#五、响应式特性" class="headerlink" title="五、响应式特性"></a>五、响应式特性</h2><h3 id="1-什么是响应式？"><a href="#1-什么是响应式？" class="headerlink" title="1.什么是响应式？"></a>1.什么是响应式？</h3><p>​	简单理解就是数据变，视图对应变。 </p>
<h3 id="2-如何访问-和-修改-data中的数据（响应式演示）"><a href="#2-如何访问-和-修改-data中的数据（响应式演示）" class="headerlink" title="2.如何访问 和 修改 data中的数据（响应式演示）"></a>2.如何访问 和 修改 data中的数据（响应式演示）</h3><p>data中的数据, 最终会被添加到实例上</p>
<p>① 访问数据： “实例.属性名”</p>
<p>② 修改数据： “实例.属性名”&#x3D; “值”</p>
<img data-src="/2024/11/19/Vue2-0/1681888539340.png" class="" width="68188853934">



<h3 id="3-总结"><a href="#3-总结" class="headerlink" title="3.总结"></a>3.总结</h3><ol>
<li>什么是响应式</li>
<li>如何访问和修改data中的数据呢</li>
</ol>
<h2 id="六、Vue开发者工具安装"><a href="#六、Vue开发者工具安装" class="headerlink" title="六、Vue开发者工具安装"></a>六、Vue开发者工具安装</h2><ol>
<li>通过谷歌应用商店安装（国外网站）</li>
<li>极简插件下载（推荐） <a href="https://chrome.zzzmh.cn/index">https://chrome.zzzmh.cn/index</a></li>
</ol>
<p>安装步骤：</p>
<img data-src="/2024/11/19/Vue2-0/1681889390406.png" class="" width="68188939040">



<p>安装之后可以F12后看到多一个Vue的调试面板</p>
<img data-src="/2024/11/19/Vue2-0/1681889483446.png" class="" width="68188948344">



<h2 id="七、Vue中的常用指令"><a href="#七、Vue中的常用指令" class="headerlink" title="七、Vue中的常用指令"></a>七、Vue中的常用指令</h2><p><strong>概念：</strong>指令（Directives）是 Vue 提供的带有 <strong>v- 前缀</strong> 的 特殊 标签<strong>属性</strong>。</p>
<p>为啥要学：提高程序员操作 DOM 的效率。</p>
<p>vue 中的指令按照不同的用途可以分为如下 6 大类：</p>
<ul>
<li>内容渲染指令（v-html、v-text）</li>
<li>条件渲染指令（v-show、v-if、v-else、v-else-if）</li>
<li>事件绑定指令（v-on）</li>
<li>属性绑定指令 （v-bind）</li>
<li>双向绑定指令（v-model）</li>
<li>列表渲染指令（v-for）</li>
</ul>
<p>指令是 vue 开发中最基础、最常用、最简单的知识点。</p>
<h2 id="八、内容渲染指令"><a href="#八、内容渲染指令" class="headerlink" title="八、内容渲染指令"></a>八、内容渲染指令</h2><p>内容渲染指令用来辅助开发者渲染 DOM 元素的文本内容。常用的内容渲染指令有如下2 个：</p>
<ul>
<li><p>v-text（类似innerText）</p>
</li>
<li><ul>
<li>使用语法：<code>&lt;p v-text=&quot;uname&quot;&gt;hello&lt;/p&gt;</code>，意思是将 uame 值渲染到 p 标签中</li>
<li>类似 innerText，使用该语法，会覆盖 p 标签原有内容</li>
</ul>
</li>
<li><p>v-html（类似 innerHTML）</p>
</li>
<li><ul>
<li>使用语法：<code>&lt;p v-html=&quot;intro&quot;&gt;hello&lt;/p&gt;</code>，意思是将 intro 值渲染到 p 标签中</li>
<li>类似 innerHTML，使用该语法，会覆盖 p 标签原有内容</li>
<li>类似 innerHTML，使用该语法，能够将HTML标签的样式呈现出来。</li>
</ul>
</li>
</ul>
<p>代码演示：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"> </span><br><span class="line">  &lt;div id=<span class="string">&quot;app&quot;</span>&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>个人信息<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span><br><span class="line">	<span class="comment">// 既然指令是vue提供的特殊的html属性，所以咱们写的时候就当成属性来用即可</span></span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">p</span> <span class="attr">v-text</span>=<span class="string">&quot;uname&quot;</span>&gt;</span>姓名：<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span> </span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">p</span> <span class="attr">v-html</span>=<span class="string">&quot;intro&quot;</span>&gt;</span>简介：<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line">  &lt;/div&gt; </span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">        const app = new Vue(&#123;</span><br><span class="line">            el:&#x27;#app&#x27;,</span><br><span class="line">            data:&#123;</span><br><span class="line">                uname:&#x27;张三&#x27;,</span><br><span class="line">                intro:&#x27;&lt;h2&gt;这是一个&lt;strong&gt;非常优秀&lt;/strong&gt;的boy&lt;h2&gt;&#x27;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>



<h2 id="九、条件渲染指令"><a href="#九、条件渲染指令" class="headerlink" title="九、条件渲染指令"></a>九、条件渲染指令</h2><p>条件判断指令，用来辅助开发者按需控制 DOM 的显示与隐藏。条件渲染指令有如下两个，分别是：</p>
<ol>
<li><p>v-show</p>
<ol>
<li>作用：  控制元素显示隐藏</li>
<li>语法：  v-show &#x3D; “表达式”   表达式值为 true 显示， false 隐藏</li>
<li>原理：  切换 display:none 控制显示隐藏</li>
<li>场景：频繁切换显示隐藏的场景</li>
</ol>
<img data-src="/2024/11/19/Vue2-0/1681891228284.png" class="" width="68189122828">
</li>
<li><p>v-if</p>
<ol>
<li>作用：  控制元素显示隐藏（条件渲染）</li>
<li>语法：  v-if&#x3D; “表达式”          表达式值 true显示， false 隐藏</li>
<li>原理：  基于条件判断，是否创建 或 移除元素节点</li>
<li>场景：  要么显示，要么隐藏，不频繁切换的场景</li>
</ol>
<img data-src="/2024/11/19/Vue2-0/1681891237750.png" class="" width="68189123775">

<p>示例代码：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;!-- </span><br><span class="line">  v-show底层原理：切换 css 的 <span class="attr">display</span>: none 来控制显示隐藏</span><br><span class="line">  v-<span class="keyword">if</span>  底层原理：根据 判断条件 控制元素的 创建 和 移除（条件渲染）</span><br><span class="line">--&gt;</span><br><span class="line">   </span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-show</span>=<span class="string">&quot;flag&quot;</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span>我是v-show控制的盒子<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-if</span>=<span class="string">&quot;flag&quot;</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span>我是v-if控制的盒子<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">   </span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="keyword">const</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">data</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">flag</span>: <span class="literal">false</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>
</li>
<li><p>v-else 和 v-else-if</p>
<ol>
<li>作用：辅助v-if进行判断渲染</li>
<li>语法：v-else  v-else-if&#x3D;”表达式”</li>
<li>需要紧接着v-if使用</li>
</ol>
</li>
</ol>
<p>示例代码：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;div id=<span class="string">&quot;app&quot;</span>&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">p</span> <span class="attr">v-if</span>=<span class="string">&quot;gender === 1&quot;</span>&gt;</span>性别：♂ 男<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">p</span> <span class="attr">v-else</span>&gt;</span>性别：♀ 女<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line">  &lt;hr&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">p</span> <span class="attr">v-if</span>=<span class="string">&quot;score &gt;= 90&quot;</span>&gt;</span>成绩评定A：奖励电脑一台<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">p</span> <span class="attr">v-else-if</span>=<span class="string">&quot;score &gt;= 70&quot;</span>&gt;</span>成绩评定B：奖励周末郊游<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">p</span> <span class="attr">v-else-if</span>=<span class="string">&quot;score &gt;= 60&quot;</span>&gt;</span>成绩评定C：奖励零食礼包<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">p</span> <span class="attr">v-else</span>&gt;</span>成绩评定D：惩罚一周不能玩手机<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="keyword">const</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">data</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">gender</span>: <span class="number">2</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">score</span>: <span class="number">95</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>



<h2 id="十、事件绑定指令"><a href="#十、事件绑定指令" class="headerlink" title="十、事件绑定指令"></a>十、事件绑定指令</h2><p>使用Vue时，如需为DOM注册事件，及其的简单，语法如下：</p>
<ul>
<li>&lt;button v-on:事件名&#x3D;”内联语句”&gt;按钮</button></li>
<li>&lt;button v-on:事件名&#x3D;”处理函数”&gt;按钮</button></li>
<li>&lt;button v-on:事件名&#x3D;”处理函数(实参)”&gt;按钮</button></li>
<li><code>v-on:</code> 简写为 <strong>@</strong></li>
</ul>
<ol>
<li><p>内联语句</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;div id=<span class="string">&quot;app&quot;</span>&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;count--&quot;</span>&gt;</span>-<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123; count &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">&quot;count++&quot;</span>&gt;</span>+<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">const</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">data</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="attr">count</span>: <span class="number">100</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>
</li>
<li><p>事件处理函数</p>
<p>注意：</p>
<ul>
<li>事件处理函数应该写到一个跟data同级的配置项（methods）中</li>
<li>methods中的函数内部的this都指向Vue实例</li>
</ul>
</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;div id=<span class="string">&quot;app&quot;</span>&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;fn&quot;</span>&gt;</span>切换显示隐藏<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">v-show</span>=<span class="string">&quot;isShow&quot;</span>&gt;</span>黑马程序员<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">const</span> app4 = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">data</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="attr">isShow</span>: <span class="literal">true</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">methods</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="title function_">fn</span> () &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="comment">// 让提供的所有methods中的函数，this都指向当前实例</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="comment">// console.log(&#x27;执行了fn&#x27;, app.isShow)</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="comment">// console.log(app3 === this)</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="variable language_">this</span>.<span class="property">isShow</span> = !<span class="variable language_">this</span>.<span class="property">isShow</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<p>  3.给事件处理函数传参</p>
<ul>
<li><p>如果不传递任何参数，则方法无需加小括号；methods方法中可以直接使用 e 当做事件对象</p>
</li>
<li><p>如果传递了参数，则实参 <code>$event</code> 表示事件对象，固定用法。</p>
</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"> &lt;style&gt;</span><br><span class="line">    .<span class="property">box</span> &#123;</span><br><span class="line">      <span class="attr">border</span>: 3px solid #<span class="number">000000</span>;</span><br><span class="line">      border-<span class="attr">radius</span>: 10px;</span><br><span class="line">      <span class="attr">padding</span>: 20px;</span><br><span class="line">      <span class="attr">margin</span>: 20px;</span><br><span class="line">      <span class="attr">width</span>: 200px;</span><br><span class="line">    &#125;</span><br><span class="line">    h3 &#123;</span><br><span class="line">      <span class="attr">margin</span>: 10px <span class="number">0</span> 20px <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    p &#123;</span><br><span class="line">      <span class="attr">margin</span>: 20px;</span><br><span class="line">    &#125;</span><br><span class="line">  &lt;/style&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">h3</span>&gt;</span>小黑自动售货机<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;buy(5)&quot;</span>&gt;</span>可乐5元<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;buy(10)&quot;</span>&gt;</span>咖啡10元<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;buy(8)&quot;</span>&gt;</span>牛奶8元<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>银行卡余额：&#123;&#123; money &#125;&#125;元<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">const</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">data</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="attr">money</span>: <span class="number">100</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">methods</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="title function_">buy</span> (price) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="variable language_">this</span>.<span class="property">money</span> -= price</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br></pre></td></tr></table></figure>



<h2 id="十一、属性绑定指令"><a href="#十一、属性绑定指令" class="headerlink" title="十一、属性绑定指令"></a>十一、属性绑定指令</h2><ol>
<li><strong>作用：</strong>动态设置html的标签属性 比如：src、url、title</li>
<li><strong>语法</strong>：**v-bind:**属性名&#x3D;“表达式”</li>
<li>**v-bind:**可以简写成 &#x3D;&gt;   <strong>:</strong></li>
</ol>
<p>比如，有一个图片，它的 <code>src</code> 属性值，是一个图片地址。这个地址在数据 data 中存储。</p>
<p>则可以这样设置属性值：</p>
<ul>
<li><code>&lt;img v-bind:src=&quot;url&quot; /&gt;</code></li>
<li><code>&lt;img :src=&quot;url&quot; /&gt;</code>   （v-bind可以省略）</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;div id=<span class="string">&quot;app&quot;</span>&gt;</span><br><span class="line">   &lt;!-- v-<span class="attr">bind</span>:<span class="function"><span class="params">src</span>   =&gt;</span>   :src --&gt;</span><br><span class="line">   <span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">v-bind:src</span>=<span class="string">&quot;imgUrl&quot;</span> <span class="attr">v-bind:title</span>=<span class="string">&quot;msg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">   <span class="tag">&lt;<span class="name">img</span> <span class="attr">:src</span>=<span class="string">&quot;imgUrl&quot;</span> <span class="attr">:title</span>=<span class="string">&quot;msg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"> <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"> <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">   <span class="keyword">const</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">     <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">     <span class="attr">data</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">       <span class="attr">imgUrl</span>: <span class="string">&#x27;./imgs/10-02.png&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">       <span class="attr">msg</span>: <span class="string">&#x27;hello 波仔&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">     &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">   &#125;)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"> </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>



<h2 id="十二、小案例-波仔的学习之旅"><a href="#十二、小案例-波仔的学习之旅" class="headerlink" title="十二、小案例-波仔的学习之旅"></a>十二、小案例-波仔的学习之旅</h2><p>需求：默认展示数组中的第一张图片，点击上一页下一页来回切换数组中的图片</p>
<p>实现思路：</p>
<p>1.数组存储图片路径 [‘url1’,’url2’,’url3’，…]</p>
<p>2.可以准备个下标index 去数组中取图片地址。</p>
<p>3.通过v-bind给src绑定当前的图片地址</p>
<p>4.点击上一页下一页只需要修改下标的值即可</p>
<p>5.当展示第一张的时候，上一页按钮应该隐藏。展示最后一张的时候，下一页按钮应该隐藏</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;div id=<span class="string">&quot;app&quot;</span>&gt;</span><br><span class="line">   <span class="language-xml"><span class="tag">&lt;<span class="name">button</span> <span class="attr">v-show</span>=<span class="string">&quot;index &gt; 0&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;index--&quot;</span>&gt;</span>上一页<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line">   <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">     <span class="tag">&lt;<span class="name">img</span> <span class="attr">:src</span>=<span class="string">&quot;list[index]&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">   <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-show</span>=<span class="string">&quot;index &lt; list.length - 1&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;index++&quot;</span>&gt;</span>下一页<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"> <span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"> <span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">   <span class="keyword">const</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">     <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">     <span class="attr">data</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">       <span class="attr">index</span>: <span class="number">0</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">       <span class="attr">list</span>: [</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">         <span class="string">&#x27;./imgs/11-00.gif&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">         <span class="string">&#x27;./imgs/11-01.gif&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">         <span class="string">&#x27;./imgs/11-02.gif&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">         <span class="string">&#x27;./imgs/11-03.gif&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">         <span class="string">&#x27;./imgs/11-04.png&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">         <span class="string">&#x27;./imgs/11-05.png&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">       ]</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">     &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">   &#125;)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"> </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>



<h2 id="十三、列表渲染指令"><a href="#十三、列表渲染指令" class="headerlink" title="十三、列表渲染指令"></a>十三、列表渲染指令</h2><p>Vue 提供了 v-for 列表渲染指令，用来辅助开发者基于一个数组来循环渲染一个列表结构。</p>
<p>v-for 指令需要使用 <code>(item, index) in arr</code> 形式的特殊语法，其中：</p>
<ul>
<li>item 是数组中的每一项</li>
<li>index 是每一项的索引，不需要可以省略</li>
<li>arr 是被遍历的数组</li>
</ul>
<p>此语法也可以遍历<strong>对象和数字</strong></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//遍历对象</span></span><br><span class="line">&lt;div v-<span class="keyword">for</span>=<span class="string">&quot;(value, key, index) in object&quot;</span>&gt;&#123;&#123;value&#125;&#125;&lt;/div&gt;</span><br><span class="line"><span class="attr">value</span>:对象中的值</span><br><span class="line"><span class="attr">key</span>:对象中的键</span><br><span class="line"><span class="attr">index</span>:遍历索引从<span class="number">0</span>开始</span><br><span class="line"></span><br><span class="line"><span class="comment">//遍历数字</span></span><br><span class="line">&lt;p v-<span class="keyword">for</span>=<span class="string">&quot;item in 10&quot;</span>&gt;&#123;&#123;item&#125;&#125;&lt;/p&gt;</span><br><span class="line">item从<span class="number">1</span> 开始</span><br></pre></td></tr></table></figure>



<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;div id=<span class="string">&quot;app&quot;</span>&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>小黑水果店<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span></span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(item, index) in list&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        &#123;&#123; item &#125;&#125; - &#123;&#123; index &#125;&#125;</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;item in list&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        &#123;&#123; item &#125;&#125;</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span><br><span class="line">  &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">const</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">data</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="attr">list</span>: [<span class="string">&#x27;西瓜&#x27;</span>, <span class="string">&#x27;苹果&#x27;</span>, <span class="string">&#x27;鸭梨&#x27;</span>, <span class="string">&#x27;榴莲&#x27;</span>]</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>



<h2 id="十四、小案例-小黑的书架"><a href="#十四、小案例-小黑的书架" class="headerlink" title="十四、小案例-小黑的书架"></a>十四、小案例-小黑的书架</h2><p>需求：</p>
<p>1.根据左侧数据渲染出右侧列表（v-for）</p>
<p>2.点击删除按钮时，应该把当前行从列表中删除（获取当前行的id，利用filter进行过滤）</p>
<img data-src="/2024/11/19/Vue2-0/1681896632672.png" class="" width="68189663267">

<p>准备代码：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;div id=<span class="string">&quot;app&quot;</span>&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>小黑的书架<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span></span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(item, index) in booksList&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;item.id&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123; item.name &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123; item.author &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="comment">&lt;!-- 注册点击事件 →  通过 id 进行删除数组中的 对应项 --&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;del(item.id)&quot;</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">const</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">data</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="attr">booksList</span>: [</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          &#123; <span class="attr">id</span>: <span class="number">1</span>, <span class="attr">name</span>: <span class="string">&#x27;《红楼梦》&#x27;</span>, <span class="attr">author</span>: <span class="string">&#x27;曹雪芹&#x27;</span> &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          &#123; <span class="attr">id</span>: <span class="number">2</span>, <span class="attr">name</span>: <span class="string">&#x27;《西游记》&#x27;</span>, <span class="attr">author</span>: <span class="string">&#x27;吴承恩&#x27;</span> &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          &#123; <span class="attr">id</span>: <span class="number">3</span>, <span class="attr">name</span>: <span class="string">&#x27;《水浒传》&#x27;</span>, <span class="attr">author</span>: <span class="string">&#x27;施耐庵&#x27;</span> &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          &#123; <span class="attr">id</span>: <span class="number">4</span>, <span class="attr">name</span>: <span class="string">&#x27;《三国演义》&#x27;</span>, <span class="attr">author</span>: <span class="string">&#x27;罗贯中&#x27;</span> &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        ]</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">methods</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="title function_">del</span> (id) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="comment">// console.log(&#x27;删除&#x27;, id)</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="comment">// 通过 id 进行删除数组中的 对应项 → filter(不会改变原数组)</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="comment">// filter: 根据条件，保留满足条件的对应项，得到一个新数组。</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="comment">// console.log(this.booksList.filter(item =&gt; item.id !== id))</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="variable language_">this</span>.<span class="property">booksList</span> = <span class="variable language_">this</span>.<span class="property">booksList</span>.<span class="title function_">filter</span>(<span class="function"><span class="params">item</span> =&gt;</span> item.<span class="property">id</span> !== id)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>



<h2 id="十五、v-for中的key"><a href="#十五、v-for中的key" class="headerlink" title="十五、v-for中的key"></a>十五、v-for中的key</h2><p><strong>语法：</strong> key&#x3D;”唯一值”</p>
<p><strong>作用：</strong>给列表项添加的<strong>唯一标识</strong>。便于Vue进行列表项的<strong>正确排序复用</strong>。</p>
<p><strong>为什么加key：</strong>Vue 的默认行为会尝试原地修改元素（<strong>就地复用</strong>）</p>
<p>实例代码：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;div id=<span class="string">&quot;app&quot;</span>&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>小黑的书架<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span></span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(item, index) in booksList&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123; item.name &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123; item.author &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;del(item.id)&quot;</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">const</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">data</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="attr">booksList</span>: [</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          &#123; <span class="attr">id</span>: <span class="number">1</span>, <span class="attr">name</span>: <span class="string">&#x27;《红楼梦》&#x27;</span>, <span class="attr">author</span>: <span class="string">&#x27;曹雪芹&#x27;</span> &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          &#123; <span class="attr">id</span>: <span class="number">2</span>, <span class="attr">name</span>: <span class="string">&#x27;《西游记》&#x27;</span>, <span class="attr">author</span>: <span class="string">&#x27;吴承恩&#x27;</span> &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          &#123; <span class="attr">id</span>: <span class="number">3</span>, <span class="attr">name</span>: <span class="string">&#x27;《水浒传》&#x27;</span>, <span class="attr">author</span>: <span class="string">&#x27;施耐庵&#x27;</span> &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          &#123; <span class="attr">id</span>: <span class="number">4</span>, <span class="attr">name</span>: <span class="string">&#x27;《三国演义》&#x27;</span>, <span class="attr">author</span>: <span class="string">&#x27;罗贯中&#x27;</span> &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        ]</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">methods</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="title function_">del</span> (id) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="variable language_">this</span>.<span class="property">booksList</span> = <span class="variable language_">this</span>.<span class="property">booksList</span>.<span class="title function_">filter</span>(<span class="function"><span class="params">item</span> =&gt;</span> item.<span class="property">id</span> !== id)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<p>注意：</p>
<ol>
<li>key 的值只能是字符串 或 数字类型</li>
<li>key 的值必须具有唯一性</li>
<li>推荐使用  id 作为 key（唯一），不推荐使用 index 作为 key（会变化，不对应）</li>
</ol>
<h2 id="十六、双向绑定指令"><a href="#十六、双向绑定指令" class="headerlink" title="十六、双向绑定指令"></a>十六、双向绑定指令</h2><p>所谓双向绑定就是：</p>
<ol>
<li>数据改变后，呈现的页面结果会更新</li>
<li>页面结果更新后，数据也会随之而变</li>
</ol>
<p><strong>作用：</strong> 给<strong>表单元素</strong>（input、radio、select）使用，双向绑定数据，可以快速 <strong>获取</strong> 或 <strong>设置</strong> 表单元素内容</p>
<p><strong>语法：</strong>v-model&#x3D;”变量”</p>
<p><strong>需求：</strong>使用双向绑定实现以下需求</p>
<ol>
<li>点击登录按钮获取表单中的内容</li>
<li>点击重置按钮清空表单中的内容</li>
</ol>
<img data-src="/2024/11/19/Vue2-0/1681913125738.png" class="" width="68191312573">



<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;div id=<span class="string">&quot;app&quot;</span>&gt;</span><br><span class="line">    &lt;!-- </span><br><span class="line">      v-model 可以让数据和视图，形成双向数据绑定</span><br><span class="line">      (<span class="number">1</span>) 数据变化，视图自动更新</span><br><span class="line">      (<span class="number">2</span>) 视图变化，数据自动更新</span><br><span class="line">      可以快速[获取]或[设置]表单元素的内容</span><br><span class="line">     --&gt;</span><br><span class="line">    账户：&lt;input type=<span class="string">&quot;text&quot;</span> v-model=<span class="string">&quot;username&quot;</span>&gt; &lt;br&gt;&lt;br&gt;</span><br><span class="line">    密码：&lt;input type=<span class="string">&quot;password&quot;</span> v-model=<span class="string">&quot;password&quot;</span>&gt; &lt;br&gt;&lt;br&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;login&quot;</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;reset&quot;</span>&gt;</span>重置<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">const</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">data</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="attr">username</span>: <span class="string">&#x27;&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="attr">password</span>: <span class="string">&#x27;&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">methods</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="title function_">login</span> () &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">username</span>, <span class="variable language_">this</span>.<span class="property">password</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="title function_">reset</span> () &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="variable language_">this</span>.<span class="property">username</span> = <span class="string">&#x27;&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="variable language_">this</span>.<span class="property">password</span> = <span class="string">&#x27;&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>



<h2 id="十七、综合案例-小黑记事本"><a href="#十七、综合案例-小黑记事本" class="headerlink" title="十七、综合案例-小黑记事本"></a>十七、综合案例-小黑记事本</h2><img data-src="/2024/11/19/Vue2-0/1681914565816.png" class="" width="68191456581">

<p><strong>功能需求：</strong></p>
<ol>
<li><p>列表渲染</p>
</li>
<li><p>删除功能</p>
</li>
<li><p>添加功能</p>
</li>
<li><p>底部统计 和 清空</p>
</li>
</ol>
<h1 id="day02"><a href="#day02" class="headerlink" title="day02"></a>day02</h1><h2 id="一、今日学习目标"><a href="#一、今日学习目标" class="headerlink" title="一、今日学习目标"></a>一、今日学习目标</h2><h3 id="1-指令补充"><a href="#1-指令补充" class="headerlink" title="1.指令补充"></a>1.指令补充</h3><ol>
<li>指令修饰符</li>
<li>v-bind对样式增强的操作</li>
<li>v-model应用于其他表单元素</li>
</ol>
<h3 id="2-computed计算属性"><a href="#2-computed计算属性" class="headerlink" title="2.computed计算属性"></a>2.computed计算属性</h3><ol>
<li>基础语法</li>
<li>计算属性vs方法</li>
<li>计算属性的完整写法</li>
<li>成绩案例</li>
</ol>
<h3 id="3-watch侦听器"><a href="#3-watch侦听器" class="headerlink" title="3.watch侦听器"></a>3.watch侦听器</h3><ol>
<li>基础写法</li>
<li>完整写法</li>
</ol>
<h3 id="4-综合案例-（演示）"><a href="#4-综合案例-（演示）" class="headerlink" title="4.综合案例 （演示）"></a>4.综合案例 （演示）</h3><ol>
<li>渲染  &#x2F;  删除  &#x2F;  修改数量 &#x2F; 全选 &#x2F; 反选 &#x2F; 统计总价 &#x2F;  持久化</li>
</ol>
<h2 id="二、指令修饰符"><a href="#二、指令修饰符" class="headerlink" title="二、指令修饰符"></a>二、指令修饰符</h2><h3 id="1-什么是指令修饰符？"><a href="#1-什么是指令修饰符？" class="headerlink" title="1.什么是指令修饰符？"></a>1.什么是指令修饰符？</h3><p>​	所谓指令修饰符就是通过“.”指明一些指令<strong>后缀</strong> 不同的<strong>后缀</strong>封装了不同的处理操作  —&gt; 简化代码</p>
<h3 id="2-按键修饰符"><a href="#2-按键修饰符" class="headerlink" title="2.按键修饰符"></a>2.按键修饰符</h3><ul>
<li>@keyup.enter  —&gt;当点击enter键的时候才触发</li>
</ul>
<p>代码演示：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;div id=<span class="string">&quot;app&quot;</span>&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>@keyup.enter  →  监听键盘回车事件<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">input</span> @<span class="attr">keyup.enter</span>=<span class="string">&quot;fn&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;username&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="keyword">const</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">data</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">username</span>: <span class="string">&#x27;&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">methods</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="title function_">fn</span> (e) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="comment">// if (e.key === &#x27;Enter&#x27;) &#123;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="comment">//   console.log(&#x27;键盘回车的时候触发&#x27;, this.username)</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="comment">// &#125;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;键盘回车的时候触发&#x27;</span>, <span class="variable language_">this</span>.<span class="property">username</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<h3 id="3-v-model修饰符"><a href="#3-v-model修饰符" class="headerlink" title="3.v-model修饰符"></a>3.v-model修饰符</h3><ul>
<li>v-model.trim  —&gt;去除首位空格</li>
<li>v-model.number —&gt;转数字</li>
</ul>
<h3 id="4-事件修饰符"><a href="#4-事件修饰符" class="headerlink" title="4.事件修饰符"></a>4.事件修饰符</h3><ul>
<li>@事件名.stop —&gt; 阻止冒泡</li>
<li>@事件名.prevent  —&gt;阻止默认行为</li>
<li>@事件名.stop.prevent —&gt;可以连用 即阻止事件冒泡也阻止默认行为</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"> &lt;style&gt;</span><br><span class="line">    .<span class="property">father</span> &#123;</span><br><span class="line">      <span class="attr">width</span>: 200px;</span><br><span class="line">      <span class="attr">height</span>: 200px;</span><br><span class="line">      background-<span class="attr">color</span>: pink;</span><br><span class="line">      margin-<span class="attr">top</span>: 20px;</span><br><span class="line">    &#125;</span><br><span class="line">    .<span class="property">son</span> &#123;</span><br><span class="line">      <span class="attr">width</span>: 100px;</span><br><span class="line">      <span class="attr">height</span>: 100px;</span><br><span class="line">      background-<span class="attr">color</span>: skyblue;</span><br><span class="line">    &#125;</span><br><span class="line">  &lt;/style&gt;</span><br><span class="line"></span><br><span class="line">&lt;div id=&quot;app&quot;&gt;</span><br><span class="line">    &lt;h3&gt;v-model修饰符 .trim .number&lt;/h3&gt;</span><br><span class="line">    姓名：&lt;input v-model.trim=&quot;username&quot; type=&quot;text&quot;&gt;&lt;br&gt;</span><br><span class="line">    年纪：&lt;input v-model.number=&quot;age&quot; type=&quot;text&quot;&gt;&lt;br&gt;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    &lt;h3&gt;@事件名.stop     →  阻止冒泡&lt;/h3&gt;</span><br><span class="line">    &lt;div @click=&quot;fatherFn&quot; class=&quot;father&quot;&gt;</span><br><span class="line">      &lt;div @click.stop=&quot;sonFn&quot; class=&quot;son&quot;&gt;儿子&lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;h3&gt;@事件名.prevent  →  阻止默认行为&lt;/h3&gt;</span><br><span class="line">    &lt;a @click.prevent href=&quot;http://www.baidu.com&quot;&gt;阻止默认行为&lt;/a&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">  &lt;script src=&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">  &lt;script&gt;</span><br><span class="line">    const app = new Vue(&#123;</span><br><span class="line">      el: &#x27;#app&#x27;,</span><br><span class="line">      data: &#123;</span><br><span class="line">        username: &#x27;&#x27;,</span><br><span class="line">        age: &#x27;&#x27;,</span><br><span class="line">      &#125;,</span><br><span class="line">      methods: &#123;</span><br><span class="line">        fatherFn () &#123;</span><br><span class="line">          alert(&#x27;老父亲被点击了&#x27;)</span><br><span class="line">        &#125;,</span><br><span class="line">        sonFn (e) &#123;</span><br><span class="line">          // e.stopPropagation()</span><br><span class="line">          alert(&#x27;儿子被点击了&#x27;)</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &lt;/script&gt;</span><br></pre></td></tr></table></figure>



<h2 id="三、v-bind对样式控制的增强-操作class"><a href="#三、v-bind对样式控制的增强-操作class" class="headerlink" title="三、v-bind对样式控制的增强-操作class"></a>三、v-bind对样式控制的增强-操作class</h2><p>为了方便开发者进行样式控制， Vue 扩展了 v-bind 的语法，可以针对 <strong>class 类名</strong> 和 <strong>style 行内样式</strong> 进行控制 。</p>
<h3 id="1-语法："><a href="#1-语法：" class="headerlink" title="1.语法："></a>1.语法：</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span> :class = &quot;对象/数组&quot;&gt;这是一个div<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h3 id="2-对象语法"><a href="#2-对象语法" class="headerlink" title="2.对象语法"></a>2.对象语法</h3><p>当class动态绑定的是<strong>对象</strong>时，<strong>键就是类名，值就是布尔值</strong>，如果值是<strong>true</strong>，就有这个类，否则没有这个类</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span> <span class="attr">:class</span>=<span class="string">&quot;&#123; 类名1: 布尔值, 类名2: 布尔值 &#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>​    适用场景：一个类名，来回切换</p>
<h3 id="3-数组语法"><a href="#3-数组语法" class="headerlink" title="3.数组语法"></a>3.数组语法</h3><p>当class动态绑定的是<strong>数组</strong>时 → 数组中所有的类，都会添加到盒子上，本质就是一个 class 列表</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span> <span class="attr">:class</span>=<span class="string">&quot;[ 类名1, 类名2, 类名3 ]&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>   使用场景:批量添加或删除类</p>
<h3 id="4-代码练习"><a href="#4-代码练习" class="headerlink" title="4.代码练习"></a>4.代码练习</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.box</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">border</span>: <span class="number">3px</span> solid <span class="number">#000</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">font-size</span>: <span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">margin-top</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.pink</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.big</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">width</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">height</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">  </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span> <span class="attr">:class</span>=<span class="string">&quot;&#123; pink: true, big: true &#125;&quot;</span>&gt;</span>黑马程序员<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span> <span class="attr">:class</span>=<span class="string">&quot;[&#x27;pink&#x27;, &#x27;big&#x27;]&quot;</span>&gt;</span>黑马程序员<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h2 id="四、京东秒杀-tab栏切换导航高亮"><a href="#四、京东秒杀-tab栏切换导航高亮" class="headerlink" title="四、京东秒杀-tab栏切换导航高亮"></a>四、京东秒杀-tab栏切换导航高亮</h2><h3 id="1-需求："><a href="#1-需求：" class="headerlink" title="1.需求："></a>1.需求：</h3><p>​	当我们点击哪个tab页签时，哪个tab页签就高亮</p>
<h3 id="2-准备代码"><a href="#2-准备代码" class="headerlink" title="2.准备代码:"></a>2.准备代码:</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    * &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">ul</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">border-bottom</span>: <span class="number">2px</span> solid <span class="number">#e01222</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">li</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">height</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">line-height</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">list-style</span>: none;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">li</span> <span class="selector-tag">a</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">display</span>: block;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">text-decoration</span>: none;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">font-weight</span>: bold;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">color</span>: <span class="number">#333333</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">li</span> <span class="selector-tag">a</span><span class="selector-class">.active</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-color</span>: <span class="number">#e01222</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">color</span>: <span class="number">#fff</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">  </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(item, index) in list&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;item.id&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;activeIndex = index&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">:class</span>=<span class="string">&quot;&#123; active: index === activeIndex &#125;&quot;</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>&#123;&#123; item.name &#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">activeIndex</span>: <span class="number">2</span>, <span class="comment">// 记录高亮</span></span></span><br><span class="line"><span class="language-javascript">        <span class="attr">list</span>: [</span></span><br><span class="line"><span class="language-javascript">          &#123; <span class="attr">id</span>: <span class="number">1</span>, <span class="attr">name</span>: <span class="string">&#x27;京东秒杀&#x27;</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">          &#123; <span class="attr">id</span>: <span class="number">2</span>, <span class="attr">name</span>: <span class="string">&#x27;每日特价&#x27;</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">          &#123; <span class="attr">id</span>: <span class="number">3</span>, <span class="attr">name</span>: <span class="string">&#x27;品类秒杀&#x27;</span> &#125;</span></span><br><span class="line"><span class="language-javascript">        ]</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="3-思路："><a href="#3-思路：" class="headerlink" title="3.思路："></a>3.思路：</h3><p>1.基于数据，动态渲染tab（v-for）</p>
<p>2.准备一个下标 记录高亮的是哪一个 tab</p>
<p>3.基于下标动态切换class的类名</p>
<h2 id="五、v-bind对有样式控制的增强-操作style"><a href="#五、v-bind对有样式控制的增强-操作style" class="headerlink" title="五、v-bind对有样式控制的增强-操作style"></a>五、v-bind对有样式控制的增强-操作style</h2><h3 id="1-语法"><a href="#1-语法" class="headerlink" title="1.语法"></a>1.语法</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span> <span class="attr">:style</span>=<span class="string">&quot;&#123; CSS属性名1: CSS属性值, CSS属性名2: CSS属性值 &#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="2-代码练习"><a href="#2-代码练习" class="headerlink" title="2.代码练习"></a>2.代码练习</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.box</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">187</span>, <span class="number">150</span>, <span class="number">156</span>);</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"> </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span> <span class="attr">:style</span>=<span class="string">&quot;&#123; width: &#x27;400px&#x27;, height: &#x27;400px&#x27;, backgroundColor: &#x27;green&#x27; &#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="3-进度条案例"><a href="#3-进度条案例" class="headerlink" title="3.进度条案例"></a>3.进度条案例</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">   <span class="selector-class">.progress</span> &#123;</span></span><br><span class="line"><span class="language-css">     <span class="attribute">height</span>: <span class="number">25px</span>;</span></span><br><span class="line"><span class="language-css">     <span class="attribute">width</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="language-css">     <span class="attribute">border-radius</span>: <span class="number">15px</span>;</span></span><br><span class="line"><span class="language-css">     <span class="attribute">background-color</span>: <span class="number">#272425</span>;</span></span><br><span class="line"><span class="language-css">     <span class="attribute">border</span>: <span class="number">3px</span> solid <span class="number">#272425</span>;</span></span><br><span class="line"><span class="language-css">     <span class="attribute">box-sizing</span>: border-box;</span></span><br><span class="line"><span class="language-css">     <span class="attribute">margin-bottom</span>: <span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">   &#125;</span></span><br><span class="line"><span class="language-css">   <span class="selector-class">.inner</span> &#123;</span></span><br><span class="line"><span class="language-css">     <span class="attribute">width</span>: <span class="number">50%</span>;</span></span><br><span class="line"><span class="language-css">     <span class="attribute">height</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">     <span class="attribute">border-radius</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">     <span class="attribute">text-align</span>: right;</span></span><br><span class="line"><span class="language-css">     <span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="language-css">     <span class="attribute">background-color</span>: <span class="number">#409eff</span>;</span></span><br><span class="line"><span class="language-css">     <span class="attribute">background-size</span>: <span class="number">20px</span> <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">     <span class="attribute">box-sizing</span>: border-box;</span></span><br><span class="line"><span class="language-css">     <span class="attribute">transition</span>: all <span class="number">1s</span>;</span></span><br><span class="line"><span class="language-css">   &#125;</span></span><br><span class="line"><span class="language-css">   <span class="selector-class">.inner</span> <span class="selector-tag">span</span> &#123;</span></span><br><span class="line"><span class="language-css">     <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">     <span class="attribute">right</span>: -<span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">     <span class="attribute">bottom</span>: -<span class="number">25px</span>;</span></span><br><span class="line"><span class="language-css">   &#125;</span></span><br><span class="line"><span class="language-css"> </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!-- 外层盒子底色 （黑色） --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;progress&quot;</span>&gt;</span></span><br><span class="line">     <span class="comment">&lt;!-- 内层盒子 - 进度（蓝色） --&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;inner&quot;</span> <span class="attr">:style</span>=<span class="string">&quot;&#123; width: percent + &#x27;%&#x27; &#125;&quot;</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123; percent &#125;&#125;%<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;percent = 25&quot;</span>&gt;</span>设置25%<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;percent = 50&quot;</span>&gt;</span>设置50%<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;percent = 75&quot;</span>&gt;</span>设置75%<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;percent = 100&quot;</span>&gt;</span>设置100%<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">   <span class="keyword">const</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">     <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">     <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">       <span class="attr">percent</span>: <span class="number">30</span></span></span><br><span class="line"><span class="language-javascript">     &#125;</span></span><br><span class="line"><span class="language-javascript">   &#125;)</span></span><br><span class="line"><span class="language-javascript"> </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h2 id="六、v-model在其他表单元素的使用"><a href="#六、v-model在其他表单元素的使用" class="headerlink" title="六、v-model在其他表单元素的使用"></a>六、v-model在其他表单元素的使用</h2><h3 id="1-讲解内容："><a href="#1-讲解内容：" class="headerlink" title="1.讲解内容："></a>1.讲解内容：</h3><p>常见的表单元素都可以用 v-model 绑定关联  →  快速 <strong>获取</strong> 或 <strong>设置</strong> 表单元素的值</p>
<p>它会根据  <strong>控件类型</strong> 自动选取  <strong>正确的方法</strong> 来更新元素</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">输入框  <span class="attr">input</span>:text   ——&gt; value</span><br><span class="line">文本域  textarea	 ——&gt; value</span><br><span class="line">复选框  <span class="attr">input</span>:checkbox  ——&gt; checked</span><br><span class="line">单选框  <span class="attr">input</span>:radio   ——&gt; checked</span><br><span class="line">下拉菜单 select    ——&gt; value</span><br><span class="line">...</span><br></pre></td></tr></table></figure>

<h3 id="2-代码准备"><a href="#2-代码准备" class="headerlink" title="2.代码准备"></a>2.代码准备</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">   <span class="selector-tag">textarea</span> &#123;</span></span><br><span class="line"><span class="language-css">     <span class="attribute">display</span>: block;</span></span><br><span class="line"><span class="language-css">     <span class="attribute">width</span>: <span class="number">240px</span>;</span></span><br><span class="line"><span class="language-css">     <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">     <span class="attribute">margin</span>: <span class="number">10px</span> <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">   &#125;</span></span><br><span class="line"><span class="language-css"> </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">h3</span>&gt;</span>小黑学习网<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   姓名：</span><br><span class="line">     <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;username&quot;</span>&gt;</span> </span><br><span class="line">     <span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   是否单身：</span><br><span class="line">     <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;isSingle&quot;</span>&gt;</span> </span><br><span class="line">     <span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">     前置理解：</span></span><br><span class="line"><span class="comment">       1. name:  给单选框加上 name 属性 可以分组 → 同一组互相会互斥</span></span><br><span class="line"><span class="comment">       2. value: 给单选框加上 value 属性，用于提交给后台的数据</span></span><br><span class="line"><span class="comment">     结合 Vue 使用 → v-model</span></span><br><span class="line"><span class="comment">   --&gt;</span></span><br><span class="line">   性别: </span><br><span class="line">     <span class="tag">&lt;<span class="name">input</span> <span class="attr">v-model</span>=<span class="string">&quot;gender&quot;</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>&gt;</span>男</span><br><span class="line">     <span class="tag">&lt;<span class="name">input</span> <span class="attr">v-model</span>=<span class="string">&quot;gender&quot;</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span> <span class="attr">value</span>=<span class="string">&quot;2&quot;</span>&gt;</span>女</span><br><span class="line">     <span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">     前置理解：</span></span><br><span class="line"><span class="comment">       1. option 需要设置 value 值，提交给后台</span></span><br><span class="line"><span class="comment">       2. select 的 value 值，关联了选中的 option 的 value 值</span></span><br><span class="line"><span class="comment">     结合 Vue 使用 → v-model</span></span><br><span class="line"><span class="comment">   --&gt;</span></span><br><span class="line">   所在城市:</span><br><span class="line">     <span class="tag">&lt;<span class="name">select</span> <span class="attr">v-model</span>=<span class="string">&quot;cityId&quot;</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;101&quot;</span>&gt;</span>北京<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;102&quot;</span>&gt;</span>上海<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;103&quot;</span>&gt;</span>成都<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;104&quot;</span>&gt;</span>南京<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   自我描述：</span><br><span class="line">     <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">v-model</span>=<span class="string">&quot;desc&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span> </span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="name">button</span>&gt;</span>立即注册<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">   <span class="keyword">const</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">     <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">     <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">       <span class="attr">username</span>: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">       <span class="attr">isSingle</span>: <span class="literal">false</span>,</span></span><br><span class="line"><span class="language-javascript">       <span class="attr">gender</span>: <span class="string">&quot;2&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">       <span class="attr">cityId</span>: <span class="string">&#x27;102&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">       <span class="attr">desc</span>: <span class="string">&quot;&quot;</span></span></span><br><span class="line"><span class="language-javascript">     &#125;</span></span><br><span class="line"><span class="language-javascript">   &#125;)</span></span><br><span class="line"><span class="language-javascript"> </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h2 id="七、computed计算属性"><a href="#七、computed计算属性" class="headerlink" title="七、computed计算属性"></a>七、computed计算属性</h2><h3 id="1-概念"><a href="#1-概念" class="headerlink" title="1.概念"></a>1.概念</h3><p>基于<strong>现有的数据</strong>，计算出来的<strong>新属性</strong>。 <strong>依赖</strong>的数据变化，<strong>自动</strong>重新计算。</p>
<h3 id="2-语法-1"><a href="#2-语法-1" class="headerlink" title="2.语法"></a>2.语法</h3><ol>
<li>声明在 <strong>computed 配置项</strong>中，一个计算属性对应一个函数</li>
<li>使用起来和普通属性一样使用  </li>
</ol>
<h3 id="3-注意"><a href="#3-注意" class="headerlink" title="3.注意"></a>3.注意</h3><ol>
<li>computed配置项和data配置项是<strong>同级</strong>的</li>
<li>computed中的计算属性<strong>虽然是函数的写法</strong>，但他<strong>依然是个属性</strong></li>
<li>computed中的计算属性<strong>不能</strong>和data中的属性<strong>同名</strong></li>
<li>使用computed中的计算属性和使用data中的属性是一样的用法</li>
<li>computed中计算属性内部的<strong>this</strong>依然<strong>指向的是Vue实例</strong></li>
</ol>
<h3 id="4-案例"><a href="#4-案例" class="headerlink" title="4.案例"></a>4.案例</h3><p>比如我们可以使用计算属性实现下面这个业务场景</p>
<img data-src="/2024/11/19/Vue2-0/1682039327858.png" class="" width="68203932785">

<h3 id="5-代码准备"><a href="#5-代码准备" class="headerlink" title="5.代码准备"></a>5.代码准备</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">table</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#000</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">width</span>: <span class="number">240px</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">th</span>,<span class="selector-tag">td</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#000</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">h3</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">  </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>小黑的礼物清单<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>名字<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>数量<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">tr</span> <span class="attr">v-for</span>=<span class="string">&quot;(item, index) in list&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;item.id&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123; item.name &#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123; item.num &#125;&#125;个<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 目标：统计求和，求得礼物总数 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>礼物总数：&#123;&#123; totalCount &#125;&#125; 个<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 现有的数据</span></span></span><br><span class="line"><span class="language-javascript">        <span class="attr">list</span>: [</span></span><br><span class="line"><span class="language-javascript">          &#123; <span class="attr">id</span>: <span class="number">1</span>, <span class="attr">name</span>: <span class="string">&#x27;篮球&#x27;</span>, <span class="attr">num</span>: <span class="number">1</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">          &#123; <span class="attr">id</span>: <span class="number">2</span>, <span class="attr">name</span>: <span class="string">&#x27;玩具&#x27;</span>, <span class="attr">num</span>: <span class="number">2</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">          &#123; <span class="attr">id</span>: <span class="number">3</span>, <span class="attr">name</span>: <span class="string">&#x27;铅笔&#x27;</span>, <span class="attr">num</span>: <span class="number">5</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">        ]</span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">computed</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">totalCount</span> () &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="comment">// 基于现有的数据，编写求值逻辑</span></span></span><br><span class="line"><span class="language-javascript">          <span class="comment">// 计算属性函数内部，可以直接通过 this 访问到 app 实例</span></span></span><br><span class="line"><span class="language-javascript">          <span class="comment">// console.log(this.list)</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">          <span class="comment">// 需求：对 this.list 数组里面的 num 进行求和 → reduce</span></span></span><br><span class="line"><span class="language-javascript">          <span class="keyword">let</span> total = <span class="variable language_">this</span>.<span class="property">list</span>.<span class="title function_">reduce</span>(<span class="function">(<span class="params">sum, item</span>) =&gt;</span> sum + item.<span class="property">num</span>, <span class="number">0</span>)</span></span><br><span class="line"><span class="language-javascript">          <span class="keyword">return</span> total</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h2 id="八、computed计算属性-VS-methods方法"><a href="#八、computed计算属性-VS-methods方法" class="headerlink" title="八、computed计算属性 VS methods方法"></a>八、computed计算属性 VS methods方法</h2><h3 id="1-computed计算属性"><a href="#1-computed计算属性" class="headerlink" title="1.computed计算属性"></a>1.computed计算属性</h3><p>作用：封装了一段对于<strong>数据</strong>的处理，求得一个<strong>结果</strong></p>
<p>语法：</p>
<ol>
<li>写在computed配置项中</li>
<li>作为属性，直接使用<ul>
<li>js中使用计算属性： this.计算属性</li>
<li>模板中使用计算属性：</li>
</ul>
</li>
</ol>
<h3 id="2-methods计算属性"><a href="#2-methods计算属性" class="headerlink" title="2.methods计算属性"></a>2.methods计算属性</h3><p>作用：给Vue实例提供一个<strong>方法</strong>，调用以<strong>处理业务逻辑</strong>。</p>
<p>语法：</p>

1. 写在methods配置项中
2. 作为方法调用
   - js中调用：this.方法名()
   - 模板中调用 {{方法名()}}  或者 @事件名=“方法名”
                <!--  -->
<!--  -->

<h3 id="3-计算属性的优势"><a href="#3-计算属性的优势" class="headerlink" title="3.计算属性的优势"></a>3.计算属性的优势</h3><ol>
<li><p>缓存特性（提升性能）</p>
<p>计算属性会对计算出来的结果缓存，再次使用直接读取缓存，</p>
<p>依赖项变化了，会自动重新计算 → 并再次缓存</p>
</li>
<li><p>methods没有缓存特性</p>
</li>
<li><p>通过代码比较</p>
</li>
</ol>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">table</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#000</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">width</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">th</span>,<span class="selector-tag">td</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#000</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">h3</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">span</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">left</span>: <span class="number">145px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">top</span>: -<span class="number">4px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">width</span>: <span class="number">16px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">height</span>: <span class="number">16px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">color</span>: white;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">font-size</span>: <span class="number">12px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-color</span>: <span class="number">#e63f32</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">  </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>小黑的礼物清单🛒<span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123; totalCountFn() &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>小黑的礼物清单🛒<span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123; totalCountFn() &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>小黑的礼物清单🛒<span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123; totalCountFn() &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>小黑的礼物清单🛒<span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123; totalCountFn() &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>名字<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>数量<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">tr</span> <span class="attr">v-for</span>=<span class="string">&quot;(item, index) in list&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;item.id&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123; item.name &#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123; item.num &#125;&#125;个<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>礼物总数：&#123;&#123; totalCountFn() &#125;&#125; 个<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 现有的数据</span></span></span><br><span class="line"><span class="language-javascript">        <span class="attr">list</span>: [</span></span><br><span class="line"><span class="language-javascript">          &#123; <span class="attr">id</span>: <span class="number">1</span>, <span class="attr">name</span>: <span class="string">&#x27;篮球&#x27;</span>, <span class="attr">num</span>: <span class="number">3</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">          &#123; <span class="attr">id</span>: <span class="number">2</span>, <span class="attr">name</span>: <span class="string">&#x27;玩具&#x27;</span>, <span class="attr">num</span>: <span class="number">2</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">          &#123; <span class="attr">id</span>: <span class="number">3</span>, <span class="attr">name</span>: <span class="string">&#x27;铅笔&#x27;</span>, <span class="attr">num</span>: <span class="number">5</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">        ]</span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">      <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">totalCountFn</span> () &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;methods方法执行了&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">          <span class="keyword">let</span> total = <span class="variable language_">this</span>.<span class="property">list</span>.<span class="title function_">reduce</span>(<span class="function">(<span class="params">sum, item</span>) =&gt;</span> sum + item.<span class="property">num</span>, <span class="number">0</span>)</span></span><br><span class="line"><span class="language-javascript">          <span class="keyword">return</span> total</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">      <span class="attr">computed</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 计算属性：有缓存的，一旦计算出来结果，就会立刻缓存</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 下一次读取 → 直接读缓存就行 → 性能特别高</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// totalCount () &#123;</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//   console.log(&#x27;计算属性执行了&#x27;)</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//   let total = this.list.reduce((sum, item) =&gt; sum + item.num, 0)</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//   return total</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// &#125;</span></span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="4-总结-1"><a href="#4-总结-1" class="headerlink" title="4.总结"></a>4.总结</h3><p>1.computed<strong>有缓存特性</strong>，methods<strong>没有缓存</strong></p>
<p>2.当一个结果依赖其他多个值时，推荐使用计算属性</p>
<p>3.当处理业务逻辑时，推荐使用methods方法，比如事件的处理函数</p>
<h2 id="九、计算属性的完整写法"><a href="#九、计算属性的完整写法" class="headerlink" title="九、计算属性的完整写法"></a>九、计算属性的完整写法</h2><p><strong>既然计算属性也是属性，能访问，应该也能修改了？</strong></p>
<ol>
<li>计算属性默认的简写，只能读取访问，不能 “修改”</li>
<li>如果要 “修改”  → 需要写计算属性的完整写法</li>
</ol>
<img data-src="/2024/11/19/Vue2-0/1682041822963.png" class="" width="68204182296">

<p>完整写法代码演示</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    姓：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;firstName&quot;</span>&gt;</span> +</span><br><span class="line">    名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;lastName&quot;</span>&gt;</span> =</span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123; fullName &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;changeName&quot;</span>&gt;</span>改名卡<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">firstName</span>: <span class="string">&#x27;刘&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">lastName</span>: <span class="string">&#x27;备&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">changeName</span> () &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="variable language_">this</span>.<span class="property">fullName</span> = <span class="string">&#x27;黄忠&#x27;</span></span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">computed</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 简写 → 获取，没有配置设置的逻辑</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// fullName () &#123;</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//   return this.firstName + this.lastName</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// &#125;</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 完整写法 → 获取 + 设置</span></span></span><br><span class="line"><span class="language-javascript">        <span class="attr">fullName</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="comment">// (1) 当fullName计算属性，被获取求值时，执行get（有缓存，优先读缓存）</span></span></span><br><span class="line"><span class="language-javascript">          <span class="comment">//     会将返回值作为，求值的结果</span></span></span><br><span class="line"><span class="language-javascript">          <span class="title function_">get</span> () &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">firstName</span> + <span class="variable language_">this</span>.<span class="property">lastName</span></span></span><br><span class="line"><span class="language-javascript">          &#125;,</span></span><br><span class="line"><span class="language-javascript">          <span class="comment">// (2) 当fullName计算属性，被修改赋值时，执行set</span></span></span><br><span class="line"><span class="language-javascript">          <span class="comment">//     修改的值，传递给set方法的形参</span></span></span><br><span class="line"><span class="language-javascript">          <span class="title function_">set</span> (value) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// console.log(value.slice(0, 1))          </span></span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// console.log(value.slice(1))         </span></span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">this</span>.<span class="property">firstName</span> = value.<span class="title function_">slice</span>(<span class="number">0</span>, <span class="number">1</span>)</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">this</span>.<span class="property">lastName</span> = value.<span class="title function_">slice</span>(<span class="number">1</span>)</span></span><br><span class="line"><span class="language-javascript">          &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h2 id="十、综合案例-成绩案例"><a href="#十、综合案例-成绩案例" class="headerlink" title="十、综合案例-成绩案例"></a>十、综合案例-成绩案例</h2><img data-src="/2024/11/19/Vue2-0/1682042489319.png" class="" width="68204248931">

<p>功能描述：</p>
<p>1.渲染功能</p>
<p>2.删除功能</p>
<p>3.添加功能</p>
<p>4.统计总分，求平均分</p>
<p>思路分析：</p>
<p>1.渲染功能  v-for  :key  v-bind:动态绑定class的样式</p>
<p>2.删除功能 v-on绑定事件， 阻止a标签的默认行为</p>
<p>3.v-model的修饰符 .trim、 .number、  判断数据是否为空后 再添加、添加后清空文本框的数据</p>
<p>4.使用计算属性computed 计算总分和平均分的值</p>
<h2 id="十一、watch侦听器（监视器）"><a href="#十一、watch侦听器（监视器）" class="headerlink" title="十一、watch侦听器（监视器）"></a>十一、watch侦听器（监视器）</h2><h3 id="1-作用："><a href="#1-作用：" class="headerlink" title="1.作用："></a>1.作用：</h3><p>​	<strong>监视数据变化</strong>，执行一些业务逻辑或异步操作</p>
<h3 id="2-语法："><a href="#2-语法：" class="headerlink" title="2.语法："></a>2.语法：</h3><ol>
<li><p>watch同样声明在跟data同级的配置项中</p>
</li>
<li><p>简单写法： 简单类型数据直接监视</p>
</li>
<li><p>完整写法：添加额外配置项</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="attr">data</span>: &#123; </span><br><span class="line">  <span class="attr">words</span>: <span class="string">&#x27;苹果&#x27;</span>,</span><br><span class="line">  <span class="attr">obj</span>: &#123;</span><br><span class="line">    <span class="attr">words</span>: <span class="string">&#x27;苹果&#x27;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line"><span class="attr">watch</span>: &#123;</span><br><span class="line">  <span class="comment">// 该方法会在数据变化时，触发执行</span></span><br><span class="line">  数据属性名 (newValue, oldValue) &#123;</span><br><span class="line">    一些业务逻辑 或 异步操作。 </span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&#x27;对象.属性名&#x27;</span> (newValue, oldValue) &#123;</span><br><span class="line">    一些业务逻辑 或 异步操作。 </span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ol>
<h3 id="3-侦听器代码准备"><a href="#3-侦听器代码准备" class="headerlink" title="3.侦听器代码准备"></a>3.侦听器代码准备</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">      * &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">box-sizing</span>: border-box;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">font-size</span>: <span class="number">18px</span>;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="selector-id">#app</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">padding</span>: <span class="number">10px</span> <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.query</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">margin</span>: <span class="number">10px</span> <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.box</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="selector-tag">textarea</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">160px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">font-size</span>: <span class="number">18px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#dedede</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">outline</span>: none;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">resize</span>: none;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">padding</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="selector-tag">textarea</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#1589f5</span>;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.transbox</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">160px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>: <span class="number">#f0f0f0</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">padding</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">border</span>: none;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.tip-box</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">25px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">line-height</span>: <span class="number">25px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.tip-box</span> <span class="selector-tag">span</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">flex</span>: <span class="number">1</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.query</span> <span class="selector-tag">span</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">font-size</span>: <span class="number">18px</span>;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.input-wrap</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.input-wrap</span> <span class="selector-tag">span</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">right</span>: <span class="number">15px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">bottom</span>: <span class="number">15px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">font-size</span>: <span class="number">12px</span>;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.input-wrap</span> <span class="selector-tag">i</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">font-size</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">font-style</span>: normal;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 条件选择框 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;query&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>翻译成的语言：<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">select</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;italy&quot;</span>&gt;</span>意大利<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;english&quot;</span>&gt;</span>英语<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;german&quot;</span>&gt;</span>德语<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">&lt;!-- 翻译框 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;input-wrap&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">v-model</span>=<span class="string">&quot;obj.words&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">i</span>&gt;</span>⌨️<span class="tag">&lt;/<span class="name">i</span>&gt;</span>文档翻译<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;output-wrap&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;transbox&quot;</span>&gt;</span>mela<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 接口地址：https://applet-base-api-t.itheima.net/api/translate</span></span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 请求方式：get</span></span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 请求参数：</span></span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// （1）words：需要被翻译的文本（必传）</span></span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// （2）lang： 需要被翻译成的语言（可选）默认值-意大利</span></span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// -----------------------------------------------</span></span></span><br><span class="line"><span class="language-javascript">      </span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">const</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="comment">// words: &#x27;&#x27;</span></span></span><br><span class="line"><span class="language-javascript">          <span class="attr">obj</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">words</span>: <span class="string">&#x27;&#x27;</span></span></span><br><span class="line"><span class="language-javascript">          &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 具体讲解：(1) watch语法 (2) 具体业务实现</span></span></span><br><span class="line"><span class="language-javascript">        <span class="attr">watch</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="comment">// 该方法会在数据变化时调用执行</span></span></span><br><span class="line"><span class="language-javascript">          <span class="comment">// newValue新值, oldValue老值（一般不用）</span></span></span><br><span class="line"><span class="language-javascript">          <span class="comment">// words (newValue) &#123;</span></span></span><br><span class="line"><span class="language-javascript">          <span class="comment">//   console.log(&#x27;变化了&#x27;, newValue)</span></span></span><br><span class="line"><span class="language-javascript">          <span class="comment">// &#125;</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">          <span class="string">&#x27;obj.words&#x27;</span> (newValue) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;变化了&#x27;</span>, newValue)</span></span><br><span class="line"><span class="language-javascript">          &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">      &#125;)</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h2 id="十二、翻译案例-代码实现"><a href="#十二、翻译案例-代码实现" class="headerlink" title="十二、翻译案例-代码实现"></a>十二、翻译案例-代码实现</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="comment">// 接口地址：https://applet-base-api-t.itheima.net/api/translate</span></span><br><span class="line">    <span class="comment">// 请求方式：get</span></span><br><span class="line">    <span class="comment">// 请求参数：</span></span><br><span class="line">    <span class="comment">// （1）words：需要被翻译的文本（必传）</span></span><br><span class="line">    <span class="comment">// （2）lang： 需要被翻译成的语言（可选）默认值-意大利</span></span><br><span class="line">    <span class="comment">// -----------------------------------------------</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">const</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">      <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line">      <span class="attr">data</span>: &#123;</span><br><span class="line">         <span class="comment">//words: &#x27;&#x27;</span></span><br><span class="line">         <span class="attr">obj</span>: &#123;</span><br><span class="line">          <span class="attr">words</span>: <span class="string">&#x27;&#x27;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">result</span>: <span class="string">&#x27;&#x27;</span>, <span class="comment">// 翻译结果</span></span><br><span class="line">        <span class="comment">// timer: null // 延时器id</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="comment">// 具体讲解：(1) watch语法 (2) 具体业务实现</span></span><br><span class="line">      <span class="attr">watch</span>: &#123;</span><br><span class="line">        <span class="comment">// 该方法会在数据变化时调用执行</span></span><br><span class="line">        <span class="comment">// newValue新值, oldValue老值（一般不用）</span></span><br><span class="line">        <span class="comment">// words (newValue) &#123;</span></span><br><span class="line">        <span class="comment">//   console.log(&#x27;变化了&#x27;, newValue)</span></span><br><span class="line">        <span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line">        <span class="string">&#x27;obj.words&#x27;</span> (newValue) &#123;</span><br><span class="line">          <span class="comment">// console.log(&#x27;变化了&#x27;, newValue)</span></span><br><span class="line">          <span class="comment">// 防抖: 延迟执行 → 干啥事先等一等，延迟一会，一段时间内没有再次触发，才执行</span></span><br><span class="line">          <span class="built_in">clearTimeout</span>(<span class="variable language_">this</span>.<span class="property">timer</span>)</span><br><span class="line">          <span class="variable language_">this</span>.<span class="property">timer</span> = <span class="built_in">setTimeout</span>(<span class="title function_">async</span> () =&gt; &#123;</span><br><span class="line">            <span class="keyword">const</span> res = <span class="keyword">await</span> <span class="title function_">axios</span>(&#123;</span><br><span class="line">              <span class="attr">url</span>: <span class="string">&#x27;https://applet-base-api-t.itheima.net/api/translate&#x27;</span>,</span><br><span class="line">              <span class="attr">params</span>: &#123;</span><br><span class="line">                <span class="attr">words</span>: newValue</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;)</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">result</span> = res.<span class="property">data</span>.<span class="property">data</span></span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(res.<span class="property">data</span>.<span class="property">data</span>)</span><br><span class="line">          &#125;, <span class="number">300</span>)</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &lt;/script&gt;</span><br></pre></td></tr></table></figure>



<h2 id="十三、watch侦听器"><a href="#十三、watch侦听器" class="headerlink" title="十三、watch侦听器"></a>十三、watch侦听器</h2><h3 id="1-语法-1"><a href="#1-语法-1" class="headerlink" title="1.语法"></a>1.语法</h3><p>完整写法 —&gt;添加额外的配置项</p>
<ol>
<li>deep:true 对复杂类型进行深度监听</li>
<li>immdiate:true 初始化 立刻执行一次</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="attr">data</span>: &#123;</span><br><span class="line">  <span class="attr">obj</span>: &#123;</span><br><span class="line">    <span class="attr">words</span>: <span class="string">&#x27;苹果&#x27;</span>,</span><br><span class="line">    <span class="attr">lang</span>: <span class="string">&#x27;italy&#x27;</span></span><br><span class="line">  &#125;,</span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line"><span class="attr">watch</span>: &#123;<span class="comment">// watch 完整写法</span></span><br><span class="line">  对象: &#123;</span><br><span class="line">    <span class="attr">deep</span>: <span class="literal">true</span>, <span class="comment">// 深度监视</span></span><br><span class="line">    <span class="attr">immdiate</span>:<span class="literal">true</span>,<span class="comment">//立即执行handler函数</span></span><br><span class="line">    <span class="title function_">handler</span> (newValue) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(newValue)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="2-需求"><a href="#2-需求" class="headerlink" title="2.需求"></a>2.需求</h3><img data-src="/2024/11/19/Vue2-0/1682050515722.png" class="" width="68205051572">



<ul>
<li>当文本框输入的时候 右侧翻译内容要时时变化</li>
<li>当下拉框中的语言发生变化的时候 右侧翻译的内容依然要时时变化</li>
<li>如果文本框中有默认值的话要立即翻译</li>
</ul>
<h3 id="3-代码实现"><a href="#3-代码实现" class="headerlink" title="3.代码实现"></a>3.代码实现</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script&gt; </span><br><span class="line">     <span class="keyword">const</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">       <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line">       <span class="attr">data</span>: &#123;</span><br><span class="line">         <span class="attr">obj</span>: &#123;</span><br><span class="line">           <span class="attr">words</span>: <span class="string">&#x27;小黑&#x27;</span>,</span><br><span class="line">           <span class="attr">lang</span>: <span class="string">&#x27;italy&#x27;</span></span><br><span class="line">         &#125;,</span><br><span class="line">         <span class="attr">result</span>: <span class="string">&#x27;&#x27;</span>, <span class="comment">// 翻译结果</span></span><br><span class="line">       &#125;,</span><br><span class="line">       <span class="attr">watch</span>: &#123;</span><br><span class="line">         <span class="attr">obj</span>: &#123;</span><br><span class="line">           <span class="attr">deep</span>: <span class="literal">true</span>, <span class="comment">// 深度监视</span></span><br><span class="line">           <span class="attr">immediate</span>: <span class="literal">true</span>, <span class="comment">// 立刻执行，一进入页面handler就立刻执行一次</span></span><br><span class="line">           <span class="title function_">handler</span> (newValue) &#123;</span><br><span class="line">             <span class="built_in">clearTimeout</span>(<span class="variable language_">this</span>.<span class="property">timer</span>)</span><br><span class="line">             <span class="variable language_">this</span>.<span class="property">timer</span> = <span class="built_in">setTimeout</span>(<span class="title function_">async</span> () =&gt; &#123;</span><br><span class="line">               <span class="keyword">const</span> res = <span class="keyword">await</span> <span class="title function_">axios</span>(&#123;</span><br><span class="line">                 <span class="attr">url</span>: <span class="string">&#x27;https://applet-base-api-t.itheima.net/api/translate&#x27;</span>,</span><br><span class="line">                 <span class="attr">params</span>: newValue</span><br><span class="line">               &#125;)</span><br><span class="line">               <span class="variable language_">this</span>.<span class="property">result</span> = res.<span class="property">data</span>.<span class="property">data</span></span><br><span class="line">               <span class="variable language_">console</span>.<span class="title function_">log</span>(res.<span class="property">data</span>.<span class="property">data</span>)</span><br><span class="line">             &#125;, <span class="number">300</span>)</span><br><span class="line">           &#125;</span><br><span class="line">         &#125; </span><br><span class="line">       &#125;</span><br><span class="line">     &#125;)</span><br><span class="line">   &lt;/script&gt;</span><br></pre></td></tr></table></figure>

<h3 id="4-总结-2"><a href="#4-总结-2" class="headerlink" title="4.总结"></a>4.总结</h3><p>watch侦听器的写法有几种？</p>
<p>1.简单写法</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="attr">watch</span>: &#123;</span><br><span class="line">  数据属性名 (newValue, oldValue) &#123;</span><br><span class="line">    一些业务逻辑 或 异步操作。 </span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&#x27;对象.属性名&#x27;</span> (newValue, oldValue) &#123;</span><br><span class="line">    一些业务逻辑 或 异步操作。 </span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>2.完整写法</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="attr">watch</span>: &#123;<span class="comment">// watch 完整写法</span></span><br><span class="line">  数据属性名: &#123;</span><br><span class="line">    <span class="attr">deep</span>: <span class="literal">true</span>, <span class="comment">// 深度监视(针对复杂类型)</span></span><br><span class="line">    <span class="attr">immediate</span>: <span class="literal">true</span>, <span class="comment">// 是否立刻执行一次handler</span></span><br><span class="line">    <span class="title function_">handler</span> (newValue) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(newValue)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="十四、综合案例"><a href="#十四、综合案例" class="headerlink" title="十四、综合案例"></a>十四、综合案例</h2><p>购物车案例</p>
<img data-src="/2024/11/19/Vue2-0/1682051008978.png" class="" width="68205100897">



<p>需求说明：</p>
<ol>
<li>渲染功能</li>
<li>删除功能</li>
<li>修改个数</li>
<li>全选反选</li>
<li>统计 选中的 总价 和 总数量 </li>
<li>持久化到本地</li>
</ol>
<p>实现思路：</p>
<p>1.基本渲染：  v-for遍历、:class动态绑定样式</p>
<p>2.删除功能 ： v-on 绑定事件，获取当前行的id</p>
<p>3.修改个数 ： v-on绑定事件，获取当前行的id，进行筛选出对应的项然后增加或减少</p>
<p>4.全选反选 </p>
<ol>
<li>必须所有的小选框都选中，全选按钮才选中 → every</li>
<li>如果全选按钮选中，则所有小选框都选中</li>
<li>如果全选取消，则所有小选框都取消选中</li>
</ol>
<p>声明计算属性，判断数组中的每一个checked属性的值，看是否需要全部选</p>
<p>5.统计 选中的 总价 和 总数量 ：通过计算属性来计算<strong>选中的</strong>总价和总数量</p>
<p>6.持久化到本地： 在数据变化时都要更新下本地存储 watch</p>
<h1 id="day03"><a href="#day03" class="headerlink" title="day03"></a>day03</h1><h2 id="一、今日目标"><a href="#一、今日目标" class="headerlink" title="一、今日目标"></a>一、今日目标</h2><h3 id="1-生命周期"><a href="#1-生命周期" class="headerlink" title="1.生命周期"></a>1.生命周期</h3><ol>
<li>生命周期介绍</li>
<li>生命周期的四个阶段</li>
<li>生命周期钩子</li>
<li>声明周期案例</li>
</ol>
<h3 id="2-综合案例-小黑记账清单"><a href="#2-综合案例-小黑记账清单" class="headerlink" title="2.综合案例-小黑记账清单"></a>2.综合案例-小黑记账清单</h3><ol>
<li>列表渲染</li>
<li>添加&#x2F;删除</li>
<li>饼图渲染</li>
</ol>
<h3 id="3-工程化开发入门"><a href="#3-工程化开发入门" class="headerlink" title="3.工程化开发入门"></a>3.工程化开发入门</h3><ol>
<li>工程化开发和脚手架</li>
<li>项目运行流程</li>
<li>组件化</li>
<li>组件注册</li>
</ol>
<h3 id="4-综合案例-小兔仙首页"><a href="#4-综合案例-小兔仙首页" class="headerlink" title="4.综合案例-小兔仙首页"></a>4.综合案例-小兔仙首页</h3><ol>
<li>拆分模块-局部注册 </li>
<li>结构样式完善 </li>
<li>拆分组件 – 全局注册</li>
</ol>
<h2 id="二、Vue生命周期"><a href="#二、Vue生命周期" class="headerlink" title="二、Vue生命周期"></a>二、Vue生命周期</h2><p>思考：什么时候可以发送初始化渲染请求？（越早越好）什么时候可以开始操作dom？（至少dom得渲染出来）</p>
<p>Vue生命周期：就是一个Vue实例从创建 到 销毁 的整个过程。</p>
<p>生命周期四个阶段：① 创建 ② 挂载 ③ 更新 ④ 销毁</p>
<p>1.创建阶段：创建响应式数据</p>
<p>2.挂载阶段：渲染模板</p>
<p>3.更新阶段：修改数据，更新视图</p>
<p>4.销毁阶段：销毁Vue实例</p>
<img data-src="/2024/11/19/Vue2-0/1682065937815.png" class="" width="68206593781">





<h2 id="三、Vue生命周期钩子"><a href="#三、Vue生命周期钩子" class="headerlink" title="三、Vue生命周期钩子"></a>三、Vue生命周期钩子</h2><p>Vue生命周期过程中，会<strong>自动运行一些函数</strong>，被称为【<strong>生命周期钩子</strong>】→  让开发者可以在【<strong>特定阶段</strong>】运行<strong>自己的代码</strong></p>
<img data-src="/2024/11/19/Vue2-0/1682066040295.png" class="" width="68206604029">

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>&#123;&#123; title &#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;count--&quot;</span>&gt;</span>-<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123; count &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;count++&quot;</span>&gt;</span>+<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">count</span>: <span class="number">100</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">title</span>: <span class="string">&#x27;计数器&#x27;</span></span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 1. 创建阶段（准备数据）</span></span></span><br><span class="line"><span class="language-javascript">      <span class="title function_">beforeCreate</span> () &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;beforeCreate 响应式数据准备好之前&#x27;</span>, <span class="variable language_">this</span>.<span class="property">count</span>)</span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">      <span class="title function_">created</span> () &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;created 响应式数据准备好之后&#x27;</span>, <span class="variable language_">this</span>.<span class="property">count</span>)</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// this.数据名 = 请求回来的数据</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 可以开始发送初始化渲染的请求了</span></span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 2. 挂载阶段（渲染模板）</span></span></span><br><span class="line"><span class="language-javascript">      <span class="title function_">beforeMount</span> () &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;beforeMount 模板渲染之前&#x27;</span>, <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;h3&#x27;</span>).<span class="property">innerHTML</span>)</span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">      <span class="title function_">mounted</span> () &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;mounted 模板渲染之后&#x27;</span>, <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;h3&#x27;</span>).<span class="property">innerHTML</span>)</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 可以开始操作dom了</span></span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 3. 更新阶段(修改数据 → 更新视图)</span></span></span><br><span class="line"><span class="language-javascript">      <span class="title function_">beforeUpdate</span> () &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;beforeUpdate 数据修改了，视图还没更新&#x27;</span>, <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;span&#x27;</span>).<span class="property">innerHTML</span>)</span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">      <span class="title function_">updated</span> () &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;updated 数据修改了，视图已经更新&#x27;</span>, <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;span&#x27;</span>).<span class="property">innerHTML</span>)</span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 4. 卸载阶段</span></span></span><br><span class="line"><span class="language-javascript">      <span class="title function_">beforeDestroy</span> () &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;beforeDestroy, 卸载前&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;清除掉一些Vue以外的资源占用，定时器，延时器...&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">      <span class="title function_">destroyed</span> () &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;destroyed，卸载后&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h2 id="四、生命周期钩子小案例"><a href="#四、生命周期钩子小案例" class="headerlink" title="四、生命周期钩子小案例"></a>四、生命周期钩子小案例</h2><h3 id="1-在created中发送数据"><a href="#1-在created中发送数据" class="headerlink" title="1.在created中发送数据"></a>1.在created中发送数据</h3><p>模板代码：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">   * &#123;</span></span><br><span class="line"><span class="language-css">     <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">     <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">     <span class="attribute">list-style</span>: none;</span></span><br><span class="line"><span class="language-css">   &#125;</span></span><br><span class="line"><span class="language-css">   <span class="selector-class">.news</span> &#123;</span></span><br><span class="line"><span class="language-css">     <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">     <span class="attribute">height</span>: <span class="number">120px</span>;</span></span><br><span class="line"><span class="language-css">     <span class="attribute">width</span>: <span class="number">600px</span>;</span></span><br><span class="line"><span class="language-css">     <span class="attribute">margin</span>: <span class="number">0</span> auto;</span></span><br><span class="line"><span class="language-css">     <span class="attribute">padding</span>: <span class="number">20px</span> <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">     <span class="attribute">cursor</span>: pointer;</span></span><br><span class="line"><span class="language-css">   &#125;</span></span><br><span class="line"><span class="language-css">   <span class="selector-class">.news</span> <span class="selector-class">.left</span> &#123;</span></span><br><span class="line"><span class="language-css">     <span class="attribute">flex</span>: <span class="number">1</span>;</span></span><br><span class="line"><span class="language-css">     <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">     <span class="attribute">flex-direction</span>: column;</span></span><br><span class="line"><span class="language-css">     <span class="attribute">justify-content</span>: space-between;</span></span><br><span class="line"><span class="language-css">     <span class="attribute">padding-right</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">   &#125;</span></span><br><span class="line"><span class="language-css">   <span class="selector-class">.news</span> <span class="selector-class">.left</span> <span class="selector-class">.title</span> &#123;</span></span><br><span class="line"><span class="language-css">     <span class="attribute">font-size</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">   &#125;</span></span><br><span class="line"><span class="language-css">   <span class="selector-class">.news</span> <span class="selector-class">.left</span> <span class="selector-class">.info</span> &#123;</span></span><br><span class="line"><span class="language-css">     <span class="attribute">color</span>: <span class="number">#999999</span>;</span></span><br><span class="line"><span class="language-css">   &#125;</span></span><br><span class="line"><span class="language-css">   <span class="selector-class">.news</span> <span class="selector-class">.left</span> <span class="selector-class">.info</span> <span class="selector-tag">span</span> &#123;</span></span><br><span class="line"><span class="language-css">     <span class="attribute">margin-right</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">   &#125;</span></span><br><span class="line"><span class="language-css">   <span class="selector-class">.news</span> <span class="selector-class">.right</span> &#123;</span></span><br><span class="line"><span class="language-css">     <span class="attribute">width</span>: <span class="number">160px</span>;</span></span><br><span class="line"><span class="language-css">     <span class="attribute">height</span>: <span class="number">120px</span>;</span></span><br><span class="line"><span class="language-css">   &#125;</span></span><br><span class="line"><span class="language-css">   <span class="selector-class">.news</span> <span class="selector-class">.right</span> <span class="selector-tag">img</span> &#123;</span></span><br><span class="line"><span class="language-css">     <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">     <span class="attribute">height</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">     <span class="attribute">object-fit</span>: cover;</span></span><br><span class="line"><span class="language-css">   &#125;</span></span><br><span class="line"><span class="language-css"> </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;news&quot;</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;left&quot;</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;title&quot;</span>&gt;</span>5G商用在即，三大运营商营收持续下降<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;info&quot;</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">span</span>&gt;</span>新京报经济新闻<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">span</span>&gt;</span>2222-10-28 11:50:28<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;right&quot;</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;http://ajax-api.itheima.net/public/images/0.webp&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"></span><br><span class="line">     <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;news&quot;</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;left&quot;</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;title&quot;</span>&gt;</span>5G商用在即，三大运营商营收持续下降<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;info&quot;</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">span</span>&gt;</span>新京报经济新闻<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">span</span>&gt;</span>2222-10-28 11:50:28<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;right&quot;</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;http://ajax-api.itheima.net/public/images/0.webp&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"></span><br><span class="line">     <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;news&quot;</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;left&quot;</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;title&quot;</span>&gt;</span>5G商用在即，三大运营商营收持续下降<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;info&quot;</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">span</span>&gt;</span>新京报经济新闻<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">span</span>&gt;</span>2222-10-28 11:50:28<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;right&quot;</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;http://ajax-api.itheima.net/public/images/0.webp&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">   <span class="comment">// 接口地址：http://hmajax.itheima.net/api/news</span></span></span><br><span class="line"><span class="language-javascript">   <span class="comment">// 请求方式：get</span></span></span><br><span class="line"><span class="language-javascript">   <span class="keyword">const</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">     <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">     <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">       <span class="attr">list</span>: []</span></span><br><span class="line"><span class="language-javascript">     &#125;</span></span><br><span class="line"><span class="language-javascript">   &#125;)</span></span><br><span class="line"><span class="language-javascript"> </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>实现代码：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(item, index) in list&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;item.id&quot;</span> <span class="attr">class</span>=<span class="string">&quot;news&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;left&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;title&quot;</span>&gt;</span>&#123;&#123; item.title &#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;info&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123; item.source &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123; item.time &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;right&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">img</span> <span class="attr">:src</span>=<span class="string">&quot;item.img&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 接口地址：http://hmajax.itheima.net/api/news</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 请求方式：get</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">list</span>: []</span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">async</span> <span class="title function_">created</span> () &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 1. 发送请求获取数据</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> res = <span class="keyword">await</span> axios.<span class="title function_">get</span>(<span class="string">&#x27;http://hmajax.itheima.net/api/news&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 2. 更新到 list 中，用于页面渲染 v-for</span></span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">this</span>.<span class="property">list</span> = res.<span class="property">data</span>.<span class="property">data</span></span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h3 id="2-在mounted中获取焦点"><a href="#2-在mounted中获取焦点" class="headerlink" title="2.在mounted中获取焦点"></a>2.在mounted中获取焦点</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">html</span>,</span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">body</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">height</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.search-container</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">top</span>: <span class="number">30%</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">left</span>: <span class="number">50%</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">transform</span>: <span class="built_in">translate</span>(-<span class="number">50%</span>, -<span class="number">50%</span>);</span></span><br><span class="line"><span class="language-css">      <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.search-container</span> <span class="selector-class">.search-box</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.search-container</span> <span class="selector-tag">img</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">margin-bottom</span>: <span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.search-container</span> <span class="selector-class">.search-box</span> <span class="selector-tag">input</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">width</span>: <span class="number">512px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">height</span>: <span class="number">16px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">padding</span>: <span class="number">12px</span> <span class="number">16px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">font-size</span>: <span class="number">16px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">vertical-align</span>: top;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">outline</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">box-shadow</span>: none;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">border-radius</span>: <span class="number">10px</span> <span class="number">0</span> <span class="number">0</span> <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">border</span>: <span class="number">2px</span> solid <span class="number">#c4c7ce</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background</span>: <span class="number">#fff</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">color</span>: <span class="number">#222</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">overflow</span>: hidden;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">box-sizing</span>: content-box;</span></span><br><span class="line"><span class="language-css">      -webkit-tap-highlight-<span class="attribute">color</span>: transparent;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.search-container</span> <span class="selector-class">.search-box</span> <span class="selector-tag">button</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">cursor</span>: pointer;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">width</span>: <span class="number">112px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">height</span>: <span class="number">44px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">line-height</span>: <span class="number">41px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">line-height</span>: <span class="number">42px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-color</span>: <span class="number">#ad2a27</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">border-radius</span>: <span class="number">0</span> <span class="number">10px</span> <span class="number">10px</span> <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">font-size</span>: <span class="number">17px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">box-shadow</span>: none;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">font-weight</span>: <span class="number">400</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">border</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">outline</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">letter-spacing</span>: normal;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">color</span>: white;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">body</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background</span>: no-repeat center /cover;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-color</span>: <span class="number">#edf0f5</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">  </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;search-container&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://www.itheima.com/images/logo.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;search-box&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;words&quot;</span> <span class="attr">id</span>=<span class="string">&quot;inp&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span>&gt;</span>搜索一下<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">words</span>: <span class="string">&#x27;&#x27;</span></span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 核心思路：</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 1. 等input框渲染出来 mounted 钩子</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 2. 让input框获取焦点 inp.focus()</span></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">mounted</span> () &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;#inp&#x27;</span>).<span class="title function_">focus</span>()</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h2 id="五、案例-小黑记账清单"><a href="#五、案例-小黑记账清单" class="headerlink" title="五、案例-小黑记账清单"></a>五、案例-小黑记账清单</h2><h3 id="1-需求图示："><a href="#1-需求图示：" class="headerlink" title="1.需求图示："></a>1.需求图示：</h3><img data-src="/2024/11/19/Vue2-0/1682071972085.png" class="" width="68207197208">

<h3 id="2-需求分析"><a href="#2-需求分析" class="headerlink" title="2.需求分析"></a>2.需求分析</h3><p>1.基本渲染</p>
<p>2.添加功能</p>
<p>3.删除功能</p>
<p>4.饼图渲染</p>
<h3 id="3-思路分析"><a href="#3-思路分析" class="headerlink" title="3.思路分析"></a>3.思路分析</h3><p>1.基本渲染  </p>
<ul>
<li>立刻发送请求获取数据 created</li>
<li>拿到数据，存到data的响应式数据中</li>
<li>结合数据，进行渲染 v-for</li>
<li>消费统计  —&gt; 计算属性</li>
</ul>
<p>2.添加功能</p>
<ul>
<li>收集表单数据 v-model，使用指令修饰符处理数据</li>
<li>给添加按钮注册点击事件，对输入的内容做非空判断，发送请求</li>
<li>请求成功后，对文本框内容进行清空</li>
<li>重新渲染列表</li>
</ul>
<p>3.删除功能</p>
<ul>
<li>注册点击事件，获取当前行的id</li>
<li>根据id发送删除请求</li>
<li>需要重新渲染</li>
</ul>
<p>4.饼图渲染</p>
<ul>
<li>初始化一个饼图 echarts.init(dom)    mounted钩子中渲染</li>
<li>根据数据试试更新饼图 echarts.setOptions({…})</li>
</ul>
<h3 id="4-代码准备"><a href="#4-代码准备" class="headerlink" title="4.代码准备"></a>4.代码准备</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- CSS only --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">link</span></span></span><br><span class="line"><span class="tag">     <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span></span></span><br><span class="line"><span class="tag">     <span class="attr">href</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css&quot;</span></span></span><br><span class="line"><span class="tag">   /&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">     <span class="selector-class">.red</span> &#123;</span></span><br><span class="line"><span class="language-css">       <span class="attribute">color</span>: red<span class="meta">!important</span>;</span></span><br><span class="line"><span class="language-css">     &#125;</span></span><br><span class="line"><span class="language-css">     <span class="selector-class">.search</span> &#123;</span></span><br><span class="line"><span class="language-css">       <span class="attribute">width</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">       <span class="attribute">margin</span>: <span class="number">20px</span> <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">     &#125;</span></span><br><span class="line"><span class="language-css">     <span class="selector-class">.my-form</span> &#123;</span></span><br><span class="line"><span class="language-css">       <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">       <span class="attribute">margin</span>: <span class="number">20px</span> <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">     &#125;</span></span><br><span class="line"><span class="language-css">     <span class="selector-class">.my-form</span> <span class="selector-tag">input</span> &#123;</span></span><br><span class="line"><span class="language-css">       <span class="attribute">flex</span>: <span class="number">1</span>;</span></span><br><span class="line"><span class="language-css">       <span class="attribute">margin-right</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">     &#125;</span></span><br><span class="line"><span class="language-css">     <span class="selector-class">.table</span> &gt; <span class="selector-pseudo">:not</span>(<span class="selector-pseudo">:first-child</span>) &#123;</span></span><br><span class="line"><span class="language-css">       <span class="attribute">border-top</span>: none;</span></span><br><span class="line"><span class="language-css">     &#125;</span></span><br><span class="line"><span class="language-css">     <span class="selector-class">.contain</span> &#123;</span></span><br><span class="line"><span class="language-css">       <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">       <span class="attribute">padding</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">     &#125;</span></span><br><span class="line"><span class="language-css">     <span class="selector-class">.list-box</span> &#123;</span></span><br><span class="line"><span class="language-css">       <span class="attribute">flex</span>: <span class="number">1</span>;</span></span><br><span class="line"><span class="language-css">       <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">     &#125;</span></span><br><span class="line"><span class="language-css">     <span class="selector-class">.list-box</span>  <span class="selector-tag">a</span> &#123;</span></span><br><span class="line"><span class="language-css">       <span class="attribute">text-decoration</span>: none;</span></span><br><span class="line"><span class="language-css">     &#125;</span></span><br><span class="line"><span class="language-css">     <span class="selector-class">.echarts-box</span> &#123;</span></span><br><span class="line"><span class="language-css">       <span class="attribute">width</span>: <span class="number">600px</span>;</span></span><br><span class="line"><span class="language-css">       <span class="attribute">height</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="language-css">       <span class="attribute">padding</span>: <span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">       <span class="attribute">margin</span>: <span class="number">0</span> auto;</span></span><br><span class="line"><span class="language-css">       <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</span></span><br><span class="line"><span class="language-css">     &#125;</span></span><br><span class="line"><span class="language-css">     <span class="selector-tag">tfoot</span> &#123;</span></span><br><span class="line"><span class="language-css">       <span class="attribute">font-weight</span>: bold;</span></span><br><span class="line"><span class="language-css">     &#125;</span></span><br><span class="line"><span class="language-css">     <span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">max-width</span>: <span class="number">1000px</span>) &#123;</span></span><br><span class="line"><span class="language-css">       <span class="selector-class">.contain</span> &#123;</span></span><br><span class="line"><span class="language-css">         <span class="attribute">flex-wrap</span>: wrap;</span></span><br><span class="line"><span class="language-css">       &#125;</span></span><br><span class="line"><span class="language-css">       <span class="selector-class">.list-box</span> &#123;</span></span><br><span class="line"><span class="language-css">         <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">       &#125;</span></span><br><span class="line"><span class="language-css">       <span class="selector-class">.echarts-box</span> &#123;</span></span><br><span class="line"><span class="language-css">         <span class="attribute">margin-top</span>: <span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">       &#125;</span></span><br><span class="line"><span class="language-css">     &#125;</span></span><br><span class="line"><span class="language-css">   </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;contain&quot;</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!-- 左侧列表 --&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;list-box&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">         <span class="comment">&lt;!-- 添加资产 --&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">form</span> <span class="attr">class</span>=<span class="string">&quot;my-form&quot;</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;消费名称&quot;</span> /&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;消费价格&quot;</span> /&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-primary&quot;</span>&gt;</span>添加账单<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line">         <span class="tag">&lt;<span class="name">table</span> <span class="attr">class</span>=<span class="string">&quot;table table-hover&quot;</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">th</span>&gt;</span>编号<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">th</span>&gt;</span>消费名称<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">th</span>&gt;</span>消费价格<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">th</span>&gt;</span>操作<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">td</span>&gt;</span>1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">td</span>&gt;</span>帽子<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">td</span>&gt;</span>99.00<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">td</span>&gt;</span>2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">td</span>&gt;</span>大衣<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">&quot;red&quot;</span>&gt;</span>199.00<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">tfoot</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">&quot;4&quot;</span>&gt;</span>消费总计： 298.00<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;/<span class="name">tfoot</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">       </span><br><span class="line">       <span class="comment">&lt;!-- 右侧图表 --&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;echarts-box&quot;</span> <span class="attr">id</span>=<span class="string">&quot;main&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/echarts@5.4.0/dist/echarts.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">     <span class="comment">/**</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">      * 接口文档地址：</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">      * https://www.apifox.cn/apidoc/shared-24459455-ebb1-4fdc-8df8-0aff8dc317a8/api-53371058</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">      * </span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">      * 功能需求：</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">      * 1. 基本渲染</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">      * 2. 添加功能</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">      * 3. 删除功能</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">      * 4. 饼图渲染</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">      */</span></span></span><br><span class="line"><span class="language-javascript">     <span class="keyword">const</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">       <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">       <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">         </span></span><br><span class="line"><span class="language-javascript">       &#125;,</span></span><br><span class="line"><span class="language-javascript">     &#125;)</span></span><br><span class="line"><span class="language-javascript">   </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h2 id="六、工程化开发和脚手架"><a href="#六、工程化开发和脚手架" class="headerlink" title="六、工程化开发和脚手架"></a>六、工程化开发和脚手架</h2><h3 id="1-开发Vue的两种方式"><a href="#1-开发Vue的两种方式" class="headerlink" title="1.开发Vue的两种方式"></a>1.开发Vue的两种方式</h3><ul>
<li>核心包传统开发模式：基于html &#x2F; css &#x2F; js 文件，直接引入核心包，开发 Vue。</li>
<li><strong>工程化开发模式：基于构建工具（例如：webpack）的环境中开发Vue。</strong></li>
</ul>
<img data-src="/2024/11/19/Vue2-0/1682090039070.png" class="" width="68209003907">



<p>工程化开发模式优点：</p>
<p>   提高编码效率，比如使用JS新语法、Less&#x2F;Sass、Typescript等通过webpack都可以编译成浏览器识别的ES3&#x2F;ES5&#x2F;CSS等</p>
<p>工程化开发模式问题：</p>
<ul>
<li>webpack配置<strong>不简单</strong></li>
<li><strong>雷同</strong>的基础配置</li>
<li>缺乏<strong>统一的标准</strong></li>
</ul>
<p>为了解决以上问题，所以我们需要一个工具，生成标准化的配置</p>
<h3 id="2-脚手架Vue-CLI"><a href="#2-脚手架Vue-CLI" class="headerlink" title="2.脚手架Vue CLI"></a>2.脚手架Vue CLI</h3><h4 id="基本介绍："><a href="#基本介绍：" class="headerlink" title="基本介绍："></a>基本介绍：</h4><p>   Vue CLI 是Vue官方提供的一个<strong>全局命令工具</strong></p>
<p>   可以帮助我们<strong>快速创建</strong>一个开发Vue项目的<strong>标准化基础架子</strong>。【集成了webpack配置】</p>
<h4 id="好处："><a href="#好处：" class="headerlink" title="好处："></a>好处：</h4><ol>
<li>开箱即用，零配置</li>
<li>内置babel等工具</li>
<li>标准化的webpack配置</li>
</ol>
<h4 id="使用步骤："><a href="#使用步骤：" class="headerlink" title="使用步骤："></a>使用步骤：</h4><ol>
<li>全局安装（只需安装一次即可） yarn global add @vue&#x2F;cli 或者 npm i @vue&#x2F;cli -g</li>
<li>查看vue&#x2F;cli版本： vue –version</li>
<li>创建项目架子：<strong>vue create project-name</strong>(项目名不能使用中文)</li>
<li>启动项目：<strong>yarn serve</strong> 或者 <strong>npm run serve</strong>(命令不固定，找package.json)</li>
</ol>
<h2 id="七、项目目录介绍和运行流程"><a href="#七、项目目录介绍和运行流程" class="headerlink" title="七、项目目录介绍和运行流程"></a>七、项目目录介绍和运行流程</h2><h3 id="1-项目目录介绍"><a href="#1-项目目录介绍" class="headerlink" title="1.项目目录介绍"></a>1.项目目录介绍</h3><img data-src="/2024/11/19/Vue2-0/1682092148521.png" class="" width="68209214852">

<p>虽然脚手架中的文件有很多，目前咱们只需人事三个文件即可</p>
<ol>
<li>main.js  入口文件</li>
<li>App.vue  App根组件 </li>
<li>index.html 模板文件</li>
</ol>
<h3 id="2-运行流程"><a href="#2-运行流程" class="headerlink" title="2.运行流程"></a>2.运行流程</h3><img data-src="/2024/11/19/Vue2-0/1682094032876.png" class="" width="68209403287">

<h2 id="八、组件化开发"><a href="#八、组件化开发" class="headerlink" title="八、组件化开发"></a>八、组件化开发</h2><p>​     组件化：一个页面可以拆分成一个个组件，每个组件有着自己独立的结构、样式、行为。</p>
<p>​     好处：便于维护，利于复用 → 提升开发效率。</p>
<p>​     组件分类：普通组件、根组件。</p>
<p>​      比如：下面这个页面，可以把所有的代码都写在一个页面中，但是这样显得代码比较混乱，难易维护。咱们可以按模块进行组件划分</p>
<img data-src="/2024/11/19/Vue2-0/1682168852372.png" class="" width="68216885237">

<p>总结：</p>
<p>组件化的好处是什么？</p>
<p>组件的分类？</p>
<h2 id="九、根组件-App-vue"><a href="#九、根组件-App-vue" class="headerlink" title="九、根组件 App.vue"></a>九、根组件 App.vue</h2><h3 id="1-根组件介绍"><a href="#1-根组件介绍" class="headerlink" title="1.根组件介绍"></a>1.根组件介绍</h3><p>整个应用最上层的组件，包裹所有普通小组件</p>
<img data-src="/2024/11/19/Vue2-0/1682169131688.png" class="" width="68216913168">



<h3 id="2-组件是由三部分构成"><a href="#2-组件是由三部分构成" class="headerlink" title="2.组件是由三部分构成"></a>2.组件是由三部分构成</h3><ul>
<li>语法高亮插件</li>
</ul>
<img data-src="/2024/11/19/Vue2-0/1682169264266.png" class="" width="68216926426">

<ul>
<li><p>三部分构成</p>
<ul>
<li>template：结构 （有且只能一个根元素）</li>
<li>script:   js逻辑 </li>
<li>style： 样式 (可支持less，需要装包)</li>
</ul>
</li>
<li><p>让组件支持less</p>
<p>（1） style标签，lang&#x3D;”less” 开启less功能 </p>
<p>（2） 装包: yarn add less less-loader -D 或者npm i less less-loader -D</p>
</li>
</ul>
<h3 id="3-总结-1"><a href="#3-总结-1" class="headerlink" title="3.总结"></a>3.总结</h3><p>App组件包含哪三部分？</p>
<h2 id="十、普通组件的注册使用-局部注册"><a href="#十、普通组件的注册使用-局部注册" class="headerlink" title="十、普通组件的注册使用-局部注册"></a>十、普通组件的注册使用-局部注册</h2><h3 id="1-特点："><a href="#1-特点：" class="headerlink" title="1.特点："></a>1.特点：</h3><p>只能在注册的组件内使用</p>
<h3 id="2-步骤："><a href="#2-步骤：" class="headerlink" title="2.步骤："></a>2.步骤：</h3><ol>
<li>创建.vue文件（三个组成部分）</li>
<li>在使用的组件内先导入再注册，最后使用</li>
</ol>
<h3 id="3-使用方式："><a href="#3-使用方式：" class="headerlink" title="3.使用方式："></a>3.使用方式：</h3><p>当成html标签使用即可  &lt;组件名&gt;&lt;&#x2F;组件名&gt;</p>
<h3 id="4-注意："><a href="#4-注意：" class="headerlink" title="4.注意："></a>4.注意：</h3><p>组件名规范 —&gt; 大驼峰命名法， 如 HmHeader</p>
<h3 id="5-语法："><a href="#5-语法：" class="headerlink" title="5.语法："></a>5.语法：</h3><img data-src="/2024/11/19/Vue2-0/1682227966812.png" class="" width="68222796681">

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 导入需要注册的组件</span></span><br><span class="line"><span class="keyword">import</span> 组件对象 <span class="keyword">from</span> <span class="string">&#x27;.vue文件路径&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">HmHeader</span> <span class="keyword">from</span> <span class="string">&#x27;./components/HmHeader&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;  <span class="comment">// 局部注册</span></span><br><span class="line">  <span class="attr">components</span>: &#123;</span><br><span class="line">   <span class="string">&#x27;组件名&#x27;</span>: 组件对象,</span><br><span class="line">    <span class="title class_">HmHeader</span>:<span class="title class_">HmHeaer</span>,</span><br><span class="line">    <span class="title class_">HmHeader</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="6-练习"><a href="#6-练习" class="headerlink" title="6.练习"></a>6.练习</h3><p>在App组件中，完成以下练习。在App.vue中使用组件的方式完成下面布局</p>
<img data-src="/2024/11/19/Vue2-0/1682227902873.png" class="" width="68222790287">



<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;hm-header&quot;&gt;</span><br><span class="line">    我是hm-header</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">.hm-header &#123;</span><br><span class="line">  height: 100px;</span><br><span class="line">  line-height: 100px;</span><br><span class="line">  text-align: center;</span><br><span class="line">  font-size: 30px;</span><br><span class="line">  background-color: #8064a2;</span><br><span class="line">  color: white;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;hm-main&quot;&gt;</span><br><span class="line">    我是hm-main</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">.hm-main &#123;</span><br><span class="line">  height: 400px;</span><br><span class="line">  line-height: 400px;</span><br><span class="line">  text-align: center;</span><br><span class="line">  font-size: 30px;</span><br><span class="line">  background-color: #f79646;</span><br><span class="line">  color: white;</span><br><span class="line">  margin: 20px 0;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;hm-footer&quot;&gt;</span><br><span class="line">    我是hm-footer</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">.hm-footer &#123;</span><br><span class="line">  height: 100px;</span><br><span class="line">  line-height: 100px;</span><br><span class="line">  text-align: center;</span><br><span class="line">  font-size: 30px;</span><br><span class="line">  background-color: #4f81bd;</span><br><span class="line">  color: white;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<h3 id="7-总结"><a href="#7-总结" class="headerlink" title="7.总结"></a>7.总结</h3><ul>
<li>A组件内部注册的局部组件能在B组件使用吗</li>
<li>局部注册组件的步骤是什么</li>
<li>使用组件时 应该按照什么命名法</li>
</ul>
<h2 id="十一、普通组件的注册使用-全局注册"><a href="#十一、普通组件的注册使用-全局注册" class="headerlink" title="十一、普通组件的注册使用-全局注册"></a>十一、普通组件的注册使用-全局注册</h2><h3 id="1-特点：-1"><a href="#1-特点：-1" class="headerlink" title="1.特点："></a>1.特点：</h3><p>全局注册的组件，在项目的<strong>任何组件</strong>中都能使用</p>
<h3 id="2-步骤"><a href="#2-步骤" class="headerlink" title="2.步骤"></a>2.步骤</h3><ol>
<li>创建.vue组件（三个组成部分）</li>
<li><strong>main.js</strong>中进行全局注册</li>
</ol>
<h3 id="3-使用方式"><a href="#3-使用方式" class="headerlink" title="3.使用方式"></a>3.使用方式</h3><p>当成HTML标签直接使用</p>
<blockquote>
<p>&lt;组件名&gt;&lt;&#x2F;组件名&gt;</p>
</blockquote>
<h3 id="4-注意"><a href="#4-注意" class="headerlink" title="4.注意"></a>4.注意</h3><p>组件名规范 —&gt; 大驼峰命名法， 如 HmHeader</p>
<h3 id="5-语法"><a href="#5-语法" class="headerlink" title="5.语法"></a>5.语法</h3><p>Vue.component(‘组件名’, 组件对象)</p>
<p>例：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 导入需要全局注册的组件</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">HmButton</span> <span class="keyword">from</span> <span class="string">&#x27;./components/HmButton&#x27;</span></span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">component</span>(<span class="string">&#x27;HmButton&#x27;</span>, <span class="title class_">HmButton</span>)</span><br></pre></td></tr></table></figure>

<h3 id="6-练习-1"><a href="#6-练习-1" class="headerlink" title="6.练习"></a>6.练习</h3><p>在以下3个局部组件中是展示一个通用按钮</p>
<img data-src="/2024/11/19/Vue2-0/1682263187344.png" class="" width="68226318734">

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;button class=&quot;hm-button&quot;&gt;通用按钮&lt;/button&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">.hm-button &#123;</span><br><span class="line">  height: 50px;</span><br><span class="line">  line-height: 50px;</span><br><span class="line">  padding: 0 20px;</span><br><span class="line">  background-color: #3bae56;</span><br><span class="line">  border-radius: 5px;</span><br><span class="line">  color: white;</span><br><span class="line">  border: none;</span><br><span class="line">  vertical-align: middle;</span><br><span class="line">  cursor: pointer;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<h3 id="7-总结-1"><a href="#7-总结-1" class="headerlink" title="7.总结"></a>7.总结</h3><p>1.全局注册组件应该在哪个文件中注册以及语法是什么？</p>
<p>2.全局组件在项目中的任何一个组件中可不可以使用？</p>
<h2 id="十二、综合案例"><a href="#十二、综合案例" class="headerlink" title="十二、综合案例"></a>十二、综合案例</h2><h3 id="1-小兔仙首页启动项目演示"><a href="#1-小兔仙首页启动项目演示" class="headerlink" title="1.小兔仙首页启动项目演示"></a>1.小兔仙首页启动项目演示</h3><h3 id="2-小兔仙组件拆分示意图"><a href="#2-小兔仙组件拆分示意图" class="headerlink" title="2.小兔仙组件拆分示意图"></a>2.小兔仙组件拆分示意图</h3><img data-src="/2024/11/19/Vue2-0/1682265491628.png" class="" width="68226549162">



<h3 id="3-开发思路"><a href="#3-开发思路" class="headerlink" title="3.开发思路"></a>3.开发思路</h3><ol>
<li><p>分析页面，按模块拆分组件，搭架子  (局部或全局注册)</p>
</li>
<li><p>根据设计图，编写组件 html 结构 css 样式 (已准备好)</p>
</li>
<li><p>拆分封装通用小组件  (局部或全局注册)</p>
<p>将来 → 通过 js 动态渲染，实现功能</p>
</li>
</ol>
<h1 id="day04"><a href="#day04" class="headerlink" title="day04"></a>day04</h1><h2 id="一、学习目标"><a href="#一、学习目标" class="headerlink" title="一、学习目标"></a>一、学习目标</h2><h3 id="1-组件的三大组成部分（结构-样式-逻辑）"><a href="#1-组件的三大组成部分（结构-样式-逻辑）" class="headerlink" title="1.组件的三大组成部分（结构&#x2F;样式&#x2F;逻辑）"></a>1.组件的三大组成部分（结构&#x2F;样式&#x2F;逻辑）</h3><p>​    scoped解决样式冲突&#x2F;data是一个函数</p>
<h3 id="2-组件通信"><a href="#2-组件通信" class="headerlink" title="2.组件通信"></a>2.组件通信</h3><ol>
<li>组件通信语法</li>
<li>父传子</li>
<li>子传父</li>
<li>非父子通信（扩展）</li>
</ol>
<h3 id="3-综合案例：小黑记事本（组件版）"><a href="#3-综合案例：小黑记事本（组件版）" class="headerlink" title="3.综合案例：小黑记事本（组件版）"></a>3.综合案例：小黑记事本（组件版）</h3><ol>
<li>拆分组件</li>
<li>列表渲染</li>
<li>数据添加</li>
<li>数据删除</li>
<li>列表统计</li>
<li>清空</li>
<li>持久化</li>
</ol>
<h3 id="4-进阶语法"><a href="#4-进阶语法" class="headerlink" title="4.进阶语法"></a>4.进阶语法</h3><ol>
<li>v-model原理</li>
<li>v-model应用于组件</li>
<li>sync修饰符</li>
<li>ref和$refs</li>
<li>$nextTick</li>
</ol>
<h2 id="二、scoped解决样式冲突"><a href="#二、scoped解决样式冲突" class="headerlink" title="二、scoped解决样式冲突"></a>二、scoped解决样式冲突</h2><h3 id="1-默认情况："><a href="#1-默认情况：" class="headerlink" title="1.默认情况："></a><strong>1.默认情况</strong>：</h3><p>写在组件中的样式会 <strong>全局生效</strong> →  因此很容易造成多个组件之间的样式冲突问题。</p>
<ol>
<li><p><strong>全局样式</strong>: 默认组件中的样式会作用到全局，任何一个组件中都会受到此样式的影响</p>
</li>
<li><p><strong>局部样式</strong>: 可以给组件加上<strong>scoped</strong> 属性,可以<strong>让样式只作用于当前组件</strong></p>
</li>
</ol>
<h3 id="2-代码演示"><a href="#2-代码演示" class="headerlink" title="2.代码演示"></a>2.代码演示</h3><p>BaseOne.vue</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;base-one&quot;&gt;</span><br><span class="line">    BaseOne</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">/* </span><br><span class="line">  1.style中的样式 默认是作用到全局的</span><br><span class="line">  2.加上scoped可以让样式变成局部样式</span><br><span class="line"></span><br><span class="line">  组件都应该有独立的样式，推荐加scoped（原理）</span><br><span class="line">  -----------------------------------------------------</span><br><span class="line">  scoped原理：</span><br><span class="line">  1.给当前组件模板的所有元素，都会添加上一个自定义属性</span><br><span class="line">  data-v-hash值</span><br><span class="line">  data-v-5f6a9d56  用于区分开不通的组件</span><br><span class="line">  2.css选择器后面，被自动处理，添加上了属性选择器</span><br><span class="line">  div[data-v-5f6a9d56]</span><br><span class="line">*/</span><br><span class="line">div&#123;</span><br><span class="line">  border: 3px solid blue;</span><br><span class="line">  margin: 30px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<p>BaseTwo.vue</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;base-one&quot;&gt;</span><br><span class="line">    BaseTwo</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line"> div&#123;</span><br><span class="line">  border: 3px solid red;</span><br><span class="line">  margin: 30px;</span><br><span class="line"> &#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<p>App.vue</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div id=&quot;app&quot;&gt;</span><br><span class="line">    &lt;BaseOne&gt;&lt;/BaseOne&gt;</span><br><span class="line">    &lt;BaseTwo&gt;&lt;/BaseTwo&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import BaseOne from &#x27;./components/BaseOne&#x27;</span><br><span class="line">import BaseTwo from &#x27;./components/BaseTwo&#x27;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &#x27;App&#x27;,</span><br><span class="line">  components: &#123;</span><br><span class="line">    BaseOne,</span><br><span class="line">    BaseTwo</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<h3 id="3-scoped原理"><a href="#3-scoped原理" class="headerlink" title="3.scoped原理"></a>3.scoped原理</h3><ol>
<li>当前组件内标签都被添加<strong>data-v-hash值</strong> 的属性 </li>
<li>css选择器都被添加 [<strong>data-v-hash值</strong>] 的属性选择器</li>
</ol>
<p>最终效果: <strong>必须是当前组件的元素</strong>, 才会有这个自定义属性, 才会被这个样式作用到 </p>
<img data-src="/2024/11/19/Vue2-0/1682306517375.png" class="" width="68230651737">

<h3 id="4-总结-3"><a href="#4-总结-3" class="headerlink" title="4.总结"></a>4.总结</h3><ol>
<li>style的默认样式是作用到哪里的？</li>
<li>scoped的作用是什么？</li>
<li>style中推不推荐加scoped？</li>
</ol>
<h2 id="三、data必须是一个函数"><a href="#三、data必须是一个函数" class="headerlink" title="三、data必须是一个函数"></a>三、data必须是一个函数</h2><h3 id="1、data为什么要写成函数"><a href="#1、data为什么要写成函数" class="headerlink" title="1、data为什么要写成函数"></a>1、data为什么要写成函数</h3><p>一个组件的 <strong>data</strong> 选项必须<strong>是一个函数</strong>。目的是为了：保证每个组件实例，维护<strong>独立</strong>的一份<strong>数据</strong>对象。</p>
<p>每次创建新的组件实例，都会新<strong>执行一次data 函数</strong>，得到一个新对象。</p>
<img data-src="/2024/11/19/Vue2-0/1682306952078.png" class="" width="68230695207">

<h3 id="2-代码演示-1"><a href="#2-代码演示-1" class="headerlink" title="2.代码演示"></a>2.代码演示</h3><p>BaseCount.vue</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;base-count&quot;&gt;</span><br><span class="line">    &lt;button @click=&quot;count--&quot;&gt;-&lt;/button&gt;</span><br><span class="line">    &lt;span&gt;&#123;&#123; count &#125;&#125;&lt;/span&gt;</span><br><span class="line">    &lt;button @click=&quot;count++&quot;&gt;+&lt;/button&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  data: function () &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      count: 100,</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">.base-count &#123;</span><br><span class="line">  margin: 20px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<p>App.vue</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;app&quot;&gt;</span><br><span class="line">    &lt;baseCount&gt;&lt;/baseCount&gt;</span><br><span class="line">    &lt;baseCount&gt;&lt;/baseCount&gt;</span><br><span class="line">    &lt;baseCount&gt;&lt;/baseCount&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import BaseCount from &#x27;./components/BaseCount&#x27;</span><br><span class="line">export default &#123;</span><br><span class="line">  components: &#123;</span><br><span class="line">    BaseCount,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<h3 id="3-总结-2"><a href="#3-总结-2" class="headerlink" title="3.总结"></a>3.总结</h3><p>data写成函数的目的是什么？</p>
<h2 id="四、组件通信"><a href="#四、组件通信" class="headerlink" title="四、组件通信"></a>四、组件通信</h2><h3 id="1-什么是组件通信？"><a href="#1-什么是组件通信？" class="headerlink" title="1.什么是组件通信？"></a>1.什么是组件通信？</h3><p>组件通信，就是指<strong>组件与组件</strong>之间的<strong>数据传递</strong></p>
<ul>
<li>组件的数据是独立的，无法直接访问其他组件的数据。</li>
<li>想使用其他组件的数据，就需要组件通信</li>
</ul>
<h3 id="2-组件之间如何通信"><a href="#2-组件之间如何通信" class="headerlink" title="2.组件之间如何通信"></a>2.组件之间如何通信</h3><img data-src="/2024/11/19/Vue2-0/1682308903094.png" class="" width="68230890309">

<p>思考：</p>
<ol>
<li>组件之间有哪些关系？</li>
<li>对应的组件通信方案有哪几类？</li>
</ol>
<h3 id="3-组件关系分类"><a href="#3-组件关系分类" class="headerlink" title="3.组件关系分类"></a>3.组件关系分类</h3><ol>
<li>父子关系</li>
<li>非父子关系</li>
</ol>
<img data-src="/2024/11/19/Vue2-0/1682318073803.png" class="" width="68231807380">



<h3 id="4-通信解决方案"><a href="#4-通信解决方案" class="headerlink" title="4.通信解决方案"></a>4.通信解决方案</h3><img data-src="/2024/11/19/Vue2-0/1682318111090.png" class="" width="68231811109">





<h3 id="5-父子通信流程"><a href="#5-父子通信流程" class="headerlink" title="5.父子通信流程"></a>5.父子通信流程</h3><ol>
<li>父组件通过 <strong>props</strong> 将数据传递给子组件</li>
<li>子组件利用 <strong>$emit</strong> 通知父组件修改更新</li>
</ol>
<img data-src="/2024/11/19/Vue2-0/1682318444566.png" class="" width="68231844456">



<h3 id="6-父向子通信代码示例"><a href="#6-父向子通信代码示例" class="headerlink" title="6.父向子通信代码示例"></a>6.父向子通信代码示例</h3><p>父组件通过<strong>props</strong>将数据传递给子组件</p>
<p>父组件App.vue</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;app&quot; style=&quot;border: 3px solid #000; margin: 10px&quot;&gt;</span><br><span class="line">    我是APP组件</span><br><span class="line">    &lt;!-- 1.给组件标签，添加属性方式 赋值 --&gt;</span><br><span class="line">    &lt;Son :title=&quot;myTitle&quot;&gt;&lt;/Son&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import Son from &#x27;./components/Son.vue&#x27;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &#x27;App&#x27;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      myTitle: &#x27;学前端，就来黑马程序员&#x27;,</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  components: &#123;</span><br><span class="line">    Son,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>



<p>子组件Son.vue</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;son&quot; style=&quot;border:3px solid #000;margin:10px&quot;&gt;</span><br><span class="line">    &lt;!-- 3.直接使用props的值 --&gt;</span><br><span class="line">    我是Son组件 &#123;&#123;title&#125;&#125;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &#x27;Son-Child&#x27;,</span><br><span class="line">  // 2.通过props来接受</span><br><span class="line">  props:[&#x27;title&#x27;]</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<img data-src="/2024/11/19/Vue2-0/1682318711785.png" class="" width="68231871178">

<p>父向子传值步骤</p>
<ol>
<li>给子组件以添加属性的方式传值</li>
<li>子组件内部通过props接收</li>
<li>模板中直接使用 props接收的值</li>
</ol>
<h3 id="7-子向父通信代码示例"><a href="#7-子向父通信代码示例" class="headerlink" title="7.子向父通信代码示例"></a>7.子向父通信代码示例</h3><p>子组件利用 <strong>$emit</strong> 通知父组件，进行修改更新</p>
<p>父组件App.vue</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;app&quot; style=&quot;border: 3px solid #000; margin: 10px&quot;&gt;</span><br><span class="line">    我是APP组件</span><br><span class="line">    &lt;!-- 2.父组件对子组件的消息进行监听 --&gt;</span><br><span class="line">    &lt;Son :title=&quot;myTitle&quot; @changTitle=&quot;handleChange&quot;&gt;&lt;/Son&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import Son from &#x27;./components/Son.vue&#x27;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &#x27;App&#x27;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      myTitle: &#x27;学前端，就来黑马程序员&#x27;,</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  components: &#123;</span><br><span class="line">    Son,</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    // 3.提供处理函数，提供逻辑</span><br><span class="line">    handleChange(newTitle) &#123;</span><br><span class="line">      this.myTitle = newTitle</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>



<p>子组件Son.vue</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;son&quot; style=&quot;border: 3px solid #000; margin: 10px&quot;&gt;</span><br><span class="line">    我是Son组件 &#123;&#123; title &#125;&#125;</span><br><span class="line">    &lt;button @click=&quot;changeFn&quot;&gt;修改title&lt;/button&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &#x27;Son-Child&#x27;,</span><br><span class="line">  props: [&#x27;title&#x27;],</span><br><span class="line">  methods: &#123;</span><br><span class="line">    changeFn() &#123;</span><br><span class="line">      // 通过this.$emit() 向父组件发送通知</span><br><span class="line">      this.$emit(&#x27;changTitle&#x27;,&#x27;传智教育&#x27;)</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<img data-src="/2024/11/19/Vue2-0/1682318965635.png" class="" width="68231896563">

<p>子向父传值步骤</p>
<ol>
<li>$emit触发事件，给父组件发送消息通知</li>
<li>父组件监听$emit触发的事件</li>
<li>提供处理函数，在函数的性参中获取传过来的参数</li>
</ol>
<h3 id="8-总结"><a href="#8-总结" class="headerlink" title="8.总结"></a>8.总结</h3><ol>
<li>组件关系分类有哪两种</li>
<li>父子组件通信的流程是什么？<ol>
<li>父向子</li>
<li>子向父</li>
</ol>
</li>
</ol>
<h2 id="五、什么是props"><a href="#五、什么是props" class="headerlink" title="五、什么是props"></a>五、什么是props</h2><h3 id="1-Props-定义"><a href="#1-Props-定义" class="headerlink" title="1.Props 定义"></a>1.Props 定义</h3><p>组件上 注册的一些  自定义属性</p>
<h3 id="2-Props-作用"><a href="#2-Props-作用" class="headerlink" title="2.Props 作用"></a>2.Props 作用</h3><p>向子组件传递数据</p>
<h3 id="3-特点"><a href="#3-特点" class="headerlink" title="3.特点"></a>3.特点</h3><ol>
<li>可以 传递 <strong>任意数量</strong> 的prop</li>
<li>可以 传递 <strong>任意类型</strong> 的prop</li>
</ol>
<img data-src="/2024/11/19/Vue2-0/1682320156914.png" class="" width="68232015691">

<h3 id="4-代码演示"><a href="#4-代码演示" class="headerlink" title="4.代码演示"></a>4.代码演示</h3><p>父组件App.vue</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;app&quot;&gt;</span><br><span class="line">    &lt;UserInfo</span><br><span class="line">      :username=&quot;username&quot;</span><br><span class="line">      :age=&quot;age&quot;</span><br><span class="line">      :isSingle=&quot;isSingle&quot;</span><br><span class="line">      :car=&quot;car&quot;</span><br><span class="line">      :hobby=&quot;hobby&quot;</span><br><span class="line">    &gt;&lt;/UserInfo&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import UserInfo from &#x27;./components/UserInfo.vue&#x27;</span><br><span class="line">export default &#123;</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      username: &#x27;小帅&#x27;,</span><br><span class="line">      age: 28,</span><br><span class="line">      isSingle: true,</span><br><span class="line">      car: &#123;</span><br><span class="line">        brand: &#x27;宝马&#x27;,</span><br><span class="line">      &#125;,</span><br><span class="line">      hobby: [&#x27;篮球&#x27;, &#x27;足球&#x27;, &#x27;羽毛球&#x27;],</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  components: &#123;</span><br><span class="line">    UserInfo,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<p>子组件UserInfo.vue</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;userinfo&quot;&gt;</span><br><span class="line">    &lt;h3&gt;我是个人信息组件&lt;/h3&gt;</span><br><span class="line">    &lt;div&gt;姓名：&#123;&#123;username&#125;&#125;&lt;/div&gt;</span><br><span class="line">    &lt;div&gt;年龄：&#123;&#123;age&#125;&#125;&lt;/div&gt;</span><br><span class="line">    &lt;div&gt;是否单身：&#123;&#123;isSingle&#125;&#125;&lt;/div&gt;</span><br><span class="line">    &lt;div&gt;座驾：&#123;&#123;car.brand&#125;&#125;&lt;/div&gt;</span><br><span class="line">    &lt;div&gt;兴趣爱好：&#123;&#123;hobby.join(&#x27;、&#x27;)&#125;&#125;&lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  props:[&#x27;username&#x27;,&#x27;age&#x27;,&#x27;isSingle&#x27;,&#x27;car&#x27;,&#x27;hobby&#x27;]</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">.userinfo &#123;</span><br><span class="line">  width: 300px;</span><br><span class="line">  border: 3px solid #000;</span><br><span class="line">  padding: 20px;</span><br><span class="line">&#125;</span><br><span class="line">.userinfo &gt; div &#123;</span><br><span class="line">  margin: 20px 10px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>



<h2 id="六、props校验"><a href="#六、props校验" class="headerlink" title="六、props校验"></a>六、props校验</h2><h3 id="1-思考"><a href="#1-思考" class="headerlink" title="1.思考"></a>1.思考</h3><p>组件的props可以乱传吗</p>
<h3 id="2-作用"><a href="#2-作用" class="headerlink" title="2.作用"></a>2.作用</h3><p>为组件的 prop 指定<strong>验证要求</strong>，不符合要求，控制台就会有<strong>错误提示</strong>  → 帮助开发者，快速发现错误</p>
<h3 id="3-语法"><a href="#3-语法" class="headerlink" title="3.语法"></a>3.语法</h3><ul>
<li><strong>类型校验</strong></li>
<li>非空校验</li>
<li>默认值</li>
<li>自定义校验</li>
</ul>
<img data-src="/2024/11/19/Vue2-0/1682320684053.png" class="" width="68232068405">

<h3 id="4-代码演示-1"><a href="#4-代码演示-1" class="headerlink" title="4.代码演示"></a>4.代码演示</h3><p>App.vue</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;app&quot;&gt;</span><br><span class="line">    &lt;BaseProgress :w=&quot;width&quot;&gt;&lt;/BaseProgress&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import BaseProgress from &#x27;./components/BaseProgress.vue&#x27;</span><br><span class="line">export default &#123;</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      width: 30,</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  components: &#123;</span><br><span class="line">    BaseProgress,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<p>BaseProgress.vue</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;base-progress&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;inner&quot; :style=&quot;&#123; width: w + &#x27;%&#x27; &#125;&quot;&gt;</span><br><span class="line">      &lt;span&gt;&#123;&#123; w &#125;&#125;%&lt;/span&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  props: &#123;</span><br><span class="line">    w: Number,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">.base-progress &#123;</span><br><span class="line">  height: 26px;</span><br><span class="line">  width: 400px;</span><br><span class="line">  border-radius: 15px;</span><br><span class="line">  background-color: #272425;</span><br><span class="line">  border: 3px solid #272425;</span><br><span class="line">  box-sizing: border-box;</span><br><span class="line">  margin-bottom: 30px;</span><br><span class="line">&#125;</span><br><span class="line">.inner &#123;</span><br><span class="line">  position: relative;</span><br><span class="line">  background: #379bff;</span><br><span class="line">  border-radius: 15px;</span><br><span class="line">  height: 25px;</span><br><span class="line">  box-sizing: border-box;</span><br><span class="line">  left: -3px;</span><br><span class="line">  top: -2px;</span><br><span class="line">&#125;</span><br><span class="line">.inner span &#123;</span><br><span class="line">  position: absolute;</span><br><span class="line">  right: 0;</span><br><span class="line">  top: 26px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>



<h2 id="七、props校验完整写法"><a href="#七、props校验完整写法" class="headerlink" title="七、props校验完整写法"></a>七、props校验完整写法</h2><h3 id="1-语法-2"><a href="#1-语法-2" class="headerlink" title="1.语法"></a>1.语法</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">props: &#123;</span><br><span class="line">  校验的属性名: &#123;</span><br><span class="line">    type: 类型,  // Number String Boolean ...</span><br><span class="line">    required: true, // 是否必填</span><br><span class="line">    default: 默认值, // 默认值</span><br><span class="line">    validator (value) &#123;</span><br><span class="line">      // 自定义校验逻辑</span><br><span class="line">      return 是否通过校验</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>

<h3 id="2-代码实例"><a href="#2-代码实例" class="headerlink" title="2.代码实例"></a>2.代码实例</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;base-progress&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;inner&quot; :style=&quot;&#123; width: w + &#x27;%&#x27; &#125;&quot;&gt;</span><br><span class="line">      &lt;span&gt;&#123;&#123; w &#125;&#125;%&lt;/span&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  // 1.基础写法（类型校验）</span><br><span class="line">  // props: &#123;</span><br><span class="line">  //   w: Number,</span><br><span class="line">  // &#125;,</span><br><span class="line"></span><br><span class="line">  // 2.完整写法（类型、默认值、非空、自定义校验）</span><br><span class="line">  props: &#123;</span><br><span class="line">    w: &#123;</span><br><span class="line">      type: Number,</span><br><span class="line">      required: true,</span><br><span class="line">      default: 0,</span><br><span class="line">      validator(val) &#123;</span><br><span class="line">        // console.log(val)</span><br><span class="line">        if (val &gt;= 100 || val &lt;= 0) &#123;</span><br><span class="line">          console.error(&#x27;传入的范围必须是0-100之间&#x27;)</span><br><span class="line">          return false</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">          return true</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">.base-progress &#123;</span><br><span class="line">  height: 26px;</span><br><span class="line">  width: 400px;</span><br><span class="line">  border-radius: 15px;</span><br><span class="line">  background-color: #272425;</span><br><span class="line">  border: 3px solid #272425;</span><br><span class="line">  box-sizing: border-box;</span><br><span class="line">  margin-bottom: 30px;</span><br><span class="line">&#125;</span><br><span class="line">.inner &#123;</span><br><span class="line">  position: relative;</span><br><span class="line">  background: #379bff;</span><br><span class="line">  border-radius: 15px;</span><br><span class="line">  height: 25px;</span><br><span class="line">  box-sizing: border-box;</span><br><span class="line">  left: -3px;</span><br><span class="line">  top: -2px;</span><br><span class="line">&#125;</span><br><span class="line">.inner span &#123;</span><br><span class="line">  position: absolute;</span><br><span class="line">  right: 0;</span><br><span class="line">  top: 26px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<h3 id="3-注意-1"><a href="#3-注意-1" class="headerlink" title="3.注意"></a>3.注意</h3><p>1.default和required一般不同时写（因为当时必填项时，肯定是有值的）</p>
<p>2.default后面如果是简单类型的值，可以直接写默认。如果是复杂类型的值，则需要以函数的形式return一个默认值</p>
<h2 id="八、props-data、单向数据流"><a href="#八、props-data、单向数据流" class="headerlink" title="八、props&amp;data、单向数据流"></a>八、props&amp;data、单向数据流</h2><h3 id="1-共同点"><a href="#1-共同点" class="headerlink" title="1.共同点"></a>1.共同点</h3><p>都可以给组件提供数据</p>
<h3 id="2-区别"><a href="#2-区别" class="headerlink" title="2.区别"></a>2.区别</h3><ul>
<li>data 的数据是<strong>自己</strong>的  →   随便改  </li>
<li>prop 的数据是<strong>外部</strong>的  →   不能直接改，要遵循 <strong>单向数据流</strong></li>
</ul>
<h3 id="3-单向数据流："><a href="#3-单向数据流：" class="headerlink" title="3.单向数据流："></a>3.单向数据流：</h3><p>父级props 的数据更新，会向下流动，影响子组件。这个数据流动是单向的</p>
<h3 id="4-代码演示-2"><a href="#4-代码演示-2" class="headerlink" title="4.代码演示"></a>4.代码演示</h3><p>App.vue</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;app&quot;&gt;</span><br><span class="line">    &lt;BaseCount :count=&quot;count&quot; @changeCount=&quot;handleChange&quot;&gt;&lt;/BaseCount&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import BaseCount from &#x27;./components/BaseCount.vue&#x27;</span><br><span class="line">export default &#123;</span><br><span class="line">  components:&#123;</span><br><span class="line">    BaseCount</span><br><span class="line">  &#125;,</span><br><span class="line">  data()&#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      count:100</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods:&#123;</span><br><span class="line">    handleChange(newVal)&#123;</span><br><span class="line">      // console.log(newVal);</span><br><span class="line">      this.count = newVal</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<p>BaseCount.vue</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;base-count&quot;&gt;</span><br><span class="line">    &lt;button @click=&quot;handleSub&quot;&gt;-&lt;/button&gt;</span><br><span class="line">    &lt;span&gt;&#123;&#123; count &#125;&#125;&lt;/span&gt;</span><br><span class="line">    &lt;button @click=&quot;handleAdd&quot;&gt;+&lt;/button&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  // 1.自己的数据随便修改  （谁的数据 谁负责）</span><br><span class="line">  // data () &#123;</span><br><span class="line">  //   return &#123;</span><br><span class="line">  //     count: 100,</span><br><span class="line">  //   &#125;</span><br><span class="line">  // &#125;,</span><br><span class="line">  // 2.外部传过来的数据 不能随便修改</span><br><span class="line">  props: &#123;</span><br><span class="line">    count: &#123;</span><br><span class="line">      type: Number,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    handleSub() &#123;</span><br><span class="line">      this.$emit(&#x27;changeCount&#x27;, this.count - 1)</span><br><span class="line">    &#125;,</span><br><span class="line">    handleAdd() &#123;</span><br><span class="line">      this.$emit(&#x27;changeCount&#x27;, this.count + 1)</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">.base-count &#123;</span><br><span class="line">  margin: 20px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<img data-src="/2024/11/19/Vue2-0/1682323734228.png" class="" width="68232373422">

<h3 id="5-口诀"><a href="#5-口诀" class="headerlink" title="5.口诀"></a>5.口诀</h3><p><strong>谁的数据谁负责</strong></p>
<h2 id="九、综合案例-组件拆分"><a href="#九、综合案例-组件拆分" class="headerlink" title="九、综合案例-组件拆分"></a>九、综合案例-组件拆分</h2><h3 id="1-需求说明"><a href="#1-需求说明" class="headerlink" title="1.需求说明"></a>1.需求说明</h3><ul>
<li>拆分基础组件</li>
<li>渲染待办任务</li>
<li>添加任务</li>
<li>删除任务</li>
<li>底部合计 和 清空功能</li>
<li>持久化存储</li>
</ul>
<h3 id="2-拆分基础组件"><a href="#2-拆分基础组件" class="headerlink" title="2.拆分基础组件"></a>2.拆分基础组件</h3><p>咱们可以把小黑记事本原有的结构拆成三部分内容：头部（TodoHeader）、列表(TodoMain)、底部(TodoFooter)</p>
<img data-src="/2024/11/19/Vue2-0/1682325598418.png" class="" width="68232559841">



<h2 id="十、综合案例-列表渲染"><a href="#十、综合案例-列表渲染" class="headerlink" title="十、综合案例-列表渲染"></a>十、综合案例-列表渲染</h2><p>思路分析：</p>
<ol>
<li>提供数据：提供在公共的父组件 App.vue</li>
<li>通过父传子，将数据传递给TodoMain</li>
<li>利用v-for进行渲染</li>
</ol>
<h2 id="十一、综合案例-添加功能"><a href="#十一、综合案例-添加功能" class="headerlink" title="十一、综合案例-添加功能"></a>十一、综合案例-添加功能</h2><p>思路分析：</p>
<ol>
<li>收集表单数据  v-model</li>
<li>监听时间 （回车+点击 都要进行添加）</li>
<li>子传父，将任务名称传递给父组件App.vue</li>
<li>父组件接受到数据后 进行添加 <strong>unshift</strong>(自己的数据自己负责)</li>
</ol>
<h2 id="十二、综合案例-删除功能"><a href="#十二、综合案例-删除功能" class="headerlink" title="十二、综合案例-删除功能"></a>十二、综合案例-删除功能</h2><p>思路分析：</p>
<ol>
<li>监听时间（监听删除的点击）携带id</li>
<li>子传父，将删除的id传递给父组件App.vue</li>
<li>进行删除 <strong>filter</strong>  (自己的数据自己负责)</li>
</ol>
<h2 id="十三、综合案例-底部功能及持久化存储"><a href="#十三、综合案例-底部功能及持久化存储" class="headerlink" title="十三、综合案例-底部功能及持久化存储"></a>十三、综合案例-底部功能及持久化存储</h2><p>思路分析：</p>
<ol>
<li>底部合计：父组件传递list到底部组件  —&gt;展示合计</li>
<li>清空功能：监听事件 —&gt; <strong>子组件</strong>通知父组件 —&gt;父组件清空</li>
<li>持久化存储：watch监听数据变化，持久化到本地</li>
</ol>
<h2 id="十四、非父子通信-event-bus-事件总线"><a href="#十四、非父子通信-event-bus-事件总线" class="headerlink" title="十四、非父子通信-event bus 事件总线"></a>十四、非父子通信-event bus 事件总线</h2><h3 id="1-作用"><a href="#1-作用" class="headerlink" title="1.作用"></a>1.作用</h3><p>非父子组件之间，进行简易消息传递。(复杂场景→ Vuex)</p>
<h3 id="2-步骤-1"><a href="#2-步骤-1" class="headerlink" title="2.步骤"></a>2.步骤</h3><ol>
<li><p>创建一个都能访问的事件总线 （空Vue实例）</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Vue</span> <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Bus</span> = <span class="keyword">new</span> <span class="title class_">Vue</span>()</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">Bus</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>A组件（接受方），监听Bus的 $on事件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">created () &#123;</span><br><span class="line">  Bus.$on(&#x27;sendMsg&#x27;, (msg) =&gt; &#123;</span><br><span class="line">    this.msg = msg</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>B组件（发送方），触发Bus的$emit事件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Bus.$emit(&#x27;sendMsg&#x27;, &#x27;这是一个消息&#x27;)</span><br></pre></td></tr></table></figure>

<img data-src="/2024/11/19/Vue2-0/1682328392400.png" class="" width="68232839240"></li>
</ol>
<h3 id="3-代码示例"><a href="#3-代码示例" class="headerlink" title="3.代码示例"></a>3.代码示例</h3><p>EventBus.js</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Vue</span> <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Bus</span>  =  <span class="keyword">new</span> <span class="title class_">Vue</span>()</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">Bus</span></span><br></pre></td></tr></table></figure>

<p>BaseA.vue(接受方)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;base-a&quot;&gt;</span><br><span class="line">    我是A组件（接受方）</span><br><span class="line">    &lt;p&gt;&#123;&#123;msg&#125;&#125;&lt;/p&gt;  </span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import Bus from &#x27;../utils/EventBus&#x27;</span><br><span class="line">export default &#123;</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      msg: &#x27;&#x27;,</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  created() &#123;</span><br><span class="line">    Bus.$on(&#x27;sendMsg&#x27;, (msg) =&gt; &#123;</span><br><span class="line">      // console.log(msg)</span><br><span class="line">      this.msg = msg</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">.base-a &#123;</span><br><span class="line">  width: 200px;</span><br><span class="line">  height: 200px;</span><br><span class="line">  border: 3px solid #000;</span><br><span class="line">  border-radius: 3px;</span><br><span class="line">  margin: 10px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<p>BaseB.vue(发送方)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;base-b&quot;&gt;</span><br><span class="line">    &lt;div&gt;我是B组件（发布方）&lt;/div&gt;</span><br><span class="line">    &lt;button @click=&quot;sendMsgFn&quot;&gt;发送消息&lt;/button&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import Bus from &#x27;../utils/EventBus&#x27;</span><br><span class="line">export default &#123;</span><br><span class="line">  methods: &#123;</span><br><span class="line">    sendMsgFn() &#123;</span><br><span class="line">      Bus.$emit(&#x27;sendMsg&#x27;, &#x27;今天天气不错，适合旅游&#x27;)</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">.base-b &#123;</span><br><span class="line">  width: 200px;</span><br><span class="line">  height: 200px;</span><br><span class="line">  border: 3px solid #000;</span><br><span class="line">  border-radius: 3px;</span><br><span class="line">  margin: 10px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<p>App.vue</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;app&quot;&gt;</span><br><span class="line">    &lt;BaseA&gt;&lt;/BaseA&gt;</span><br><span class="line">    &lt;BaseB&gt;&lt;/BaseB&gt;</span><br><span class="line">    &lt;BaseC&gt;&lt;/BaseC&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import BaseA from &#x27;./components/BaseA.vue&#x27;</span><br><span class="line">import BaseB from &#x27;./components/BaseB.vue&#x27;</span><br><span class="line">import BaseC from &#x27;./components/BaseC.vue&#x27;</span><br><span class="line">export default &#123;</span><br><span class="line">  components:&#123;</span><br><span class="line">    BaseA,</span><br><span class="line">    BaseB,</span><br><span class="line">    BaseC</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<h3 id="4-总结-4"><a href="#4-总结-4" class="headerlink" title="4.总结"></a>4.总结</h3><p>1.非父子组件传值借助什么？</p>
<p>2.什么是事件总线</p>
<p>3.发送方应该调用事件总线的哪个方法</p>
<p>4.接收方应该调用事件总线的哪个方法</p>
<p>5.一个组件发送数据，可不可以被多个组件接收</p>
<h2 id="十五、非父子通信-provide-inject"><a href="#十五、非父子通信-provide-inject" class="headerlink" title="十五、非父子通信-provide&amp;inject"></a>十五、非父子通信-provide&amp;inject</h2><h3 id="1-作用-1"><a href="#1-作用-1" class="headerlink" title="1.作用"></a>1.作用</h3><p>跨层级共享数据</p>
<h3 id="2-场景"><a href="#2-场景" class="headerlink" title="2.场景"></a>2.场景</h3><img data-src="/2024/11/19/Vue2-0/1682329516878.png" class="" width="68232950551">

<h3 id="3-语法-1"><a href="#3-语法-1" class="headerlink" title="3.语法"></a>3.语法</h3><ol>
<li>父组件 provide提供数据</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="title function_">provide</span> () &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">       <span class="comment">// 普通类型【非响应式】</span></span><br><span class="line">       <span class="attr">color</span>: <span class="variable language_">this</span>.<span class="property">color</span>, </span><br><span class="line">       <span class="comment">// 复杂类型【响应式】</span></span><br><span class="line">       <span class="attr">userInfo</span>: <span class="variable language_">this</span>.<span class="property">userInfo</span>, </span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>2.子&#x2F;孙组件 inject获取数据</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">inject</span>: [<span class="string">&#x27;color&#x27;</span>,<span class="string">&#x27;userInfo&#x27;</span>],</span><br><span class="line">  <span class="title function_">created</span> () &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">color</span>, <span class="variable language_">this</span>.<span class="property">userInfo</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="4-注意-1"><a href="#4-注意-1" class="headerlink" title="4.注意"></a>4.注意</h3><ul>
<li>provide提供的简单类型的数据不是响应式的，复杂类型数据是响应式。（推荐提供复杂类型数据）</li>
<li>子&#x2F;孙组件通过inject获取的数据，不能在自身组件内修改</li>
</ul>
<p>GrandSon</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;grandSon&quot;&gt;</span><br><span class="line">    我是GrandSon</span><br><span class="line">    &#123;&#123; color &#125;&#125; -&#123;&#123; userInfo.name &#125;&#125; -&#123;&#123; userInfo.age &#125;&#125;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  inject: [&#x27;color&#x27;, &#x27;userInfo&#x27;],</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">.grandSon &#123;</span><br><span class="line">  border: 3px solid #000;</span><br><span class="line">  border-radius: 6px;</span><br><span class="line">  margin: 10px;</span><br><span class="line">  height: 100px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<p>SonA</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;SonA&quot;&gt;我是SonA组件</span><br><span class="line">    &lt;GrandSon&gt;&lt;/GrandSon&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import GrandSon from &#x27;../components/GrandSon.vue&#x27;</span><br><span class="line">export default &#123;</span><br><span class="line">  components:&#123;</span><br><span class="line">    GrandSon</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">.SonA &#123;</span><br><span class="line">  border: 3px solid #000;</span><br><span class="line">  border-radius: 6px;</span><br><span class="line">  margin: 10px;</span><br><span class="line">  height: 200px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<p>SonB</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;SonB&quot;&gt;</span><br><span class="line">    我是SonB组件</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">.SonB &#123;</span><br><span class="line">  border: 3px solid #000;</span><br><span class="line">  border-radius: 6px;</span><br><span class="line">  margin: 10px;</span><br><span class="line">  height: 200px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<p>App.vue</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;app&quot;&gt;</span><br><span class="line">    我是APP组件</span><br><span class="line">    &lt;button @click=&quot;change&quot;&gt;修改数据&lt;/button&gt;</span><br><span class="line">    &lt;SonA&gt;&lt;/SonA&gt;</span><br><span class="line">    &lt;SonB&gt;&lt;/SonB&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import SonA from &#x27;./components/SonA.vue&#x27;</span><br><span class="line">import SonB from &#x27;./components/SonB.vue&#x27;</span><br><span class="line">export default &#123;</span><br><span class="line">  provide() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      // 简单类型 是非响应式的</span><br><span class="line">      color: this.color,</span><br><span class="line">      // 复杂类型 是响应式的</span><br><span class="line">      userInfo: this.userInfo,</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      color: &#x27;pink&#x27;,</span><br><span class="line">      userInfo: &#123;</span><br><span class="line">        name: &#x27;zs&#x27;,</span><br><span class="line">        age: 18,</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    change() &#123;</span><br><span class="line">      this.color = &#x27;red&#x27;</span><br><span class="line">      this.userInfo.name = &#x27;ls&#x27;</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  components: &#123;</span><br><span class="line">    SonA,</span><br><span class="line">    SonB,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">.app &#123;</span><br><span class="line">  border: 3px solid #000;</span><br><span class="line">  border-radius: 6px;</span><br><span class="line">  margin: 10px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>



<h2 id="十六、v-model原理"><a href="#十六、v-model原理" class="headerlink" title="十六、v-model原理"></a>十六、v-model原理</h2><h3 id="1-原理："><a href="#1-原理：" class="headerlink" title="1.原理："></a>1.原理：</h3><p>v-model本质上是一个语法糖。例如应用在输入框上，就是value属性 和 input事件 的合写</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div id=&quot;app&quot; &gt;</span><br><span class="line">    &lt;input v-model=&quot;msg&quot; type=&quot;text&quot;&gt;</span><br><span class="line"></span><br><span class="line">    &lt;input :value=&quot;msg&quot; @input=&quot;msg = $event.target.value&quot; type=&quot;text&quot;&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="2-作用："><a href="#2-作用：" class="headerlink" title="2.作用："></a>2.作用：</h3><p>提供数据的双向绑定</p>
<ul>
<li>数据变，视图跟着变 :value</li>
<li>视图变，数据跟着变 @input</li>
</ul>
<h3 id="3-注意-2"><a href="#3-注意-2" class="headerlink" title="3.注意"></a>3.注意</h3><p><strong>$event</strong> 用于在模板中，获取事件的形参</p>
<h3 id="4-代码示例"><a href="#4-代码示例" class="headerlink" title="4.代码示例"></a>4.代码示例</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;app&quot;&gt;</span><br><span class="line">    &lt;input type=&quot;text&quot; v-model=&quot;msg1&quot; /&gt;</span><br><span class="line">    &lt;br /&gt;</span><br><span class="line">    &lt;!-- v-model的底层其实就是：value和 @input的简写 --&gt;</span><br><span class="line">    &lt;input type=&quot;text&quot; :value=&quot;msg2&quot; @input=&quot;msg2 = $event.target.value&quot; /&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      msg1: &#x27;&#x27;,</span><br><span class="line">      msg2: &#x27;&#x27;,</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<h3 id="5-v-model使用在其他表单元素上的原理"><a href="#5-v-model使用在其他表单元素上的原理" class="headerlink" title="5.v-model使用在其他表单元素上的原理"></a>5.v-model使用在其他表单元素上的原理</h3><p>不同的表单元素， v-model在底层的处理机制是不一样的。比如给checkbox使用v-model</p>
<p>底层处理的是 checked属性和change事件。</p>
<p><strong>不过咱们只需要掌握应用在文本框上的原理即可</strong></p>
<h2 id="十七、表单类组件封装"><a href="#十七、表单类组件封装" class="headerlink" title="十七、表单类组件封装"></a>十七、表单类组件封装</h2><h3 id="1-需求目标"><a href="#1-需求目标" class="headerlink" title="1.需求目标"></a>1.需求目标</h3><p>实现子组件和父组件数据的双向绑定 （实现App.vue中的selectId和子组件选中的数据进行双向绑定）</p>
<h3 id="2-代码演示-2"><a href="#2-代码演示-2" class="headerlink" title="2.代码演示"></a>2.代码演示</h3><p>App.vue</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;app&quot;&gt;</span><br><span class="line">    &lt;BaseSelect</span><br><span class="line">      :selectId=&quot;selectId&quot;</span><br><span class="line">      @changeCity=&quot;selectId = $event&quot;</span><br><span class="line">    &gt;&lt;/BaseSelect&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import BaseSelect from &#x27;./components/BaseSelect.vue&#x27;</span><br><span class="line">export default &#123;</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      selectId: &#x27;102&#x27;,</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  components: &#123;</span><br><span class="line">    BaseSelect,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<p>BaseSelect.vue</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;select :value=&quot;selectId&quot; @change=&quot;selectCity&quot;&gt;</span><br><span class="line">      &lt;option value=&quot;101&quot;&gt;北京&lt;/option&gt;</span><br><span class="line">      &lt;option value=&quot;102&quot;&gt;上海&lt;/option&gt;</span><br><span class="line">      &lt;option value=&quot;103&quot;&gt;武汉&lt;/option&gt;</span><br><span class="line">      &lt;option value=&quot;104&quot;&gt;广州&lt;/option&gt;</span><br><span class="line">      &lt;option value=&quot;105&quot;&gt;深圳&lt;/option&gt;</span><br><span class="line">    &lt;/select&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  props: &#123;</span><br><span class="line">    selectId: String,</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    selectCity(e) &#123;</span><br><span class="line">      this.$emit(&#x27;changeCity&#x27;, e.target.value)</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>



<h2 id="十八、v-model简化代码"><a href="#十八、v-model简化代码" class="headerlink" title="十八、v-model简化代码"></a>十八、v-model简化代码</h2><h3 id="1-目标："><a href="#1-目标：" class="headerlink" title="1.目标："></a>1.目标：</h3><p>父组件通过v-model <strong>简化代码</strong>，实现子组件和父组件数据 <strong>双向绑定</strong></p>
<h3 id="2-如何简化："><a href="#2-如何简化：" class="headerlink" title="2.如何简化："></a>2.如何简化：</h3><p>v-model其实就是 :value和@input事件的简写</p>
<ul>
<li>子组件：props通过value接收数据，事件触发 input</li>
<li>父组件：v-model直接绑定数据</li>
</ul>
<h3 id="3-代码示例-1"><a href="#3-代码示例-1" class="headerlink" title="3.代码示例"></a>3.代码示例</h3><p>子组件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;select :value=&quot;value&quot; @change=&quot;handleChange&quot;&gt;...&lt;/select&gt;</span><br><span class="line">props: &#123;</span><br><span class="line">  value: String</span><br><span class="line">&#125;,</span><br><span class="line">methods: &#123;</span><br><span class="line">  handleChange (e) &#123;</span><br><span class="line">    this.$emit(&#x27;input&#x27;, e.target.value)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>父组件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;BaseSelect v-model=&quot;selectId&quot;&gt;&lt;/BaseSelect&gt;</span><br></pre></td></tr></table></figure>



<h2 id="十九、-sync修饰符"><a href="#十九、-sync修饰符" class="headerlink" title="十九、.sync修饰符"></a>十九、.sync修饰符</h2><h3 id="1-作用-2"><a href="#1-作用-2" class="headerlink" title="1.作用"></a>1.作用</h3><p>可以实现 <strong>子组件</strong> 与 <strong>父组件数据</strong> 的 <strong>双向绑定</strong>，简化代码</p>
<p>简单理解：<strong>子组件可以修改父组件传过来的props值</strong></p>
<h3 id="2-场景-1"><a href="#2-场景-1" class="headerlink" title="2.场景"></a>2.场景</h3><p>封装弹框类的基础组件， visible属性 true显示 false隐藏</p>
<h3 id="3-本质"><a href="#3-本质" class="headerlink" title="3.本质"></a>3.本质</h3><p>.sync修饰符 就是 <strong>:属性名</strong> 和 <strong>@update:属性名</strong> 合写</p>
<h3 id="4-语法"><a href="#4-语法" class="headerlink" title="4.语法"></a>4.语法</h3><p>父组件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//.sync写法</span><br><span class="line">&lt;BaseDialog :visible.sync=&quot;isShow&quot; /&gt;</span><br><span class="line">--------------------------------------</span><br><span class="line">//完整写法</span><br><span class="line">&lt;BaseDialog </span><br><span class="line">  :visible=&quot;isShow&quot; </span><br><span class="line">  @update:visible=&quot;isShow = $event&quot; </span><br><span class="line">/&gt;</span><br></pre></td></tr></table></figure>

<p>子组件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">props: &#123;</span><br><span class="line">  visible: Boolean</span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line">this.$emit(&#x27;update:visible&#x27;, false)</span><br></pre></td></tr></table></figure>

<h3 id="5-代码示例"><a href="#5-代码示例" class="headerlink" title="5.代码示例"></a>5.代码示例</h3><p>App.vue</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;app&quot;&gt;</span><br><span class="line">    &lt;button @click=&quot;openDialog&quot;&gt;退出按钮&lt;/button&gt;</span><br><span class="line">    &lt;!-- isShow.sync  =&gt; :isShow=&quot;isShow&quot; @update:isShow=&quot;isShow=$event&quot; --&gt;</span><br><span class="line">    &lt;BaseDialog :isShow.sync=&quot;isShow&quot;&gt;&lt;/BaseDialog&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import BaseDialog from &#x27;./components/BaseDialog.vue&#x27;</span><br><span class="line">export default &#123;</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      isShow: false,</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    openDialog() &#123;</span><br><span class="line">      this.isShow = true</span><br><span class="line">      // console.log(document.querySelectorAll(&#x27;.box&#x27;)); </span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  components: &#123;</span><br><span class="line">    BaseDialog,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<p>BaseDialog.vue</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;base-dialog-wrap&quot; v-show=&quot;isShow&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;base-dialog&quot;&gt;</span><br><span class="line">      &lt;div class=&quot;title&quot;&gt;</span><br><span class="line">        &lt;h3&gt;温馨提示：&lt;/h3&gt;</span><br><span class="line">        &lt;button class=&quot;close&quot; @click=&quot;closeDialog&quot;&gt;x&lt;/button&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;div class=&quot;content&quot;&gt;</span><br><span class="line">        &lt;p&gt;你确认要退出本系统么？&lt;/p&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;div class=&quot;footer&quot;&gt;</span><br><span class="line">        &lt;button&gt;确认&lt;/button&gt;</span><br><span class="line">        &lt;button&gt;取消&lt;/button&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  props: &#123;</span><br><span class="line">    isShow: Boolean,</span><br><span class="line">  &#125;,</span><br><span class="line">  methods:&#123;</span><br><span class="line">    closeDialog()&#123;</span><br><span class="line">      this.$emit(&#x27;update:isShow&#x27;,false)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">.base-dialog-wrap &#123;</span><br><span class="line">  width: 300px;</span><br><span class="line">  height: 200px;</span><br><span class="line">  box-shadow: 2px 2px 2px 2px #ccc;</span><br><span class="line">  position: fixed;</span><br><span class="line">  left: 50%;</span><br><span class="line">  top: 50%;</span><br><span class="line">  transform: translate(-50%, -50%);</span><br><span class="line">  padding: 0 10px;</span><br><span class="line">&#125;</span><br><span class="line">.base-dialog .title &#123;</span><br><span class="line">  display: flex;</span><br><span class="line">  justify-content: space-between;</span><br><span class="line">  align-items: center;</span><br><span class="line">  border-bottom: 2px solid #000;</span><br><span class="line">&#125;</span><br><span class="line">.base-dialog .content &#123;</span><br><span class="line">  margin-top: 38px;</span><br><span class="line">&#125;</span><br><span class="line">.base-dialog .title .close &#123;</span><br><span class="line">  width: 20px;</span><br><span class="line">  height: 20px;</span><br><span class="line">  cursor: pointer;</span><br><span class="line">  line-height: 10px;</span><br><span class="line">&#125;</span><br><span class="line">.footer &#123;</span><br><span class="line">  display: flex;</span><br><span class="line">  justify-content: flex-end;</span><br><span class="line">  margin-top: 26px;</span><br><span class="line">&#125;</span><br><span class="line">.footer button &#123;</span><br><span class="line">  width: 80px;</span><br><span class="line">  height: 40px;</span><br><span class="line">&#125;</span><br><span class="line">.footer button:nth-child(1) &#123;</span><br><span class="line">  margin-right: 10px;</span><br><span class="line">  cursor: pointer;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>



<h3 id="6-总结"><a href="#6-总结" class="headerlink" title="6.总结"></a>6.总结</h3><p>1.父组件如果想让子组件修改传过去的值 必须加什么修饰符？</p>
<p>2.子组件要修改父组件的props值 必须使用什么语法？</p>
<h2 id="二十、ref和-refs"><a href="#二十、ref和-refs" class="headerlink" title="二十、ref和$refs"></a>二十、ref和$refs</h2><h3 id="1-作用-3"><a href="#1-作用-3" class="headerlink" title="1.作用"></a>1.作用</h3><p>利用ref 和 $refs 可以用于 获取 dom 元素 或 组件实例</p>
<h3 id="2-特点："><a href="#2-特点：" class="headerlink" title="2.特点："></a>2.特点：</h3><p>查找范围 →  当前组件内(更精确稳定)</p>
<h3 id="3-语法-2"><a href="#3-语法-2" class="headerlink" title="3.语法"></a>3.语法</h3><p>1.给要获取的盒子添加ref属性</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">ref</span>=<span class="string">&quot;chartRef&quot;</span>&gt;</span>我是渲染图表的容器<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>2.获取时通过 $refs获取  this.$refs.chartRef 获取</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">mounted () &#123;</span><br><span class="line">  console.log(this.$refs.chartRef)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="4-注意-2"><a href="#4-注意-2" class="headerlink" title="4.注意"></a>4.注意</h3><p>之前只用document.querySelect(‘.box’) 获取的是整个页面中的盒子</p>
<h3 id="5-代码示例-1"><a href="#5-代码示例-1" class="headerlink" title="5.代码示例"></a>5.代码示例</h3><p>App.vue</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;app&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;base-chart-box&quot;&gt;</span><br><span class="line">      这是一个捣乱的盒子</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;BaseChart&gt;&lt;/BaseChart&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import BaseChart from &#x27;./components/BaseChart.vue&#x27;</span><br><span class="line">export default &#123;</span><br><span class="line">  components:&#123;</span><br><span class="line">    BaseChart</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">.base-chart-box &#123;</span><br><span class="line">  width: 300px;</span><br><span class="line">  height: 200px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<p>BaseChart.vue</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;base-chart-box&quot; ref=&quot;baseChartBox&quot;&gt;子组件&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import * as echarts from &#x27;echarts&#x27;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">  mounted() &#123;</span><br><span class="line">    // 基于准备好的dom，初始化echarts实例</span><br><span class="line">    // document.querySelector 会查找项目中所有的元素</span><br><span class="line">    // $refs只会在当前组件查找盒子</span><br><span class="line">    // var myChart = echarts.init(document.querySelector(&#x27;.base-chart-box&#x27;))</span><br><span class="line">    var myChart = echarts.init(this.$refs.baseChartBox)</span><br><span class="line">    // 绘制图表</span><br><span class="line">    myChart.setOption(&#123;</span><br><span class="line">      title: &#123;</span><br><span class="line">        text: &#x27;ECharts 入门示例&#x27;,</span><br><span class="line">      &#125;,</span><br><span class="line">      tooltip: &#123;&#125;,</span><br><span class="line">      xAxis: &#123;</span><br><span class="line">        data: [&#x27;衬衫&#x27;, &#x27;羊毛衫&#x27;, &#x27;雪纺衫&#x27;, &#x27;裤子&#x27;, &#x27;高跟鞋&#x27;, &#x27;袜子&#x27;],</span><br><span class="line">      &#125;,</span><br><span class="line">      yAxis: &#123;&#125;,</span><br><span class="line">      series: [</span><br><span class="line">        &#123;</span><br><span class="line">          name: &#x27;销量&#x27;,</span><br><span class="line">          type: &#x27;bar&#x27;,</span><br><span class="line">          data: [5, 20, 36, 10, 10, 20],</span><br><span class="line">        &#125;,</span><br><span class="line">      ],</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">.base-chart-box &#123;</span><br><span class="line">  width: 400px;</span><br><span class="line">  height: 300px;</span><br><span class="line">  border: 3px solid #000;</span><br><span class="line">  border-radius: 6px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>



<h2 id="二十一、异步更新-nextTick"><a href="#二十一、异步更新-nextTick" class="headerlink" title="二十一、异步更新 &amp; $nextTick"></a>二十一、异步更新 &amp; $nextTick</h2><h3 id="1-需求"><a href="#1-需求" class="headerlink" title="1.需求"></a>1.需求</h3><p>编辑标题,  编辑框自动聚焦</p>
<ol>
<li>点击编辑，显示编辑框</li>
<li>让编辑框，立刻获取焦点</li>
</ol>
<img data-src="/2024/11/19/Vue2-0/1682394495346.png" class="" width="68239449534">

<h3 id="2-代码实现"><a href="#2-代码实现" class="headerlink" title="2.代码实现"></a>2.代码实现</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;app&quot;&gt;</span><br><span class="line">    &lt;div v-if=&quot;isShowEdit&quot;&gt;</span><br><span class="line">      &lt;input type=&quot;text&quot; v-model=&quot;editValue&quot; ref=&quot;inp&quot; /&gt;</span><br><span class="line">      &lt;button&gt;确认&lt;/button&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div v-else&gt;</span><br><span class="line">      &lt;span&gt;&#123;&#123; title &#125;&#125;&lt;/span&gt;</span><br><span class="line">      &lt;button @click=&quot;editFn&quot;&gt;编辑&lt;/button&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      title: &#x27;大标题&#x27;,</span><br><span class="line">      isShowEdit: false,</span><br><span class="line">      editValue: &#x27;&#x27;,</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    editFn() &#123;</span><br><span class="line">        // 显示输入框</span><br><span class="line">        this.isShowEdit = true  </span><br><span class="line">        // 获取焦点</span><br><span class="line">        this.$refs.inp.focus() </span><br><span class="line">    &#125;  &#125;,</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt; </span><br></pre></td></tr></table></figure>



<h3 id="3-问题"><a href="#3-问题" class="headerlink" title="3.问题"></a>3.问题</h3><p>“显示之后”，立刻获取焦点是不能成功的！</p>
<p>原因：Vue 是异步更新DOM  (提升性能)</p>
<h3 id="4-解决方案"><a href="#4-解决方案" class="headerlink" title="4.解决方案"></a>4.解决方案</h3><p>$nextTick：<strong>等 DOM更新后</strong>,才会触发执行此方法里的函数体</p>
<p><strong>语法:</strong> this.$nextTick(函数体)</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">this</span>.$nextTick(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">$refs</span>.<span class="property">inp</span>.<span class="title function_">focus</span>()</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<p><strong>注意：</strong>$nextTick 内的函数体 一定是<strong>箭头函数</strong>，这样才能让函数内部的this指向Vue实例</p>
<h1 id="day05"><a href="#day05" class="headerlink" title="day05"></a>day05</h1><h2 id="一、学习目标-1"><a href="#一、学习目标-1" class="headerlink" title="一、学习目标"></a>一、学习目标</h2><h3 id="1-自定义指令"><a href="#1-自定义指令" class="headerlink" title="1.自定义指令"></a>1.自定义指令</h3><ul>
<li>基本语法（全局、局部注册）</li>
<li>指令的值</li>
<li>v-loading的指令封装</li>
</ul>
<h3 id="2-插槽"><a href="#2-插槽" class="headerlink" title="2.插槽"></a>2.插槽</h3><ul>
<li>默认插槽</li>
<li>具名插槽</li>
<li>作用域插槽</li>
</ul>
<h3 id="3-综合案例：商品列表"><a href="#3-综合案例：商品列表" class="headerlink" title="3.综合案例：商品列表"></a>3.综合案例：商品列表</h3><ul>
<li>MyTag组件封装</li>
<li>MyTable组件封装</li>
</ul>
<h3 id="4-路由入门"><a href="#4-路由入门" class="headerlink" title="4.路由入门"></a>4.路由入门</h3><ul>
<li>单页应用程序</li>
<li>路由</li>
<li>VueRouter的基本使用</li>
</ul>
<h2 id="二、自定义指令"><a href="#二、自定义指令" class="headerlink" title="二、自定义指令"></a>二、自定义指令</h2><h3 id="1-指令介绍"><a href="#1-指令介绍" class="headerlink" title="1.指令介绍"></a>1.指令介绍</h3><ul>
<li><p>内置指令：<strong>v-html、v-if、v-bind、v-on</strong>… 这都是Vue给咱们内置的一些指令，可以直接使用</p>
</li>
<li><p>自定义指令：同时Vue也支持让开发者，自己注册一些指令。这些指令被称为<strong>自定义指令</strong></p>
<p>每个指令都有自己各自独立的功能</p>
</li>
</ul>
<h3 id="2-自定义指令"><a href="#2-自定义指令" class="headerlink" title="2.自定义指令"></a>2.自定义指令</h3><p>概念：自己定义的指令，可以<strong>封装一些DOM操作</strong>，扩展额外的功能</p>
<h3 id="3-自定义指令语法"><a href="#3-自定义指令语法" class="headerlink" title="3.自定义指令语法"></a>3.自定义指令语法</h3><ul>
<li><p>全局注册</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//在main.js中</span></span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">directive</span>(<span class="string">&#x27;指令名&#x27;</span>, &#123;</span><br><span class="line">  <span class="string">&quot;inserted&quot;</span> (el) &#123;</span><br><span class="line">    <span class="comment">// 可以对 el 标签，扩展额外功能</span></span><br><span class="line">    el.<span class="title function_">focus</span>()</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
</li>
<li><p>局部注册</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//在Vue组件的配置项中</span><br><span class="line">directives: &#123;</span><br><span class="line">  &quot;指令名&quot;: &#123;</span><br><span class="line">    inserted () &#123;</span><br><span class="line">      // 可以对 el 标签，扩展额外功能</span><br><span class="line">      el.focus()</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>使用指令</p>
<p>注意：在使用指令的时候，一定要<strong>先注册</strong>，<strong>再使用</strong>，否则会报错<br>使用指令语法： v-指令名。如：<input type="text"  v-focus/>  </p>
<p><strong>注册</strong>指令时<strong>不用</strong>加<strong>v-前缀</strong>，但<strong>使用时</strong>一定要<strong>加v-前缀</strong></p>
</li>
</ul>
<h3 id="4-指令中的配置项介绍"><a href="#4-指令中的配置项介绍" class="headerlink" title="4.指令中的配置项介绍"></a>4.指令中的配置项介绍</h3><p>inserted:被绑定元素插入父节点时调用的钩子函数</p>
<p>el：使用指令的那个DOM元素</p>
<h3 id="5-代码示例-2"><a href="#5-代码示例-2" class="headerlink" title="5.代码示例"></a>5.代码示例</h3><p>需求：当页面加载时，让元素获取焦点（<strong>autofocus在safari浏览器有兼容性</strong>）</p>
<p>App.vue</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;h1&gt;自定义指令&lt;/h1&gt;</span><br><span class="line">    &lt;input v-focus ref=&quot;inp&quot; type=&quot;text&quot;&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  // mounted () &#123;</span><br><span class="line">  //   this.$refs.inp.focus()</span><br><span class="line">  // &#125;</span><br><span class="line">  // 2. 局部注册指令</span><br><span class="line">  directives: &#123;</span><br><span class="line">    // 指令名：指令的配置项</span><br><span class="line">    focus: &#123;</span><br><span class="line">      inserted (el) &#123;</span><br><span class="line">        el.focus()</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<p>main.js</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Vue</span> <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">App</span> <span class="keyword">from</span> <span class="string">&#x27;./App.vue&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// // 1. 全局注册指令</span></span><br><span class="line"><span class="comment">// Vue.directive(&#x27;focus&#x27;, &#123;</span></span><br><span class="line"><span class="comment">//   // inserted 会在 指令所在的元素，被插入到页面中时触发</span></span><br><span class="line"><span class="comment">//   inserted (el) &#123;</span></span><br><span class="line"><span class="comment">//     // el 就是指令所绑定的元素</span></span><br><span class="line"><span class="comment">//     // console.log(el);</span></span><br><span class="line"><span class="comment">//     el.focus()</span></span><br><span class="line"><span class="comment">//   &#125;</span></span><br><span class="line"><span class="comment">// &#125;)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">  <span class="attr">render</span>: <span class="function"><span class="params">h</span> =&gt;</span> <span class="title function_">h</span>(<span class="title class_">App</span>),</span><br><span class="line">&#125;).$mount(<span class="string">&#x27;#app&#x27;</span>)</span><br></pre></td></tr></table></figure>



<h3 id="6-总结-1"><a href="#6-总结-1" class="headerlink" title="6.总结"></a>6.总结</h3><p>1.自定义指令的作用是什么？</p>
<p>2.使用自定义指令的步骤是哪两步？</p>
<h2 id="三、自定义指令-指令的值"><a href="#三、自定义指令-指令的值" class="headerlink" title="三、自定义指令-指令的值"></a>三、自定义指令-指令的值</h2><h3 id="1-需求-1"><a href="#1-需求-1" class="headerlink" title="1.需求"></a>1.需求</h3><p>实现一个 color 指令 - 传入不同的颜色, 给标签设置文字颜色</p>
<h3 id="2-语法-2"><a href="#2-语法-2" class="headerlink" title="2.语法"></a>2.语法</h3><p>1.在绑定指令时，可以通过“等号”的形式为指令 绑定 具体的参数值</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-color</span>=<span class="string">&quot;color&quot;</span>&gt;</span>我是内容<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>2.通过 binding.value 可以拿到指令值，<strong>指令值修改会 触发 update 函数</strong></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="attr">directives</span>: &#123;</span><br><span class="line">  <span class="attr">color</span>: &#123;</span><br><span class="line">    <span class="title function_">inserted</span> (el, binding) &#123;</span><br><span class="line">      el.<span class="property">style</span>.<span class="property">color</span> = binding.<span class="property">value</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="title function_">update</span> (el, binding) &#123;</span><br><span class="line">      el.<span class="property">style</span>.<span class="property">color</span> = binding.<span class="property">value</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="3-代码示例-2"><a href="#3-代码示例-2" class="headerlink" title="3.代码示例"></a>3.代码示例</h3><p>App.vue</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;h1 v-color=&quot;color1&quot;&gt;指令的值1测试&lt;/h1&gt;</span><br><span class="line">    &lt;h1 v-color=&quot;color2&quot;&gt;指令的值2测试&lt;/h1&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  data () &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      color1: &#x27;red&#x27;,</span><br><span class="line">      color2: &#x27;orange&#x27;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  directives: &#123;</span><br><span class="line">    color: &#123;</span><br><span class="line">      // 1. inserted 提供的是元素被添加到页面中时的逻辑</span><br><span class="line">      inserted (el, binding) &#123;</span><br><span class="line">        // console.log(el, binding.value);</span><br><span class="line">        // binding.value 就是指令的值</span><br><span class="line">        el.style.color = binding.value</span><br><span class="line">      &#125;,</span><br><span class="line">      // 2. update 指令的值修改的时候触发，提供值变化后，dom更新的逻辑</span><br><span class="line">      update (el, binding) &#123;</span><br><span class="line">        console.log(&#x27;指令的值修改了&#x27;);</span><br><span class="line">        el.style.color = binding.value</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>



<h2 id="四、自定义指令-v-loading指令的封装"><a href="#四、自定义指令-v-loading指令的封装" class="headerlink" title="四、自定义指令-v-loading指令的封装"></a>四、自定义指令-v-loading指令的封装</h2><h3 id="1-场景"><a href="#1-场景" class="headerlink" title="1.场景"></a>1.场景</h3><p>实际开发过程中，发送请求需要时间，在请求的数据未回来时，页面会处于<strong>空白状态</strong>  &#x3D;&gt;  用户体验不好</p>
<h3 id="2-需求-1"><a href="#2-需求-1" class="headerlink" title="2.需求"></a>2.需求</h3><p>封装一个 v-loading 指令，实现加载中的效果</p>
<h3 id="3-分析"><a href="#3-分析" class="headerlink" title="3.分析"></a>3.分析</h3><p>1.本质 loading效果就是一个蒙层，盖在了盒子上</p>
<p>2.数据请求中，开启loading状态，添加蒙层</p>
<p>3.数据请求完毕，关闭loading状态，移除蒙层</p>
<h3 id="4-实现"><a href="#4-实现" class="headerlink" title="4.实现"></a>4.实现</h3><p>1.准备一个 loading类，通过伪元素定位，设置宽高，实现蒙层</p>
<p>2.开启关闭 loading状态（添加移除蒙层），本质只需要添加移除类即可</p>
<p>3.结合自定义指令的语法进行封装复用</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.loading</span><span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">&quot;&quot;</span>;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#fff</span> <span class="built_in">url</span>(<span class="string">&quot;./loading.gif&quot;</span>) no-repeat center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="5-准备代码"><a href="#5-准备代码" class="headerlink" title="5.准备代码"></a>5.准备代码</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;main&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span> <span class="attr">v-loading</span>=<span class="string">&quot;isLoading&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;item in list&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;item.id&quot;</span> <span class="attr">class</span>=<span class="string">&quot;news&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;left&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;title&quot;</span>&gt;</span>&#123;&#123; item.title &#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;info&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123; item.source &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123; item.time &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;right&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">:src</span>=<span class="string">&quot;item.img&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box2&quot;</span> <span class="attr">v-loading</span>=<span class="string">&quot;isLoading2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">// 安装axios =&gt;  yarn add axios</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&#x27;axios&#x27;</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">// 接口地址：http://hmajax.itheima.net/api/news</span></span></span><br><span class="line"><span class="language-javascript"><span class="comment">// 请求方式：get</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">data</span> () &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">list</span>: [],</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">isLoading</span>: <span class="literal">true</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">isLoading2</span>: <span class="literal">true</span></span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">async</span> <span class="title function_">created</span> () &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 1. 发送请求获取数据</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> res = <span class="keyword">await</span> axios.<span class="title function_">get</span>(<span class="string">&#x27;http://hmajax.itheima.net/api/news&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 2. 更新到 list 中，用于页面渲染 v-for</span></span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">this</span>.<span class="property">list</span> = res.<span class="property">data</span>.<span class="property">data</span></span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">this</span>.<span class="property">isLoading</span> = <span class="literal">false</span></span></span><br><span class="line"><span class="language-javascript">    &#125;, <span class="number">2000</span>)</span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">directives</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">loading</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="title function_">inserted</span> (el, binding) &#123;</span></span><br><span class="line"><span class="language-javascript">        binding.<span class="property">value</span> ? el.<span class="property">classList</span>.<span class="title function_">add</span>(<span class="string">&#x27;loading&#x27;</span>) : el.<span class="property">classList</span>.<span class="title function_">remove</span>(<span class="string">&#x27;loading&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">      <span class="title function_">update</span> (el, binding) &#123;</span></span><br><span class="line"><span class="language-javascript">        binding.<span class="property">value</span> ? el.<span class="property">classList</span>.<span class="title function_">add</span>(<span class="string">&#x27;loading&#x27;</span>) : el.<span class="property">classList</span>.<span class="title function_">remove</span>(<span class="string">&#x27;loading&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.loading</span><span class="selector-pseudo">:before</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">content</span>: <span class="string">&#x27;&#x27;</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">left</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">top</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">height</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">background</span>: <span class="number">#fff</span> <span class="built_in">url</span>(<span class="string">&#x27;./loading.gif&#x27;</span>) no-repeat center;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.box2</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">width</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">height</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">border</span>: <span class="number">2px</span> solid <span class="number">#000</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.box</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">width</span>: <span class="number">800px</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">min-height</span>: <span class="number">500px</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">border</span>: <span class="number">3px</span> solid orange;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-class">.news</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">height</span>: <span class="number">120px</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">width</span>: <span class="number">600px</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">margin</span>: <span class="number">0</span> auto;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">padding</span>: <span class="number">20px</span> <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">cursor</span>: pointer;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-class">.news</span> <span class="selector-class">.left</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">flex</span>: <span class="number">1</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">flex-direction</span>: column;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">justify-content</span>: space-between;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">padding-right</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-class">.news</span> <span class="selector-class">.left</span> <span class="selector-class">.title</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">font-size</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-class">.news</span> <span class="selector-class">.left</span> <span class="selector-class">.info</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">color</span>: <span class="number">#999999</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-class">.news</span> <span class="selector-class">.left</span> <span class="selector-class">.info</span> <span class="selector-tag">span</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">margin-right</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-class">.news</span> <span class="selector-class">.right</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">width</span>: <span class="number">160px</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">height</span>: <span class="number">120px</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-class">.news</span> <span class="selector-class">.right</span> <span class="selector-tag">img</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">height</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">object-fit</span>: cover;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h2 id="五、插槽-默认插槽"><a href="#五、插槽-默认插槽" class="headerlink" title="五、插槽-默认插槽"></a>五、插槽-默认插槽</h2><h3 id="1-作用-4"><a href="#1-作用-4" class="headerlink" title="1.作用"></a>1.作用</h3><p>让组件内部的一些 <strong>结构</strong> 支持 <strong>自定义</strong></p>
<img data-src="/2024/11/19/Vue2-0/1682410215245.png" class="" width="68241021524">

<h3 id="2-需求-2"><a href="#2-需求-2" class="headerlink" title="2.需求"></a>2.需求</h3><p>将需要多次显示的对话框,封装成一个组件</p>
<h3 id="3-问题-1"><a href="#3-问题-1" class="headerlink" title="3.问题"></a>3.问题</h3><p>组件的内容部分，<strong>不希望写死</strong>，希望能使用的时候<strong>自定义</strong>。怎么办</p>
<h3 id="4-插槽的基本语法"><a href="#4-插槽的基本语法" class="headerlink" title="4.插槽的基本语法"></a>4.插槽的基本语法</h3><ol>
<li>组件内需要定制的结构部分，改用**<slot></slot>**占位</li>
<li>使用组件时, **<MyDialog></MyDialog>**标签内部, 传入结构替换slot</li>
<li>给插槽传入内容时，可以传入<strong>纯文本、html标签、组件</strong></li>
</ol>
<img data-src="/2024/11/19/Vue2-0/1682410329794.png" class="" width="68241032979">



<h3 id="5-代码示例-3"><a href="#5-代码示例-3" class="headerlink" title="5.代码示例"></a>5.代码示例</h3><p>MyDialog.vue</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;dialog&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;dialog-header&quot;&gt;</span><br><span class="line">      &lt;h3&gt;友情提示&lt;/h3&gt;</span><br><span class="line">      &lt;span class=&quot;close&quot;&gt;✖️&lt;/span&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div class=&quot;dialog-content&quot;&gt;</span><br><span class="line">      &lt;!-- 1. 在需要定制的位置，使用slot占位 --&gt;</span><br><span class="line">      &lt;slot&gt;&lt;/slot&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;dialog-footer&quot;&gt;</span><br><span class="line">      &lt;button&gt;取消&lt;/button&gt;</span><br><span class="line">      &lt;button&gt;确认&lt;/button&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  data () &#123;</span><br><span class="line">    return &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">* &#123;</span><br><span class="line">  margin: 0;</span><br><span class="line">  padding: 0;</span><br><span class="line">&#125;</span><br><span class="line">.dialog &#123;</span><br><span class="line">  width: 470px;</span><br><span class="line">  height: 230px;</span><br><span class="line">  padding: 0 25px;</span><br><span class="line">  background-color: #ffffff;</span><br><span class="line">  margin: 40px auto;</span><br><span class="line">  border-radius: 5px;</span><br><span class="line">&#125;</span><br><span class="line">.dialog-header &#123;</span><br><span class="line">  height: 70px;</span><br><span class="line">  line-height: 70px;</span><br><span class="line">  font-size: 20px;</span><br><span class="line">  border-bottom: 1px solid #ccc;</span><br><span class="line">  position: relative;</span><br><span class="line">&#125;</span><br><span class="line">.dialog-header .close &#123;</span><br><span class="line">  position: absolute;</span><br><span class="line">  right: 0px;</span><br><span class="line">  top: 0px;</span><br><span class="line">  cursor: pointer;</span><br><span class="line">&#125;</span><br><span class="line">.dialog-content &#123;</span><br><span class="line">  height: 80px;</span><br><span class="line">  font-size: 18px;</span><br><span class="line">  padding: 15px 0;</span><br><span class="line">&#125;</span><br><span class="line">.dialog-footer &#123;</span><br><span class="line">  display: flex;</span><br><span class="line">  justify-content: flex-end;</span><br><span class="line">&#125;</span><br><span class="line">.dialog-footer button &#123;</span><br><span class="line">  width: 65px;</span><br><span class="line">  height: 35px;</span><br><span class="line">  background-color: #ffffff;</span><br><span class="line">  border: 1px solid #e1e3e9;</span><br><span class="line">  cursor: pointer;</span><br><span class="line">  outline: none;</span><br><span class="line">  margin-left: 10px;</span><br><span class="line">  border-radius: 3px;</span><br><span class="line">&#125;</span><br><span class="line">.dialog-footer button:last-child &#123;</span><br><span class="line">  background-color: #007acc;</span><br><span class="line">  color: #fff;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>App.vue</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;!-- 2. 在使用组件时，组件标签内填入内容 --&gt;</span><br><span class="line">    &lt;MyDialog&gt;</span><br><span class="line">      &lt;div&gt;你确认要删除么&lt;/div&gt;</span><br><span class="line">    &lt;/MyDialog&gt;</span><br><span class="line"></span><br><span class="line">    &lt;MyDialog&gt;</span><br><span class="line">      &lt;p&gt;你确认要退出么&lt;/p&gt;</span><br><span class="line">    &lt;/MyDialog&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import MyDialog from &#x27;./components/MyDialog.vue&#x27;</span><br><span class="line">export default &#123;</span><br><span class="line">  data () &#123;</span><br><span class="line">    return &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  components: &#123;</span><br><span class="line">    MyDialog</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">body &#123;</span><br><span class="line">  background-color: #b3b3b3;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<h3 id="6-总结-2"><a href="#6-总结-2" class="headerlink" title="6.总结"></a>6.总结</h3><p>场景：组件内某一部分结构不确定，想要自定义怎么办</p>
<p>使用：插槽的步骤分为哪几步？</p>
<h2 id="六、插槽-后备内容（默认值）"><a href="#六、插槽-后备内容（默认值）" class="headerlink" title="六、插槽-后备内容（默认值）"></a>六、插槽-后备内容（默认值）</h2><h3 id="1-问题"><a href="#1-问题" class="headerlink" title="1.问题"></a>1.问题</h3><p>通过插槽完成了内容的定制，传什么显示什么, 但是如果不传，则是空白</p>
<img data-src="/2024/11/19/Vue2-0/1682411494612.png" class="" width="68241149461">

<p>能否给插槽设置 默认显示内容 呢？</p>
<h3 id="2-插槽的后备内容"><a href="#2-插槽的后备内容" class="headerlink" title="2.插槽的后备内容"></a>2.插槽的后备内容</h3><p>封装组件时，可以为预留的 <code>&lt;slot&gt;</code> 插槽提供后备内容（默认内容）。</p>
<h3 id="3-语法-3"><a href="#3-语法-3" class="headerlink" title="3.语法"></a>3.语法</h3><p>在 <slot> 标签内，放置内容, 作为默认显示内容</p>
<img data-src="/2024/11/19/Vue2-0/1682412365046.png" class="" width="68241233912">

<h3 id="4-效果"><a href="#4-效果" class="headerlink" title="4.效果"></a>4.效果</h3><ul>
<li><p>外部使用组件时，不传东西，则slot会显示后备内容 </p>
<img data-src="/2024/11/19/Vue2-0/1682412432656.png" class="" width="68241243265">
</li>
<li><p>外部使用组件时，传东西了，则slot整体会被换掉</p>
<img data-src="/2024/11/19/Vue2-0/1682412459027.png" class="" width="68241245902"></li>
</ul>
<h3 id="5-代码示例-4"><a href="#5-代码示例-4" class="headerlink" title="5.代码示例"></a>5.代码示例</h3><p>App.vue</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;MyDialog&gt;&lt;/MyDialog&gt;</span><br><span class="line">    &lt;MyDialog&gt;</span><br><span class="line">      你确认要退出么</span><br><span class="line">    &lt;/MyDialog&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import MyDialog from &#x27;./components/MyDialog.vue&#x27;</span><br><span class="line">export default &#123;</span><br><span class="line">  data () &#123;</span><br><span class="line">    return &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  components: &#123;</span><br><span class="line">    MyDialog</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">body &#123;</span><br><span class="line">  background-color: #b3b3b3;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>



<h2 id="七、插槽-具名插槽"><a href="#七、插槽-具名插槽" class="headerlink" title="七、插槽-具名插槽"></a>七、插槽-具名插槽</h2><h3 id="1-需求-2"><a href="#1-需求-2" class="headerlink" title="1.需求"></a>1.需求</h3><p>一个组件内有多处结构，需要外部传入标签，进行定制 <img data-src="/2024/11/19/Vue2-0/1682413134876.png" class="" width="68241313487"></p>
<p>上面的弹框中有<strong>三处不同</strong>，但是<strong>默认插槽</strong>只能<strong>定制一个位置</strong>，这时候怎么办呢?</p>
<h3 id="2-具名插槽语法"><a href="#2-具名插槽语法" class="headerlink" title="2.具名插槽语法"></a>2.具名插槽语法</h3><ul>
<li><p>多个slot使用name属性区分名字 </p>
<img data-src="/2024/11/19/Vue2-0/1682413391727.png" class="" width="68241339172">
</li>
<li><p>template配合v-slot:名字来分发对应标签</p>
<img data-src="/2024/11/19/Vue2-0/1682413411921.png" class="" width="68241341192"></li>
</ul>
<h3 id="3-v-slot的简写"><a href="#3-v-slot的简写" class="headerlink" title="3.v-slot的简写"></a>3.v-slot的简写</h3><p>v-slot写起来太长，vue给我们提供一个简单写法 <strong>v-slot —&gt; #</strong></p>
<h3 id="4-总结-5"><a href="#4-总结-5" class="headerlink" title="4.总结"></a>4.总结</h3><ul>
<li>组件内 有多处不确定的结构 怎么办?</li>
<li>具名插槽的语法是什么？</li>
<li>v-slot:插槽名可以简化成什么?</li>
</ul>
<h2 id="八、作用域插槽"><a href="#八、作用域插槽" class="headerlink" title="八、作用域插槽"></a>八、作用域插槽</h2><h3 id="1-插槽分类"><a href="#1-插槽分类" class="headerlink" title="1.插槽分类"></a>1.插槽分类</h3><ul>
<li><p>默认插槽</p>
</li>
<li><p>具名插槽</p>
<p>插槽只有两种，作用域插槽不属于插槽的一种分类</p>
</li>
</ul>
<h3 id="2-作用-1"><a href="#2-作用-1" class="headerlink" title="2.作用"></a>2.作用</h3><p>定义slot 插槽的同时, 是可以<strong>传值</strong>的。给 <strong>插槽</strong> 上可以 <strong>绑定数据</strong>，将来 <strong>使用组件时可以用</strong></p>
<h3 id="3-场景"><a href="#3-场景" class="headerlink" title="3.场景"></a>3.场景</h3><p>封装表格组件</p>
<img data-src="/2024/11/19/Vue2-0/1682414342139.png" class="" width="68241434213">

<h3 id="4-使用步骤"><a href="#4-使用步骤" class="headerlink" title="4.使用步骤"></a>4.使用步骤</h3><ol>
<li><p>给 slot 标签, 以 添加属性的方式传值</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;slot :id=&quot;item.id&quot; msg=&quot;测试文本&quot;&gt;&lt;/slot&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>所有添加的属性, 都会被收集到一个对象中</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123; id: 3, msg: &#x27;测试文本&#x27; &#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>在template中, 通过  <code> #插槽名= &quot;obj&quot;</code> 接收，默认插槽名为 default</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;MyTable :list=&quot;list&quot;&gt;</span><br><span class="line">  &lt;template #default=&quot;obj&quot;&gt;</span><br><span class="line">    &lt;button @click=&quot;del(obj.id)&quot;&gt;删除&lt;/button&gt;</span><br><span class="line">  &lt;/template&gt;</span><br><span class="line">&lt;/MyTable&gt;</span><br></pre></td></tr></table></figure></li>
</ol>
<h3 id="5-代码示例-5"><a href="#5-代码示例-5" class="headerlink" title="5.代码示例"></a>5.代码示例</h3><p>MyTable.vue</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;table class=&quot;my-table&quot;&gt;</span><br><span class="line">    &lt;thead&gt;</span><br><span class="line">      &lt;tr&gt;</span><br><span class="line">        &lt;th&gt;序号&lt;/th&gt;</span><br><span class="line">        &lt;th&gt;姓名&lt;/th&gt;</span><br><span class="line">        &lt;th&gt;年纪&lt;/th&gt;</span><br><span class="line">        &lt;th&gt;操作&lt;/th&gt;</span><br><span class="line">      &lt;/tr&gt;</span><br><span class="line">    &lt;/thead&gt;</span><br><span class="line">    &lt;tbody&gt;</span><br><span class="line">      &lt;tr v-for=&quot;(item, index) in data&quot; :key=&quot;item.id&quot;&gt;</span><br><span class="line">        &lt;td&gt;&#123;&#123; index + 1 &#125;&#125;&lt;/td&gt;</span><br><span class="line">        &lt;td&gt;&#123;&#123; item.name &#125;&#125;&lt;/td&gt;</span><br><span class="line">        &lt;td&gt;&#123;&#123; item.age &#125;&#125;&lt;/td&gt;</span><br><span class="line">        &lt;td&gt;</span><br><span class="line">          &lt;!-- 1. 给slot标签，添加属性的方式传值 --&gt;</span><br><span class="line">          &lt;slot :row=&quot;item&quot; msg=&quot;测试文本&quot;&gt;&lt;/slot&gt;</span><br><span class="line"></span><br><span class="line">          &lt;!-- 2. 将所有的属性，添加到一个对象中 --&gt;</span><br><span class="line">          &lt;!-- </span><br><span class="line">             &#123;</span><br><span class="line">               row: &#123; id: 2, name: &#x27;孙大明&#x27;, age: 19 &#125;,</span><br><span class="line">               msg: &#x27;测试文本&#x27;</span><br><span class="line">             &#125;</span><br><span class="line">           --&gt;</span><br><span class="line">        &lt;/td&gt;</span><br><span class="line">      &lt;/tr&gt;</span><br><span class="line">    &lt;/tbody&gt;</span><br><span class="line">  &lt;/table&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  props: &#123;</span><br><span class="line">    data: Array</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">.my-table &#123;</span><br><span class="line">  width: 450px;</span><br><span class="line">  text-align: center;</span><br><span class="line">  border: 1px solid #ccc;</span><br><span class="line">  font-size: 24px;</span><br><span class="line">  margin: 30px auto;</span><br><span class="line">&#125;</span><br><span class="line">.my-table thead &#123;</span><br><span class="line">  background-color: #1f74ff;</span><br><span class="line">  color: #fff;</span><br><span class="line">&#125;</span><br><span class="line">.my-table thead th &#123;</span><br><span class="line">  font-weight: normal;</span><br><span class="line">&#125;</span><br><span class="line">.my-table thead tr &#123;</span><br><span class="line">  line-height: 40px;</span><br><span class="line">&#125;</span><br><span class="line">.my-table th,</span><br><span class="line">.my-table td &#123;</span><br><span class="line">  border-bottom: 1px solid #ccc;</span><br><span class="line">  border-right: 1px solid #ccc;</span><br><span class="line">&#125;</span><br><span class="line">.my-table td:last-child &#123;</span><br><span class="line">  border-right: none;</span><br><span class="line">&#125;</span><br><span class="line">.my-table tr:last-child td &#123;</span><br><span class="line">  border-bottom: none;</span><br><span class="line">&#125;</span><br><span class="line">.my-table button &#123;</span><br><span class="line">  width: 65px;</span><br><span class="line">  height: 35px;</span><br><span class="line">  font-size: 18px;</span><br><span class="line">  border: 1px solid #ccc;</span><br><span class="line">  outline: none;</span><br><span class="line">  border-radius: 3px;</span><br><span class="line">  cursor: pointer;</span><br><span class="line">  background-color: #ffffff;</span><br><span class="line">  margin-left: 5px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<p>App.vue</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;MyTable :data=&quot;list&quot;&gt;</span><br><span class="line">      &lt;!-- 3. 通过template #插槽名=&quot;变量名&quot; 接收 --&gt;</span><br><span class="line">      &lt;template #default=&quot;obj&quot;&gt;</span><br><span class="line">        &lt;button @click=&quot;del(obj.row.id)&quot;&gt;</span><br><span class="line">          删除</span><br><span class="line">        &lt;/button&gt;</span><br><span class="line">      &lt;/template&gt;</span><br><span class="line">    &lt;/MyTable&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;MyTable :data=&quot;list2&quot;&gt;</span><br><span class="line">      &lt;template #default=&quot;&#123; row &#125;&quot;&gt;</span><br><span class="line">        &lt;button @click=&quot;show(row)&quot;&gt;查看&lt;/button&gt;</span><br><span class="line">      &lt;/template&gt;</span><br><span class="line">    &lt;/MyTable&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import MyTable from &#x27;./components/MyTable.vue&#x27;</span><br><span class="line">export default &#123;</span><br><span class="line">  data () &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      list: [</span><br><span class="line">        &#123; id: 1, name: &#x27;张小花&#x27;, age: 18 &#125;,</span><br><span class="line">        &#123; id: 2, name: &#x27;孙大明&#x27;, age: 19 &#125;,</span><br><span class="line">        &#123; id: 3, name: &#x27;刘德忠&#x27;, age: 17 &#125;,</span><br><span class="line">      ],</span><br><span class="line">      list2: [</span><br><span class="line">        &#123; id: 1, name: &#x27;赵小云&#x27;, age: 18 &#125;,</span><br><span class="line">        &#123; id: 2, name: &#x27;刘蓓蓓&#x27;, age: 19 &#125;,</span><br><span class="line">        &#123; id: 3, name: &#x27;姜肖泰&#x27;, age: 17 &#125;,</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    del (id) &#123;</span><br><span class="line">      this.list = this.list.filter(item =&gt; item.id !== id)</span><br><span class="line">    &#125;,</span><br><span class="line">    show (row) &#123;</span><br><span class="line">      // console.log(row);</span><br><span class="line">      alert(`姓名：$&#123;row.name&#125;; 年纪：$&#123;row.age&#125;`)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  components: &#123;</span><br><span class="line">    MyTable</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<h3 id="6-总结-3"><a href="#6-总结-3" class="headerlink" title="6.总结"></a>6.总结</h3><p>1.作用域插槽的作用是什么？</p>
<p>2.作用域插槽的使用步骤是什么？</p>
<h2 id="九、综合案例-商品列表-MyTag组件抽离"><a href="#九、综合案例-商品列表-MyTag组件抽离" class="headerlink" title="九、综合案例 - 商品列表-MyTag组件抽离"></a>九、综合案例 - 商品列表-MyTag组件抽离</h2><img data-src="/2024/11/19/Vue2-0/1682416406585.png" class="" width="68241640658">

<h3 id="1-需求说明-1"><a href="#1-需求说明-1" class="headerlink" title="1.需求说明"></a>1.需求说明</h3><ol>
<li><strong>my-tag 标签组件封装</strong></li>
</ol>
<p>​    (1) 双击显示输入框，输入框获取焦点</p>
<p>​    (2) 失去焦点，隐藏输入框</p>
<p>​    (3) 回显标签信息</p>
<p>​    (4) 内容修改，回车 → 修改标签信息</p>
<ol start="2">
<li><strong>my-table 表格组件封装</strong></li>
</ol>
<p>​    (1) 动态传递表格数据渲染</p>
<p>​    (2) 表头支持用户自定义</p>
<p>​    (3) 主体支持用户自定义</p>
<h3 id="2-代码准备-1"><a href="#2-代码准备-1" class="headerlink" title="2.代码准备"></a>2.代码准备</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;table-case&quot;&gt;</span><br><span class="line">    &lt;table class=&quot;my-table&quot;&gt;</span><br><span class="line">      &lt;thead&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">          &lt;th&gt;编号&lt;/th&gt;</span><br><span class="line">          &lt;th&gt;名称&lt;/th&gt;</span><br><span class="line">          &lt;th&gt;图片&lt;/th&gt;</span><br><span class="line">          &lt;th width=&quot;100px&quot;&gt;标签&lt;/th&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">      &lt;/thead&gt;</span><br><span class="line">      &lt;tbody&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">          &lt;td&gt;1&lt;/td&gt;</span><br><span class="line">          &lt;td&gt;梨皮朱泥三绝清代小品壶经典款紫砂壶&lt;/td&gt;</span><br><span class="line">          &lt;td&gt;</span><br><span class="line">            &lt;img src=&quot;https://yanxuan-item.nosdn.127.net/f8c37ffa41ab1eb84bff499e1f6acfc7.jpg&quot; /&gt;</span><br><span class="line">          &lt;/td&gt;</span><br><span class="line">          &lt;td&gt;</span><br><span class="line">            &lt;div class=&quot;my-tag&quot;&gt;</span><br><span class="line">              &lt;!-- &lt;input </span><br><span class="line">                class=&quot;input&quot;</span><br><span class="line">                type=&quot;text&quot;</span><br><span class="line">                placeholder=&quot;输入标签&quot;</span><br><span class="line">              /&gt; --&gt;</span><br><span class="line">              &lt;div class=&quot;text&quot;&gt;</span><br><span class="line">                茶具</span><br><span class="line">              &lt;/div&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">          &lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">          &lt;td&gt;1&lt;/td&gt;</span><br><span class="line">          &lt;td&gt;梨皮朱泥三绝清代小品壶经典款紫砂壶&lt;/td&gt;</span><br><span class="line">          &lt;td&gt;</span><br><span class="line">            &lt;img src=&quot;https://yanxuan-item.nosdn.127.net/221317c85274a188174352474b859d7b.jpg&quot; /&gt;</span><br><span class="line">          &lt;/td&gt;</span><br><span class="line">          &lt;td&gt;</span><br><span class="line">            &lt;div class=&quot;my-tag&quot;&gt;</span><br><span class="line">              &lt;!-- &lt;input</span><br><span class="line">                ref=&quot;inp&quot;</span><br><span class="line">                class=&quot;input&quot;</span><br><span class="line">                type=&quot;text&quot;</span><br><span class="line">                placeholder=&quot;输入标签&quot;</span><br><span class="line">              /&gt; --&gt;</span><br><span class="line">              &lt;div class=&quot;text&quot;&gt;</span><br><span class="line">                男靴</span><br><span class="line">              &lt;/div&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">          &lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">      &lt;/tbody&gt;</span><br><span class="line">    &lt;/table&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &#x27;TableCase&#x27;,</span><br><span class="line">  components: &#123;&#125;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      goods: [</span><br><span class="line">        &#123;</span><br><span class="line">          id: 101,</span><br><span class="line">          picture:</span><br><span class="line">            &#x27;https://yanxuan-item.nosdn.127.net/f8c37ffa41ab1eb84bff499e1f6acfc7.jpg&#x27;,</span><br><span class="line">          name: &#x27;梨皮朱泥三绝清代小品壶经典款紫砂壶&#x27;,</span><br><span class="line">          tag: &#x27;茶具&#x27;,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          id: 102,</span><br><span class="line">          picture:</span><br><span class="line">            &#x27;https://yanxuan-item.nosdn.127.net/221317c85274a188174352474b859d7b.jpg&#x27;,</span><br><span class="line">          name: &#x27;全防水HABU旋钮牛皮户外徒步鞋山宁泰抗菌&#x27;,</span><br><span class="line">          tag: &#x27;男鞋&#x27;,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          id: 103,</span><br><span class="line">          picture:</span><br><span class="line">            &#x27;https://yanxuan-item.nosdn.127.net/cd4b840751ef4f7505c85004f0bebcb5.png&#x27;,</span><br><span class="line">          name: &#x27;毛茸茸小熊出没，儿童羊羔绒背心73-90cm&#x27;,</span><br><span class="line">          tag: &#x27;儿童服饰&#x27;,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          id: 104,</span><br><span class="line">          picture:</span><br><span class="line">            &#x27;https://yanxuan-item.nosdn.127.net/56eb25a38d7a630e76a608a9360eec6b.jpg&#x27;,</span><br><span class="line">          name: &#x27;基础百搭，儿童套头针织毛衣1-9岁&#x27;,</span><br><span class="line">          tag: &#x27;儿童服饰&#x27;,</span><br><span class="line">        &#125;,</span><br><span class="line">      ],</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=&quot;less&quot; scoped&gt;</span><br><span class="line">.table-case &#123;</span><br><span class="line">  width: 1000px;</span><br><span class="line">  margin: 50px auto;</span><br><span class="line">  img &#123;</span><br><span class="line">    width: 100px;</span><br><span class="line">    height: 100px;</span><br><span class="line">    object-fit: contain;</span><br><span class="line">    vertical-align: middle;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .my-table &#123;</span><br><span class="line">    width: 100%;</span><br><span class="line">    border-spacing: 0;</span><br><span class="line">    img &#123;</span><br><span class="line">      width: 100px;</span><br><span class="line">      height: 100px;</span><br><span class="line">      object-fit: contain;</span><br><span class="line">      vertical-align: middle;</span><br><span class="line">    &#125;</span><br><span class="line">    th &#123;</span><br><span class="line">      background: #f5f5f5;</span><br><span class="line">      border-bottom: 2px solid #069;</span><br><span class="line">    &#125;</span><br><span class="line">    td &#123;</span><br><span class="line">      border-bottom: 1px dashed #ccc;</span><br><span class="line">    &#125;</span><br><span class="line">    td,</span><br><span class="line">    th &#123;</span><br><span class="line">      text-align: center;</span><br><span class="line">      padding: 10px;</span><br><span class="line">      transition: all 0.5s;</span><br><span class="line">      &amp;.red &#123;</span><br><span class="line">        color: red;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    .none &#123;</span><br><span class="line">      height: 100px;</span><br><span class="line">      line-height: 100px;</span><br><span class="line">      color: #999;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  .my-tag &#123;</span><br><span class="line">    cursor: pointer;</span><br><span class="line">    .input &#123;</span><br><span class="line">      appearance: none;</span><br><span class="line">      outline: none;</span><br><span class="line">      border: 1px solid #ccc;</span><br><span class="line">      width: 100px;</span><br><span class="line">      height: 40px;</span><br><span class="line">      box-sizing: border-box;</span><br><span class="line">      padding: 10px;</span><br><span class="line">      color: #666;</span><br><span class="line">      &amp;::placeholder &#123;</span><br><span class="line">        color: #666;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<h3 id="3-my-tag组件封装-创建组件"><a href="#3-my-tag组件封装-创建组件" class="headerlink" title="3.my-tag组件封装-创建组件"></a>3.my-tag组件封装-创建组件</h3><p>MyTag.vue</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;my-tag&quot;&gt;</span><br><span class="line">  &lt;!--  &lt;input</span><br><span class="line">      class=&quot;input&quot;</span><br><span class="line">      type=&quot;text&quot;</span><br><span class="line">      placeholder=&quot;输入标签&quot; </span><br><span class="line">    /&gt; --&gt;</span><br><span class="line">    &lt;div  </span><br><span class="line">      class=&quot;text&quot;&gt;</span><br><span class="line">       茶具</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=&quot;less&quot; scoped&gt;</span><br><span class="line">.my-tag &#123;</span><br><span class="line">  cursor: pointer;</span><br><span class="line">  .input &#123;</span><br><span class="line">    appearance: none;</span><br><span class="line">    outline: none;</span><br><span class="line">    border: 1px solid #ccc;</span><br><span class="line">    width: 100px;</span><br><span class="line">    height: 40px;</span><br><span class="line">    box-sizing: border-box;</span><br><span class="line">    padding: 10px;</span><br><span class="line">    color: #666;</span><br><span class="line">    &amp;::placeholder &#123;</span><br><span class="line">      color: #666;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<p>App.vue</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  ...</span><br><span class="line"> &lt;tbody&gt;</span><br><span class="line">       &lt;tr&gt;</span><br><span class="line">          ....</span><br><span class="line">          &lt;td&gt;</span><br><span class="line">            &lt;MyTag&gt;&lt;/MyTag&gt;</span><br><span class="line">          &lt;/td&gt;</span><br><span class="line">       &lt;/tr&gt;</span><br><span class="line"> &lt;/tbody&gt;</span><br><span class="line"> ...</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">import MyTag from &#x27;./components/MyTag.vue&#x27;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &#x27;TableCase&#x27;,</span><br><span class="line">  components: &#123;</span><br><span class="line">    MyTag,</span><br><span class="line">  &#125;,</span><br><span class="line"> ....</span><br><span class="line"> &lt;/script&gt;</span><br></pre></td></tr></table></figure>



<h2 id="十、综合案例-MyTag组件控制显示隐藏"><a href="#十、综合案例-MyTag组件控制显示隐藏" class="headerlink" title="十、综合案例-MyTag组件控制显示隐藏"></a>十、综合案例-MyTag组件控制显示隐藏</h2><p>MyTag.vue</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;my-tag&quot;&gt;</span><br><span class="line">    &lt;input</span><br><span class="line">      v-if=&quot;isEdit&quot;</span><br><span class="line">      v-focus</span><br><span class="line">      ref=&quot;inp&quot;</span><br><span class="line">      class=&quot;input&quot;</span><br><span class="line">      type=&quot;text&quot;</span><br><span class="line">      placeholder=&quot;输入标签&quot; </span><br><span class="line">      @blur=&quot;isEdit = false&quot; </span><br><span class="line">    /&gt;</span><br><span class="line">    &lt;div </span><br><span class="line">      v-else</span><br><span class="line">      @dblclick=&quot;handleClick&quot;</span><br><span class="line">      class=&quot;text&quot;&gt;</span><br><span class="line">       茶具</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  data () &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      isEdit: false</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    handleClick () &#123;</span><br><span class="line">      this.isEdit = true</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt; </span><br></pre></td></tr></table></figure>

<p>main.js</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 封装全局指令 focus</span></span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">directive</span>(<span class="string">&#x27;focus&#x27;</span>, &#123;</span><br><span class="line">  <span class="comment">// 指令所在的dom元素，被插入到页面中时触发</span></span><br><span class="line">  <span class="title function_">inserted</span> (el) &#123;</span><br><span class="line">    el.<span class="title function_">focus</span>()</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>



<h2 id="十一、综合案例-MyTag组件进行v-model绑定"><a href="#十一、综合案例-MyTag组件进行v-model绑定" class="headerlink" title="十一、综合案例-MyTag组件进行v-model绑定"></a>十一、综合案例-MyTag组件进行v-model绑定</h2><p>App.vue</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;MyTag v-model=&quot;tempText&quot;&gt;&lt;/MyTag&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    export default &#123;</span><br><span class="line">        data()&#123;</span><br><span class="line">            tempText:&#x27;水杯&#x27;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<p>MyTag.vue</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;my-tag&quot;&gt;</span><br><span class="line">    &lt;input</span><br><span class="line">      v-if=&quot;isEdit&quot;</span><br><span class="line">      v-focus</span><br><span class="line">      ref=&quot;inp&quot;</span><br><span class="line">      class=&quot;input&quot;</span><br><span class="line">      type=&quot;text&quot;</span><br><span class="line">      placeholder=&quot;输入标签&quot;</span><br><span class="line">      :value=&quot;value&quot;</span><br><span class="line">      @blur=&quot;isEdit = false&quot;</span><br><span class="line">      @keyup.enter=&quot;handleEnter&quot;</span><br><span class="line">    /&gt;</span><br><span class="line">    &lt;div </span><br><span class="line">      v-else</span><br><span class="line">      @dblclick=&quot;handleClick&quot;</span><br><span class="line">      class=&quot;text&quot;&gt;</span><br><span class="line">      &#123;&#123; value &#125;&#125;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  props: &#123;</span><br><span class="line">    value: String</span><br><span class="line">  &#125;,</span><br><span class="line">  data () &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      isEdit: false</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    handleClick () &#123;</span><br><span class="line">      this.isEdit = true</span><br><span class="line">    &#125;,</span><br><span class="line">    handleEnter (e) &#123;</span><br><span class="line">      // 非空处理</span><br><span class="line">      if (e.target.value.trim() === &#x27;&#x27;) return alert(&#x27;标签内容不能为空&#x27;)</span><br><span class="line">      this.$emit(&#x27;input&#x27;, e.target.value)</span><br><span class="line">      // 提交完成，关闭输入状态</span><br><span class="line">      this.isEdit = false</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt; </span><br></pre></td></tr></table></figure>



<h2 id="十二、综合案例-封装MyTable组件-动态渲染数据"><a href="#十二、综合案例-封装MyTable组件-动态渲染数据" class="headerlink" title="十二、综合案例-封装MyTable组件-动态渲染数据"></a>十二、综合案例-封装MyTable组件-动态渲染数据</h2><p>App.vue</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;table-case&quot;&gt;</span><br><span class="line">    &lt;MyTable :data=&quot;goods&quot;&gt;&lt;/MyTable&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import MyTable from &#x27;./components/MyTable.vue&#x27;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &#x27;TableCase&#x27;,</span><br><span class="line">  components: &#123; </span><br><span class="line">    MyTable</span><br><span class="line">  &#125;,</span><br><span class="line">  data()&#123;</span><br><span class="line">    return &#123;</span><br><span class="line">        ....</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt; </span><br></pre></td></tr></table></figure>

<p>MyTable.vue</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;table class=&quot;my-table&quot;&gt;</span><br><span class="line">    &lt;thead&gt;</span><br><span class="line">      &lt;tr&gt;</span><br><span class="line">        &lt;th&gt;编号&lt;/th&gt;</span><br><span class="line">        &lt;th&gt;名称&lt;/th&gt;</span><br><span class="line">        &lt;th&gt;图片&lt;/th&gt;</span><br><span class="line">        &lt;th width=&quot;100px&quot;&gt;标签&lt;/th&gt;</span><br><span class="line">      &lt;/tr&gt;</span><br><span class="line">    &lt;/thead&gt;</span><br><span class="line">    &lt;tbody&gt;</span><br><span class="line">      &lt;tr v-for=&quot;(item, index) in data&quot; :key=&quot;item.id&quot;&gt;</span><br><span class="line">       &lt;td&gt;&#123;&#123; index + 1 &#125;&#125;&lt;/td&gt;</span><br><span class="line">        &lt;td&gt;&#123;&#123; item.name &#125;&#125;&lt;/td&gt;</span><br><span class="line">        &lt;td&gt;</span><br><span class="line">          &lt;img</span><br><span class="line">            :src=&quot;item.picture&quot;</span><br><span class="line">          /&gt;</span><br><span class="line">        &lt;/td&gt;</span><br><span class="line">        &lt;td&gt;</span><br><span class="line">          标签内容</span><br><span class="line">         &lt;!-- &lt;MyTag v-model=&quot;item.tag&quot;&gt;&lt;/MyTag&gt; --&gt;</span><br><span class="line">        &lt;/td&gt;</span><br><span class="line">      &lt;/tr&gt;</span><br><span class="line">    &lt;/tbody&gt;</span><br><span class="line">  &lt;/table&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  props: &#123;</span><br><span class="line">    data: &#123;</span><br><span class="line">      type: Array,</span><br><span class="line">      required: true</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=&quot;less&quot; scoped&gt;</span><br><span class="line"></span><br><span class="line">.my-table &#123;</span><br><span class="line">  width: 100%;</span><br><span class="line">  border-spacing: 0;</span><br><span class="line">  img &#123;</span><br><span class="line">    width: 100px;</span><br><span class="line">    height: 100px;</span><br><span class="line">    object-fit: contain;</span><br><span class="line">    vertical-align: middle;</span><br><span class="line">  &#125;</span><br><span class="line">  th &#123;</span><br><span class="line">    background: #f5f5f5;</span><br><span class="line">    border-bottom: 2px solid #069;</span><br><span class="line">  &#125;</span><br><span class="line">  td &#123;</span><br><span class="line">    border-bottom: 1px dashed #ccc;</span><br><span class="line">  &#125;</span><br><span class="line">  td,</span><br><span class="line">  th &#123;</span><br><span class="line">    text-align: center;</span><br><span class="line">    padding: 10px;</span><br><span class="line">    transition: all .5s;</span><br><span class="line">    &amp;.red &#123;</span><br><span class="line">      color: red;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  .none &#123;</span><br><span class="line">    height: 100px;</span><br><span class="line">    line-height: 100px;</span><br><span class="line">    color: #999;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>



<h2 id="十三、综合案例-封装MyTable组件-自定义结构"><a href="#十三、综合案例-封装MyTable组件-自定义结构" class="headerlink" title="十三、综合案例-封装MyTable组件-自定义结构"></a>十三、综合案例-封装MyTable组件-自定义结构</h2><p>App.vue</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;table-case&quot;&gt;</span><br><span class="line">    &lt;MyTable :data=&quot;goods&quot;&gt;</span><br><span class="line">      &lt;template #head&gt;</span><br><span class="line">        &lt;th&gt;编号&lt;/th&gt;</span><br><span class="line">        &lt;th&gt;名称&lt;/th&gt;</span><br><span class="line">        &lt;th&gt;图片&lt;/th&gt;</span><br><span class="line">        &lt;th width=&quot;100px&quot;&gt;标签&lt;/th&gt;</span><br><span class="line">      &lt;/template&gt;</span><br><span class="line"></span><br><span class="line">      &lt;template #body=&quot;&#123; item, index &#125;&quot;&gt;</span><br><span class="line">        &lt;td&gt;&#123;&#123; index + 1 &#125;&#125;&lt;/td&gt;</span><br><span class="line">        &lt;td&gt;&#123;&#123; item.name &#125;&#125;&lt;/td&gt;</span><br><span class="line">        &lt;td&gt;</span><br><span class="line">          &lt;img</span><br><span class="line">            :src=&quot;item.picture&quot;</span><br><span class="line">          /&gt;</span><br><span class="line">        &lt;/td&gt;</span><br><span class="line">        &lt;td&gt;</span><br><span class="line">          &lt;MyTag v-model=&quot;item.tag&quot;&gt;&lt;/MyTag&gt;</span><br><span class="line">        &lt;/td&gt;</span><br><span class="line">      &lt;/template&gt;</span><br><span class="line">    &lt;/MyTable&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import MyTag from &#x27;./components/MyTag.vue&#x27;</span><br><span class="line">import MyTable from &#x27;./components/MyTable.vue&#x27;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &#x27;TableCase&#x27;,</span><br><span class="line">  components: &#123;</span><br><span class="line">    MyTag,</span><br><span class="line">    MyTable</span><br><span class="line">  &#125;,</span><br><span class="line">  data () &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      ....</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"> </span><br></pre></td></tr></table></figure>

<p>MyTable.vue</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;table class=&quot;my-table&quot;&gt;</span><br><span class="line">    &lt;thead&gt;</span><br><span class="line">      &lt;tr&gt;</span><br><span class="line">        &lt;slot name=&quot;head&quot;&gt;&lt;/slot&gt;</span><br><span class="line">      &lt;/tr&gt;</span><br><span class="line">    &lt;/thead&gt;</span><br><span class="line">    &lt;tbody&gt;</span><br><span class="line">      &lt;tr v-for=&quot;(item, index) in data&quot; :key=&quot;item.id&quot;&gt;</span><br><span class="line">        &lt;slot name=&quot;body&quot; :item=&quot;item&quot; :index=&quot;index&quot; &gt;&lt;/slot&gt;</span><br><span class="line">      &lt;/tr&gt;</span><br><span class="line">    &lt;/tbody&gt;</span><br><span class="line">  &lt;/table&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  props: &#123;</span><br><span class="line">    data: &#123;</span><br><span class="line">      type: Array,</span><br><span class="line">      required: true</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>



<h2 id="十四、单页应用程序介绍"><a href="#十四、单页应用程序介绍" class="headerlink" title="十四、单页应用程序介绍"></a>十四、单页应用程序介绍</h2><h3 id="1-概念-1"><a href="#1-概念-1" class="headerlink" title="1.概念"></a>1.概念</h3><p>单页应用程序：SPA【Single Page Application】是指所有的功能都在<strong>一个html页面</strong>上实现</p>
<h3 id="2-具体示例"><a href="#2-具体示例" class="headerlink" title="2.具体示例"></a>2.具体示例</h3><p>单页应用网站： 网易云音乐  <a href="https://music.163.com/">https://music.163.com/</a></p>
<p>多页应用网站：京东  <a href="https://jd.com/">https://jd.com/</a></p>
<h3 id="3-单页应用-VS-多页面应用"><a href="#3-单页应用-VS-多页面应用" class="headerlink" title="3.单页应用 VS 多页面应用"></a>3.单页应用 VS 多页面应用</h3><img data-src="/2024/11/19/Vue2-0/1682441912977.png" class="" width="68244191297">

<p>单页应用类网站：系统类网站 &#x2F; 内部网站 &#x2F; 文档类网站 &#x2F; 移动端站点</p>
<p>多页应用类网站：公司官网 &#x2F; 电商类网站 </p>
<h3 id="4-总结-6"><a href="#4-总结-6" class="headerlink" title="4.总结"></a>4.总结</h3><p>1.什么是单页面应用程序?</p>
<p>2.单页面应用优缺点?</p>
<p>3.单页应用场景？</p>
<h2 id="十五、路由介绍"><a href="#十五、路由介绍" class="headerlink" title="十五、路由介绍"></a>十五、路由介绍</h2><h3 id="1-思考-1"><a href="#1-思考-1" class="headerlink" title="1.思考"></a>1.思考</h3><p>单页面应用程序，之所以开发效率高，性能好，用户体验好</p>
<p>最大的原因就是：<strong>页面按需更新</strong></p>
<img data-src="/2024/11/19/Vue2-0/1682442699775.png" class="" width="68244269977">

<p>比如当点击【发现音乐】和【关注】时，<strong>只是更新下面部分内容</strong>，对于头部是不更新的</p>
<p>要按需更新，首先就需要明确：<strong>访问路径</strong>和 <strong>组件</strong>的对应关系！</p>
<p>访问路径 和 组件的对应关系如何确定呢？ <strong>路由</strong></p>
<h3 id="2-路由的介绍"><a href="#2-路由的介绍" class="headerlink" title="2.路由的介绍"></a>2.路由的介绍</h3><p>生活中的路由：设备和ip的映射关系</p>
<img data-src="/2024/11/19/Vue2-0/1682442945057.png" class="" width="68244294505">

<p>Vue中的路由：<strong>路径和组件</strong>的<strong>映射</strong>关系</p>
<img data-src="/2024/11/19/Vue2-0/1682443040372.png" class="" width="68244304037">

<h3 id="3-总结-3"><a href="#3-总结-3" class="headerlink" title="3.总结"></a>3.总结</h3><ul>
<li>什么是路由</li>
<li>Vue中的路由是什么</li>
</ul>
<h2 id="十六、路由的基本使用"><a href="#十六、路由的基本使用" class="headerlink" title="十六、路由的基本使用"></a>十六、路由的基本使用</h2><h3 id="1-目标"><a href="#1-目标" class="headerlink" title="1.目标"></a>1.目标</h3><p>认识插件 VueRouter，掌握 VueRouter 的基本使用步骤</p>
<h3 id="2-作用-2"><a href="#2-作用-2" class="headerlink" title="2.作用"></a>2.作用</h3><p><strong>修改</strong>地址栏路径时，<strong>切换显示</strong>匹配的<strong>组件</strong></p>
<h3 id="3-说明"><a href="#3-说明" class="headerlink" title="3.说明"></a>3.说明</h3><p>Vue 官方的一个路由插件，是一个第三方包</p>
<h3 id="4-官网"><a href="#4-官网" class="headerlink" title="4.官网"></a>4.官网</h3><p><a href="https://v3.router.vuejs.org/zh/">https://v3.router.vuejs.org/zh/</a></p>
<h3 id="5-VueRouter的使用（5-2）"><a href="#5-VueRouter的使用（5-2）" class="headerlink" title="5.VueRouter的使用（5+2）"></a>5.VueRouter的使用（5+2）</h3><p>固定5个固定的步骤（不用死背，熟能生巧）</p>
<ol>
<li><p>下载 VueRouter 模块到当前工程，版本3.6.5</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yarn add vue-router@3.6.5</span><br></pre></td></tr></table></figure>
</li>
<li><p>main.js中引入VueRouter</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import VueRouter from &#x27;vue-router&#x27;</span><br></pre></td></tr></table></figure>
</li>
<li><p>安装注册</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Vue.use(VueRouter)</span><br></pre></td></tr></table></figure>
</li>
<li><p>创建路由对象</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">const router = new VueRouter()</span><br></pre></td></tr></table></figure>
</li>
<li><p>注入，将路由对象注入到new Vue实例中，建立关联</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">new Vue(&#123;</span><br><span class="line">  render: h =&gt; h(App),</span><br><span class="line">  router:router</span><br><span class="line">&#125;).$mount(&#x27;#app&#x27;)</span><br><span class="line"></span><br></pre></td></tr></table></figure></li>
</ol>
<p>当我们配置完以上5步之后 就可以看到浏览器地址栏中的路由 变成了 &#x2F;#&#x2F;的形式。表示项目的路由已经被Vue-Router管理了</p>
<img data-src="/2024/11/19/Vue2-0/1682479207453.png" class="" width="68247920745">

<h3 id="6-代码示例"><a href="#6-代码示例" class="headerlink" title="6.代码示例"></a>6.代码示例</h3><p>main.js</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// 路由的使用步骤 5 + 2</span><br><span class="line">// 5个基础步骤</span><br><span class="line">// 1. 下载 v3.6.5</span><br><span class="line">// yarn add vue-router@3.6.5</span><br><span class="line">// 2. 引入</span><br><span class="line">// 3. 安装注册 Vue.use(Vue插件)</span><br><span class="line">// 4. 创建路由对象</span><br><span class="line">// 5. 注入到new Vue中，建立关联</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">import VueRouter from &#x27;vue-router&#x27;</span><br><span class="line">Vue.use(VueRouter) // VueRouter插件初始化</span><br><span class="line"></span><br><span class="line">const router = new VueRouter()</span><br><span class="line"></span><br><span class="line">new Vue(&#123;</span><br><span class="line">  render: h =&gt; h(App),</span><br><span class="line">  router</span><br><span class="line">&#125;).$mount(&#x27;#app&#x27;)</span><br></pre></td></tr></table></figure>



<h3 id="7-两个核心步骤"><a href="#7-两个核心步骤" class="headerlink" title="7.两个核心步骤"></a>7.两个核心步骤</h3><ol>
<li><p>创建需要的组件 (views目录)，配置路由规则</p>
<img data-src="/2024/11/19/Vue2-0/1682479639666.png" class="" width="68247963966">
</li>
<li><p>配置导航，配置路由出口(路径匹配的组件显示的位置)</p>
<p>App.vue</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;div class=&quot;footer_wrap&quot;&gt;</span><br><span class="line">  &lt;a href=&quot;#/find&quot;&gt;发现音乐&lt;/a&gt;</span><br><span class="line">  &lt;a href=&quot;#/my&quot;&gt;我的音乐&lt;/a&gt;</span><br><span class="line">  &lt;a href=&quot;#/friend&quot;&gt;朋友&lt;/a&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;div class=&quot;top&quot;&gt;</span><br><span class="line">  &lt;router-view&gt;&lt;/router-view&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure></li>
</ol>
<h3 id="8-总结-1"><a href="#8-总结-1" class="headerlink" title="8.总结"></a>8.总结</h3><ol>
<li>如何实现 路径改变，对应组件 切换,应该使用哪个插件?</li>
<li>Vue-Router的使用步骤是什么(5+2)?</li>
</ol>
<h2 id="十七、组件的存放目录问题"><a href="#十七、组件的存放目录问题" class="headerlink" title="十七、组件的存放目录问题"></a>十七、组件的存放目录问题</h2><p>注意： <strong>.vue文件</strong> 本质无区别</p>
<h3 id="1-组件分类"><a href="#1-组件分类" class="headerlink" title="1.组件分类"></a>1.组件分类</h3><p> .vue文件分为2类，都是 <strong>.vue文件（本质无区别）</strong></p>
<ul>
<li>页面组件 （配置路由规则时使用的组件）</li>
<li>复用组件（多个组件中都使用到的组件）</li>
</ul>
<img data-src="/2024/11/19/Vue2-0/1682445397959.png" class="" width="68244539795">



<h3 id="2-存放目录"><a href="#2-存放目录" class="headerlink" title="2.存放目录"></a>2.存放目录</h3><p>分类开来的目的就是为了 <strong>更易维护</strong></p>
<ol>
<li><p>src&#x2F;views文件夹</p>
<p>页面组件 - 页面展示 - 配合路由用</p>
</li>
<li><p>src&#x2F;components文件夹</p>
<p>复用组件 - 展示数据 - 常用于复用</p>
</li>
</ol>
<h3 id="3-总结-4"><a href="#3-总结-4" class="headerlink" title="3.总结"></a>3.总结</h3><ul>
<li>组件分类有哪两类？分类的目的？</li>
<li>不同分类的组件应该放在什么文件夹？作用分别是什么？</li>
</ul>
<h2 id="十八、路由的封装抽离"><a href="#十八、路由的封装抽离" class="headerlink" title="十八、路由的封装抽离"></a>十八、路由的封装抽离</h2><p>问题：所有的路由配置都在main.js中合适吗？</p>
<p>目标：将路由模块抽离出来。  好处：<strong>拆分模块，利于维护</strong></p>
<img data-src="/2024/11/19/Vue2-0/1682481410304.png" class="" width="68248141030">

<p>路径简写：</p>
<p><strong>脚手架环境下</strong> @指代src目录，可以用于快速引入组件</p>
<p>总结：</p>
<ul>
<li>路由模块的封装抽离的好处是什么？</li>
<li>以后如何快速引入组件？</li>
</ul>
<h1 id="day06"><a href="#day06" class="headerlink" title="day06"></a>day06</h1><h2 id="一、声明式导航-导航链接"><a href="#一、声明式导航-导航链接" class="headerlink" title="一、声明式导航-导航链接"></a>一、声明式导航-导航链接</h2><h3 id="1-需求-3"><a href="#1-需求-3" class="headerlink" title="1.需求"></a>1.需求</h3><p>实现导航高亮效果</p>
<img data-src="/2024/11/19/Vue2-0/1682492044744.png" class="" width="68249204474">

<p>如果使用a标签进行跳转的话，需要给当前跳转的导航加样式，同时要移除上一个a标签的样式，太麻烦！！！</p>
<h3 id="2-解决方案"><a href="#2-解决方案" class="headerlink" title="2.解决方案"></a>2.解决方案</h3><p>vue-router 提供了一个全局组件 router-link (取代 a 标签)</p>
<ul>
<li><strong>能跳转</strong>，配置 to 属性指定路径(<strong>必须</strong>) 。本质还是 a 标签 ，<strong>to 无需 #</strong></li>
<li><strong>能高亮</strong>，默认就会提供<strong>高亮类名</strong>，可以直接设置高亮样式</li>
</ul>
<p>语法： <router-link to="path的值">发现音乐</router-link></p>
<p>App.vue</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div class=&quot;footer_wrap&quot;&gt;</span><br><span class="line">      &lt;router-link to=&quot;/find&quot;&gt;发现音乐&lt;/router-link&gt;</span><br><span class="line">      &lt;router-link to=&quot;/my&quot;&gt;我的音乐&lt;/router-link&gt;</span><br><span class="line">      &lt;router-link to=&quot;/friend&quot;&gt;朋友&lt;/router-link&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;top&quot;&gt;</span><br><span class="line">      &lt;!-- 路由出口 → 匹配的组件所展示的位置 --&gt;</span><br><span class="line">      &lt;router-view&gt;&lt;/router-view&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure>

<h3 id="3-通过router-link自带的两个样式进行高亮"><a href="#3-通过router-link自带的两个样式进行高亮" class="headerlink" title="3.通过router-link自带的两个样式进行高亮"></a>3.通过router-link自带的两个样式进行高亮</h3><p>使用router-link跳转后，我们发现。当前点击的链接默认加了两个class的值 <code>router-link-exact-active</code>和<code>router-link-active</code></p>
<p>我们可以给任意一个class属性添加高亮样式即可实现功能</p>
<h3 id="4-总结-7"><a href="#4-总结-7" class="headerlink" title="4.总结"></a>4.总结</h3><ul>
<li>router-link是什么？</li>
<li>router-link怎么用？</li>
<li>router-link的好处是什么？</li>
</ul>
<h2 id="二、声明式导航-两个类名"><a href="#二、声明式导航-两个类名" class="headerlink" title="二、声明式导航-两个类名"></a>二、声明式导航-两个类名</h2><p>当我们使用<router-link></router-link>跳转时，自动给当前导航加了<strong>两个类名</strong></p>
<img data-src="/2024/11/19/Vue2-0/1682493121052.png" class="" width="68249312105">



<h3 id="1-router-link-active"><a href="#1-router-link-active" class="headerlink" title="1.router-link-active"></a>1.router-link-active</h3><p><strong>模糊匹配（用的多）</strong></p>
<p>to&#x3D;”&#x2F;my”  可以匹配 &#x2F;my    &#x2F;my&#x2F;a    &#x2F;my&#x2F;b    ….  </p>
<p>只要是以&#x2F;my开头的路径 都可以和 to&#x3D;”&#x2F;my”匹配到</p>
<h3 id="2-router-link-exact-active"><a href="#2-router-link-exact-active" class="headerlink" title="2.router-link-exact-active"></a>2.router-link-exact-active</h3><p><strong>精确匹配</strong></p>
<p>to&#x3D;”&#x2F;my” 仅可以匹配  &#x2F;my</p>
<h3 id="3-在地址栏中输入二级路由查看类名的添加"><a href="#3-在地址栏中输入二级路由查看类名的添加" class="headerlink" title="3.在地址栏中输入二级路由查看类名的添加"></a>3.在地址栏中输入二级路由查看类名的添加</h3><h3 id="4-总结-8"><a href="#4-总结-8" class="headerlink" title="4.总结"></a>4.总结</h3><ul>
<li>router-link 会自动给当前导航添加两个类名，有什么区别呢？</li>
</ul>
<h2 id="三、声明式导航-自定义类名（了解）"><a href="#三、声明式导航-自定义类名（了解）" class="headerlink" title="三、声明式导航-自定义类名（了解）"></a>三、声明式导航-自定义类名（了解）</h2><h3 id="1-问题-1"><a href="#1-问题-1" class="headerlink" title="1.问题"></a>1.问题</h3><p>router-link的<strong>两个高亮类名 太长了</strong>，我们希望能定制怎么办</p>
<img data-src="/2024/11/19/Vue2-0/1682493610911.png" class="" width="68249361091">

<h3 id="2-解决方案-1"><a href="#2-解决方案-1" class="headerlink" title="2.解决方案"></a>2.解决方案</h3><p>我们可以在创建路由对象时，额外配置两个配置项即可。 <code>linkActiveClass</code>和<code>linkExactActiveClass</code></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> router = <span class="keyword">new</span> <span class="title class_">VueRouter</span>(&#123;</span><br><span class="line">  <span class="attr">routes</span>: [...],</span><br><span class="line">  <span class="attr">linkActiveClass</span>: <span class="string">&quot;类名1&quot;</span>,</span><br><span class="line">  <span class="attr">linkExactActiveClass</span>: <span class="string">&quot;类名2&quot;</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<img data-src="/2024/11/19/Vue2-0/1682493729456.png" class="" width="68249372945">



<h3 id="3-代码演示"><a href="#3-代码演示" class="headerlink" title="3.代码演示"></a>3.代码演示</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 创建了一个路由对象</span></span><br><span class="line"><span class="keyword">const</span> router = <span class="keyword">new</span> <span class="title class_">VueRouter</span>(&#123;</span><br><span class="line">  <span class="comment">// routes 路由规则们</span></span><br><span class="line">  <span class="comment">// route  一条路由规则 &#123; path: 路径, component: 组件 &#125;</span></span><br><span class="line">  <span class="attr">routes</span>: [</span><br><span class="line">    &#123; <span class="attr">path</span>: <span class="string">&#x27;/find&#x27;</span>, <span class="attr">component</span>: <span class="title class_">Find</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">path</span>: <span class="string">&#x27;/my&#x27;</span>, <span class="attr">component</span>: <span class="title class_">My</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">path</span>: <span class="string">&#x27;/friend&#x27;</span>, <span class="attr">component</span>: <span class="title class_">Friend</span> &#125;,</span><br><span class="line">  ],</span><br><span class="line">  <span class="comment">// link自定义高亮类名</span></span><br><span class="line">  <span class="attr">linkActiveClass</span>: <span class="string">&#x27;active&#x27;</span>, <span class="comment">// 配置模糊匹配的类名</span></span><br><span class="line">  <span class="attr">linkExactActiveClass</span>: <span class="string">&#x27;exact-active&#x27;</span> <span class="comment">// 配置精确匹配的类名</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>



<h3 id="4-总结-9"><a href="#4-总结-9" class="headerlink" title="4.总结"></a>4.总结</h3><p>如何自定义router-link的两个<strong>高亮类名</strong></p>
<h2 id="四、声明式导航-查询参数传参"><a href="#四、声明式导航-查询参数传参" class="headerlink" title="四、声明式导航-查询参数传参"></a>四、声明式导航-查询参数传参</h2><h3 id="1-目标-1"><a href="#1-目标-1" class="headerlink" title="1.目标"></a>1.目标</h3><p>在跳转路由时，进行传参</p>
<img data-src="/2024/11/19/Vue2-0/1682494423923.png" class="" width="68249442392">

<p>比如：现在我们在搜索页点击了热门搜索链接，跳转到详情页，<strong>需要把点击的内容带到详情页</strong>，改怎么办呢？</p>
<h3 id="2-跳转传参"><a href="#2-跳转传参" class="headerlink" title="2.跳转传参"></a>2.跳转传参</h3><p>我们可以通过两种方式，在跳转的时候把所需要的参数传到其他页面中</p>
<ul>
<li>查询参数传参</li>
<li>动态路由传参</li>
</ul>
<h3 id="3-查询参数传参"><a href="#3-查询参数传参" class="headerlink" title="3.查询参数传参"></a>3.查询参数传参</h3><ul>
<li><p>如何传参？</p>
<p><router-link to="/path?参数名=值"></router-link></p>
</li>
<li><p>如何接受参数</p>
<p>固定用法：$router.query.参数名</p>
</li>
</ul>
<h3 id="4-代码演示-3"><a href="#4-代码演示-3" class="headerlink" title="4.代码演示"></a>4.代码演示</h3><p>App.vue</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div id=&quot;app&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;link&quot;&gt;</span><br><span class="line">      &lt;router-link to=&quot;/home&quot;&gt;首页&lt;/router-link&gt;</span><br><span class="line">      &lt;router-link to=&quot;/search&quot;&gt;搜索页&lt;/router-link&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;router-view&gt;&lt;/router-view&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">.link &#123;</span><br><span class="line">  height: 50px;</span><br><span class="line">  line-height: 50px;</span><br><span class="line">  background-color: #495150;</span><br><span class="line">  display: flex;</span><br><span class="line">  margin: -8px -8px 0 -8px;</span><br><span class="line">  margin-bottom: 50px;</span><br><span class="line">&#125;</span><br><span class="line">.link a &#123;</span><br><span class="line">  display: block;</span><br><span class="line">  text-decoration: none;</span><br><span class="line">  background-color: #ad2a26;</span><br><span class="line">  width: 100px;</span><br><span class="line">  text-align: center;</span><br><span class="line">  margin-right: 5px;</span><br><span class="line">  color: #fff;</span><br><span class="line">  border-radius: 5px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<p>Home.vue</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;home&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;logo-box&quot;&gt;&lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;search-box&quot;&gt;</span><br><span class="line">      &lt;input type=&quot;text&quot;&gt;</span><br><span class="line">      &lt;button&gt;搜索一下&lt;/button&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;hot-link&quot;&gt;</span><br><span class="line">      热门搜索：</span><br><span class="line">      &lt;router-link to=&quot;&quot;&gt;黑马程序员&lt;/router-link&gt;</span><br><span class="line">      &lt;router-link to=&quot;&quot;&gt;前端培训&lt;/router-link&gt;</span><br><span class="line">      &lt;router-link to=&quot;&quot;&gt;如何成为前端大牛&lt;/router-link&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &#x27;FindMusic&#x27;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">.logo-box &#123;</span><br><span class="line">  height: 150px;</span><br><span class="line">  background: url(&#x27;@/Vue2-0/logo.jpeg&#x27;) no-repeat center;</span><br><span class="line">&#125;</span><br><span class="line">.search-box &#123;</span><br><span class="line">  display: flex;</span><br><span class="line">  justify-content: center;</span><br><span class="line">&#125;</span><br><span class="line">.search-box input &#123;</span><br><span class="line">  width: 400px;</span><br><span class="line">  height: 30px;</span><br><span class="line">  line-height: 30px;</span><br><span class="line">  border: 2px solid #c4c7ce;</span><br><span class="line">  border-radius: 4px 0 0 4px;</span><br><span class="line">  outline: none;</span><br><span class="line">&#125;</span><br><span class="line">.search-box input:focus &#123;</span><br><span class="line">  border: 2px solid #ad2a26;</span><br><span class="line">&#125;</span><br><span class="line">.search-box button &#123;</span><br><span class="line">  width: 100px;</span><br><span class="line">  height: 36px;</span><br><span class="line">  border: none;</span><br><span class="line">  background-color: #ad2a26;</span><br><span class="line">  color: #fff;</span><br><span class="line">  position: relative;</span><br><span class="line">  left: -2px;</span><br><span class="line">  border-radius: 0 4px 4px 0;</span><br><span class="line">&#125;</span><br><span class="line">.hot-link &#123;</span><br><span class="line">  width: 508px;</span><br><span class="line">  height: 60px;</span><br><span class="line">  line-height: 60px;</span><br><span class="line">  margin: 0 auto;</span><br><span class="line">&#125;</span><br><span class="line">.hot-link a &#123;</span><br><span class="line">  margin: 0 5px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<p>Search.vue</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;search&quot;&gt;</span><br><span class="line">    &lt;p&gt;搜索关键字: 黑马程序员&lt;/p&gt;</span><br><span class="line">    &lt;p&gt;搜索结果: &lt;/p&gt;</span><br><span class="line">    &lt;ul&gt;</span><br><span class="line">      &lt;li&gt;.............&lt;/li&gt;</span><br><span class="line">      &lt;li&gt;.............&lt;/li&gt;</span><br><span class="line">      &lt;li&gt;.............&lt;/li&gt;</span><br><span class="line">      &lt;li&gt;.............&lt;/li&gt;</span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &#x27;MyFriend&#x27;,</span><br><span class="line">  created () &#123;</span><br><span class="line">    // 在created中，获取路由参数</span><br><span class="line">    // this.$route.query.参数名 获取</span><br><span class="line">    console.log(this.$route.query.key);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">.search &#123;</span><br><span class="line">  width: 400px;</span><br><span class="line">  height: 240px;</span><br><span class="line">  padding: 0 20px;</span><br><span class="line">  margin: 0 auto;</span><br><span class="line">  border: 2px solid #c4c7ce;</span><br><span class="line">  border-radius: 5px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<p>router&#x2F;index.js</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Home</span> <span class="keyword">from</span> <span class="string">&#x27;@/views/Home&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Search</span> <span class="keyword">from</span> <span class="string">&#x27;@/views/Search&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Vue</span> <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">VueRouter</span> <span class="keyword">from</span> <span class="string">&#x27;vue-router&#x27;</span></span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">use</span>(<span class="title class_">VueRouter</span>) <span class="comment">// VueRouter插件初始化</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建了一个路由对象</span></span><br><span class="line"><span class="keyword">const</span> router = <span class="keyword">new</span> <span class="title class_">VueRouter</span>(&#123;</span><br><span class="line">  <span class="attr">routes</span>: [</span><br><span class="line">    &#123; <span class="attr">path</span>: <span class="string">&#x27;/home&#x27;</span>, <span class="attr">component</span>: <span class="title class_">Home</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">path</span>: <span class="string">&#x27;/search&#x27;</span>, <span class="attr">component</span>: <span class="title class_">Search</span> &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router</span><br></pre></td></tr></table></figure>

<p>main.js</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Vue</span> <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">App</span> <span class="keyword">from</span> <span class="string">&#x27;./App.vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">&#x27;./router/index&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">  <span class="attr">render</span>: <span class="function"><span class="params">h</span> =&gt;</span> <span class="title function_">h</span>(<span class="title class_">App</span>),</span><br><span class="line">  router</span><br><span class="line">&#125;).$mount(<span class="string">&#x27;#app&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h2 id="五、声明式导航-动态路由传参"><a href="#五、声明式导航-动态路由传参" class="headerlink" title="五、声明式导航-动态路由传参"></a>五、声明式导航-动态路由传参</h2><h3 id="1-动态路由传参方式"><a href="#1-动态路由传参方式" class="headerlink" title="1.动态路由传参方式"></a>1.动态路由传参方式</h3><ul>
<li><p>配置动态路由</p>
<blockquote>
<p>动态路由后面的参数可以随便起名，但要有语义</p>
</blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> router = <span class="keyword">new</span> <span class="title class_">VueRouter</span>(&#123;</span><br><span class="line">  <span class="attr">routes</span>: [</span><br><span class="line">    ...,</span><br><span class="line">    &#123; </span><br><span class="line">      <span class="attr">path</span>: <span class="string">&#x27;/search/:words&#x27;</span>, </span><br><span class="line">      <span class="attr">component</span>: <span class="title class_">Search</span> </span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
</li>
<li><p>配置导航链接</p>
<p>to&#x3D;”&#x2F;path&#x2F;参数值”</p>
</li>
<li><p>对应页面组件<strong>接受参数</strong></p>
<p>$route.<strong>params</strong>.参数名</p>
<blockquote>
<p>params后面的参数名要和动态路由配置的参数保持一致</p>
</blockquote>
</li>
</ul>
<h3 id="2-查询参数传参-VS-动态路由传参"><a href="#2-查询参数传参-VS-动态路由传参" class="headerlink" title="2.查询参数传参 VS 动态路由传参"></a>2.查询参数传参 VS 动态路由传参</h3><ol>
<li><p>查询参数传参  (比较适合传<strong>多个参数</strong>) </p>
<ol>
<li>跳转：to&#x3D;”&#x2F;path?参数名&#x3D;值&amp;参数名2&#x3D;值”</li>
<li>获取：$route.query.参数名</li>
</ol>
</li>
<li><p>动态路由传参 (<strong>优雅简洁</strong>，传单个参数比较方便)</p>
<ol>
<li>配置动态路由：path: “&#x2F;path&#x2F;:参数名” </li>
<li>跳转：to&#x3D;”&#x2F;path&#x2F;参数值”</li>
<li>获取：$route.params.参数名</li>
</ol>
<p>注意：动态路由也可以传多个参数，但一般只传一个</p>
</li>
</ol>
<h3 id="3-总结-5"><a href="#3-总结-5" class="headerlink" title="3.总结"></a>3.总结</h3><p>声明式导航跳转时, 有几种方式传值给路由页面？</p>
<ul>
<li>查询参数传参（多个参数）</li>
<li>动态路由传参（一个参数，优雅简洁）</li>
</ul>
<h2 id="六、动态路由参数的可选符-了解"><a href="#六、动态路由参数的可选符-了解" class="headerlink" title="六、动态路由参数的可选符(了解)"></a>六、动态路由参数的可选符(了解)</h2><h3 id="1-问题-2"><a href="#1-问题-2" class="headerlink" title="1.问题"></a>1.问题</h3><p>配了路由 path:”&#x2F;search&#x2F;:words”  为什么按下面步骤操作，会未匹配到组件，显示空白？</p>
<img data-src="/2024/11/19/Vue2-0/1682497238305.png" class="" width="68249723830">

<h3 id="2-原因"><a href="#2-原因" class="headerlink" title="2.原因"></a>2.原因</h3><p>&#x2F;search&#x2F;:words  表示，<strong>必须要传参数</strong>。如果不传参数，也希望匹配，可以加个可选符”？”</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> router = <span class="keyword">new</span> <span class="title class_">VueRouter</span>(&#123;</span><br><span class="line">  <span class="attr">routes</span>: [</span><br><span class="line"> 	...</span><br><span class="line">    &#123; <span class="attr">path</span>: <span class="string">&#x27;/search/:words?&#x27;</span>, <span class="attr">component</span>: <span class="title class_">Search</span> &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>



<h2 id="七、Vue路由-重定向"><a href="#七、Vue路由-重定向" class="headerlink" title="七、Vue路由-重定向"></a>七、Vue路由-重定向</h2><h3 id="1-问题-3"><a href="#1-问题-3" class="headerlink" title="1.问题"></a>1.问题</h3><p>网页打开时， url 默认是 &#x2F; 路径，未匹配到组件时，会出现空白</p>
<img data-src="/2024/11/19/Vue2-0/1682497872821.png" class="" width="68249787282">

<h3 id="2-解决方案-2"><a href="#2-解决方案-2" class="headerlink" title="2.解决方案"></a>2.解决方案</h3><p><strong>重定向</strong> → 匹配 &#x2F; 后, 强制跳转 &#x2F;home 路径</p>
<h3 id="3-语法-4"><a href="#3-语法-4" class="headerlink" title="3.语法"></a>3.语法</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&#123; <span class="attr">path</span>: 匹配路径, <span class="attr">redirect</span>: 重定向到的路径 &#125;,</span><br><span class="line">比如：</span><br><span class="line">&#123; <span class="attr">path</span>:<span class="string">&#x27;/&#x27;</span> ,<span class="attr">redirect</span>:<span class="string">&#x27;/home&#x27;</span> &#125;</span><br></pre></td></tr></table></figure>



<h3 id="4-代码演示-4"><a href="#4-代码演示-4" class="headerlink" title="4.代码演示"></a>4.代码演示</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Home</span> <span class="keyword">from</span> <span class="string">&#x27;@/views/Home&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Search</span> <span class="keyword">from</span> <span class="string">&#x27;@/views/Search&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Vue</span> <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">VueRouter</span> <span class="keyword">from</span> <span class="string">&#x27;vue-router&#x27;</span></span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">use</span>(<span class="title class_">VueRouter</span>) <span class="comment">// VueRouter插件初始化</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建了一个路由对象</span></span><br><span class="line"><span class="keyword">const</span> router = <span class="keyword">new</span> <span class="title class_">VueRouter</span>(&#123;</span><br><span class="line">  <span class="attr">routes</span>: [</span><br><span class="line">    &#123; <span class="attr">path</span>: <span class="string">&#x27;/&#x27;</span>, <span class="attr">redirect</span>: <span class="string">&#x27;/home&#x27;</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">path</span>: <span class="string">&#x27;/home&#x27;</span>, <span class="attr">component</span>: <span class="title class_">Home</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">path</span>: <span class="string">&#x27;/search/:words?&#x27;</span>, <span class="attr">component</span>: <span class="title class_">Search</span> &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router</span><br></pre></td></tr></table></figure>



<h2 id="八、Vue路由-404"><a href="#八、Vue路由-404" class="headerlink" title="八、Vue路由-404"></a>八、Vue路由-404</h2><h3 id="1-作用-5"><a href="#1-作用-5" class="headerlink" title="1.作用"></a>1.作用</h3><p>当路径找不到匹配时，给个提示页面</p>
<h3 id="2-位置"><a href="#2-位置" class="headerlink" title="2.位置"></a>2.位置</h3><p>404的路由，虽然配置在任何一个位置都可以，但一般都<strong>配置在其他路由规则的最后面</strong></p>
<h3 id="3-语法-5"><a href="#3-语法-5" class="headerlink" title="3.语法"></a>3.语法</h3><p>path: “*”   (任意路径) – 前面不匹配就命中最后这个</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">NotFind</span> <span class="keyword">from</span> <span class="string">&#x27;@/views/NotFind&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> router = <span class="keyword">new</span> <span class="title class_">VueRouter</span>(&#123;</span><br><span class="line">  <span class="attr">routes</span>: [</span><br><span class="line">    ...</span><br><span class="line">    &#123; <span class="attr">path</span>: <span class="string">&#x27;*&#x27;</span>, <span class="attr">component</span>: <span class="title class_">NotFind</span> &#125; <span class="comment">//最后一个</span></span><br><span class="line">  ]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h3 id="4-代码示例-1"><a href="#4-代码示例-1" class="headerlink" title="4.代码示例"></a>4.代码示例</h3><p>NotFound.vue</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;h1&gt;404 Not Found&lt;/h1&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<p>router&#x2F;index.js</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Home</span> <span class="keyword">from</span> <span class="string">&#x27;@/views/Home&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Search</span> <span class="keyword">from</span> <span class="string">&#x27;@/views/Search&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">NotFound</span> <span class="keyword">from</span> <span class="string">&#x27;@/views/NotFound&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Vue</span> <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">VueRouter</span> <span class="keyword">from</span> <span class="string">&#x27;vue-router&#x27;</span></span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">use</span>(<span class="title class_">VueRouter</span>) <span class="comment">// VueRouter插件初始化</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建了一个路由对象</span></span><br><span class="line"><span class="keyword">const</span> router = <span class="keyword">new</span> <span class="title class_">VueRouter</span>(&#123;</span><br><span class="line">  <span class="attr">routes</span>: [</span><br><span class="line">    &#123; <span class="attr">path</span>: <span class="string">&#x27;/&#x27;</span>, <span class="attr">redirect</span>: <span class="string">&#x27;/home&#x27;</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">path</span>: <span class="string">&#x27;/home&#x27;</span>, <span class="attr">component</span>: <span class="title class_">Home</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">path</span>: <span class="string">&#x27;/search/:words?&#x27;</span>, <span class="attr">component</span>: <span class="title class_">Search</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">path</span>: <span class="string">&#x27;*&#x27;</span>, <span class="attr">component</span>: <span class="title class_">NotFound</span> &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router</span><br></pre></td></tr></table></figure>



<h2 id="九、Vue路由-模式设置"><a href="#九、Vue路由-模式设置" class="headerlink" title="九、Vue路由-模式设置"></a>九、Vue路由-模式设置</h2><h3 id="1-问题-4"><a href="#1-问题-4" class="headerlink" title="1.问题"></a>1.问题</h3><p>路由的路径看起来不自然, 有#，能否切成真正路径形式?</p>
<ul>
<li>hash路由(默认)        例如:  <a href="http://localhost:8080/#/home">http://localhost:8080/#/home</a></li>
<li>history路由(常用)     例如: <a href="http://localhost:8080/home">http://localhost:8080/home</a>   (以后上线需要服务器端支持，开发环境webpack给规避掉了history模式的问题)</li>
</ul>
<h3 id="2-语法-3"><a href="#2-语法-3" class="headerlink" title="2.语法"></a>2.语法</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> router = <span class="keyword">new</span> <span class="title class_">VueRouter</span>(&#123;</span><br><span class="line">    <span class="attr">mode</span>:<span class="string">&#x27;histroy&#x27;</span>, <span class="comment">//默认是hash</span></span><br><span class="line">    <span class="attr">routes</span>:[]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>



<h2 id="十、编程式导航-两种路由跳转方式"><a href="#十、编程式导航-两种路由跳转方式" class="headerlink" title="十、编程式导航-两种路由跳转方式"></a>十、编程式导航-两种路由跳转方式</h2><h3 id="1-问题-5"><a href="#1-问题-5" class="headerlink" title="1.问题"></a>1.问题</h3><p>点击按钮跳转如何实现？</p>
<img data-src="/2024/11/19/Vue2-0/1682500481059.png" class="" width="68250048105">

<h3 id="2-方案"><a href="#2-方案" class="headerlink" title="2.方案"></a>2.方案</h3><p>编程式导航：用JS代码来进行跳转</p>
<h3 id="3-语法-6"><a href="#3-语法-6" class="headerlink" title="3.语法"></a>3.语法</h3><p>两种语法：</p>
<ul>
<li>path 路径跳转 （简易方便）</li>
<li>name 命名路由跳转 (适合 path 路径长的场景)</li>
</ul>
<h3 id="4-path路径跳转语法"><a href="#4-path路径跳转语法" class="headerlink" title="4.path路径跳转语法"></a>4.path路径跳转语法</h3><p>特点：简易方便</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//简单写法</span></span><br><span class="line"><span class="variable language_">this</span>.<span class="property">$router</span>.<span class="title function_">push</span>(<span class="string">&#x27;路由路径&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//完整写法</span></span><br><span class="line"><span class="variable language_">this</span>.<span class="property">$router</span>.<span class="title function_">push</span>(&#123;</span><br><span class="line">  <span class="attr">path</span>: <span class="string">&#x27;路由路径&#x27;</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h3 id="5-代码演示-path跳转方式"><a href="#5-代码演示-path跳转方式" class="headerlink" title="5.代码演示 path跳转方式"></a>5.代码演示 path跳转方式</h3><h3 id="6-name命名路由跳转"><a href="#6-name命名路由跳转" class="headerlink" title="6.name命名路由跳转"></a>6.name命名路由跳转</h3><p>特点：适合 path 路径长的场景</p>
<p>语法：</p>
<ul>
<li><p>路由规则，必须配置name配置项</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&#123; <span class="attr">name</span>: <span class="string">&#x27;路由名&#x27;</span>, <span class="attr">path</span>: <span class="string">&#x27;/path/xxx&#x27;</span>, <span class="attr">component</span>: <span class="variable constant_">XXX</span> &#125;,</span><br></pre></td></tr></table></figure>
</li>
<li><p>通过name来进行跳转</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">this</span>.<span class="property">$router</span>.<span class="title function_">push</span>(&#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;路由名&#x27;</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="7-代码演示通过name命名路由跳转"><a href="#7-代码演示通过name命名路由跳转" class="headerlink" title="7.代码演示通过name命名路由跳转"></a>7.代码演示通过name命名路由跳转</h3><h3 id="8-总结-2"><a href="#8-总结-2" class="headerlink" title="8.总结"></a>8.总结</h3><p>编程式导航有几种跳转方式？</p>
<h2 id="十一、编程式导航-path路径跳转传参"><a href="#十一、编程式导航-path路径跳转传参" class="headerlink" title="十一、编程式导航-path路径跳转传参"></a>十一、编程式导航-path路径跳转传参</h2><h3 id="1-问题-6"><a href="#1-问题-6" class="headerlink" title="1.问题"></a>1.问题</h3><p>点击搜索按钮，跳转需要把文本框中输入的内容传到下一个页面如何实现？</p>
<img data-src="/2024/11/19/Vue2-0/1682502720585.png" class="" width="68250272058">

<h3 id="2-两种传参方式"><a href="#2-两种传参方式" class="headerlink" title="2.两种传参方式"></a>2.两种传参方式</h3><p>1.查询参数 </p>
<p>2.动态路由传参</p>
<h3 id="3-传参"><a href="#3-传参" class="headerlink" title="3.传参"></a>3.传参</h3><p>两种跳转方式，对于两种传参方式都支持：</p>
<p>① path 路径跳转传参</p>
<p>② name 命名路由跳转传参</p>
<h3 id="4-path路径跳转传参（query传参）"><a href="#4-path路径跳转传参（query传参）" class="headerlink" title="4.path路径跳转传参（query传参）"></a>4.path路径跳转传参（query传参）</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//简单写法</span></span><br><span class="line"><span class="variable language_">this</span>.<span class="property">$router</span>.<span class="title function_">push</span>(<span class="string">&#x27;/路径?参数名1=参数值1&amp;参数2=参数值2&#x27;</span>)</span><br><span class="line"><span class="comment">//完整写法</span></span><br><span class="line"><span class="variable language_">this</span>.<span class="property">$router</span>.<span class="title function_">push</span>(&#123;</span><br><span class="line">  <span class="attr">path</span>: <span class="string">&#x27;/路径&#x27;</span>,</span><br><span class="line">  <span class="attr">query</span>: &#123;</span><br><span class="line">    参数名<span class="number">1</span>: <span class="string">&#x27;参数值1&#x27;</span>,</span><br><span class="line">    参数名<span class="number">2</span>: <span class="string">&#x27;参数值2&#x27;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<p>接受参数的方式依然是：$route.query.参数名</p>
<h3 id="5-path路径跳转传参（动态路由传参）"><a href="#5-path路径跳转传参（动态路由传参）" class="headerlink" title="5.path路径跳转传参（动态路由传参）"></a>5.path路径跳转传参（动态路由传参）</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//简单写法</span><br><span class="line">this.$router.push(&#x27;/路径/参数值&#x27;)</span><br><span class="line">//完整写法</span><br><span class="line">this.$router.push(&#123;</span><br><span class="line">  path: &#x27;/路径/参数值&#x27;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<p>接受参数的方式依然是：$route.params.参数值</p>
<p><strong>注意：</strong>path不能配合params使用</p>
<h2 id="十二、编程式导航-name命名路由传参"><a href="#十二、编程式导航-name命名路由传参" class="headerlink" title="十二、编程式导航-name命名路由传参"></a>十二、编程式导航-name命名路由传参</h2><h3 id="1-name-命名路由跳转传参-query传参"><a href="#1-name-命名路由跳转传参-query传参" class="headerlink" title="1.name 命名路由跳转传参 (query传参)"></a>1.name 命名路由跳转传参 (query传参)</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">this</span>.<span class="property">$router</span>.<span class="title function_">push</span>(&#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;路由名字&#x27;</span>,</span><br><span class="line">  <span class="attr">query</span>: &#123;</span><br><span class="line">    参数名<span class="number">1</span>: <span class="string">&#x27;参数值1&#x27;</span>,</span><br><span class="line">    参数名<span class="number">2</span>: <span class="string">&#x27;参数值2&#x27;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h3 id="2-name-命名路由跳转传参-动态路由传参"><a href="#2-name-命名路由跳转传参-动态路由传参" class="headerlink" title="2.name 命名路由跳转传参 (动态路由传参)"></a>2.name 命名路由跳转传参 (动态路由传参)</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">this</span>.<span class="property">$router</span>.<span class="title function_">push</span>(&#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;路由名字&#x27;</span>,</span><br><span class="line">  <span class="attr">params</span>: &#123;</span><br><span class="line">    参数名: <span class="string">&#x27;参数值&#x27;</span>,</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h3 id="3-总结-6"><a href="#3-总结-6" class="headerlink" title="3.总结"></a>3.总结</h3><p>编程式导航，如何跳转传参？</p>
<p>1.path路径跳转</p>
<ul>
<li><p>query传参</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">this</span>.<span class="property">$router</span>.<span class="title function_">push</span>(<span class="string">&#x27;/路径?参数名1=参数值1&amp;参数2=参数值2&#x27;</span>)</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">$router</span>.<span class="title function_">push</span>(&#123;</span><br><span class="line">  <span class="attr">path</span>: <span class="string">&#x27;/路径&#x27;</span>,</span><br><span class="line">  <span class="attr">query</span>: &#123;</span><br><span class="line">    参数名<span class="number">1</span>: <span class="string">&#x27;参数值1&#x27;</span>,</span><br><span class="line">    参数名<span class="number">2</span>: <span class="string">&#x27;参数值2&#x27;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
</li>
<li><p>动态路由传参</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">this</span>.<span class="property">$router</span>.<span class="title function_">push</span>(<span class="string">&#x27;/路径/参数值&#x27;</span>)</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">$router</span>.<span class="title function_">push</span>(&#123;</span><br><span class="line">  <span class="attr">path</span>: <span class="string">&#x27;/路径/参数值&#x27;</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li>
</ul>
<p>2.name命名路由跳转</p>
<ul>
<li><p>query传参</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">this</span>.<span class="property">$router</span>.<span class="title function_">push</span>(&#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;路由名字&#x27;</span>,</span><br><span class="line">  <span class="attr">query</span>: &#123;</span><br><span class="line">    参数名<span class="number">1</span>: <span class="string">&#x27;参数值1&#x27;</span>,</span><br><span class="line">    参数名<span class="number">2</span>: <span class="string">&#x27;参数值2&#x27;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
</li>
<li><p>动态路由传参 (需要配动态路由)</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">this</span>.<span class="property">$router</span>.<span class="title function_">push</span>(&#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;路由名字&#x27;</span>,</span><br><span class="line">  <span class="attr">params</span>: &#123;</span><br><span class="line">    参数名: <span class="string">&#x27;参数值&#x27;</span>,</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="十三、面经基础版-案例效果分析"><a href="#十三、面经基础版-案例效果分析" class="headerlink" title="十三、面经基础版-案例效果分析"></a>十三、面经基础版-案例效果分析</h2><h3 id="1-面经效果演示"><a href="#1-面经效果演示" class="headerlink" title="1.面经效果演示"></a>1.面经效果演示</h3><h3 id="2-功能分析"><a href="#2-功能分析" class="headerlink" title="2.功能分析"></a>2.功能分析</h3><ul>
<li>通过演示效果发现，主要的功能页面有两个，一个是<strong>列表页</strong>，一个是<strong>详情页</strong>，并且在列表页点击时可以跳转到详情页</li>
<li>底部导航可以来回切换，并且切换时，只有上面的主题内容在动态渲染</li>
</ul>
<img data-src="/2024/11/19/Vue2-0/1682559784643.png" class="" width="68255978464">

<h3 id="3-实现思路分析：配置路由-功能实现"><a href="#3-实现思路分析：配置路由-功能实现" class="headerlink" title="3.实现思路分析：配置路由+功能实现"></a>3.实现思路分析：配置路由+功能实现</h3><p>1.配置路由</p>
<ul>
<li>首页和面经详情页，两个一级路由</li>
<li>首页内嵌套4个可切换的页面（嵌套二级路由）</li>
</ul>
<p>2.实现功能</p>
<ul>
<li>首页请求渲染</li>
<li><strong>跳转传参</strong> 到 详情页，详情页动态渲染</li>
<li>组件缓存，性能优化</li>
</ul>
<img data-src="/2024/11/19/Vue2-0/1682560255356.png" class="" width="68256025535">

<h2 id="十四、面经基础版-一级路由配置"><a href="#十四、面经基础版-一级路由配置" class="headerlink" title="十四、面经基础版-一级路由配置"></a>十四、面经基础版-一级路由配置</h2><p>1.把文档中准备的素材拷贝到项目中</p>
<p>2.针对router&#x2F;index.js文件 进行一级路由配置</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Layout</span> <span class="keyword">from</span> <span class="string">&#x27;@/views/Layout.vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">ArticleDetail</span> <span class="keyword">from</span> <span class="string">&#x27;@/views/ArticleDetail.vue&#x27;</span></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> router = <span class="keyword">new</span> <span class="title class_">VueRouter</span>(&#123;</span><br><span class="line">  <span class="attr">routes</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&#x27;/&#x27;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="title class_">Layout</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&#x27;/detail&#x27;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="title class_">ArticleDetail</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>



<h2 id="十五、面经基础版-二级路由配置"><a href="#十五、面经基础版-二级路由配置" class="headerlink" title="十五、面经基础版-二级路由配置"></a>十五、面经基础版-二级路由配置</h2><p>二级路由也叫嵌套路由，当然也可以嵌套三级、四级…</p>
<h3 id="1-使用场景"><a href="#1-使用场景" class="headerlink" title="1.使用场景"></a>1.使用场景</h3><p>当在页面中点击链接跳转，只是部分内容切换时，我们可以使用嵌套路由</p>
<h3 id="2-语法-4"><a href="#2-语法-4" class="headerlink" title="2.语法"></a>2.语法</h3><ul>
<li>在一级路由下，配置children属性即可</li>
<li>配置二级路由的出口</li>
</ul>
<p> 1.在一级路由下，配置children属性</p>
<p> <strong>注意</strong>:一级的路由path 需要加 <code>/</code>   二级路由的path不需要加 <code>/</code></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> router = <span class="keyword">new</span> <span class="title class_">VueRouter</span>(&#123;</span><br><span class="line">  <span class="attr">routes</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&#x27;/&#x27;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="title class_">Layout</span>,</span><br><span class="line">      <span class="attr">children</span>:[</span><br><span class="line">        <span class="comment">//children中的配置项 跟一级路由中的配置项一模一样 </span></span><br><span class="line">        &#123;<span class="attr">path</span>:<span class="string">&#x27;xxxx&#x27;</span>,<span class="attr">component</span>:xxxx.<span class="property">vue</span>&#125;,</span><br><span class="line">        &#123;<span class="attr">path</span>:<span class="string">&#x27;xxxx&#x27;</span>,<span class="attr">component</span>:xxxx.<span class="property">vue</span>&#125;,</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<p>技巧：二级路由应该配置到哪个一级路由下呢？</p>
<p><strong>这些二级路由对应的组件渲染到哪个一级路由下，children就配置到哪个路由下边</strong></p>
<p>2.配置二级路由的出口 <router-view></router-view></p>
<p><strong>注意：</strong> 配置了嵌套路由，一定配置对应的路由出口，否则不会渲染出对应的组件</p>
<p>Layout.vue</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;h5-wrapper&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;content&quot;&gt;</span><br><span class="line">      &lt;router-view&gt;&lt;/router-view&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  ....</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure>

<h3 id="3-代码实现-1"><a href="#3-代码实现-1" class="headerlink" title="3.代码实现"></a>3.代码实现</h3><p>router&#x2F;index.js</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Article</span> <span class="keyword">from</span> <span class="string">&#x27;@/views/Article.vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Collect</span> <span class="keyword">from</span> <span class="string">&#x27;@/views/Collect.vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Like</span> <span class="keyword">from</span> <span class="string">&#x27;@/views/Like.vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">User</span> <span class="keyword">from</span> <span class="string">&#x27;@/views/User.vue&#x27;</span></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> router = <span class="keyword">new</span> <span class="title class_">VueRouter</span>(&#123;</span><br><span class="line">  <span class="attr">routes</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&#x27;/&#x27;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="title class_">Layout</span>,</span><br><span class="line">      <span class="attr">redirect</span>: <span class="string">&#x27;/article&#x27;</span>,</span><br><span class="line">      <span class="attr">children</span>:[</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">path</span>:<span class="string">&#x27;/article&#x27;</span>,</span><br><span class="line">          <span class="attr">component</span>:<span class="title class_">Article</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">path</span>:<span class="string">&#x27;/collect&#x27;</span>,</span><br><span class="line">          <span class="attr">component</span>:<span class="title class_">Collect</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">path</span>:<span class="string">&#x27;/like&#x27;</span>,</span><br><span class="line">          <span class="attr">component</span>:<span class="title class_">Like</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">path</span>:<span class="string">&#x27;/user&#x27;</span>,</span><br><span class="line">          <span class="attr">component</span>:<span class="title class_">User</span></span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;,</span><br><span class="line">    ....</span><br><span class="line">  ]</span><br><span class="line">&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>Layout.vue</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;h5-wrapper&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;content&quot;&gt;</span><br><span class="line">      &lt;!-- 内容部分 --&gt;</span><br><span class="line">      &lt;router-view&gt;&lt;/router-view&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;nav class=&quot;tabbar&quot;&gt;</span><br><span class="line">      &lt;a href=&quot;#/article&quot;&gt;面经&lt;/a&gt;</span><br><span class="line">      &lt;a href=&quot;#/collect&quot;&gt;收藏&lt;/a&gt;</span><br><span class="line">      &lt;a href=&quot;#/like&quot;&gt;喜欢&lt;/a&gt;</span><br><span class="line">      &lt;a href=&quot;#/user&quot;&gt;我的&lt;/a&gt;</span><br><span class="line">    &lt;/nav&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure>



<h2 id="十六、面经基础版-二级导航高亮"><a href="#十六、面经基础版-二级导航高亮" class="headerlink" title="十六、面经基础版-二级导航高亮"></a>十六、面经基础版-二级导航高亮</h2><h3 id="1-实现思路"><a href="#1-实现思路" class="headerlink" title="1.实现思路"></a>1.实现思路</h3><ul>
<li>将a标签替换成 <router-link></router-link>组件，配置to属性，不用加 #</li>
<li>结合高亮类名实现高亮效果 (推荐模糊匹配：router-link-active)</li>
</ul>
<h3 id="2-代码实现-1"><a href="#2-代码实现-1" class="headerlink" title="2.代码实现"></a>2.代码实现</h3><p>Layout.vue</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">....</span><br><span class="line">    &lt;nav class=&quot;tabbar&quot;&gt;</span><br><span class="line">      &lt;router-link to=&quot;/article&quot;&gt;面经&lt;/router-link&gt;</span><br><span class="line">      &lt;router-link to=&quot;/collect&quot;&gt;收藏&lt;/router-link&gt;</span><br><span class="line">      &lt;router-link to=&quot;/like&quot;&gt;喜欢&lt;/router-link&gt;</span><br><span class="line">      &lt;router-link to=&quot;/user&quot;&gt;我的&lt;/router-link&gt;</span><br><span class="line">    &lt;/nav&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">   a.router-link-active &#123;</span><br><span class="line">      color: orange;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>



<h2 id="十七、面经基础版-首页请求渲染"><a href="#十七、面经基础版-首页请求渲染" class="headerlink" title="十七、面经基础版-首页请求渲染"></a>十七、面经基础版-首页请求渲染</h2><h3 id="1-步骤分析"><a href="#1-步骤分析" class="headerlink" title="1.步骤分析"></a>1.步骤分析</h3><p>1.安装axios </p>
<p>2.看接口文档，确认请求方式，请求地址，请求参数</p>
<p>3.created中发送请求，获取数据，存储到data中</p>
<p>4.页面动态渲染</p>
<h3 id="2-代码实现-2"><a href="#2-代码实现-2" class="headerlink" title="2.代码实现"></a>2.代码实现</h3><p>1.安装axios</p>
<p><code>yarn add axios </code>  <code>npm i axios</code></p>
<p>2.接口文档</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">请求地址: https://mock.boxuegu.com/mock/3083/articles</span><br><span class="line">请求方式: get</span><br></pre></td></tr></table></figure>

<p>3.created中发送请求，获取数据，存储到data中</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">data() &#123;</span><br><span class="line">   return &#123;</span><br><span class="line">     articelList: [],</span><br><span class="line">   &#125;</span><br><span class="line"> &#125;,</span><br><span class="line"> async created() &#123;</span><br><span class="line">   const &#123;  data: &#123; result: &#123; rows &#125; &#125;&#125; = await axios.get(&#x27;https://mock.boxuegu.com/mock/3083/articles&#x27;)</span><br><span class="line">   this.articelList = rows</span><br><span class="line"> &#125;,</span><br></pre></td></tr></table></figure>

<p>4.页面动态渲染</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;article-page&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;article-item&quot; v-for=&quot;item in articelList&quot; :key=&quot;item.id&quot;&gt;</span><br><span class="line">      &lt;div class=&quot;head&quot;&gt;</span><br><span class="line">        &lt;img :src=&quot;item.creatorAvatar&quot; alt=&quot;&quot; /&gt;</span><br><span class="line">        &lt;div class=&quot;con&quot;&gt;</span><br><span class="line">          &lt;p class=&quot;title&quot;&gt;&#123;&#123; item.stem &#125;&#125;&lt;/p&gt;</span><br><span class="line">          &lt;p class=&quot;other&quot;&gt;&#123;&#123; item.creatorName &#125;&#125; | &#123;&#123; item.createdAt &#125;&#125;&lt;/p&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;div class=&quot;body&quot;&gt;</span><br><span class="line">        &#123;&#123;item.content&#125;&#125;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;div class=&quot;foot&quot;&gt;点赞 &#123;&#123;item.likeCount&#125;&#125; | 浏览 &#123;&#123;item.views&#125;&#125;&lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure>



<h2 id="十八、面经基础版-查询参数传参"><a href="#十八、面经基础版-查询参数传参" class="headerlink" title="十八、面经基础版-查询参数传参"></a>十八、面经基础版-查询参数传参</h2><h3 id="1-说明"><a href="#1-说明" class="headerlink" title="1.说明"></a>1.说明</h3><p>跳转详情页需要把当前点击的文章id传给详情页，获取数据</p>
<ul>
<li>查询参数传参  this.$router.push(‘&#x2F;detail?参数1&#x3D;参数值&amp;参数2&#x3D;参数值’) </li>
<li>动态路由传参  先改造路由 在传参  this.$router.push(‘&#x2F;detail&#x2F;参数值’)</li>
</ul>
<h3 id="2-查询参数传参实现"><a href="#2-查询参数传参实现" class="headerlink" title="2.查询参数传参实现"></a>2.查询参数传参实现</h3><p>Article.vue</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;article-page&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;article-item&quot; </span><br><span class="line">      v-for=&quot;item in articelList&quot; :key=&quot;item.id&quot; </span><br><span class="line">      @click=&quot;$router.push(`/detail?id=$&#123;item.id&#125;`)&quot;&gt;</span><br><span class="line">     ...</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure>

<p>ArticleDetail.vue</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">created()&#123;</span><br><span class="line">  console.log(this.$route.query.id)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="十九、面经基础版-动态路由传参"><a href="#十九、面经基础版-动态路由传参" class="headerlink" title="十九、面经基础版-动态路由传参"></a>十九、面经基础版-动态路由传参</h2><h3 id="1-实现步骤"><a href="#1-实现步骤" class="headerlink" title="1.实现步骤"></a>1.实现步骤</h3><ul>
<li>改造路由</li>
<li>动态传参</li>
<li>在详情页获取参数</li>
</ul>
<h3 id="2-代码实现-3"><a href="#2-代码实现-3" class="headerlink" title="2.代码实现"></a>2.代码实现</h3><p>改造路由</p>
<p>router&#x2F;index.js</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">...</span><br><span class="line">  &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&#x27;/detail/:id&#x27;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="title class_">ArticleDetail</span></span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>

<p>Article.vue</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;div class=&quot;article-item&quot; </span><br><span class="line">     v-for=&quot;item in articelList&quot; :key=&quot;item.id&quot; </span><br><span class="line">     @click=&quot;$router.push(`/detail/$&#123;item.id&#125;`)&quot;&gt;</span><br><span class="line">       ....</span><br><span class="line"> &lt;/div&gt;</span><br></pre></td></tr></table></figure>

<p>ArticleDetail.vue</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">created()&#123;</span><br><span class="line">  console.log(this.$route.params.id)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="3-额外优化功能点-点击回退跳转到上一页"><a href="#3-额外优化功能点-点击回退跳转到上一页" class="headerlink" title="3.额外优化功能点-点击回退跳转到上一页"></a>3.额外优化功能点-点击回退跳转到上一页</h3><p>ArticleDetail.vue</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;article-detail-page&quot;&gt;</span><br><span class="line">    &lt;nav class=&quot;nav&quot;&gt;&lt;span class=&quot;back&quot; @click=&quot;$router.back()&quot;&gt;&amp;lt;&lt;/span&gt; 面经详情&lt;/nav&gt;</span><br><span class="line">     ....</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure>



<h2 id="二十、面经基础版-详情页渲染"><a href="#二十、面经基础版-详情页渲染" class="headerlink" title="二十、面经基础版-详情页渲染"></a>二十、面经基础版-详情页渲染</h2><h3 id="1-实现步骤分析"><a href="#1-实现步骤分析" class="headerlink" title="1.实现步骤分析"></a>1.实现步骤分析</h3><ul>
<li>导入axios</li>
<li>查看接口文档</li>
<li>在created中发送请求</li>
<li>页面动态渲染</li>
</ul>
<h3 id="2-代码实现-4"><a href="#2-代码实现-4" class="headerlink" title="2.代码实现"></a>2.代码实现</h3><p>接口文档</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">请求地址: https://mock.boxuegu.com/mock/3083/articles/:id</span><br><span class="line">请求方式: get</span><br></pre></td></tr></table></figure>



<p>在created中发送请求</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">data() &#123;</span><br><span class="line">   return &#123;</span><br><span class="line">     articleDetail:&#123;&#125;</span><br><span class="line">   &#125;</span><br><span class="line"> &#125;,</span><br><span class="line"> async created() &#123;</span><br><span class="line">   const id = this.$route.params.id</span><br><span class="line">   const &#123;data:&#123;result&#125;&#125; = await axios.get(</span><br><span class="line">     `https://mock.boxuegu.com/mock/3083/articles/$&#123;id&#125;`</span><br><span class="line">   )</span><br><span class="line">   this.articleDetail = result</span><br><span class="line"> &#125;,</span><br></pre></td></tr></table></figure>



<p>页面动态渲染</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;article-detail-page&quot;&gt;</span><br><span class="line">    &lt;nav class=&quot;nav&quot;&gt;</span><br><span class="line">      &lt;span class=&quot;back&quot; @click=&quot;$router.back()&quot;&gt;&amp;lt;&lt;/span&gt; 面经详情</span><br><span class="line">    &lt;/nav&gt;</span><br><span class="line">    &lt;header class=&quot;header&quot;&gt;</span><br><span class="line">      &lt;h1&gt;&#123;&#123;articleDetail.stem&#125;&#125;&lt;/h1&gt;</span><br><span class="line">      &lt;p&gt;&#123;&#123;articleDetail.createAt&#125;&#125; | &#123;&#123;articleDetail.views&#125;&#125; 浏览量 | &#123;&#123;articleDetail.likeCount&#125;&#125; 点赞数&lt;/p&gt;</span><br><span class="line">      &lt;p&gt;</span><br><span class="line">        &lt;img</span><br><span class="line">          :src=&quot;articleDetail.creatorAvatar&quot;</span><br><span class="line">          alt=&quot;&quot;</span><br><span class="line">        /&gt;</span><br><span class="line">        &lt;span&gt;&#123;&#123;articleDetail.creatorName&#125;&#125;&lt;/span&gt;</span><br><span class="line">      &lt;/p&gt;</span><br><span class="line">    &lt;/header&gt;</span><br><span class="line">    &lt;main class=&quot;body&quot;&gt;</span><br><span class="line">      &#123;&#123;articleDetail.content&#125;&#125;</span><br><span class="line">    &lt;/main&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h2 id="二十一、面经基础版-缓存组件"><a href="#二十一、面经基础版-缓存组件" class="headerlink" title="二十一、面经基础版-缓存组件"></a>二十一、面经基础版-缓存组件</h2><h3 id="1-问题-7"><a href="#1-问题-7" class="headerlink" title="1.问题"></a>1.问题</h3><p>从面经列表 点到 详情页，又点返回，数据重新加载了 →  <strong>希望回到原来的位置</strong></p>
<img data-src="/2024/11/19/Vue2-0/1682578630060.png" class="" width="68257863006">

<h3 id="2-原因-1"><a href="#2-原因-1" class="headerlink" title="2.原因"></a>2.原因</h3><p>当路由被<strong>跳转</strong>后，原来所看到的组件就<strong>被销毁</strong>了（会执行组件内的beforeDestroy和destroyed生命周期钩子），<strong>重新返回</strong>后组件又被<strong>重新创建</strong>了（会执行组件内的beforeCreate,created,beforeMount,Mounted生命周期钩子），<strong>所以数据被加载了</strong></p>
<h3 id="3-解决方案"><a href="#3-解决方案" class="headerlink" title="3.解决方案"></a>3.解决方案</h3><p>利用keep-alive把原来的组件给缓存下来</p>
<h3 id="4-什么是keep-alive"><a href="#4-什么是keep-alive" class="headerlink" title="4.什么是keep-alive"></a>4.什么是keep-alive</h3><p>keep-alive 是 Vue 的内置组件，当它包裹动态组件时，<strong>会缓存不活动的组件实例，而不是销毁</strong>它们。</p>
<p>keep-alive 是一个抽象组件：它自身不会渲染成一个 DOM 元素，也不会出现在父组件中。</p>
<p><strong>优点：</strong></p>
<p>在组件切换过程中把切换出去的组件保留在内存中，防止重复渲染DOM，</p>
<p>减少加载时间及性能消耗，提高用户体验性。</p>
<p>App.vue</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;h5-wrapper&quot;&gt;</span><br><span class="line">    &lt;keep-alive&gt;</span><br><span class="line">      &lt;router-view&gt;&lt;/router-view&gt;</span><br><span class="line">    &lt;/keep-alive&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure>



<p><strong>问题：</strong></p>
<p>缓存了所有被切换的组件</p>
<h3 id="5-keep-alive的三个属性"><a href="#5-keep-alive的三个属性" class="headerlink" title="5.keep-alive的三个属性"></a>5.keep-alive的三个属性</h3><p>① include  ： 组件名数组，只有匹配的组件<strong>会被缓存</strong></p>
<p>② exclude ： 组件名数组，任何匹配的组件都<strong>不会被缓存</strong></p>
<p>③ max       ： 最多可以<strong>缓存多少</strong>组件实例</p>
<p>App.vue</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;h5-wrapper&quot;&gt;</span><br><span class="line">    &lt;keep-alive :include=&quot;[&#x27;LayoutPage&#x27;]&quot;&gt;</span><br><span class="line">      &lt;router-view&gt;&lt;/router-view&gt;</span><br><span class="line">    &lt;/keep-alive&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure>



<h3 id="6-额外的两个生命周期钩子"><a href="#6-额外的两个生命周期钩子" class="headerlink" title="6.额外的两个生命周期钩子"></a>6.额外的两个生命周期钩子</h3><p><strong>keep-alive的使用会触发两个生命周期函数</strong></p>
<p><strong>activated</strong> 当组件被激活（使用）的时候触发 →  进入这个页面的时候触发</p>
<p><strong>deactivated</strong> 当组件不被使用的时候触发      →  离开这个页面的时候触发</p>
<p>组件<strong>缓存后</strong>就<strong>不会执行</strong>组件的<strong>created, mounted, destroyed</strong> 等钩子了</p>
<p>所以其提供了<strong>actived 和deactived</strong>钩子，帮我们实现业务需求。</p>
<h3 id="7-总结-2"><a href="#7-总结-2" class="headerlink" title="7.总结"></a>7.总结</h3><p>1.keep-alive是什么</p>
<p>2.keep-alive的优点</p>
<p>3.keep-alive的三个属性 (了解)</p>
<p>4.keep-alive的使用会触发两个生命周期函数(了解)</p>
<h2 id="二十二、VueCli-自定义创建项目"><a href="#二十二、VueCli-自定义创建项目" class="headerlink" title="二十二、VueCli 自定义创建项目"></a>二十二、VueCli 自定义创建项目</h2><p>1.安装脚手架 (已安装)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm i @vue/cli -g</span><br></pre></td></tr></table></figure>

<p>2.创建项目</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vue create hm-exp-mobile</span><br></pre></td></tr></table></figure>

<ul>
<li>选项</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="title class_">Vue</span> <span class="variable constant_">CLI</span> v5<span class="number">.0</span><span class="number">.8</span></span><br><span class="line">? <span class="title class_">Please</span> pick a <span class="attr">preset</span>:</span><br><span class="line">  <span class="title class_">Default</span> ([<span class="title class_">Vue</span> <span class="number">3</span>] babel, eslint)</span><br><span class="line">  <span class="title class_">Default</span> ([<span class="title class_">Vue</span> <span class="number">2</span>] babel, eslint)</span><br><span class="line">&gt; <span class="title class_">Manually</span> select features     选自定义</span><br></pre></td></tr></table></figure>

<ul>
<li>手动选择功能</li>
</ul>
<img data-src="/2024/11/19/Vue2-0/1682941856172.png" class="" width="68294185617">

<ul>
<li>选择vue的版本</li>
</ul>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">  <span class="number">3.</span>x</span><br><span class="line">&gt; <span class="number">2.</span>x</span><br></pre></td></tr></table></figure>

<ul>
<li>是否使用history模式</li>
</ul>
<img data-src="/2024/11/19/Vue2-0/1682941888453.png" class="" title="image-20201025150602129">

<ul>
<li>选择css预处理</li>
</ul>
<img data-src="/2024/11/19/Vue2-0/1682941900018.png" class="" title="image-20220629175133593">

<ul>
<li>选择eslint的风格 （eslint 代码规范的检验工具，检验代码是否符合规范）</li>
<li>比如：const age &#x3D; 18;   &#x3D;&gt;  报错！多加了分号！后面有工具，一保存，全部格式化成最规范的样子</li>
</ul>
<img data-src="/2024/11/19/Vue2-0/1682941918562.png" class="" width="68294191856">

<ul>
<li>选择校验的时机 （直接回车）</li>
</ul>
<img data-src="/2024/11/19/Vue2-0/1682941935794.png" class="" width="68294193579">

<ul>
<li>选择配置文件的生成方式 （直接回车）</li>
</ul>
<img data-src="/2024/11/19/Vue2-0/1682941947985.png" class="" width="68294194798">

<ul>
<li>是否保存预设，下次直接使用？  &#x3D;&gt;   不保存，输入 N</li>
</ul>
<img data-src="/2024/11/19/Vue2-0/1682941961551.png" class="" width="68294196155">

<ul>
<li>等待安装，项目初始化完成</li>
</ul>
<img data-src="/2024/11/19/Vue2-0/1682941974763.png" class="" width="68294197476">

<ul>
<li>启动项目</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm run serve</span><br></pre></td></tr></table></figure>



<h2 id="二十三、ESlint代码规范及手动修复"><a href="#二十三、ESlint代码规范及手动修复" class="headerlink" title="二十三、ESlint代码规范及手动修复"></a>二十三、ESlint代码规范及手动修复</h2><p>代码规范：一套写代码的约定规则。例如：赋值符号的左右是否需要空格？一句结束是否是要加;？… </p>
<blockquote>
<p> 没有规矩不成方圆  </p>
</blockquote>
<p>ESLint:是一个代码检查工具，用来检查你的代码是否符合指定的规则(你和你的团队可以自行约定一套规则)。在创建项目时，我们使用的是 <a href="https://standardjs.com/readme-zhcn.html">JavaScript Standard Style</a> 代码风格的规则。</p>
<h4 id="1-JavaScript-Standard-Style-规范说明"><a href="#1-JavaScript-Standard-Style-规范说明" class="headerlink" title="1.JavaScript Standard Style 规范说明"></a>1.JavaScript Standard Style 规范说明</h4><p>建议把：<a href="https://standardjs.com/rules-zhcn.html">https://standardjs.com/rules-zhcn.html</a> 看一遍，然后在写的时候,  遇到错误就查询解决。</p>
<p>下面是这份规则中的一小部分：</p>
<ul>
<li><em>字符串使用单引号</em> – 需要转义的地方除外</li>
<li><em>无分号</em> – <a href="http://blog.izs.me/post/2353458699/an-open-letter-to-javascript-leaders-regarding">这</a><a href="http://inimino.org/~inimino/blog/javascript_semicolons">没什么不好。</a><a href="https://www.youtube.com/watch?v=gsfbh17Ax9I">不骗你！</a></li>
<li><em>关键字后加空格</em> <code>if (condition) &#123; ... &#125;</code></li>
<li><em>函数名后加空格</em> <code>function name (arg) &#123; ... &#125;</code></li>
<li>坚持使用全等 <code>===</code> 摒弃 <code>==</code> 一但在需要检查 <code>null || undefined</code> 时可以使用 <code>obj == null</code></li>
<li>……</li>
</ul>
<h4 id="2-代码规范错误"><a href="#2-代码规范错误" class="headerlink" title="2.代码规范错误"></a>2.代码规范错误</h4><p>如果你的代码不符合standard的要求，eslint会跳出来刀子嘴，豆腐心地提示你。</p>
<p>下面我们在main.js中随意做一些改动：添加一些空行，空格。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Vue</span> <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">App</span> <span class="keyword">from</span> <span class="string">&#x27;./App.vue&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;./styles/index.less&#x27;</span></span><br><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">&#x27;./router&#x27;</span></span><br><span class="line"><span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> <span class="title class_">Vue</span> ( &#123;</span><br><span class="line">  <span class="attr">render</span>: <span class="function"><span class="params">h</span> =&gt;</span> <span class="title function_">h</span>(<span class="title class_">App</span>),</span><br><span class="line">  router</span><br><span class="line">&#125;).$mount(<span class="string">&#x27;#app&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>按下保存代码之后：</p>
<p>你将会看在控制台中输出如下错误：</p>
<img data-src="/2024/11/19/Vue2-0/1682942554314.png" class="" width="68294255431">

<blockquote>
<p>eslint 是来帮助你的。心态要好，有错，就改。</p>
</blockquote>
<h4 id="3-手动修正"><a href="#3-手动修正" class="headerlink" title="3.手动修正"></a>3.手动修正</h4><p>根据错误提示来一项一项手动修正。</p>
<p>如果你不认识命令行中的语法报错是什么意思，你可以根据错误代码（func-call-spacing, space-in-parens,…..）去 ESLint 规则列表中查找其具体含义。</p>
<p>打开 <a href="https://zh-hans.eslint.org/docs/latest/rules/">ESLint 规则表</a>，使用页面搜索（Ctrl + F）这个代码，查找对该规则的一个释义。</p>
<img data-src="/2024/11/19/Vue2-0/1682942792219.png" class="" width="68294279221">



<h2 id="二十四、通过eslint插件来实现自动修正"><a href="#二十四、通过eslint插件来实现自动修正" class="headerlink" title="二十四、通过eslint插件来实现自动修正"></a>二十四、通过eslint插件来实现自动修正</h2><blockquote>
<ol>
<li>eslint会自动高亮错误显示</li>
<li>通过配置，eslint会自动帮助我们修复错误</li>
</ol>
</blockquote>
<ul>
<li>如何安装</li>
</ul>
<img data-src="/2024/11/19/Vue2-0/1682942920986.png" class="" width="68294292098">

<ul>
<li>如何配置</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 当保存的时候，eslint自动帮我们修复错误</span></span><br><span class="line"><span class="string">&quot;editor.codeActionsOnSave&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;source.fixAll&quot;</span>: <span class="literal">true</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="comment">// 保存代码，不自动格式化</span></span><br><span class="line"><span class="string">&quot;editor.formatOnSave&quot;</span>: <span class="literal">false</span></span><br></pre></td></tr></table></figure>

<ul>
<li>注意：eslint的配置文件必须在根目录下，这个插件才能才能生效。打开项目必须以根目录打开，一次打开一个项目</li>
<li>注意：使用了eslint校验之后，把vscode带的那些格式化工具全禁用了 Beatify</li>
</ul>
<p>settings.json 参考</p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;window.zoomLevel&quot;</span>: <span class="number">2</span>,</span><br><span class="line">    <span class="string">&quot;workbench.iconTheme&quot;</span>: <span class="string">&quot;vscode-icons&quot;</span>,</span><br><span class="line">    <span class="string">&quot;editor.tabSize&quot;</span>: <span class="number">2</span>,</span><br><span class="line">    <span class="string">&quot;emmet.triggerExpansionOnTab&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="comment">// 当保存的时候，eslint自动帮我们修复错误</span></span><br><span class="line">    <span class="string">&quot;editor.codeActionsOnSave&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;source.fixAll&quot;</span>: <span class="literal">true</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// 保存代码，不自动格式化</span></span><br><span class="line">    <span class="string">&quot;editor.formatOnSave&quot;</span>: <span class="literal">false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="一、Vuex-概述"><a href="#一、Vuex-概述" class="headerlink" title="一、Vuex 概述"></a>一、<a href="https://vuex.vuejs.org/zh/">Vuex</a> 概述</h2><p>目标：明确<a href="https://vuex.vuejs.org/zh/">Vuex</a>是什么，应用场景以及优势</p>
<h3 id="1-是什么"><a href="#1-是什么" class="headerlink" title="1.是什么"></a>1.是什么</h3><p>Vuex 是一个 Vue 的 状态管理工具，状态就是数据。</p>
<p>大白话：Vuex 是一个插件，可以帮我们管理 Vue 通用的数据 (多组件共享的数据)。例如：购物车数据   个人信息数</p>
<h3 id="2-使用场景"><a href="#2-使用场景" class="headerlink" title="2.使用场景"></a>2.使用场景</h3><ul>
<li><p>某个状态 在 很多个组件 来使用 (个人信息)</p>
</li>
<li><p>多个组件 共同维护 一份数据 (购物车)</p>
</li>
</ul>
<img data-src="/2024/11/19/Vue2-0/1683178186642.png" class="" width="68317818664">

<h3 id="3-优势"><a href="#3-优势" class="headerlink" title="3.优势"></a>3.优势</h3><ul>
<li>共同维护一份数据，<strong>数据集中化管理</strong></li>
<li><strong>响应式变化</strong></li>
<li>操作简洁 (vuex提供了一些辅助函数)</li>
</ul>
<img data-src="/2024/11/19/Vue2-0/1683178293366.png" class="" width="68317829336">

<h3 id="4-注意：-1"><a href="#4-注意：-1" class="headerlink" title="4.注意："></a>4.注意：</h3><p>官方原文：</p>
<ul>
<li>不是所有的场景都适用于vuex，只有在必要的时候才使用vuex</li>
<li>使用了vuex之后，会附加更多的框架中的概念进来，增加了项目的复杂度  （数据的操作更便捷，数据的流动更清晰）</li>
</ul>
<p>Vuex就像《近视眼镜》, 你自然会知道什么时候需要用它~</p>
<h2 id="二、需求-多组件共享数据"><a href="#二、需求-多组件共享数据" class="headerlink" title="二、需求: 多组件共享数据"></a>二、需求: 多组件共享数据</h2><p>目标：基于脚手架创建项目，构建 vuex 多组件数据共享环境</p>
<img data-src="/2024/11/19/Vue2-0/1683178912695.png" class="" width="68317891269">

<p>效果是三个组件共享一份数据:</p>
<ul>
<li>任意一个组件都可以修改数据</li>
<li>三个组件的数据是同步的</li>
</ul>
<h3 id="1-创建项目"><a href="#1-创建项目" class="headerlink" title="1.创建项目"></a>1.创建项目</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vue create vuex-demo</span><br></pre></td></tr></table></figure>

<h3 id="2-创建三个组件-目录如下"><a href="#2-创建三个组件-目录如下" class="headerlink" title="2.创建三个组件, 目录如下"></a>2.创建三个组件, 目录如下</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">|-components</span><br><span class="line">|--Son1.vue</span><br><span class="line">|--Son2.vue</span><br><span class="line">|-App.vue</span><br></pre></td></tr></table></figure>

<h3 id="3-源代码如下"><a href="#3-源代码如下" class="headerlink" title="3.源代码如下"></a>3.源代码如下</h3><p><code>App.vue</code>在入口组件中引入 Son1 和 Son2 这两个子组件</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>根组件<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Son1</span>&gt;</span><span class="tag">&lt;/<span class="name">Son1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Son2</span>&gt;</span><span class="tag">&lt;/<span class="name">Son2</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> <span class="title class_">Son1</span> <span class="keyword">from</span> <span class="string">&#x27;./components/Son1.vue&#x27;</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> <span class="title class_">Son2</span> <span class="keyword">from</span> <span class="string">&#x27;./components/Son2.vue&#x27;</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">name</span>: <span class="string">&#x27;app&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">data</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">components</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">Son1</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">Son2</span></span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-id">#app</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">width</span>: <span class="number">600px</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">margin</span>: <span class="number">20px</span> auto;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">border</span>: <span class="number">3px</span> solid <span class="number">#ccc</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">border-radius</span>: <span class="number">3px</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">padding</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><code>main.js</code></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Vue</span> <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">App</span> <span class="keyword">from</span> <span class="string">&#x27;./App.vue&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">  <span class="attr">render</span>: <span class="function"><span class="params">h</span> =&gt;</span> <span class="title function_">h</span>(<span class="title class_">App</span>)</span><br><span class="line">&#125;).$mount(<span class="string">&#x27;#app&#x27;</span>)</span><br></pre></td></tr></table></figure>

<p><code>Son1.vue</code></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>Son1 子组件<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    从vuex中获取的值: <span class="tag">&lt;<span class="name">label</span>&gt;</span><span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span>&gt;</span>值 + 1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">name</span>: <span class="string">&#x27;Son1Com&#x27;</span></span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">lang</span>=<span class="string">&quot;css&quot;</span> <span class="attr">scoped</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.box</span>&#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">border</span>: <span class="number">3px</span> solid <span class="number">#ccc</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">width</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">padding</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">margin</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-tag">h2</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">margin-top</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><code>Son2.vue</code></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>Son2 子组件<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    从vuex中获取的值:<span class="tag">&lt;<span class="name">label</span>&gt;</span><span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span>&gt;</span>值 - 1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">name</span>: <span class="string">&#x27;Son2Com&#x27;</span></span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">lang</span>=<span class="string">&quot;css&quot;</span> <span class="attr">scoped</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.box</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">border</span>: <span class="number">3px</span> solid <span class="number">#ccc</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">width</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">padding</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">margin</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-tag">h2</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">margin-top</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h2 id="三、vuex-的使用-创建仓库"><a href="#三、vuex-的使用-创建仓库" class="headerlink" title="三、vuex 的使用 - 创建仓库"></a>三、vuex 的使用 - 创建仓库</h2><img data-src="/2024/11/19/Vue2-0/1683212784179.png" class="" width="68321278417">

<h3 id="1-安装-vuex"><a href="#1-安装-vuex" class="headerlink" title="1.安装 vuex"></a>1.安装 vuex</h3><p>安装vuex与vue-router类似，vuex是一个独立存在的插件，如果脚手架初始化没有选 vuex，就需要额外安装。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yarn add vuex@3 或者 npm i vuex@3</span><br></pre></td></tr></table></figure>

<h3 id="2-新建-store-index-js-专门存放-vuex"><a href="#2-新建-store-index-js-专门存放-vuex" class="headerlink" title="2.新建 store/index.js 专门存放 vuex"></a>2.新建 <code>store/index.js</code> 专门存放 vuex</h3><p>​	为了维护项目目录的整洁，在src目录下新建一个store目录其下放置一个index.js文件。 (和 <code>router/index.js</code> 类似)</p>
<p>​	<img data-src="/2024/11/19/Vue2-0/1683212805824.png" class="" width="68321280582"></p>
<h3 id="3-创建仓库-store-index-js"><a href="#3-创建仓库-store-index-js" class="headerlink" title="3.创建仓库 store/index.js"></a>3.创建仓库 <code>store/index.js</code></h3><figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 导入 vue</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Vue</span> <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="comment">// 导入 vuex</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Vuex</span> <span class="keyword">from</span> <span class="string">&#x27;vuex&#x27;</span></span><br><span class="line"><span class="comment">// vuex也是vue的插件, 需要use一下, 进行插件的安装初始化</span></span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">use</span>(<span class="title class_">Vuex</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建仓库 store</span></span><br><span class="line"><span class="keyword">const</span> store = <span class="keyword">new</span> <span class="title class_">Vuex</span>.<span class="title class_">Store</span>()</span><br><span class="line"></span><br><span class="line"><span class="comment">// 导出仓库</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> store</span><br></pre></td></tr></table></figure>

<h3 id="4-在-main-js-中导入挂载到-Vue-实例上"><a href="#4-在-main-js-中导入挂载到-Vue-实例上" class="headerlink" title="4 在 main.js 中导入挂载到 Vue 实例上"></a>4 在 main.js 中导入挂载到 Vue 实例上</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Vue</span> <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">App</span> <span class="keyword">from</span> <span class="string">&#x27;./App.vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> store <span class="keyword">from</span> <span class="string">&#x27;./store&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">  <span class="attr">render</span>: <span class="function"><span class="params">h</span> =&gt;</span> <span class="title function_">h</span>(<span class="title class_">App</span>),</span><br><span class="line">  store</span><br><span class="line">&#125;).$mount(<span class="string">&#x27;#app&#x27;</span>)</span><br></pre></td></tr></table></figure>

<p>此刻起, 就成功创建了一个 <strong>空仓库!!</strong></p>
<h3 id="5-测试打印Vuex"><a href="#5-测试打印Vuex" class="headerlink" title="5.测试打印Vuex"></a>5.测试打印Vuex</h3><p>App.vue</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="title function_">created</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">$store</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>





<h2 id="四、核心概念-state-状态"><a href="#四、核心概念-state-状态" class="headerlink" title="四、核心概念 - state 状态"></a>四、核心概念 - state 状态</h2><h3 id="1-目标-2"><a href="#1-目标-2" class="headerlink" title="1.目标"></a>1.目标</h3><p>明确如何给仓库 提供 数据，如何 使用 仓库的数据</p>
<h3 id="2-提供数据"><a href="#2-提供数据" class="headerlink" title="2.提供数据"></a>2.提供数据</h3><p>State提供唯一的公共数据源，所有共享的数据都要统一放到Store中的State中存储。</p>
<p>打开项目中的store.js文件，在state对象中可以添加我们要共享的数据。</p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 创建仓库 store</span></span><br><span class="line"><span class="keyword">const</span> store = <span class="keyword">new</span> <span class="title class_">Vuex</span>.<span class="title class_">Store</span>(&#123;</span><br><span class="line">  <span class="comment">// state 状态, 即数据, 类似于vue组件中的data,</span></span><br><span class="line">  <span class="comment">// 区别：</span></span><br><span class="line">  <span class="comment">// 1.data 是组件自己的数据, </span></span><br><span class="line">  <span class="comment">// 2.state 中的数据整个vue项目的组件都能访问到</span></span><br><span class="line">  <span class="attr">state</span>: &#123;</span><br><span class="line">    <span class="attr">count</span>: <span class="number">101</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h3 id="3-访问Vuex中的数据"><a href="#3-访问Vuex中的数据" class="headerlink" title="3.访问Vuex中的数据"></a>3.访问Vuex中的数据</h3><p>问题: 如何在组件中获取count?</p>
<ol>
<li>通过$store直接访问  —&gt;  </li>
<li>通过辅助函数mapState 映射计算属性  —&gt;  </li>
</ol>
<h3 id="4-通过-store访问的语法"><a href="#4-通过-store访问的语法" class="headerlink" title="4.通过$store访问的语法"></a>4.通过$store访问的语法</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">获取 store：</span><br><span class="line"> <span class="number">1.</span><span class="title class_">Vue</span>模板中获取 <span class="variable language_">this</span>.<span class="property">$store</span></span><br><span class="line"> <span class="number">2.</span>js文件中获取 <span class="keyword">import</span> 导入 store</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">模板中：     &#123;&#123; $store.<span class="property">state</span>.<span class="property">xxx</span> &#125;&#125;</span><br><span class="line">组件逻辑中：  <span class="variable language_">this</span>.<span class="property">$store</span>.<span class="property">state</span>.<span class="property">xxx</span></span><br><span class="line"><span class="variable constant_">JS</span>模块中：   store.<span class="property">state</span>.<span class="property">xxx</span></span><br></pre></td></tr></table></figure>



<h3 id="5-代码实现"><a href="#5-代码实现" class="headerlink" title="5.代码实现"></a>5.代码实现</h3><h4 id="5-1模板中使用"><a href="#5-1模板中使用" class="headerlink" title="5.1模板中使用"></a>5.1模板中使用</h4><p>组件中可以使用  <strong>$store</strong> 获取到vuex中的store对象实例，可通过<strong>state</strong>属性属性获取<strong>count</strong>， 如下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;h1&gt;state的数据 - &#123;&#123; $store.state.count &#125;&#125;&lt;/h1&gt;</span><br></pre></td></tr></table></figure>

<h4 id="5-2组件逻辑中使用"><a href="#5-2组件逻辑中使用" class="headerlink" title="5.2组件逻辑中使用"></a>5.2组件逻辑中使用</h4><p>将state属性定义在计算属性中 <a href="https://vuex.vuejs.org/zh/guide/state.html">https://vuex.vuejs.org/zh/guide/state.html</a></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;h1&gt;state的数据 - &#123;&#123; count &#125;&#125;&lt;/h1&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 把state中数据，定义在组件内的计算属性中</span></span><br><span class="line">  <span class="attr">computed</span>: &#123;</span><br><span class="line">    <span class="title function_">count</span> () &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">$store</span>.<span class="property">state</span>.<span class="property">count</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>

<h4 id="5-3-js文件中使用"><a href="#5-3-js文件中使用" class="headerlink" title="5.3 js文件中使用"></a>5.3 js文件中使用</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//main.js</span><br><span class="line"></span><br><span class="line">import store from &quot;@/store&quot;</span><br><span class="line"></span><br><span class="line">console.log(store.state.count)</span><br></pre></td></tr></table></figure>

<p>每次都像这样一个个的提供计算属性, 太麻烦了,我们有没有简单的语法帮我们获取state中的值呢？</p>
<h2 id="五、通过辅助函数-mapState获取-state中的数据"><a href="#五、通过辅助函数-mapState获取-state中的数据" class="headerlink" title="五、通过辅助函数  - mapState获取 state中的数据"></a>五、通过辅助函数  - mapState获取 state中的数据</h2><blockquote>
<p>mapState是辅助函数，帮助我们把store中的数据映射到 组件的计算属性中, 它属于一种方便的用法</p>
</blockquote>
<p>用法 ：</p>
<img data-src="/2024/11/19/Vue2-0/1683214719574.png" class="" width="68321471957"> 

<h3 id="1-第一步：导入mapState-mapState是vuex中的一个函数"><a href="#1-第一步：导入mapState-mapState是vuex中的一个函数" class="headerlink" title="1.第一步：导入mapState (mapState是vuex中的一个函数)"></a>1.第一步：导入mapState (mapState是vuex中的一个函数)</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; mapState &#125; <span class="keyword">from</span> <span class="string">&#x27;vuex&#x27;</span></span><br></pre></td></tr></table></figure>

<h3 id="2-第二步：采用数组形式引入state属性"><a href="#2-第二步：采用数组形式引入state属性" class="headerlink" title="2.第二步：采用数组形式引入state属性"></a>2.第二步：采用数组形式引入state属性</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="title function_">mapState</span>([<span class="string">&#x27;count&#x27;</span>]) </span><br></pre></td></tr></table></figure>

<blockquote>
<p>上面代码的最终得到的是 <strong>类似于</strong></p>
</blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="title function_">count</span> () &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">$store</span>.<span class="property">state</span>.<span class="property">count</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="3-第三步：利用展开运算符将导出的状态映射给计算属性"><a href="#3-第三步：利用展开运算符将导出的状态映射给计算属性" class="headerlink" title="3.第三步：利用展开运算符将导出的状态映射给计算属性"></a>3.第三步：利用<strong>展开运算符</strong>将导出的状态映射给计算属性</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="attr">computed</span>: &#123;</span><br><span class="line">  ...<span class="title function_">mapState</span>([<span class="string">&#x27;count&#x27;</span>])</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;div&gt; state的数据：&#123;&#123; count &#125;&#125;&lt;/div&gt;</span><br></pre></td></tr></table></figure>



<h2 id="六、开启严格模式及Vuex的单项数据流"><a href="#六、开启严格模式及Vuex的单项数据流" class="headerlink" title="六、开启严格模式及Vuex的单项数据流"></a>六、开启严格模式及Vuex的单项数据流</h2><h3 id="1-目标-3"><a href="#1-目标-3" class="headerlink" title="1.目标"></a>1.目标</h3><p>明确 vuex 同样遵循单向数据流，组件中不能直接修改仓库的数据</p>
<h3 id="2-直接在组件中修改Vuex中state的值"><a href="#2-直接在组件中修改Vuex中state的值" class="headerlink" title="2.直接在组件中修改Vuex中state的值"></a>2.直接在组件中修改Vuex中state的值</h3><img data-src="/2024/11/19/Vue2-0/1683215892288.png" class="" width="68321589228">

<p>Son1.vue</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">button @click=&quot;handleAdd&quot;&gt;值 + 1&lt;/button&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">methods:&#123;</span><br><span class="line">	 handleAdd (n) &#123;</span><br><span class="line">      // 错误代码(vue默认不会监测，监测需要成本)</span><br><span class="line">       this.$store.state.count++</span><br><span class="line">      // console.log(this.$store.state.count) </span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="3-开启严格模式"><a href="#3-开启严格模式" class="headerlink" title="3.开启严格模式"></a>3.开启严格模式</h3><p>通过 <code>strict: true</code> 可以开启严格模式,开启严格模式后，直接修改state中的值会报错</p>
<blockquote>
<p><strong>state数据的修改只能通过mutations，并且mutations必须是同步的</strong></p>
</blockquote>
<img data-src="/2024/11/19/Vue2-0/1683215821033.png" class="" width="68321471957">

<h2 id="七、核心概念-mutations"><a href="#七、核心概念-mutations" class="headerlink" title="七、核心概念-mutations"></a>七、核心概念-mutations</h2><h3 id="1-定义mutations"><a href="#1-定义mutations" class="headerlink" title="1.定义mutations"></a>1.定义mutations</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> store  = <span class="keyword">new</span> <span class="title class_">Vuex</span>.<span class="title class_">Store</span>(&#123;</span><br><span class="line">  <span class="attr">state</span>: &#123;</span><br><span class="line">    <span class="attr">count</span>: <span class="number">0</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// 定义mutations</span></span><br><span class="line">  <span class="attr">mutations</span>: &#123;</span><br><span class="line">     </span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h3 id="2-格式说明"><a href="#2-格式说明" class="headerlink" title="2.格式说明"></a>2.格式说明</h3><p>mutations是一个对象，对象中存放修改state的方法</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="attr">mutations</span>: &#123;</span><br><span class="line">    <span class="comment">// 方法里参数 第一个参数是当前store的state属性</span></span><br><span class="line">    <span class="comment">// payload 载荷 运输参数 调用mutaiions的时候 可以传递参数 传递载荷</span></span><br><span class="line">    <span class="title function_">addCount</span> (state) &#123;</span><br><span class="line">      state.<span class="property">count</span> += <span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure>

<h3 id="3-组件中提交-mutations"><a href="#3-组件中提交-mutations" class="headerlink" title="3.组件中提交 mutations"></a>3.组件中提交 mutations</h3><figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">this</span>.<span class="property">$store</span>.<span class="title function_">commit</span>(<span class="string">&#x27;addCount&#x27;</span>)</span><br></pre></td></tr></table></figure>

<h3 id="4-练习"><a href="#4-练习" class="headerlink" title="4.练习"></a>4.练习</h3><p>1.在mutations中定义个点击按钮进行 +5 的方法</p>
<p>2.在mutations中定义个点击按钮进行 改变title 的方法</p>
<p>3.在组件中调用mutations修改state中的值</p>
<h3 id="5-总结"><a href="#5-总结" class="headerlink" title="5.总结"></a>5.总结</h3><p>通过mutations修改state的步骤</p>
<p>1.定义 mutations 对象，对象中存放修改 state 的方法</p>
<p>2.组件中提交调用 mutations(通过$store.commit(‘mutations的方法名’))</p>
<h2 id="八、带参数的-mutations"><a href="#八、带参数的-mutations" class="headerlink" title="八、带参数的 mutations"></a>八、带参数的 mutations</h2><h3 id="1-目标：-1"><a href="#1-目标：-1" class="headerlink" title="1.目标："></a>1.目标：</h3><p>掌握 mutations 传参语法</p>
<h3 id="2-语法-5"><a href="#2-语法-5" class="headerlink" title="2.语法"></a>2.语法</h3><p>看下面这个案例，每次点击不同的按钮，加的值都不同，每次都要定义不同的mutations处理吗？</p>
<img data-src="/2024/11/19/Vue2-0/1683217004239.png" class="" width="68321700423">

<p>提交 mutation 是可以传递参数的  <code>this.$store.commit(&#39;xxx&#39;,  参数)</code></p>
<h4 id="2-1-提供mutation函数（带参数）"><a href="#2-1-提供mutation函数（带参数）" class="headerlink" title="2.1 提供mutation函数（带参数）"></a>2.1 提供mutation函数（带参数）</h4><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="attr">mutations</span>: &#123;</span><br><span class="line">  ...</span><br><span class="line">  <span class="title function_">addCount</span> (state, count) &#123;</span><br><span class="line">    state.<span class="property">count</span> = count</span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>

<h4 id="2-2-提交mutation"><a href="#2-2-提交mutation" class="headerlink" title="2.2 提交mutation"></a>2.2 提交mutation</h4><figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="title function_">handle</span> ( ) &#123;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">$store</span>.<span class="title function_">commit</span>(<span class="string">&#x27;addCount&#x27;</span>, <span class="number">10</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>小tips: 提交的参数只能是一个, 如果有多个参数要传, 可以传递一个对象</strong></p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">this</span>.<span class="property">$store</span>.<span class="title function_">commit</span>(<span class="string">&#x27;addCount&#x27;</span>, &#123;</span><br><span class="line">  <span class="attr">count</span>: <span class="number">10</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>



<h2 id="九、练习-mutations的减法功能"><a href="#九、练习-mutations的减法功能" class="headerlink" title="九、练习-mutations的减法功能"></a>九、练习-mutations的减法功能</h2><img data-src="/2024/11/19/Vue2-0/1683217248752.png" class="" width="68321724875">

<h3 id="1-步骤"><a href="#1-步骤" class="headerlink" title="1.步骤"></a>1.步骤</h3><img data-src="/2024/11/19/Vue2-0/1683217268256.png" class="" width="68321726825">

<h3 id="2-代码实现-5"><a href="#2-代码实现-5" class="headerlink" title="2.代码实现"></a>2.代码实现</h3><p>Son2.vue</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;button @click=&quot;subCount(1)&quot;&gt;值 - 1&lt;/button&gt;</span><br><span class="line">&lt;button @click=&quot;subCount(5)&quot;&gt;值 - 5&lt;/button&gt;</span><br><span class="line">&lt;button @click=&quot;subCount(10)&quot;&gt;值 - 10&lt;/button&gt;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">    methods:&#123;</span><br><span class="line">         subCount (n) &#123; </span><br><span class="line">            this.$store.commit(&#x27;addCount&#x27;, n)</span><br><span class="line">    &#125;,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>store&#x2F;index.js</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="attr">mutations</span>:&#123;</span><br><span class="line">    <span class="title function_">subCount</span> (state, n) &#123;</span><br><span class="line">      state.<span class="property">count</span> -= n</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="十、练习-Vuex中的值和组件中的input双向绑定"><a href="#十、练习-Vuex中的值和组件中的input双向绑定" class="headerlink" title="十、练习-Vuex中的值和组件中的input双向绑定"></a>十、练习-Vuex中的值和组件中的input双向绑定</h2><h3 id="1-目标-4"><a href="#1-目标-4" class="headerlink" title="1.目标"></a>1.目标</h3><p>实时输入，实时更新，巩固 mutations 传参语法</p>
<img data-src="/2024/11/19/Vue2-0/1683217697064.png" class="" width="68321769706">

<h3 id="2-实现步骤"><a href="#2-实现步骤" class="headerlink" title="2.实现步骤"></a>2.实现步骤</h3><img data-src="/2024/11/19/Vue2-0/1683217717788.png" class="" width="68321771778">

<h3 id="3-代码实现-2"><a href="#3-代码实现-2" class="headerlink" title="3.代码实现"></a>3.代码实现</h3><p>App.vue</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;input :value=&quot;count&quot; @input=&quot;handleInput&quot; type=&quot;text&quot;&gt;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">  methods: &#123;</span><br><span class="line">    handleInput (e) &#123;</span><br><span class="line">      // 1. 实时获取输入框的值</span><br><span class="line">      const num = +e.target.value</span><br><span class="line">      // 2. 提交mutation，调用mutation函数</span><br><span class="line">      this.$store.commit(&#x27;changeCount&#x27;, num)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>store&#x2F;index.js</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="attr">mutations</span>: &#123; </span><br><span class="line">   <span class="title function_">changeCount</span> (state, newCount) &#123;</span><br><span class="line">      state.<span class="property">count</span> = newCount</span><br><span class="line">   &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>



<h2 id="十一、辅助函数-mapMutations"><a href="#十一、辅助函数-mapMutations" class="headerlink" title="十一、辅助函数- mapMutations"></a>十一、辅助函数- mapMutations</h2><blockquote>
<p>mapMutations和mapState很像，它把位于mutations中的方法提取了出来，我们可以将它导入</p>
</blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span>  &#123; mapMutations &#125; <span class="keyword">from</span> <span class="string">&#x27;vuex&#x27;</span></span><br><span class="line"><span class="attr">methods</span>: &#123;</span><br><span class="line">    ...<span class="title function_">mapMutations</span>([<span class="string">&#x27;addCount&#x27;</span>])</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>上面代码的含义是将mutations的方法导入了methods中，等价于</p>
</blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="attr">methods</span>: &#123;</span><br><span class="line">      <span class="comment">// commit(方法名, 载荷参数)</span></span><br><span class="line">      <span class="title function_">addCount</span> () &#123;</span><br><span class="line">          <span class="variable language_">this</span>.<span class="property">$store</span>.<span class="title function_">commit</span>(<span class="string">&#x27;addCount&#x27;</span>)</span><br><span class="line">      &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>

<p>此时，就可以直接通过this.addCount调用了</p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;button @click=<span class="string">&quot;addCount&quot;</span>&gt;值+<span class="number">1</span>&lt;/button&gt;</span><br></pre></td></tr></table></figure>

<p>但是请注意： Vuex中mutations中要求不能写异步代码，如果有异步的ajax请求，应该放置在actions中</p>
<h2 id="十二、核心概念-actions"><a href="#十二、核心概念-actions" class="headerlink" title="十二、核心概念 - actions"></a>十二、核心概念 - actions</h2><blockquote>
<p>state是存放数据的，mutations是同步更新数据 (便于监测数据的变化, 更新视图等, 方便于调试工具查看变化)，</p>
<p>actions则负责进行异步操作</p>
</blockquote>
<p><strong>说明：mutations必须是同步的</strong></p>
<p><strong>需求: 一秒钟之后, 要给一个数 去修改state</strong></p>
<img data-src="/2024/11/19/Vue2-0/1683218603674.png" class="" width="68321860367">

<h3 id="1-定义actions"><a href="#1-定义actions" class="headerlink" title="1.定义actions"></a><strong>1.定义actions</strong></h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="attr">mutations</span>: &#123;</span><br><span class="line">  <span class="title function_">changeCount</span> (state, newCount) &#123;</span><br><span class="line">    state.<span class="property">count</span> = newCount</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="attr">actions</span>: &#123;</span><br><span class="line">  <span class="title function_">setAsyncCount</span> (context, num) &#123;</span><br><span class="line">    <span class="comment">// 一秒后, 给一个数, 去修改 num</span></span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      context.<span class="title function_">commit</span>(<span class="string">&#x27;changeCount&#x27;</span>, num)</span><br><span class="line">    &#125;, <span class="number">1000</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>

<h3 id="2-组件中通过dispatch调用"><a href="#2-组件中通过dispatch调用" class="headerlink" title="2.组件中通过dispatch调用"></a><strong>2.组件中通过dispatch调用</strong></h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="title function_">setAsyncCount</span> () &#123;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">$store</span>.<span class="title function_">dispatch</span>(<span class="string">&#x27;setAsyncCount&#x27;</span>, <span class="number">666</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<img data-src="/2024/11/19/Vue2-0/1683441987572.png" class="" width="68344198757">

<h2 id="十三、辅助函数-mapActions"><a href="#十三、辅助函数-mapActions" class="headerlink" title="十三、辅助函数 -mapActions"></a>十三、辅助函数 -mapActions</h2><p>1.目标：掌握辅助函数 mapActions，映射方法</p>
<blockquote>
<p>mapActions 是把位于 actions中的方法提取了出来，映射到组件methods中</p>
</blockquote>
<p>Son2.vue</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; mapActions &#125; <span class="keyword">from</span> <span class="string">&#x27;vuex&#x27;</span></span><br><span class="line"><span class="attr">methods</span>: &#123;</span><br><span class="line">   ...<span class="title function_">mapActions</span>([<span class="string">&#x27;changeCountAction&#x27;</span>])</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//mapActions映射的代码 本质上是以下代码的写法</span></span><br><span class="line"><span class="comment">//methods: &#123;</span></span><br><span class="line"><span class="comment">//  changeCountAction (n) &#123;</span></span><br><span class="line"><span class="comment">//    this.$store.dispatch(&#x27;changeCountAction&#x27;, n)</span></span><br><span class="line"><span class="comment">//  &#125;,</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br></pre></td></tr></table></figure>

<p>直接通过 this.方法 就可以调用</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;button @click=&quot;changeCountAction(200)&quot;&gt;+异步&lt;/button&gt;</span><br></pre></td></tr></table></figure>



<h2 id="十四、核心概念-getters"><a href="#十四、核心概念-getters" class="headerlink" title="十四、核心概念 - getters"></a>十四、核心概念 - getters</h2><blockquote>
<p>除了state之外，有时我们还需要从state中<strong>筛选出符合条件的一些数据</strong>，这些数据是依赖state的，此时会用到getters</p>
</blockquote>
<p>例如，state中定义了list，为1-10的数组，</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="attr">state</span>: &#123;</span><br><span class="line">    <span class="attr">list</span>: [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>组件中，需要显示所有大于5的数据，正常的方式，是需要list在组件中进行再一步的处理，但是getters可以帮助我们实现它</p>
<h3 id="1-定义getters"><a href="#1-定义getters" class="headerlink" title="1.定义getters"></a>1.定义getters</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="attr">getters</span>: &#123;</span><br><span class="line">  <span class="comment">// getters函数的第一个参数是 state</span></span><br><span class="line">  <span class="comment">// 必须要有返回值</span></span><br><span class="line">   <span class="attr">filterList</span>:  <span class="function"><span class="params">state</span> =&gt;</span>  state.<span class="property">list</span>.<span class="title function_">filter</span>(<span class="function"><span class="params">item</span> =&gt;</span> item &gt; <span class="number">5</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="2-使用getters"><a href="#2-使用getters" class="headerlink" title="2.使用getters"></a>2.使用getters</h3><h4 id="2-1原始方式-store"><a href="#2-1原始方式-store" class="headerlink" title="2.1原始方式-$store"></a>2.1原始方式-$store</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;div&gt;&#123;&#123; $store.getters.filterList &#125;&#125;&lt;/div&gt;</span><br></pre></td></tr></table></figure>

<h4 id="2-2辅助函数-mapGetters"><a href="#2-2辅助函数-mapGetters" class="headerlink" title="2.2辅助函数 - mapGetters"></a>2.2辅助函数 - mapGetters</h4><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="attr">computed</span>: &#123;</span><br><span class="line">    ...<span class="title function_">mapGetters</span>([<span class="string">&#x27;filterList&#x27;</span>])</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;div&gt;&#123;&#123; filterList &#125;&#125;&lt;/div&gt;</span><br></pre></td></tr></table></figure>

<h2 id="十五、使用小结"><a href="#十五、使用小结" class="headerlink" title="十五、使用小结"></a>十五、使用小结</h2><img data-src="/2024/11/19/Vue2-0/1683442133911.png" class="" width="68344213391">

<h2 id="十六、核心概念-module"><a href="#十六、核心概念-module" class="headerlink" title="十六、核心概念 - module"></a>十六、核心概念 - module</h2><h3 id="1-目标-5"><a href="#1-目标-5" class="headerlink" title="1.目标"></a>1.目标</h3><p>掌握核心概念 module 模块的创建</p>
<h3 id="2-问题"><a href="#2-问题" class="headerlink" title="2.问题"></a>2.问题</h3><p>由于使用<strong>单一状态树</strong>，应用的所有状态<strong>会集中到一个比较大的对象</strong>。当应用变得非常复杂时，store 对象就有可能变得相当臃肿。</p>
<p>这句话的意思是，如果把所有的状态都放在state中，当项目变得越来越大的时候，Vuex会变得越来越难以维护</p>
<p>由此，又有了Vuex的模块化</p>
<img data-src="/2024/11/19/Vue2-0/1683425758358.png" class="" width="68342575835">



<h3 id="3-模块定义-准备-state"><a href="#3-模块定义-准备-state" class="headerlink" title="3.模块定义 - 准备 state"></a><strong>3.模块定义</strong> - 准备 state</h3><p>定义两个模块   <strong>user</strong> 和  <strong>setting</strong></p>
<p>user中管理用户的信息状态  userInfo  <code>modules/user.js</code></p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> state = &#123;</span><br><span class="line">  <span class="attr">userInfo</span>: &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;zs&#x27;</span>,</span><br><span class="line">    <span class="attr">age</span>: <span class="number">18</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> mutations = &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> actions = &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> getters = &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  state,</span><br><span class="line">  mutations,</span><br><span class="line">  actions,</span><br><span class="line">  getters</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>setting中管理项目应用的  主题色 theme，描述 desc， <code>modules/setting.js</code></p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> state = &#123;</span><br><span class="line">  <span class="attr">theme</span>: <span class="string">&#x27;dark&#x27;</span></span><br><span class="line">  <span class="attr">desc</span>: <span class="string">&#x27;描述真呀真不错&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> mutations = &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> actions = &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> getters = &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  state,</span><br><span class="line">  mutations,</span><br><span class="line">  actions,</span><br><span class="line">  getters</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>在<code>store/index.js</code>文件中的modules配置项中，注册这两个模块</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> user <span class="keyword">from</span> <span class="string">&#x27;./modules/user&#x27;</span></span><br><span class="line"><span class="keyword">import</span> setting <span class="keyword">from</span> <span class="string">&#x27;./modules/setting&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> store = <span class="keyword">new</span> <span class="title class_">Vuex</span>.<span class="title class_">Store</span>(&#123;</span><br><span class="line">    <span class="attr">modules</span>:&#123;</span><br><span class="line">        user,</span><br><span class="line">        setting</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<p>使用模块中的数据,  可以直接通过模块名访问 <code>$store.state.模块名.xxx</code>  &#x3D;&gt;  <code>$store.state.setting.desc</code></p>
<p>也可以通过 mapState 映射</p>
<h2 id="十七、获取模块内的state数据"><a href="#十七、获取模块内的state数据" class="headerlink" title="十七、获取模块内的state数据"></a>十七、获取模块内的state数据</h2><h3 id="1-目标：-2"><a href="#1-目标：-2" class="headerlink" title="1.目标："></a>1.目标：</h3><p>掌握模块中 state 的访问语法</p>
<p>尽管已经分模块了，但其实子模块的状态，还是会挂到根级别的 state 中，属性名就是模块名</p>
<img data-src="/2024/11/19/Vue2-0/1683427841660.png" class="" width="68342784166">

<h3 id="2-使用模块中的数据"><a href="#2-使用模块中的数据" class="headerlink" title="2.使用模块中的数据"></a>2.使用模块中的数据</h3><ol>
<li>直接通过模块名访问 $store.state.模块名.xxx</li>
<li>通过 mapState 映射：<ol>
<li>默认根级别的映射  mapState([ ‘xxx’ ])     </li>
<li>子模块的映射 ：mapState(‘模块名’, [‘xxx’])  -  需要开启命名空间 <strong>namespaced:true</strong></li>
</ol>
</li>
</ol>
<p><code>modules/user.js</code></p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> state = &#123;</span><br><span class="line">  <span class="attr">userInfo</span>: &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;zs&#x27;</span>,</span><br><span class="line">    <span class="attr">age</span>: <span class="number">18</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">myMsg</span>: <span class="string">&#x27;我的数据&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> mutations = &#123;</span><br><span class="line">  <span class="title function_">updateMsg</span> (state, msg) &#123;</span><br><span class="line">    state.<span class="property">myMsg</span> = msg</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> actions = &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> getters = &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">namespaced</span>: <span class="literal">true</span>,</span><br><span class="line">  state,</span><br><span class="line">  mutations,</span><br><span class="line">  actions,</span><br><span class="line">  getters</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="3-代码示例-3"><a href="#3-代码示例-3" class="headerlink" title="3.代码示例"></a>3.代码示例</h3><p>$store直接访问</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">$store.<span class="property">state</span>.<span class="property">user</span>.<span class="property">userInfo</span>.<span class="property">name</span></span><br></pre></td></tr></table></figure>

<p>mapState辅助函数访问</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">...<span class="title function_">mapState</span>(<span class="string">&#x27;user&#x27;</span>, [<span class="string">&#x27;userInfo&#x27;</span>]),</span><br><span class="line">...<span class="title function_">mapState</span>(<span class="string">&#x27;setting&#x27;</span>, [<span class="string">&#x27;theme&#x27;</span>, <span class="string">&#x27;desc&#x27;</span>]),</span><br></pre></td></tr></table></figure>



<h2 id="十八、获取模块内的getters数据"><a href="#十八、获取模块内的getters数据" class="headerlink" title="十八、获取模块内的getters数据"></a>十八、获取模块内的getters数据</h2><h3 id="1-目标：-3"><a href="#1-目标：-3" class="headerlink" title="1.目标："></a>1.目标：</h3><p>掌握模块中 getters 的访问语</p>
<h3 id="2-语法：-1"><a href="#2-语法：-1" class="headerlink" title="2.语法："></a>2.语法：</h3><p>使用模块中 getters 中的数据： </p>
<ol>
<li>直接通过模块名访问<code> $store.getters[&#39;模块名/xxx &#39;]</code></li>
<li>通过 mapGetters 映射      <ol>
<li>默认根级别的映射  <code>mapGetters([ &#39;xxx&#39; ]) </code></li>
<li>子模块的映射  <code>mapGetters(&#39;模块名&#39;, [&#39;xxx&#39;])</code> -  需要开启命名空间</li>
</ol>
</li>
</ol>
<h3 id="3-代码演示-1"><a href="#3-代码演示-1" class="headerlink" title="3.代码演示"></a>3.代码演示</h3><p><code>modules/user.js</code></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> getters = &#123;</span><br><span class="line">  <span class="comment">// 分模块后，state指代子模块的state</span></span><br><span class="line">  <span class="title class_">UpperCaseName</span> (state) &#123;</span><br><span class="line">    <span class="keyword">return</span> state.<span class="property">userInfo</span>.<span class="property">name</span>.<span class="title function_">toUpperCase</span>()</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Son1.vue 直接访问getters</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 测试访问模块中的getters - 原生 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>&#123;&#123; $store.getters[&#x27;user/UpperCaseName&#x27;] &#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>Son2.vue 通过命名空间访问</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="attr">computed</span>:&#123;</span><br><span class="line">  ...<span class="title function_">mapGetters</span>(<span class="string">&#x27;user&#x27;</span>, [<span class="string">&#x27;UpperCaseName&#x27;</span>])</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="十九、获取模块内的mutations方法"><a href="#十九、获取模块内的mutations方法" class="headerlink" title="十九、获取模块内的mutations方法"></a>十九、获取模块内的mutations方法</h2><h3 id="1-目标：-4"><a href="#1-目标：-4" class="headerlink" title="1.目标："></a>1.目标：</h3><p>掌握模块中 mutation 的调用语法</p>
<h3 id="2-注意："><a href="#2-注意：" class="headerlink" title="2.注意："></a>2.注意：</h3><p>默认模块中的 mutation 和 actions 会被挂载到全局，<strong>需要开启命名空间</strong>，才会挂载到子模块。</p>
<h3 id="3-调用方式："><a href="#3-调用方式：" class="headerlink" title="3.调用方式："></a>3.调用方式：</h3><ol>
<li>直接通过 store 调用   $store.commit(‘模块名&#x2F;xxx ‘,  额外参数)</li>
<li>通过 mapMutations 映射    <ol>
<li>默认根级别的映射  mapMutations([ ‘xxx’ ])     </li>
<li>子模块的映射 mapMutations(‘模块名’, [‘xxx’])  -  需要开启命名空间</li>
</ol>
</li>
</ol>
<h3 id="4-代码实现"><a href="#4-代码实现" class="headerlink" title="4.代码实现"></a>4.代码实现</h3><p><code>modules/user.js</code></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> mutations = &#123;</span><br><span class="line">  <span class="title function_">setUser</span> (state, newUserInfo) &#123;</span><br><span class="line">    state.<span class="property">userInfo</span> = newUserInfo</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><code>modules/setting.js</code></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> mutations = &#123;</span><br><span class="line">  <span class="title function_">setTheme</span> (state, newTheme) &#123;</span><br><span class="line">    state.<span class="property">theme</span> = newTheme</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Son1.vue</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;button @click=&quot;updateUser&quot;&gt;更新个人信息&lt;/button&gt; </span><br><span class="line">&lt;button @click=&quot;updateTheme&quot;&gt;更新主题色&lt;/button&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">  methods: &#123;</span><br><span class="line">    updateUser () &#123;</span><br><span class="line">      // $store.commit(&#x27;模块名/mutation名&#x27;, 额外传参)</span><br><span class="line">      this.$store.commit(&#x27;user/setUser&#x27;, &#123;</span><br><span class="line">        name: &#x27;xiaowang&#x27;,</span><br><span class="line">        age: 25</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;, </span><br><span class="line">    updateTheme () &#123;</span><br><span class="line">      this.$store.commit(&#x27;setting/setTheme&#x27;, &#x27;pink&#x27;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>Son2.vue</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;button @click=&quot;setUser(&#123; name: &#x27;xiaoli&#x27;, age: 80 &#125;)&quot;&gt;更新个人信息&lt;/button&gt;</span><br><span class="line">&lt;button @click=&quot;setTheme(&#x27;skyblue&#x27;)&quot;&gt;更新主题&lt;/button&gt;</span><br><span class="line"></span><br><span class="line">methods:&#123;</span><br><span class="line">// 分模块的映射</span><br><span class="line">...mapMutations(&#x27;setting&#x27;, [&#x27;setTheme&#x27;]),</span><br><span class="line">...mapMutations(&#x27;user&#x27;, [&#x27;setUser&#x27;]),</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="二十、获取模块内的actions方法"><a href="#二十、获取模块内的actions方法" class="headerlink" title="二十、获取模块内的actions方法"></a>二十、获取模块内的actions方法</h2><h3 id="1-目标：-5"><a href="#1-目标：-5" class="headerlink" title="1.目标："></a>1.目标：</h3><p>掌握模块中 action 的调用语法 (同理 - 直接类比 mutation 即可)</p>
<h3 id="2-注意：-1"><a href="#2-注意：-1" class="headerlink" title="2.注意："></a>2.注意：</h3><p>默认模块中的 mutation 和 actions 会被挂载到全局，<strong>需要开启命名空间</strong>，才会挂载到子模块。</p>
<h3 id="3-调用语法："><a href="#3-调用语法：" class="headerlink" title="3.调用语法："></a>3.调用语法：</h3><ol>
<li>直接通过 store 调用   $store.dispatch(‘模块名&#x2F;xxx ‘,  额外参数)</li>
<li>通过 mapActions 映射     <ol>
<li>默认根级别的映射  mapActions([ ‘xxx’ ])     </li>
<li>子模块的映射 mapActions(‘模块名’, [‘xxx’])  -  需要开启命名空间</li>
</ol>
</li>
</ol>
<h3 id="4-代码实现-1"><a href="#4-代码实现-1" class="headerlink" title="4.代码实现"></a>4.代码实现</h3><p>需求：</p>
<img data-src="/2024/11/19/Vue2-0/1683431615694.png" class="" width="68343161569">



<p><code>modules/user.js</code></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> actions = &#123;</span><br><span class="line">  <span class="title function_">setUserSecond</span> (context, newUserInfo) &#123;</span><br><span class="line">    <span class="comment">// 将异步在action中进行封装</span></span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="comment">// 调用mutation   context上下文，默认提交的就是自己模块的action和mutation</span></span><br><span class="line">      context.<span class="title function_">commit</span>(<span class="string">&#x27;setUser&#x27;</span>, newUserInfo)</span><br><span class="line">    &#125;, <span class="number">1000</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Son1.vue  直接通过store调用</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;button @click=&quot;updateUser2&quot;&gt;一秒后更新信息&lt;/button&gt;</span><br><span class="line"></span><br><span class="line">methods:&#123;</span><br><span class="line">    updateUser2 () &#123;</span><br><span class="line">      // 调用action dispatch</span><br><span class="line">      this.$store.dispatch(&#x27;user/setUserSecond&#x27;, &#123;</span><br><span class="line">        name: &#x27;xiaohong&#x27;,</span><br><span class="line">        age: 28</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>Son2.vue mapActions映射</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;button @click=<span class="string">&quot;setUserSecond(&#123; name: &#x27;xiaoli&#x27;, age: 80 &#125;)&quot;</span>&gt;一秒后更新信息&lt;/button&gt;</span><br><span class="line"></span><br><span class="line"><span class="attr">methods</span>:&#123;</span><br><span class="line">  ...<span class="title function_">mapActions</span>(<span class="string">&#x27;user&#x27;</span>, [<span class="string">&#x27;setUserSecond&#x27;</span>])</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="二十一、Vuex模块化的使用小结"><a href="#二十一、Vuex模块化的使用小结" class="headerlink" title="二十一、Vuex模块化的使用小结"></a>二十一、Vuex模块化的使用小结</h2><h3 id="1-直接使用"><a href="#1-直接使用" class="headerlink" title="1.直接使用"></a>1.直接使用</h3><ol>
<li>state –&gt; $store.state.<strong>模块名</strong>.数据项名</li>
<li>getters –&gt; $store.getters[‘<strong>模块名</strong>&#x2F;属性名’]</li>
<li>mutations –&gt; $store.commit(‘<strong>模块名</strong>&#x2F;方法名’, 其他参数)</li>
<li>actions –&gt; $store.dispatch(‘<strong>模块名</strong>&#x2F;方法名’, 其他参数)</li>
</ol>
<h3 id="2-借助辅助方法使用"><a href="#2-借助辅助方法使用" class="headerlink" title="2.借助辅助方法使用"></a>2.借助辅助方法使用</h3><p>1.import { mapXxxx, mapXxx } from ‘vuex’</p>
<p>computed、methods: {</p>
<p>​     &#x2F;&#x2F; <strong>…mapState、…mapGetters放computed中；</strong></p>
<p>​    &#x2F;&#x2F;  <strong>…mapMutations、…mapActions放methods中；</strong></p>
<p>​    …mapXxxx(<strong>‘模块名’</strong>, [‘数据项|方法’]),</p>
<p>​    …mapXxxx(<strong>‘模块名’</strong>, { 新的名字: 原来的名字 }),</p>
<p>}</p>
<p>2.组件中直接使用 属性 <code>&#123;&#123; age &#125;&#125;</code> 或 方法 <code>@click=&quot;updateAge(2)&quot;</code></p>
<h2 id="二十二、综合案例-创建项目"><a href="#二十二、综合案例-创建项目" class="headerlink" title="二十二、综合案例 - 创建项目"></a>二十二、综合案例 - 创建项目</h2><ol>
<li><p>脚手架新建项目 (注意：<strong>勾选vuex</strong>)      </p>
<p>版本说明：</p>
<p>vue2   vue-router3   vuex3               </p>
<p>vue3  vue-router4  vuex4&#x2F;pinia</p>
</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vue create vue-cart-demo</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>将原本src内容清空，替换成教学资料的《vuex-cart-准备代码》</li>
</ol>
<img data-src="/2024/11/19/Vue2-0/1683432959356.png" class="" width="68343295935">

<p>需求：</p>
<ol>
<li>发请求动态渲染购物车，数据存vuex （存cart模块， 将来还会有user模块，article模块…）</li>
<li>数字框可以修改数据</li>
<li>动态计算总价和总数量</li>
</ol>
<h2 id="二十三、综合案例-构建vuex-cart模块"><a href="#二十三、综合案例-构建vuex-cart模块" class="headerlink" title="二十三、综合案例-构建vuex-cart模块"></a>二十三、综合案例-构建vuex-cart模块</h2><ol>
<li>新建 <code>store/modules/cart.js</code></li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">namespaced</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="title function_">state</span> () &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">list</span>: []</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>挂载到 vuex 仓库上 <code>store/cart.js</code></li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Vuex</span> <span class="keyword">from</span> <span class="string">&#x27;vuex&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Vue</span> <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cart <span class="keyword">from</span> <span class="string">&#x27;./modules/cart&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">use</span>(<span class="title class_">Vuex</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> store = <span class="keyword">new</span> <span class="title class_">Vuex</span>.<span class="title class_">Store</span>(&#123;</span><br><span class="line">  <span class="attr">modules</span>: &#123;</span><br><span class="line">    cart</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> store</span><br></pre></td></tr></table></figure>



<h2 id="二十四、综合案例-准备后端接口服务环境-了解"><a href="#二十四、综合案例-准备后端接口服务环境-了解" class="headerlink" title="二十四、综合案例-准备后端接口服务环境(了解)"></a>二十四、综合案例-准备后端接口服务环境(了解)</h2><ol>
<li>安装全局工具 json-server （全局工具仅需要安装一次）</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yarn global add json-server 或 npm i json-server  -g</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>代码根目录新建一个 db 目录</li>
<li>将资料 index.json 移入 db 目录</li>
<li>进入 db 目录，执行命令，启动后端接口服务 (使用–watch 参数 可以实时监听 json 文件的修改)</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">json-server  --watch  index.json</span><br></pre></td></tr></table></figure>



<h2 id="二十五、综合案例-请求动态渲染数据"><a href="#二十五、综合案例-请求动态渲染数据" class="headerlink" title="二十五、综合案例-请求动态渲染数据"></a>二十五、综合案例-请求动态渲染数据</h2><h3 id="1-目标-6"><a href="#1-目标-6" class="headerlink" title="1.目标"></a>1.目标</h3><p>请求获取数据存入 vuex, 映射渲染</p>
<img data-src="/2024/11/19/Vue2-0/1683436471929.png" class="" width="68343647192">

<ol>
<li>安装 axios</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">yarn add axios</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>准备actions 和 mutations</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&#x27;axios&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">namespaced</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="title function_">state</span> () &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">list</span>: []</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">mutations</span>: &#123;</span><br><span class="line">    <span class="title function_">updateList</span> (state, payload) &#123;</span><br><span class="line">      state.<span class="property">list</span> = payload</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">actions</span>: &#123;</span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">getList</span> (ctx) &#123;</span><br><span class="line">      <span class="keyword">const</span> res = <span class="keyword">await</span> axios.<span class="title function_">get</span>(<span class="string">&#x27;http://localhost:3000/cart&#x27;</span>)</span><br><span class="line">      ctx.<span class="title function_">commit</span>(<span class="string">&#x27;updateList&#x27;</span>, res.<span class="property">data</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="3">
<li><code>App.vue</code>页面中调用 action,  获取数据</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; mapState &#125; <span class="keyword">from</span> <span class="string">&#x27;vuex&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;App&#x27;</span>,</span><br><span class="line">  <span class="attr">components</span>: &#123;</span><br><span class="line">    <span class="title class_">CartHeader</span>,</span><br><span class="line">    <span class="title class_">CartFooter</span>,</span><br><span class="line">    <span class="title class_">CartItem</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="title function_">created</span> () &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">$store</span>.<span class="title function_">dispatch</span>(<span class="string">&#x27;cart/getList&#x27;</span>)</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">computed</span>: &#123;</span><br><span class="line">    ...<span class="title function_">mapState</span>(<span class="string">&#x27;cart&#x27;</span>, [<span class="string">&#x27;list&#x27;</span>])</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="4">
<li>动态渲染</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;!-- 商品 <span class="title class_">Item</span> 项组件 --&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">cart-item</span> <span class="attr">v-for</span>=<span class="string">&quot;item in list&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;item.id&quot;</span> <span class="attr">:item</span>=<span class="string">&quot;item&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">cart-item</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<p><code>cart-item.vue</code></p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;goods-container&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="comment">&lt;!-- 左侧图片区域 --&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;left&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">img</span> <span class="attr">:src</span>=<span class="string">&quot;item.thumb&quot;</span> <span class="attr">class</span>=<span class="string">&quot;avatar&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="comment">&lt;!-- 右侧商品区域 --&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;right&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="comment">&lt;!-- 标题 --&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;title&quot;</span>&gt;</span>&#123;&#123;item.name&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;info&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="comment">&lt;!-- 单价 --&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;price&quot;</span>&gt;</span>￥&#123;&#123;item.price&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;btns&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="comment">&lt;!-- 按钮区域 --&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-light&quot;</span>&gt;</span>-<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;count&quot;</span>&gt;</span>&#123;&#123;item.count&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-light&quot;</span>&gt;</span>+<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">name</span>: <span class="string">&#x27;CartItem&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">props</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">item</span>: <span class="title class_">Object</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">methods</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>



<h2 id="二十六、综合案例-修改数量"><a href="#二十六、综合案例-修改数量" class="headerlink" title="二十六、综合案例-修改数量"></a>二十六、综合案例-修改数量</h2><img data-src="/2024/11/19/Vue2-0/1683437346997.png" class="" width="68343734699">

<ol>
<li>注册点击事件</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;!-- 按钮区域 --&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-light&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;onBtnClick(-1)&quot;</span>&gt;</span>-<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;count&quot;</span>&gt;</span>&#123;&#123;item.count&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-light&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;onBtnClick(1)&quot;</span>&gt;</span>+<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<ol start="2">
<li>页面中dispatch action</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="title function_">onBtnClick</span> (step) &#123;</span><br><span class="line">  <span class="keyword">const</span> newCount = <span class="variable language_">this</span>.<span class="property">item</span>.<span class="property">count</span> + step</span><br><span class="line">  <span class="keyword">if</span> (newCount &lt; <span class="number">1</span>) <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 发送修改数量请求</span></span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">$store</span>.<span class="title function_">dispatch</span>(<span class="string">&#x27;cart/updateCount&#x27;</span>, &#123;</span><br><span class="line">    <span class="attr">id</span>: <span class="variable language_">this</span>.<span class="property">item</span>.<span class="property">id</span>,</span><br><span class="line">    <span class="attr">count</span>: newCount</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>提供action函数</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="title function_">updateCount</span> (ctx, payload) &#123;</span><br><span class="line">  <span class="keyword">await</span> axios.<span class="title function_">patch</span>(<span class="string">&#x27;http://localhost:3000/cart/&#x27;</span> + payload.<span class="property">id</span>, &#123;</span><br><span class="line">    <span class="attr">count</span>: payload.<span class="property">count</span></span><br><span class="line">  &#125;)</span><br><span class="line">  ctx.<span class="title function_">commit</span>(<span class="string">&#x27;updateCount&#x27;</span>, payload)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="4">
<li>提供mutation处理函数</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="attr">mutations</span>: &#123;</span><br><span class="line">  ...,</span><br><span class="line">  <span class="title function_">updateCount</span> (state, payload) &#123;</span><br><span class="line">    <span class="keyword">const</span> goods = state.<span class="property">list</span>.<span class="title function_">find</span>(<span class="function">(<span class="params">item</span>) =&gt;</span> item.<span class="property">id</span> === payload.<span class="property">id</span>)</span><br><span class="line">    goods.<span class="property">count</span> = payload.<span class="property">count</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>



<h2 id="二十七、综合案例-底部总价展示"><a href="#二十七、综合案例-底部总价展示" class="headerlink" title="二十七、综合案例-底部总价展示"></a>二十七、综合案例-底部总价展示</h2><ol>
<li>提供getters</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="attr">getters</span>: &#123;</span><br><span class="line">  <span class="title function_">total</span>(<span class="params">state</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> state.<span class="property">list</span>.<span class="title function_">reduce</span>(<span class="function">(<span class="params">p, c</span>) =&gt;</span> p + c.<span class="property">count</span>, <span class="number">0</span>);</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="title function_">totalPrice</span> (state) &#123;</span><br><span class="line">    <span class="keyword">return</span> state.<span class="property">list</span>.<span class="title function_">reduce</span>(<span class="function">(<span class="params">p, c</span>) =&gt;</span> p + c.<span class="property">count</span> * c.<span class="property">price</span>, <span class="number">0</span>);</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>动态渲染</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;footer-container&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="comment">&lt;!-- 中间的合计 --&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">span</span>&gt;</span>共 &#123;&#123;total&#125;&#125; 件商品，合计：<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;price&quot;</span>&gt;</span>￥&#123;&#123;totalPrice&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="comment">&lt;!-- 右侧结算按钮 --&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-success btn-settle&quot;</span>&gt;</span>结算<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">import</span> &#123; mapGetters &#125; <span class="keyword">from</span> <span class="string">&#x27;vuex&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">name</span>: <span class="string">&#x27;CartFooter&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">computed</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    ...<span class="title function_">mapGetters</span>(<span class="string">&#x27;cart&#x27;</span>, [<span class="string">&#x27;total&#x27;</span>, <span class="string">&#x27;totalPrice&#x27;</span>])</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>


































]]></content>
      <categories>
        <category>前端</category>
        <category>Vue</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>Vue2.0</tag>
      </tags>
  </entry>
  <entry>
    <title>大事件管理系统-Vue3</title>
    <url>/2024/11/19/%E5%A4%A7%E4%BA%8B%E4%BB%B6%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F-Vue3/</url>
    <content><![CDATA[<h1 id="后台数据管理系统-项目架构设计"><a href="#后台数据管理系统-项目架构设计" class="headerlink" title="后台数据管理系统 - 项目架构设计"></a>后台数据管理系统 - 项目架构设计</h1><p>在线演示：<a href="https://fe-bigevent-web.itheima.net/login">https://fe-bigevent-web.itheima.net/login</a></p>
<p>接口文档:   <a href="https://apifox.com/apidoc/shared-26c67aee-0233-4d23-aab7-08448fdf95ff/api-93850835">https://apifox.com/apidoc/shared-26c67aee-0233-4d23-aab7-08448fdf95ff/api-93850835</a></p>
<p><strong>接口根路径：</strong>  <a href="http://big-event-vue-api-t.itheima.net/">http://big-event-vue-api-t.itheima.net</a></p>
<p>本项目的技术栈 本项目技术栈基于 <a href="http://es6.ruanyifeng.com/">ES6</a>、<a href="https://cn.vuejs.org/index.html">vue3</a>、<a href="https://pinia.web3doc.top/">pinia</a>、<a href="https://router.vuejs.org/">vue-router</a> 、vite 、axios 和 <a href="https://element-plus.org/">element-plus</a></p>
<p><img data-src="/assets/image-20230711003405635.png" alt="image-20230711003405635"></p>
<h2 id="项目页面介绍"><a href="#项目页面介绍" class="headerlink" title="项目页面介绍"></a>项目页面介绍</h2><p><img data-src="/assets/image-20230706205300370.png" alt="image-20230706205300370"></p>
<p><img data-src="/assets/image-20230706210947086.png" alt="image-20230706210947086"></p>
<p><img data-src="/assets/image-20230706211055251.png" alt="image-20230706211055251"></p>
<p><img data-src="/assets/image-20230706211033589.png" alt="image-20230706211033589"></p>
<h2 id="pnpm-包管理器-创建项目"><a href="#pnpm-包管理器-创建项目" class="headerlink" title="pnpm 包管理器 - 创建项目"></a>pnpm 包管理器 - 创建项目</h2><p>一些优势：比同类工具快 2倍 左右、节省磁盘空间… <a href="https://www.pnpm.cn/">https://www.pnpm.cn/</a></p>
<p>安装方式：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install -g pnpm</span><br></pre></td></tr></table></figure>

<p>创建项目：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pnpm create vue</span><br></pre></td></tr></table></figure>

<p><img data-src="/assets/image-20230710172832242.png" alt="image-20230710172832242"></p>
<h2 id="ESLint-prettier-配置代码风格"><a href="#ESLint-prettier-配置代码风格" class="headerlink" title="ESLint &amp; prettier 配置代码风格"></a>ESLint &amp; prettier 配置代码风格</h2><p><strong>环境同步：</strong></p>
<ol>
<li><strong>安装了插件 ESlint，开启保存自动修复</strong></li>
<li><strong>禁用了插件 Prettier，并关闭保存自动格式化</strong></li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="comment">// ESlint插件 + Vscode配置 实现自动格式化修复</span></span><br><span class="line"><span class="string">&quot;editor.codeActionsOnSave&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;source.fixAll&quot;</span>: <span class="literal">true</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="string">&quot;editor.formatOnSave&quot;</span>: <span class="literal">false</span>,</span><br></pre></td></tr></table></figure>

<p><strong>配置文件 .eslintrc.cjs</strong></p>
<ol>
<li><p>prettier 风格配置 <a href="https://prettier.io/docs/en/options.html">https://prettier.io</a></p>
<ol>
<li><p>单引号</p>
</li>
<li><p>不使用分号</p>
</li>
<li><p>每行宽度至多80字符</p>
</li>
<li><p>不加对象|数组最后逗号</p>
</li>
<li><p>换行符号不限制（win mac 不一致）</p>
</li>
</ol>
</li>
<li><p>vue组件名称多单词组成（忽略index.vue）</p>
</li>
<li><p>props解构（关闭）</p>
</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="attr">rules</span>: &#123;</span><br><span class="line">  <span class="string">&#x27;prettier/prettier&#x27;</span>: [</span><br><span class="line">    <span class="string">&#x27;warn&#x27;</span>,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">singleQuote</span>: <span class="literal">true</span>, <span class="comment">// 单引号</span></span><br><span class="line">      <span class="attr">semi</span>: <span class="literal">false</span>, <span class="comment">// 无分号</span></span><br><span class="line">      <span class="attr">printWidth</span>: <span class="number">80</span>, <span class="comment">// 每行宽度至多80字符</span></span><br><span class="line">      <span class="attr">trailingComma</span>: <span class="string">&#x27;none&#x27;</span>, <span class="comment">// 不加对象|数组最后逗号</span></span><br><span class="line">      <span class="attr">endOfLine</span>: <span class="string">&#x27;auto&#x27;</span> <span class="comment">// 换行符号不限制（win mac 不一致）</span></span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="string">&#x27;vue/multi-word-component-names&#x27;</span>: [</span><br><span class="line">    <span class="string">&#x27;warn&#x27;</span>,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">ignores</span>: [<span class="string">&#x27;index&#x27;</span>] <span class="comment">// vue组件名称多单词组成（忽略index.vue）</span></span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="string">&#x27;vue/no-setup-props-destructure&#x27;</span>: [<span class="string">&#x27;off&#x27;</span>], <span class="comment">// 关闭 props 解构的校验</span></span><br><span class="line">  <span class="comment">// 💡 添加未定义变量错误提示，create-vue@3.6.3 关闭，这里加上是为了支持下一个章节演示。</span></span><br><span class="line">  <span class="string">&#x27;no-undef&#x27;</span>: <span class="string">&#x27;error&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="基于-husky-的代码检查工作流"><a href="#基于-husky-的代码检查工作流" class="headerlink" title="基于 husky  的代码检查工作流"></a>基于 husky  的代码检查工作流</h2><p>husky 是一个 git hooks 工具  ( git的钩子工具，可以在特定时机执行特定的命令 )</p>
<p><strong>husky 配置</strong></p>
<ol>
<li><p>git初始化 git init</p>
</li>
<li><p>初始化 husky 工具配置  <a href="https://typicode.github.io/husky/">https://typicode.github.io/husky/</a></p>
</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">pnpm dlx husky-init &amp;&amp; pnpm install</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>修改 .husky&#x2F;pre-commit 文件</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">pnpm lint</span><br></pre></td></tr></table></figure>

<p><strong>问题：</strong>默认进行的是全量检查，耗时问题，历史问题。</p>
<p><strong>lint-staged 配置</strong></p>
<ol>
<li>安装</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">pnpm i lint-staged -D</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>配置 <code>package.json</code></li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="comment">// ... 省略 ...</span></span><br><span class="line">  <span class="string">&quot;lint-staged&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;*.&#123;js,ts,vue&#125;&quot;</span>: [</span><br><span class="line">      <span class="string">&quot;eslint --fix&quot;</span></span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;scripts&quot;</span>: &#123;</span><br><span class="line">    <span class="comment">// ... 省略 ...</span></span><br><span class="line">    <span class="string">&quot;lint-staged&quot;</span>: <span class="string">&quot;lint-staged&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>修改 .husky&#x2F;pre-commit 文件</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">pnpm lint-staged</span><br></pre></td></tr></table></figure>





<h2 id="调整项目目录"><a href="#调整项目目录" class="headerlink" title="调整项目目录"></a>调整项目目录</h2><p>默认生成的目录结构不满足我们的开发需求，所以这里需要做一些自定义改动。主要是两个工作：</p>
<ul>
<li>删除初始化的默认文件</li>
<li>修改剩余代码内容</li>
<li>新增调整我们需要的目录结构</li>
<li>拷贝初始化资源文件，安装预处理器插件</li>
</ul>
<ol>
<li><p>删除文件</p>
</li>
<li><p>修改内容</p>
</li>
</ol>
<p><code>src/router/index.js</code></p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createRouter, createWebHistory &#125; <span class="keyword">from</span> <span class="string">&#x27;vue-router&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> router = <span class="title function_">createRouter</span>(&#123;</span><br><span class="line">  <span class="attr">history</span>: <span class="title function_">createWebHistory</span>(<span class="keyword">import</span>.<span class="property">meta</span>.<span class="property">env</span>.<span class="property">BASE_URL</span>),</span><br><span class="line">  <span class="attr">routes</span>: []</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router</span><br></pre></td></tr></table></figure>

<p><code>src/App.vue</code></p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;&lt;/script&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">router-view</span>&gt;</span><span class="tag">&lt;/<span class="name">router-view</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span>&gt;</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<p><code>src/main.js</code></p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createApp &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; createPinia &#125; <span class="keyword">from</span> <span class="string">&#x27;pinia&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">App</span> <span class="keyword">from</span> <span class="string">&#x27;./App.vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">&#x27;./router&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">createApp</span>(<span class="title class_">App</span>)</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">use</span>(<span class="title function_">createPinia</span>())</span><br><span class="line">app.<span class="title function_">use</span>(router)</span><br><span class="line">app.<span class="title function_">mount</span>(<span class="string">&#x27;#app&#x27;</span>)</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>新增需要目录 api  utils</li>
</ol>
<p><img data-src="/assets/image-20230710215822678.png" alt="image-20230710215822678"></p>
<ol start="4">
<li>将项目需要的全局样式 和 图片文件，复制到 assets 文件夹中,  并将全局样式在main.js中引入</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">&#x27;@/assets/main.scss&#x27;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>安装 sass 依赖</li>
</ul>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">pnpm add sass -D</span><br></pre></td></tr></table></figure>





<h2 id="VueRouter4-路由代码解析"><a href="#VueRouter4-路由代码解析" class="headerlink" title="VueRouter4 路由代码解析"></a>VueRouter4 路由代码解析</h2><p>基础代码解析</p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createRouter, createWebHistory &#125; <span class="keyword">from</span> <span class="string">&#x27;vue-router&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// createRouter 创建路由实例，===&gt; new VueRouter()</span></span><br><span class="line"><span class="comment">// 1. history模式: createWebHistory()   http://xxx/user</span></span><br><span class="line"><span class="comment">// 2. hash模式: createWebHashHistory()  http://xxx/#/user</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// vite 的配置 import.meta.env.BASE_URL 是路由的基准地址，默认是 ’/‘</span></span><br><span class="line"><span class="comment">// https://vitejs.dev/guide/build.html#public-base-path</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 如果将来你部署的域名路径是：http://xxx/my-path/user</span></span><br><span class="line"><span class="comment">// vite.config.ts  添加配置  base: my-path，路由这就会加上 my-path 前缀了</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> router = <span class="title function_">createRouter</span>(&#123;</span><br><span class="line">  <span class="attr">history</span>: <span class="title function_">createWebHistory</span>(<span class="keyword">import</span>.<span class="property">meta</span>.<span class="property">env</span>.<span class="property">BASE_URL</span>),</span><br><span class="line">  <span class="attr">routes</span>: []</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router</span><br></pre></td></tr></table></figure>

<p>import.meta.env.BASE_URL 是Vite 环境变量：<a href="https://cn.vitejs.dev/guide/env-and-mode.html">https://cn.vitejs.dev/guide/env-and-mode.html</a></p>
<h2 id="引入-element-ui-组件库"><a href="#引入-element-ui-组件库" class="headerlink" title="引入 element-ui 组件库"></a>引入 element-ui 组件库</h2><p><strong>官方文档：</strong> <a href="https://element-plus.org/zh-CN/">https://element-plus.org/zh-CN/</a></p>
<ul>
<li>安装</li>
</ul>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">$ pnpm add element-plus</span><br></pre></td></tr></table></figure>

<p><strong>自动按需：</strong></p>
<ol>
<li>安装插件</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">pnpm add -D unplugin-vue-components unplugin-auto-<span class="keyword">import</span></span><br></pre></td></tr></table></figure>

<ol start="2">
<li>然后把下列代码插入到你的 <code>Vite</code> 或 <code>Webpack</code> 的配置文件中</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">AutoImport</span> <span class="keyword">from</span> <span class="string">&#x27;unplugin-auto-import/vite&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Components</span> <span class="keyword">from</span> <span class="string">&#x27;unplugin-vue-components/vite&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ElementPlusResolver</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;unplugin-vue-components/resolvers&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// https://vitejs.dev/config/</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">defineConfig</span>(&#123;</span><br><span class="line">  <span class="attr">plugins</span>: [</span><br><span class="line">    ...</span><br><span class="line">    <span class="title class_">AutoImport</span>(&#123;</span><br><span class="line">      <span class="attr">resolvers</span>: [<span class="title class_">ElementPlusResolver</span>()]</span><br><span class="line">    &#125;),</span><br><span class="line">    <span class="title class_">Components</span>(&#123;</span><br><span class="line">      <span class="attr">resolvers</span>: [<span class="title class_">ElementPlusResolver</span>()]</span><br><span class="line">    &#125;)</span><br><span class="line">  ]</span><br><span class="line">&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ol start="3">
<li>直接使用</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span>&gt;</span>Primary<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;success&quot;</span>&gt;</span>Success<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;info&quot;</span>&gt;</span>Info<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;warning&quot;</span>&gt;</span>Warning<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;danger&quot;</span>&gt;</span>Danger<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    ...</span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure>

<p><img data-src="/assets/image-20230710225018162.png" alt="image-20230710225018162"></p>
<p><strong>彩蛋：</strong>默认 components 下的文件也会被自动注册~</p>
<h2 id="Pinia-构建用户仓库-和-持久化"><a href="#Pinia-构建用户仓库-和-持久化" class="headerlink" title="Pinia - 构建用户仓库 和 持久化"></a>Pinia - 构建用户仓库 和 持久化</h2><p>官方文档：<a href="https://prazdevs.github.io/pinia-plugin-persistedstate/zh/">https://prazdevs.github.io/pinia-plugin-persistedstate/zh/</a></p>
<ol>
<li>安装插件 pinia-plugin-persistedstate</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">pnpm add pinia-plugin-persistedstate -D</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>使用 main.js</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> persist <span class="keyword">from</span> <span class="string">&#x27;pinia-plugin-persistedstate&#x27;</span></span><br><span class="line">...</span><br><span class="line">app.<span class="title function_">use</span>(<span class="title function_">createPinia</span>().<span class="title function_">use</span>(persist))</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>配置 stores&#x2F;user.js</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; defineStore &#125; <span class="keyword">from</span> <span class="string">&#x27;pinia&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; ref &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 用户模块</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> useUserStore = <span class="title function_">defineStore</span>(</span><br><span class="line">  <span class="string">&#x27;big-user&#x27;</span>,</span><br><span class="line">  <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> token = <span class="title function_">ref</span>(<span class="string">&#x27;&#x27;</span>) <span class="comment">// 定义 token</span></span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">setToken</span> = (<span class="params">t</span>) =&gt; (token.<span class="property">value</span> = t) <span class="comment">// 设置 token</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> &#123; token, setToken &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">persist</span>: <span class="literal">true</span> <span class="comment">// 持久化</span></span><br><span class="line">  &#125;</span><br><span class="line">)</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h2 id="Pinia-配置仓库统一管理"><a href="#Pinia-配置仓库统一管理" class="headerlink" title="Pinia - 配置仓库统一管理"></a>Pinia - 配置仓库统一管理</h2><p>pinia 独立维护</p>
<p>- 现在：初始化代码在 main.js 中，仓库代码在 stores 中，代码分散职能不单一</p>
<p>- 优化：由 stores 统一维护，在 stores&#x2F;index.js 中完成 pinia 初始化，交付 main.js 使用</p>
<p>仓库 统一导出</p>
<p>- 现在：使用一个仓库 import { useUserStore } from <code>./stores/user.js</code> 不同仓库路径不一致</p>
<p>- 优化：由 stores&#x2F;index.js 统一导出，导入路径统一 <code>./stores</code>，而且仓库维护在 stores&#x2F;modules 中</p>
<h2 id="数据交互-请求工具设计"><a href="#数据交互-请求工具设计" class="headerlink" title="数据交互 - 请求工具设计"></a>数据交互 - 请求工具设计</h2><p><img data-src="/assets/image-20230711071913061.png" alt="image-20230711071913061"></p>
<h3 id="1-创建-axios-实例"><a href="#1-创建-axios-实例" class="headerlink" title="1. 创建 axios 实例"></a>1. 创建 axios 实例</h3><p>们会使用 axios 来请求后端接口, 一般都会对 axios 进行一些配置 (比如: 配置基础地址等)</p>
<p>一般项目开发中, 都会对 axios 进行基本的二次封装, 单独封装到一个模块中, 便于使用</p>
<ol>
<li>安装 axios</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pnpm add axios</span><br></pre></td></tr></table></figure>

<ol start="2">
<li><p>新建 <code>utils/request.js</code> 封装 axios 模块</p>
<p>利用 axios.create 创建一个自定义的 axios 来使用</p>
<p><a href="http://www.axios-js.com/zh-cn/docs/#axios-create-config">http://www.axios-js.com/zh-cn/docs/#axios-create-config</a></p>
</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&#x27;axios&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> baseURL = <span class="string">&#x27;http://big-event-vue-api-t.itheima.net&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> instance = axios.<span class="title function_">create</span>(&#123;</span><br><span class="line">  <span class="comment">// TODO 1. 基础地址，超时时间</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">instance.<span class="property">interceptors</span>.<span class="property">request</span>.<span class="title function_">use</span>(</span><br><span class="line">  <span class="function">(<span class="params">config</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// TODO 2. 携带token</span></span><br><span class="line">    <span class="keyword">return</span> config</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="function">(<span class="params">err</span>) =&gt;</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(err)</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">instance.<span class="property">interceptors</span>.<span class="property">response</span>.<span class="title function_">use</span>(</span><br><span class="line">  <span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// TODO 3. 处理业务失败</span></span><br><span class="line">    <span class="comment">// TODO 4. 摘取核心响应数据</span></span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// TODO 5. 处理401错误</span></span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(err)</span><br><span class="line">  &#125;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> instance</span><br></pre></td></tr></table></figure>



<h3 id="2-完成-axios-基本配置"><a href="#2-完成-axios-基本配置" class="headerlink" title="2. 完成 axios 基本配置"></a>2. 完成 axios 基本配置</h3><figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; useUserStore &#125; <span class="keyword">from</span> <span class="string">&#x27;@/stores/user&#x27;</span></span><br><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&#x27;axios&#x27;</span></span><br><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">&#x27;@/router&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ElMessage</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;element-plus&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> baseURL = <span class="string">&#x27;http://big-event-vue-api-t.itheima.net&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> instance = axios.<span class="title function_">create</span>(&#123;</span><br><span class="line">  baseURL,</span><br><span class="line">  <span class="attr">timeout</span>: <span class="number">100000</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">instance.<span class="property">interceptors</span>.<span class="property">request</span>.<span class="title function_">use</span>(</span><br><span class="line">  <span class="function">(<span class="params">config</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> userStore = <span class="title function_">useUserStore</span>()</span><br><span class="line">    <span class="keyword">if</span> (userStore.<span class="property">token</span>) &#123;</span><br><span class="line">      config.<span class="property">headers</span>.<span class="property">Authorization</span> = userStore.<span class="property">token</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> config</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="function">(<span class="params">err</span>) =&gt;</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(err)</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">instance.<span class="property">interceptors</span>.<span class="property">response</span>.<span class="title function_">use</span>(</span><br><span class="line">  <span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (res.<span class="property">data</span>.<span class="property">code</span> === <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> res</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title class_">ElMessage</span>(&#123; <span class="attr">message</span>: res.<span class="property">data</span>.<span class="property">message</span> || <span class="string">&#x27;服务异常&#x27;</span>, <span class="attr">type</span>: <span class="string">&#x27;error&#x27;</span> &#125;)</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(res.<span class="property">data</span>)</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="title class_">ElMessage</span>(&#123; <span class="attr">message</span>: err.<span class="property">response</span>.<span class="property">data</span>.<span class="property">message</span> || <span class="string">&#x27;服务异常&#x27;</span>, <span class="attr">type</span>: <span class="string">&#x27;error&#x27;</span> &#125;)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(err)</span><br><span class="line">    <span class="keyword">if</span> (err.<span class="property">response</span>?.<span class="property">status</span> === <span class="number">401</span>) &#123;</span><br><span class="line">      router.<span class="title function_">push</span>(<span class="string">&#x27;/login&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(err)</span><br><span class="line">  &#125;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> instance</span><br><span class="line"><span class="keyword">export</span> &#123; baseURL &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>





<h2 id="首页整体路由设计"><a href="#首页整体路由设计" class="headerlink" title="首页整体路由设计"></a>首页整体路由设计</h2><p><strong>实现目标:</strong></p>
<ul>
<li>完成整体路由规划【搞清楚要做几个页面，它们分别在哪个路由下面，怎么跳转的…..】</li>
<li>通过观察,  点击左侧导航,  右侧区域在切换,  那右侧区域内容一直在变,  那这个地方就是一个路由的出口</li>
<li>我们需要搭建嵌套路由</li>
</ul>
<p>目标：</p>
<ul>
<li>把项目中所有用到的组件及路由表, 约定下来</li>
</ul>
<p><strong>约定路由规则</strong></p>
<table>
<thead>
<tr>
<th>path</th>
<th>文件</th>
<th>功能</th>
<th>组件名</th>
<th>路由级别</th>
</tr>
</thead>
<tbody><tr>
<td>&#x2F;login</td>
<td>views&#x2F;login&#x2F;LoginPage.vue</td>
<td>登录&amp;注册</td>
<td>LoginPage</td>
<td>一级路由</td>
</tr>
<tr>
<td>&#x2F;</td>
<td>views&#x2F;layout&#x2F;LayoutContainer.vue</td>
<td>布局架子</td>
<td>LayoutContainer</td>
<td>一级路由</td>
</tr>
<tr>
<td>├─ &#x2F;article&#x2F;manage</td>
<td>views&#x2F;article&#x2F;ArticleManage.vue</td>
<td>文章管理</td>
<td>ArticleManage</td>
<td>二级路由</td>
</tr>
<tr>
<td>├─ &#x2F;article&#x2F;channel</td>
<td>views&#x2F;article&#x2F;ArticleChannel.vue</td>
<td>频道管理</td>
<td>ArticleChannel</td>
<td>二级路由</td>
</tr>
<tr>
<td>├─ &#x2F;user&#x2F;profile</td>
<td>views&#x2F;user&#x2F;UserProfile.vue</td>
<td>个人详情</td>
<td>UserProfile</td>
<td>二级路由</td>
</tr>
<tr>
<td>├─ &#x2F;user&#x2F;avatar</td>
<td>views&#x2F;user&#x2F;UserAvatar.vue</td>
<td>更换头像</td>
<td>UserAvatar</td>
<td>二级路由</td>
</tr>
<tr>
<td>├─ &#x2F;user&#x2F;password</td>
<td>views&#x2F;user&#x2F;UserPassword.vue</td>
<td>重置密码</td>
<td>UserPassword</td>
<td>二级路由</td>
</tr>
</tbody></table>
<p>明确了路由规则，可以全部配完，也可以边写边配。</p>
<h1 id="登录注册页面-element-plus-表单-表单校验"><a href="#登录注册页面-element-plus-表单-表单校验" class="headerlink" title="登录注册页面 [element-plus 表单 &amp; 表单校验]"></a>登录注册页面 [element-plus 表单 &amp; 表单校验]</h1><h2 id="注册登录-静态结构-基本切换"><a href="#注册登录-静态结构-基本切换" class="headerlink" title="注册登录 静态结构 &amp; 基本切换"></a>注册登录 静态结构 &amp; 基本切换</h2><ol>
<li>安装 element-plus 图标库</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">pnpm i @element-plus/icons-vue</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>静态结构准备</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">User</span>, <span class="title class_">Lock</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;@element-plus/icons-vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; ref &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">const</span> isRegister = <span class="title function_">ref</span>(<span class="literal">true</span>)</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">el-row</span> <span class="attr">class</span>=<span class="string">&quot;login-page&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;12&quot;</span> <span class="attr">class</span>=<span class="string">&quot;bg&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;6&quot;</span> <span class="attr">:offset</span>=<span class="string">&quot;3&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">el-form</span> <span class="attr">ref</span>=<span class="string">&quot;form&quot;</span> <span class="attr">size</span>=<span class="string">&quot;large&quot;</span> <span class="attr">autocomplete</span>=<span class="string">&quot;off&quot;</span> <span class="attr">v-if</span>=<span class="string">&quot;isRegister&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">h1</span>&gt;</span>注册<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">:prefix-icon</span>=<span class="string">&quot;User&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入用户名&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">el-input</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">:prefix-icon</span>=<span class="string">&quot;Lock&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">type</span>=<span class="string">&quot;password&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">placeholder</span>=<span class="string">&quot;请输入密码&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          &gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">el-input</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">:prefix-icon</span>=<span class="string">&quot;Lock&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">type</span>=<span class="string">&quot;password&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">placeholder</span>=<span class="string">&quot;请输入再次密码&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          &gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">class</span>=<span class="string">&quot;button&quot;</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> <span class="attr">auto-insert-space</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            注册</span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">class</span>=<span class="string">&quot;flex&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">el-link</span> <span class="attr">type</span>=<span class="string">&quot;info&quot;</span> <span class="attr">:underline</span>=<span class="string">&quot;false&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;isRegister = false&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            ← 返回</span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">el-link</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">el-form</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">el-form</span> <span class="attr">ref</span>=<span class="string">&quot;form&quot;</span> <span class="attr">size</span>=<span class="string">&quot;large&quot;</span> <span class="attr">autocomplete</span>=<span class="string">&quot;off&quot;</span> <span class="attr">v-else</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">h1</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">:prefix-icon</span>=<span class="string">&quot;User&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入用户名&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">el-input</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">name</span>=<span class="string">&quot;password&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">:prefix-icon</span>=<span class="string">&quot;Lock&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">type</span>=<span class="string">&quot;password&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">placeholder</span>=<span class="string">&quot;请输入密码&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          &gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">class</span>=<span class="string">&quot;flex&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;flex&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">el-checkbox</span>&gt;</span>记住我<span class="tag">&lt;/<span class="name">el-checkbox</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">el-link</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> <span class="attr">:underline</span>=<span class="string">&quot;false&quot;</span>&gt;</span>忘记密码？<span class="tag">&lt;/<span class="name">el-link</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">class</span>=<span class="string">&quot;button&quot;</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> <span class="attr">auto-insert-space</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            &gt;</span>登录&lt;/el-button</span></span><br><span class="line"><span class="language-xml">          &gt;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">class</span>=<span class="string">&quot;flex&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">el-link</span> <span class="attr">type</span>=<span class="string">&quot;info&quot;</span> <span class="attr">:underline</span>=<span class="string">&quot;false&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;isRegister = true&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            注册 →</span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">el-link</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">el-form</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">el-row</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">style</span> <span class="attr">lang</span>=<span class="string">&quot;scss&quot;</span> <span class="attr">scoped</span>&gt;</span><span class="language-css"></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"><span class="selector-class">.login-page</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">height</span>: <span class="number">100vh</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="selector-class">.bg</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">&#x27;@/assets/logo2.png&#x27;</span>) no-repeat <span class="number">60%</span> center / <span class="number">240px</span> auto,</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="built_in">url</span>(<span class="string">&#x27;@/assets/login_bg.jpg&#x27;</span>) no-repeat center / cover;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">border-radius</span>: <span class="number">0</span> <span class="number">20px</span> <span class="number">20px</span> <span class="number">0</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="selector-class">.form</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">display</span>: flex;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">flex-direction</span>: column;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">justify-content</span>: center;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    user-<span class="selector-tag">select</span>: none;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="selector-class">.title</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">margin</span>: <span class="number">0</span> auto;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="selector-class">.button</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">width</span>: <span class="number">100%</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="selector-class">.flex</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">width</span>: <span class="number">100%</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">display</span>: flex;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">justify-content</span>: space-between;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure>









<h2 id="注册功能"><a href="#注册功能" class="headerlink" title="注册功能"></a>注册功能</h2><h3 id="实现注册校验"><a href="#实现注册校验" class="headerlink" title="实现注册校验"></a>实现注册校验</h3><p>【需求】注册页面基本校验</p>
<ol>
<li>用户名非空，长度校验5-10位</li>
<li>密码非空，长度校验6-15位</li>
<li>再次输入密码，非空，长度校验6-15位</li>
</ol>
<p>【进阶】再次输入密码需要自定义校验规则，和密码框值一致（可选）</p>
<p>注意：</p>
<ol>
<li>model 属性绑定 form 数据对象</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> formModel = <span class="title function_">ref</span>(&#123;</span><br><span class="line">  <span class="attr">username</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">  <span class="attr">password</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">  <span class="attr">repassword</span>: <span class="string">&#x27;&#x27;</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">&lt;el-form :model=<span class="string">&quot;formModel&quot;</span> &gt;</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>v-model 绑定 form 数据对象的子属性</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;el-input</span><br><span class="line">  v-model=<span class="string">&quot;formModel.username&quot;</span></span><br><span class="line">  :prefix-icon=<span class="string">&quot;User&quot;</span></span><br><span class="line">  placeholder=<span class="string">&quot;请输入用户名&quot;</span></span><br><span class="line">&gt;&lt;/el-input&gt;</span><br><span class="line">... </span><br><span class="line">(其他两个也要绑定)</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>rules 配置校验规则</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;el-form :rules=<span class="string">&quot;rules&quot;</span> &gt;</span><br><span class="line">    </span><br><span class="line"><span class="keyword">const</span> rules = &#123;</span><br><span class="line">  <span class="attr">username</span>: [</span><br><span class="line">    &#123; <span class="attr">required</span>: <span class="literal">true</span>, <span class="attr">message</span>: <span class="string">&#x27;请输入用户名&#x27;</span>, <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">min</span>: <span class="number">5</span>, <span class="attr">max</span>: <span class="number">10</span>, <span class="attr">message</span>: <span class="string">&#x27;用户名必须是5-10位的字符&#x27;</span>, <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span> &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">password</span>: [</span><br><span class="line">    &#123; <span class="attr">required</span>: <span class="literal">true</span>, <span class="attr">message</span>: <span class="string">&#x27;请输入密码&#x27;</span>, <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span> &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">pattern</span>: <span class="regexp">/^\S&#123;6,15&#125;$/</span>,</span><br><span class="line">      <span class="attr">message</span>: <span class="string">&#x27;密码必须是6-15位的非空字符&#x27;</span>,</span><br><span class="line">      <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">repassword</span>: [</span><br><span class="line">    &#123; <span class="attr">required</span>: <span class="literal">true</span>, <span class="attr">message</span>: <span class="string">&#x27;请再次输入密码&#x27;</span>, <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span> &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">pattern</span>: <span class="regexp">/^\S&#123;6,15&#125;$/</span>,</span><br><span class="line">      <span class="attr">message</span>: <span class="string">&#x27;密码必须是6-15的非空字符&#x27;</span>,</span><br><span class="line">      <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">validator</span>: <span class="function">(<span class="params">rule, value, callback</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (value !== formModel.<span class="property">value</span>.<span class="property">password</span>) &#123;</span><br><span class="line">          <span class="title function_">callback</span>(<span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;两次输入密码不一致!&#x27;</span>))</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="title function_">callback</span>()</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="4">
<li>prop 绑定校验规则</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;el-form-item prop=<span class="string">&quot;username&quot;</span>&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">el-input</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">v-model</span>=<span class="string">&quot;formModel.username&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">:prefix-icon</span>=<span class="string">&quot;User&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">placeholder</span>=<span class="string">&quot;请输入用户名&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">  &gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span></span><br><span class="line">&lt;/el-form-item&gt;</span><br><span class="line">... </span><br><span class="line">(其他两个也要绑定prop)</span><br></pre></td></tr></table></figure>



<h3 id="注册前的预校验"><a href="#注册前的预校验" class="headerlink" title="注册前的预校验"></a>注册前的预校验</h3><p>需求：点击注册按钮，注册之前，需要先校验</p>
<ol>
<li>通过 ref 获取到 表单组件</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> form = <span class="title function_">ref</span>()</span><br><span class="line"></span><br><span class="line">&lt;el-form ref=<span class="string">&quot;form&quot;</span>&gt;</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>注册之前进行校验</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;el-button</span><br><span class="line">  @click=<span class="string">&quot;register&quot;</span></span><br><span class="line">  <span class="keyword">class</span>=<span class="string">&quot;button&quot;</span></span><br><span class="line">  type=<span class="string">&quot;primary&quot;</span></span><br><span class="line">  auto-insert-space</span><br><span class="line">&gt;</span><br><span class="line">  注册</span><br><span class="line">&lt;/el-button&gt;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">register</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">await</span> form.<span class="property">value</span>.<span class="title function_">validate</span>()</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;开始注册请求&#x27;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="封装-api-实现注册功能"><a href="#封装-api-实现注册功能" class="headerlink" title="封装 api 实现注册功能"></a>封装 api 实现注册功能</h3><p>需求：封装注册api，进行注册，注册成功切换到登录</p>
<ol>
<li>新建 api&#x2F;user.js 封装</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> request <span class="keyword">from</span> <span class="string">&#x27;@/utils/request&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">userRegisterService</span> = (<span class="params">&#123; username, password, repassword &#125;</span>) =&gt;</span><br><span class="line">  request.<span class="title function_">post</span>(<span class="string">&#x27;/api/reg&#x27;</span>, &#123; username, password, repassword &#125;)</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>页面中调用</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">register</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">await</span> form.<span class="property">value</span>.<span class="title function_">validate</span>()</span><br><span class="line">  <span class="keyword">await</span> <span class="title function_">userRegisterService</span>(formModel.<span class="property">value</span>)</span><br><span class="line">  <span class="title class_">ElMessage</span>.<span class="title function_">success</span>(<span class="string">&#x27;注册成功&#x27;</span>)</span><br><span class="line">  <span class="comment">// 切换到登录</span></span><br><span class="line">  isRegister.<span class="property">value</span> = <span class="literal">false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>eslintrc 中声明全局变量名,  解决 ElMessage 报错问题</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  ...</span><br><span class="line">  <span class="attr">globals</span>: &#123;</span><br><span class="line">    <span class="title class_">ElMessage</span>: <span class="string">&#x27;readonly&#x27;</span>,</span><br><span class="line">    <span class="title class_">ElMessageBox</span>: <span class="string">&#x27;readonly&#x27;</span>,</span><br><span class="line">    <span class="title class_">ElLoading</span>: <span class="string">&#x27;readonly&#x27;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>









<h2 id="登录功能"><a href="#登录功能" class="headerlink" title="登录功能"></a>登录功能</h2><h3 id="实现登录校验"><a href="#实现登录校验" class="headerlink" title="实现登录校验"></a>实现登录校验</h3><p>【需求说明】给输入框添加表单校验</p>
<ol>
<li>用户名不能为空，用户名必须是5-10位的字符，失去焦点 和 修改内容时触发校验</li>
<li>密码不能为空，密码必须是6-15位的字符，失去焦点 和 修改内容时触发校验</li>
</ol>
<p>操作步骤：</p>
<ol>
<li>model 属性绑定 form 数据对象，直接绑定之前提供好的数据对象即可</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;el-form :model=<span class="string">&quot;formModel&quot;</span> &gt;</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>rules 配置校验规则，共用注册的规则即可</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;el-form :rules=<span class="string">&quot;rules&quot;</span> &gt;</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>v-model 绑定 form 数据对象的子属性</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;el-input</span><br><span class="line">  v-model=<span class="string">&quot;formModel.username&quot;</span></span><br><span class="line">  :prefix-icon=<span class="string">&quot;User&quot;</span></span><br><span class="line">  placeholder=<span class="string">&quot;请输入用户名&quot;</span></span><br><span class="line">&gt;&lt;/el-input&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">el-input</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">  <span class="attr">v-model</span>=<span class="string">&quot;formModel.password&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">  <span class="attr">name</span>=<span class="string">&quot;password&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">  <span class="attr">:prefix-icon</span>=<span class="string">&quot;Lock&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">  <span class="attr">type</span>=<span class="string">&quot;password&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">  <span class="attr">placeholder</span>=<span class="string">&quot;请输入密码&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<ol start="4">
<li>prop 绑定校验规则</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;el-form-item prop=<span class="string">&quot;username&quot;</span>&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">el-input</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">v-model</span>=<span class="string">&quot;formModel.username&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">:prefix-icon</span>=<span class="string">&quot;User&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">placeholder</span>=<span class="string">&quot;请输入用户名&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">  &gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span></span><br><span class="line">&lt;/el-form-item&gt;</span><br><span class="line">... </span><br></pre></td></tr></table></figure>

<ol start="5">
<li>切换的时候重置</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="title function_">watch</span>(isRegister, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  formModel.<span class="property">value</span> = &#123;</span><br><span class="line">    <span class="attr">username</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">    <span class="attr">password</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">    <span class="attr">repassword</span>: <span class="string">&#x27;&#x27;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>



<h3 id="登录前的预校验-登录成功"><a href="#登录前的预校验-登录成功" class="headerlink" title="登录前的预校验 &amp; 登录成功"></a>登录前的预校验 &amp; 登录成功</h3><p>【需求说明1】登录之前的预校验</p>
<ul>
<li>登录请求之前，需要对用户的输入内容，进行校验</li>
<li>校验通过才发送请求</li>
</ul>
<p>【需求说明2】<strong>登录功能</strong></p>
<ol>
<li>封装登录API，点击按钮发送登录请求</li>
<li>登录成功存储token，存入pinia 和 持久化本地storage</li>
<li>跳转到首页，给提示</li>
</ol>
<p>【测试账号】</p>
<ul>
<li><p>登录的测试账号:  shuaipeng</p>
</li>
<li><p>登录测试密码:  123456</p>
</li>
</ul>
<p>PS: 每天账号会重置，如果被重置了，可以去注册页，注册一个新号</p>
<p>实现步骤：</p>
<ol>
<li>注册事件，进行登录前的预校验 (获取到组件调用方法)</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;el-form ref=<span class="string">&quot;form&quot;</span>&gt;</span><br><span class="line">    </span><br><span class="line"><span class="keyword">const</span> <span class="title function_">login</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">await</span> form.<span class="property">value</span>.<span class="title function_">validate</span>()</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;开始登录&#x27;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>封装接口 API</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">userLoginService</span> = (<span class="params">&#123; username, password &#125;</span>) =&gt;</span><br><span class="line">  request.<span class="title function_">post</span>(<span class="string">&#x27;api/login&#x27;</span>, &#123; username, password &#125;)</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>调用方法将 token 存入 pinia 并 自动持久化本地</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> userStore = <span class="title function_">useUserStore</span>()</span><br><span class="line"><span class="keyword">const</span> router = <span class="title function_">useRouter</span>()</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">login</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">await</span> form.<span class="property">value</span>.<span class="title function_">validate</span>()</span><br><span class="line">  <span class="keyword">const</span> res = <span class="keyword">await</span> <span class="title function_">userLoginService</span>(formModel.<span class="property">value</span>)</span><br><span class="line">  userStore.<span class="title function_">setToken</span>(res.<span class="property">data</span>.<span class="property">token</span>)</span><br><span class="line">  <span class="title class_">ElMessage</span>.<span class="title function_">success</span>(<span class="string">&#x27;登录成功&#x27;</span>)</span><br><span class="line">  router.<span class="title function_">push</span>(<span class="string">&#x27;/&#x27;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>





<h1 id="首页-layout-架子-element-plus-菜单"><a href="#首页-layout-架子-element-plus-菜单" class="headerlink" title="首页 layout 架子 [element-plus 菜单]"></a>首页 layout 架子 [element-plus 菜单]</h1><h2 id="基本架子拆解"><a href="#基本架子拆解" class="headerlink" title="基本架子拆解"></a>基本架子拆解</h2><p><strong>架子组件列表：</strong></p>
<p>el-container</p>
<ul>
<li><p>el-aside 左侧</p>
<ul>
<li>el-menu 左侧边栏菜单</li>
</ul>
</li>
<li><p>el-container  右侧</p>
<ul>
<li>el-header  右侧头部<ul>
<li>el-dropdown</li>
</ul>
</li>
<li>el-main  右侧主体<ul>
<li>router-view</li>
</ul>
</li>
</ul>
</li>
</ul>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line"><span class="keyword">import</span> &#123;</span><br><span class="line">  <span class="title class_">Management</span>,</span><br><span class="line">  <span class="title class_">Promotion</span>,</span><br><span class="line">  <span class="title class_">UserFilled</span>,</span><br><span class="line">  <span class="title class_">User</span>,</span><br><span class="line">  <span class="title class_">Crop</span>,</span><br><span class="line">  <span class="title class_">EditPen</span>,</span><br><span class="line">  <span class="title class_">SwitchButton</span>,</span><br><span class="line">  <span class="title class_">CaretBottom</span></span><br><span class="line">&#125; <span class="keyword">from</span> <span class="string">&#x27;@element-plus/icons-vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> avatar <span class="keyword">from</span> <span class="string">&#x27;@/assets/default.png&#x27;</span></span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;el-container class=&quot;layout-container&quot;&gt;</span><br><span class="line">    &lt;el-aside width=&quot;200px&quot;&gt;</span><br><span class="line">      &lt;div class=&quot;el-aside__logo&quot;&gt;&lt;/div&gt;</span><br><span class="line">      &lt;el-menu</span><br><span class="line">        active-text-color=&quot;#ffd04b&quot;</span><br><span class="line">        background-color=&quot;#232323&quot;</span><br><span class="line">        :default-active=&quot;$route.path&quot;</span><br><span class="line">        text-color=&quot;#fff&quot;</span><br><span class="line">        router</span><br><span class="line">      &gt;</span><br><span class="line">        &lt;el-menu-item index=&quot;/article/channel&quot;&gt;</span><br><span class="line">          &lt;el-icon&gt;&lt;Management /&gt;&lt;/el-icon&gt;</span><br><span class="line">          &lt;span&gt;文章分类&lt;/span&gt;</span><br><span class="line">        &lt;/el-menu-item&gt;</span><br><span class="line">        &lt;el-menu-item index=&quot;/article/manage&quot;&gt;</span><br><span class="line">          &lt;el-icon&gt;&lt;Promotion /&gt;&lt;/el-icon&gt;</span><br><span class="line">          &lt;span&gt;文章管理&lt;/span&gt;</span><br><span class="line">        &lt;/el-menu-item&gt;</span><br><span class="line">        &lt;el-sub-menu index=&quot;/user&quot;&gt;</span><br><span class="line">          &lt;template #title&gt;</span><br><span class="line">            &lt;el-icon&gt;&lt;UserFilled /&gt;&lt;/el-icon&gt;</span><br><span class="line">            &lt;span&gt;个人中心&lt;/span&gt;</span><br><span class="line">          &lt;/template&gt;</span><br><span class="line">          &lt;el-menu-item index=&quot;/user/profile&quot;&gt;</span><br><span class="line">            &lt;el-icon&gt;&lt;User /&gt;&lt;/el-icon&gt;</span><br><span class="line">            &lt;span&gt;基本资料&lt;/span&gt;</span><br><span class="line">          &lt;/el-menu-item&gt;</span><br><span class="line">          &lt;el-menu-item index=&quot;/user/avatar&quot;&gt;</span><br><span class="line">            &lt;el-icon&gt;&lt;Crop /&gt;&lt;/el-icon&gt;</span><br><span class="line">            &lt;span&gt;更换头像&lt;/span&gt;</span><br><span class="line">          &lt;/el-menu-item&gt;</span><br><span class="line">          &lt;el-menu-item index=&quot;/user/password&quot;&gt;</span><br><span class="line">            &lt;el-icon&gt;&lt;EditPen /&gt;&lt;/el-icon&gt;</span><br><span class="line">            &lt;span&gt;重置密码&lt;/span&gt;</span><br><span class="line">          &lt;/el-menu-item&gt;</span><br><span class="line">        &lt;/el-sub-menu&gt;</span><br><span class="line">      &lt;/el-menu&gt;</span><br><span class="line">    &lt;/el-aside&gt;</span><br><span class="line">    &lt;el-container&gt;</span><br><span class="line">      &lt;el-header&gt;</span><br><span class="line">        &lt;div&gt;黑马程序员：&lt;strong&gt;小帅鹏&lt;/strong&gt;&lt;/div&gt;</span><br><span class="line">        &lt;el-dropdown placement=&quot;bottom-end&quot;&gt;</span><br><span class="line">          &lt;span class=&quot;el-dropdown__box&quot;&gt;</span><br><span class="line">            &lt;el-avatar :src=&quot;avatar&quot; /&gt;</span><br><span class="line">            &lt;el-icon&gt;&lt;CaretBottom /&gt;&lt;/el-icon&gt;</span><br><span class="line">          &lt;/span&gt;</span><br><span class="line">          &lt;template #dropdown&gt;</span><br><span class="line">            &lt;el-dropdown-menu&gt;</span><br><span class="line">              &lt;el-dropdown-item command=&quot;profile&quot; :icon=&quot;User&quot;</span><br><span class="line">                &gt;基本资料&lt;/el-dropdown-item</span><br><span class="line">              &gt;</span><br><span class="line">              &lt;el-dropdown-item command=&quot;avatar&quot; :icon=&quot;Crop&quot;</span><br><span class="line">                &gt;更换头像&lt;/el-dropdown-item</span><br><span class="line">              &gt;</span><br><span class="line">              &lt;el-dropdown-item command=&quot;password&quot; :icon=&quot;EditPen&quot;</span><br><span class="line">                &gt;重置密码&lt;/el-dropdown-item</span><br><span class="line">              &gt;</span><br><span class="line">              &lt;el-dropdown-item command=&quot;logout&quot; :icon=&quot;SwitchButton&quot;</span><br><span class="line">                &gt;退出登录&lt;/el-dropdown-item</span><br><span class="line">              &gt;</span><br><span class="line">            &lt;/el-dropdown-menu&gt;</span><br><span class="line">          &lt;/template&gt;</span><br><span class="line">        &lt;/el-dropdown&gt;</span><br><span class="line">      &lt;/el-header&gt;</span><br><span class="line">      &lt;el-main&gt;</span><br><span class="line">        &lt;router-view&gt;&lt;/router-view&gt;</span><br><span class="line">      &lt;/el-main&gt;</span><br><span class="line">      &lt;el-footer&gt;大事件 ©2023 Created by 黑马程序员&lt;/el-footer&gt;</span><br><span class="line">    &lt;/el-container&gt;</span><br><span class="line">  &lt;/el-container&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=&quot;scss&quot; scoped&gt;</span><br><span class="line">.layout-container &#123;</span><br><span class="line">  height: 100vh;</span><br><span class="line">  .el-aside &#123;</span><br><span class="line">    background-color: #232323;</span><br><span class="line">    &amp;__logo &#123;</span><br><span class="line">      height: 120px;</span><br><span class="line">      background: url(&#x27;@/assets/logo.png&#x27;) no-repeat center / 120px auto;</span><br><span class="line">    &#125;</span><br><span class="line">    .el-menu &#123;</span><br><span class="line">      border-right: none;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  .el-header &#123;</span><br><span class="line">    background-color: #fff;</span><br><span class="line">    display: flex;</span><br><span class="line">    align-items: center;</span><br><span class="line">    justify-content: space-between;</span><br><span class="line">    .el-dropdown__box &#123;</span><br><span class="line">      display: flex;</span><br><span class="line">      align-items: center;</span><br><span class="line">      .el-icon &#123;</span><br><span class="line">        color: #999;</span><br><span class="line">        margin-left: 10px;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      &amp;:active,</span><br><span class="line">      &amp;:focus &#123;</span><br><span class="line">        outline: none;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  .el-footer &#123;</span><br><span class="line">    display: flex;</span><br><span class="line">    align-items: center;</span><br><span class="line">    justify-content: center;</span><br><span class="line">    font-size: 14px;</span><br><span class="line">    color: #666;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>



<h2 id="登录访问拦截"><a href="#登录访问拦截" class="headerlink" title="登录访问拦截"></a>登录访问拦截</h2><p>需求：只有登录页，可以未授权的时候访问，其他所有页面，都需要先登录再访问</p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 登录访问拦截</span></span><br><span class="line">router.<span class="title function_">beforeEach</span>(<span class="function">(<span class="params">to</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> userStore = <span class="title function_">useUserStore</span>()</span><br><span class="line">  <span class="keyword">if</span> (!userStore.<span class="property">token</span> &amp;&amp; to.<span class="property">path</span> !== <span class="string">&#x27;/login&#x27;</span>) <span class="keyword">return</span> <span class="string">&#x27;/login&#x27;</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>



<h2 id="用户基本信息获取-渲染"><a href="#用户基本信息获取-渲染" class="headerlink" title="用户基本信息获取&amp;渲染"></a>用户基本信息获取&amp;渲染</h2><ol>
<li><code>api/user.js</code>封装接口</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">userGetInfoService</span> = (<span class="params"></span>) =&gt; request.<span class="title function_">get</span>(<span class="string">&#x27;/my/userinfo&#x27;</span>)</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>stores&#x2F;modules&#x2F;user.js 定义数据</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> user = <span class="title function_">ref</span>(&#123;&#125;)</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">getUser</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> res = <span class="keyword">await</span> <span class="title function_">userGetInfoService</span>() <span class="comment">// 请求获取数据</span></span><br><span class="line">  user.<span class="property">value</span> = res.<span class="property">data</span>.<span class="property">data</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="3">
<li><code>layout/LayoutContainer</code>页面中调用</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; useUserStore &#125; <span class="keyword">from</span> <span class="string">&#x27;@/stores&#x27;</span></span><br><span class="line"><span class="keyword">const</span> userStore = <span class="title function_">useUserStore</span>()</span><br><span class="line"><span class="title function_">onMounted</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">  userStore.<span class="title function_">getUser</span>()</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<ol start="4">
<li>动态渲染</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">  黑马程序员：&lt;strong&gt;&#123;&#123; userStore.<span class="property">user</span>.<span class="property">nickname</span> || userStore.<span class="property">user</span>.<span class="property">username</span> &#125;&#125;&lt;/strong&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">el-avatar</span> <span class="attr">:src</span>=<span class="string">&quot;userStore.user.user_pic || avatar&quot;</span> /&gt;</span></span></span><br></pre></td></tr></table></figure>



<h2 id="退出功能-element-plus-确认框"><a href="#退出功能-element-plus-确认框" class="headerlink" title="退出功能 [element-plus 确认框]"></a>退出功能 [element-plus 确认框]</h2><ol>
<li>注册点击事件</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;el-dropdown placement=<span class="string">&quot;bottom-end&quot;</span> @command=<span class="string">&quot;onCommand&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">el-dropdown-menu</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">el-dropdown-item</span> <span class="attr">command</span>=<span class="string">&quot;profile&quot;</span> <span class="attr">:icon</span>=<span class="string">&quot;User&quot;</span>&gt;</span>基本资料<span class="tag">&lt;/<span class="name">el-dropdown-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">el-dropdown-item</span> <span class="attr">command</span>=<span class="string">&quot;avatar&quot;</span> <span class="attr">:icon</span>=<span class="string">&quot;Crop&quot;</span>&gt;</span>更换头像<span class="tag">&lt;/<span class="name">el-dropdown-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">el-dropdown-item</span> <span class="attr">command</span>=<span class="string">&quot;password&quot;</span> <span class="attr">:icon</span>=<span class="string">&quot;EditPen&quot;</span>&gt;</span>重置密码<span class="tag">&lt;/<span class="name">el-dropdown-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">el-dropdown-item</span> <span class="attr">command</span>=<span class="string">&quot;logout&quot;</span> <span class="attr">:icon</span>=<span class="string">&quot;SwitchButton&quot;</span>&gt;</span>退出登录<span class="tag">&lt;/<span class="name">el-dropdown-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">el-dropdown-menu</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<ol start="2">
<li>添加退出功能</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">onCommand</span> = <span class="keyword">async</span> (<span class="params">command</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">if</span> (command === <span class="string">&#x27;logout&#x27;</span>) &#123;</span><br><span class="line">    <span class="keyword">await</span> <span class="title class_">ElMessageBox</span>.<span class="title function_">confirm</span>(<span class="string">&#x27;你确认退出大事件吗？&#x27;</span>, <span class="string">&#x27;温馨提示&#x27;</span>, &#123;</span><br><span class="line">      <span class="attr">type</span>: <span class="string">&#x27;warning&#x27;</span>,</span><br><span class="line">      <span class="attr">confirmButtonText</span>: <span class="string">&#x27;确认&#x27;</span>,</span><br><span class="line">      <span class="attr">cancelButtonText</span>: <span class="string">&#x27;取消&#x27;</span></span><br><span class="line">    &#125;)</span><br><span class="line">    userStore.<span class="title function_">removeToken</span>()</span><br><span class="line">    userStore.<span class="title function_">setUser</span>(&#123;&#125;)</span><br><span class="line">    router.<span class="title function_">push</span>(<span class="string">`/login`</span>)</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    router.<span class="title function_">push</span>(<span class="string">`/user/<span class="subst">$&#123;command&#125;</span>`</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>pinia  user.js 模块 提供 setUser 方法</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">setUser</span> = (<span class="params">obj</span>) =&gt; (user.<span class="property">value</span> = obj)</span><br></pre></td></tr></table></figure>





<h1 id="文章分类页面-element-plus-表格"><a href="#文章分类页面-element-plus-表格" class="headerlink" title="文章分类页面 - [element-plus 表格]"></a>文章分类页面 - [element-plus 表格]</h1><h2 id="基本架子-PageContainer"><a href="#基本架子-PageContainer" class="headerlink" title="基本架子 - PageContainer"></a>基本架子 - PageContainer</h2><ol>
<li>基本结构样式，用到了 el-card 组件</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">el-card</span> <span class="attr">class</span>=<span class="string">&quot;page-container&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">template</span> #<span class="attr">header</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;header&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>文章分类<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;extra&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span>&gt;</span>添加分类<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">     ...</span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">el-card</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">style</span> <span class="attr">lang</span>=<span class="string">&quot;scss&quot;</span> <span class="attr">scoped</span>&gt;</span><span class="language-css"></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"><span class="selector-class">.page-container</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">min-height</span>: <span class="number">100%</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">box-sizing</span>: border-box;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="selector-class">.header</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">display</span>: flex;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">align-items</span>: center;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">justify-content</span>: space-between;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<ol start="2">
<li>考虑到多个页面复用，封装成组件<ul>
<li>props 定制标题</li>
<li>默认插槽 default 定制内容主体</li>
<li>具名插槽 extra  定制头部右侧额外的按钮</li>
</ul>
</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line"><span class="title function_">defineProps</span>(&#123;</span><br><span class="line">  <span class="attr">title</span>: &#123;</span><br><span class="line">    <span class="attr">required</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">type</span>: <span class="title class_">String</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">el-card</span> <span class="attr">class</span>=<span class="string">&quot;page-container&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">template</span> #<span class="attr">header</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;header&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123; title &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;extra&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">slot</span> <span class="attr">name</span>=<span class="string">&quot;extra&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">slot</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">el-card</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">style</span> <span class="attr">lang</span>=<span class="string">&quot;scss&quot;</span> <span class="attr">scoped</span>&gt;</span><span class="language-css"></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"><span class="selector-class">.page-container</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">min-height</span>: <span class="number">100%</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">box-sizing</span>: border-box;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="selector-class">.header</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">display</span>: flex;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">align-items</span>: center;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">justify-content</span>: space-between;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<ol start="3">
<li>页面中直接使用测试 ( unplugin-vue-components 会自动注册)</li>
</ol>
<ul>
<li>文章分类测试：</li>
</ul>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">page-container</span> <span class="attr">title</span>=<span class="string">&quot;文章分类&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">template</span> #<span class="attr">extra</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span>&gt;</span> 添加分类 <span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">    主体部分</span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">page-container</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure>

<ul>
<li>文章管理测试：</li>
</ul>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">page-container</span> <span class="attr">title</span>=<span class="string">&quot;文章管理&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">template</span> #<span class="attr">extra</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span>&gt;</span>发布文章<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">    主体部分</span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">page-container</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure>



<h2 id="文章分类渲染"><a href="#文章分类渲染" class="headerlink" title="文章分类渲染"></a>文章分类渲染</h2><h3 id="封装API-请求获取表格数据"><a href="#封装API-请求获取表格数据" class="headerlink" title="封装API - 请求获取表格数据"></a>封装API - 请求获取表格数据</h3><ol>
<li>新建 <code>api/article.js</code> 封装获取频道列表的接口</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> request <span class="keyword">from</span> <span class="string">&#x27;@/utils/request&#x27;</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">artGetChannelsService</span> = (<span class="params"></span>) =&gt; request.<span class="title function_">get</span>(<span class="string">&#x27;/my/cate/list&#x27;</span>)</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>页面中调用接口，获取数据存储</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> channelList = <span class="title function_">ref</span>([])</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">getChannelList</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> res = <span class="keyword">await</span> <span class="title function_">artGetChannelsService</span>()</span><br><span class="line">  channelList.<span class="property">value</span> = res.<span class="property">data</span>.<span class="property">data</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>





<h3 id="el-table-表格动态渲染"><a href="#el-table-表格动态渲染" class="headerlink" title="el-table 表格动态渲染"></a>el-table 表格动态渲染</h3><figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;el-table :data=<span class="string">&quot;channelList&quot;</span> style=<span class="string">&quot;width: 100%&quot;</span>&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">label</span>=<span class="string">&quot;序号&quot;</span> <span class="attr">width</span>=<span class="string">&quot;100&quot;</span> <span class="attr">type</span>=<span class="string">&quot;index&quot;</span>&gt;</span> <span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">label</span>=<span class="string">&quot;分类名称&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;cate_name&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">label</span>=<span class="string">&quot;分类别名&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;cate_alias&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">label</span>=<span class="string">&quot;操作&quot;</span> <span class="attr">width</span>=<span class="string">&quot;100&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">template</span> #<span class="attr">default</span>=<span class="string">&quot;&#123; row &#125;&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">el-button</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">:icon</span>=<span class="string">&quot;Edit&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">circle</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">plain</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        @<span class="attr">click</span>=<span class="string">&quot;onEditChannel(row)&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      &gt;</span><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">el-button</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">:icon</span>=<span class="string">&quot;Delete&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">circle</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">plain</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">type</span>=<span class="string">&quot;danger&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        @<span class="attr">click</span>=<span class="string">&quot;onDelChannel(row)&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      &gt;</span><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">template</span> #<span class="attr">empty</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">el-empty</span> <span class="attr">description</span>=<span class="string">&quot;没有数据&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line">&lt;/el-table&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">onEditChannel</span> = (<span class="params">row</span>) =&gt; &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(row)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">onDelChannel</span> = (<span class="params">row</span>) =&gt; &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(row)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>





<h3 id="el-table-表格-loading-效果"><a href="#el-table-表格-loading-效果" class="headerlink" title="el-table 表格 loading 效果"></a>el-table 表格 loading 效果</h3><ol>
<li>定义变量，v-loading绑定</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> loading = <span class="title function_">ref</span>(<span class="literal">false</span>)</span><br><span class="line"></span><br><span class="line">&lt;el-table v-loading=<span class="string">&quot;loading&quot;</span>&gt;</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>发送请求前开启，请求结束关闭</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">getChannelList</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  loading.<span class="property">value</span> = <span class="literal">true</span></span><br><span class="line">  <span class="keyword">const</span> res = <span class="keyword">await</span> <span class="title function_">artGetChannelsService</span>()</span><br><span class="line">  channelList.<span class="property">value</span> = res.<span class="property">data</span>.<span class="property">data</span></span><br><span class="line">  loading.<span class="property">value</span> = <span class="literal">false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="文章分类添加编辑-element-plus-弹层"><a href="#文章分类添加编辑-element-plus-弹层" class="headerlink" title="文章分类添加编辑 [element-plus 弹层]"></a>文章分类添加编辑 [element-plus 弹层]</h2><h3 id="点击显示弹层"><a href="#点击显示弹层" class="headerlink" title="点击显示弹层"></a>点击显示弹层</h3><ol>
<li>准备弹层</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> dialogVisible = <span class="title function_">ref</span>(<span class="literal">false</span>)</span><br><span class="line"></span><br><span class="line">&lt;el-dialog v-model=<span class="string">&quot;dialogVisible&quot;</span> title=<span class="string">&quot;添加弹层&quot;</span> width=<span class="string">&quot;30%&quot;</span>&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span>我是内容部分<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">template</span> #<span class="attr">footer</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;dialog-footer&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">el-button</span> @<span class="attr">click</span>=<span class="string">&quot;dialogVisible = false&quot;</span>&gt;</span>取消<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span>&gt;</span> 确认 <span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line">&lt;/el-dialog&gt;</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>点击事件</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;template #extra&gt;<span class="language-xml"><span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;onAddChannel&quot;</span>&gt;</span>添加分类<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span>&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">onAddChannel</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  dialogVisible.<span class="property">value</span> = <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>





<h3 id="封装弹层组件-ChannelEdit"><a href="#封装弹层组件-ChannelEdit" class="headerlink" title="封装弹层组件 ChannelEdit"></a>封装弹层组件 ChannelEdit</h3><p>添加 和 编辑，可以共用一个弹层，所以可以将弹层封装成一个组件</p>
<p>组件对外暴露一个方法 open,  基于 open 的参数，初始化表单数据，并判断区分是添加 还是 编辑</p>
<ol>
<li>open({ })                   &#x3D;&gt;  添加操作，添加表单初始化无数据</li>
<li>open({ id: xx,  …  })  &#x3D;&gt;  编辑操作，编辑表单初始化需回显</li>
</ol>
<p>具体实现：</p>
<ol>
<li>封装组件 <code>article/components/ChannelEdit.vue</code></li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line"><span class="keyword">import</span> &#123; ref &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">const</span> dialogVisible = <span class="title function_">ref</span>(<span class="literal">false</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">open</span> = <span class="keyword">async</span> (<span class="params">row</span>) =&gt; &#123;</span><br><span class="line">  dialogVisible.<span class="property">value</span> = <span class="literal">true</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(row)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">defineExpose</span>(&#123;</span><br><span class="line">  open</span><br><span class="line">&#125;)</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">el-dialog</span> <span class="attr">v-model</span>=<span class="string">&quot;dialogVisible&quot;</span> <span class="attr">title</span>=<span class="string">&quot;添加弹层&quot;</span> <span class="attr">width</span>=<span class="string">&quot;30%&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>我是内容部分<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">template</span> #<span class="attr">footer</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;dialog-footer&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">el-button</span> @<span class="attr">click</span>=<span class="string">&quot;dialogVisible = false&quot;</span>&gt;</span>取消<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span>&gt;</span> 确认 <span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">el-dialog</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<ol start="2">
<li>通过 ref 绑定</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> dialog = <span class="title function_">ref</span>()</span><br><span class="line"></span><br><span class="line">&lt;!-- 弹窗 --&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">channel-edit</span> <span class="attr">ref</span>=<span class="string">&quot;dialog&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">channel-edit</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<ol start="3">
<li>点击调用方法显示弹窗</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">onAddChannel</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  dialog.<span class="property">value</span>.<span class="title function_">open</span>(&#123;&#125;)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">onEditChannel</span> = (<span class="params">row</span>) =&gt; &#123;</span><br><span class="line">  dialog.<span class="property">value</span>.<span class="title function_">open</span>(row)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="准备弹层表单"><a href="#准备弹层表单" class="headerlink" title="准备弹层表单"></a>准备弹层表单</h3><ol>
<li>准备数据 和 校验规则</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> formModel = <span class="title function_">ref</span>(&#123;</span><br><span class="line">  <span class="attr">cate_name</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">  <span class="attr">cate_alias</span>: <span class="string">&#x27;&#x27;</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">const</span> rules = &#123;</span><br><span class="line">  <span class="attr">cate_name</span>: [</span><br><span class="line">    &#123; <span class="attr">required</span>: <span class="literal">true</span>, <span class="attr">message</span>: <span class="string">&#x27;请输入分类名称&#x27;</span>, <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span> &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">pattern</span>: <span class="regexp">/^\S&#123;1,10&#125;$/</span>,</span><br><span class="line">      <span class="attr">message</span>: <span class="string">&#x27;分类名必须是1-10位的非空字符&#x27;</span>,</span><br><span class="line">      <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">cate_alias</span>: [</span><br><span class="line">    &#123; <span class="attr">required</span>: <span class="literal">true</span>, <span class="attr">message</span>: <span class="string">&#x27;请输入分类别名&#x27;</span>, <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span> &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">pattern</span>: <span class="regexp">/^[a-zA-Z0-9]&#123;1,15&#125;$/</span>,</span><br><span class="line">      <span class="attr">message</span>: <span class="string">&#x27;分类别名必须是1-15位的字母数字&#x27;</span>,</span><br><span class="line">      <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>准备表单</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;el-form</span><br><span class="line">  :model=<span class="string">&quot;formModel&quot;</span></span><br><span class="line">  :rules=<span class="string">&quot;rules&quot;</span></span><br><span class="line">  label-width=<span class="string">&quot;100px&quot;</span></span><br><span class="line">  style=<span class="string">&quot;padding-right: 30px&quot;</span></span><br><span class="line">&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;分类名称&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;cate_name&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">el-input</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">v-model</span>=<span class="string">&quot;formModel.cate_name&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">minlength</span>=<span class="string">&quot;1&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">maxlength</span>=<span class="string">&quot;10&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    &gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;分类别名&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;cate_alias&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">el-input</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">v-model</span>=<span class="string">&quot;formModel.cate_alias&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">minlength</span>=<span class="string">&quot;1&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">maxlength</span>=<span class="string">&quot;15&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    &gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line">&lt;/el-form&gt;</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>编辑需要回显，表单数据需要初始化</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">open</span> = <span class="keyword">async</span> (<span class="params">row</span>) =&gt; &#123;</span><br><span class="line">  dialogVisible.<span class="property">value</span> = <span class="literal">true</span></span><br><span class="line">  formModel.<span class="property">value</span> = &#123; ...row &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="4">
<li>基于传过来的表单数据，进行标题控制，有 id 的是编辑</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">:title=<span class="string">&quot;formModel.id ? &#x27;编辑分类&#x27; : &#x27;添加分类&#x27;&quot;</span></span><br></pre></td></tr></table></figure>



<h3 id="确认提交"><a href="#确认提交" class="headerlink" title="确认提交"></a>确认提交</h3><ol>
<li><code>api/article.js  </code>  封装请求 API</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 添加文章分类</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">artAddChannelService</span> = (<span class="params">data</span>) =&gt; request.<span class="title function_">post</span>(<span class="string">&#x27;/my/cate/add&#x27;</span>, data)</span><br><span class="line"><span class="comment">// 编辑文章分类</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">artEditChannelService</span> = (<span class="params">data</span>) =&gt;</span><br><span class="line">  request.<span class="title function_">put</span>(<span class="string">&#x27;/my/cate/info&#x27;</span>, data)</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>页面中校验，判断，提交请求</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;el-form ref=<span class="string">&quot;formRef&quot;</span>&gt;</span><br></pre></td></tr></table></figure>

<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> formRef = <span class="title function_">ref</span>()</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">onSubmit</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">await</span> formRef.<span class="property">value</span>.<span class="title function_">validate</span>()</span><br><span class="line">  formModel.<span class="property">value</span>.<span class="property">id</span></span><br><span class="line">    ? <span class="keyword">await</span> <span class="title function_">artEditChannelService</span>(formModel.<span class="property">value</span>)</span><br><span class="line">    : <span class="keyword">await</span> <span class="title function_">artAddChannelService</span>(formModel.<span class="property">value</span>)</span><br><span class="line">  <span class="title class_">ElMessage</span>(&#123;</span><br><span class="line">    <span class="attr">type</span>: <span class="string">&#x27;success&#x27;</span>,</span><br><span class="line">    <span class="attr">message</span>: formModel.<span class="property">value</span>.<span class="property">id</span> ? <span class="string">&#x27;编辑成功&#x27;</span> : <span class="string">&#x27;添加成功&#x27;</span></span><br><span class="line">  &#125;)</span><br><span class="line">  dialogVisible.<span class="property">value</span> = <span class="literal">false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>通知父组件进行回显</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> emit = <span class="title function_">defineEmits</span>([<span class="string">&#x27;success&#x27;</span>])</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">onSubmit</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  ...</span><br><span class="line">  <span class="title function_">emit</span>(<span class="string">&#x27;success&#x27;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="4">
<li>父组件监听 success 事件，进行调用回显</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;channel-edit ref=<span class="string">&quot;dialog&quot;</span> @success=<span class="string">&quot;onSuccess&quot;</span>&gt;&lt;/channel-edit&gt;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">onSuccess</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="title function_">getChannelList</span>()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="文章分类删除"><a href="#文章分类删除" class="headerlink" title="文章分类删除"></a>文章分类删除</h2><ol>
<li><code>api/article.js</code>封装接口 api</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 删除文章分类</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">artDelChannelService</span> = (<span class="params">id</span>) =&gt;</span><br><span class="line">  request.<span class="title function_">delete</span>(<span class="string">&#x27;/my/cate/del&#x27;</span>, &#123;</span><br><span class="line">    <span class="attr">params</span>: &#123; id &#125;</span><br><span class="line">  &#125;)</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>页面中添加确认框，调用接口进行提示</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">onDelChannel</span> = <span class="keyword">async</span> (<span class="params">row</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">await</span> <span class="title class_">ElMessageBox</span>.<span class="title function_">confirm</span>(<span class="string">&#x27;你确认删除该分类信息吗？&#x27;</span>, <span class="string">&#x27;温馨提示&#x27;</span>, &#123;</span><br><span class="line">    <span class="attr">type</span>: <span class="string">&#x27;warning&#x27;</span>,</span><br><span class="line">    <span class="attr">confirmButtonText</span>: <span class="string">&#x27;确认&#x27;</span>,</span><br><span class="line">    <span class="attr">cancelButtonText</span>: <span class="string">&#x27;取消&#x27;</span></span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="keyword">await</span> <span class="title function_">artDelChannelService</span>(row.<span class="property">id</span>)</span><br><span class="line">  <span class="title class_">ElMessage</span>(&#123; <span class="attr">type</span>: <span class="string">&#x27;success&#x27;</span>, <span class="attr">message</span>: <span class="string">&#x27;删除成功&#x27;</span> &#125;)</span><br><span class="line">  <span class="title function_">getChannelList</span>()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>





<h1 id="文章管理页面-element-plus-强化"><a href="#文章管理页面-element-plus-强化" class="headerlink" title="文章管理页面 - [element-plus 强化]"></a>文章管理页面 - [element-plus 强化]</h1><h2 id="文章列表渲染"><a href="#文章列表渲染" class="headerlink" title="文章列表渲染"></a>文章列表渲染</h2><h3 id="基本架子搭建"><a href="#基本架子搭建" class="headerlink" title="基本架子搭建"></a>基本架子搭建</h3><p><img data-src="/assets/image-20230724224754131.png" alt="image-20230724224754131"></p>
<ol>
<li>搜索表单</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;el-form inline&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;文章分类：&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">el-select</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">el-option</span> <span class="attr">label</span>=<span class="string">&quot;新闻&quot;</span> <span class="attr">value</span>=<span class="string">&quot;111&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-option</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">el-option</span> <span class="attr">label</span>=<span class="string">&quot;体育&quot;</span> <span class="attr">value</span>=<span class="string">&quot;222&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-option</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">el-select</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;发布状态：&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">el-select</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">el-option</span> <span class="attr">label</span>=<span class="string">&quot;已发布&quot;</span> <span class="attr">value</span>=<span class="string">&quot;已发布&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-option</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">el-option</span> <span class="attr">label</span>=<span class="string">&quot;草稿&quot;</span> <span class="attr">value</span>=<span class="string">&quot;草稿&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-option</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">el-select</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span>&gt;</span>搜索<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">el-button</span>&gt;</span>重置<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line">&lt;/el-form&gt;</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>表格准备，模拟假数据渲染</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Delete</span>, <span class="title class_">Edit</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;@element-plus/icons-vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; ref &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="comment">// 假数据</span></span><br><span class="line"><span class="keyword">const</span> articleList = <span class="title function_">ref</span>([</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">id</span>: <span class="number">5961</span>,</span><br><span class="line">    <span class="attr">title</span>: <span class="string">&#x27;新的文章啊&#x27;</span>,</span><br><span class="line">    <span class="attr">pub_date</span>: <span class="string">&#x27;2022-07-10 14:53:52.604&#x27;</span>,</span><br><span class="line">    <span class="attr">state</span>: <span class="string">&#x27;已发布&#x27;</span>,</span><br><span class="line">    <span class="attr">cate_name</span>: <span class="string">&#x27;体育&#x27;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">id</span>: <span class="number">5962</span>,</span><br><span class="line">    <span class="attr">title</span>: <span class="string">&#x27;新的文章啊&#x27;</span>,</span><br><span class="line">    <span class="attr">pub_date</span>: <span class="string">&#x27;2022-07-10 14:54:30.904&#x27;</span>,</span><br><span class="line">    <span class="attr">state</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="attr">cate_name</span>: <span class="string">&#x27;体育&#x27;</span></span><br><span class="line">  &#125;</span><br><span class="line">])</span><br></pre></td></tr></table></figure>

<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;el-table :data=<span class="string">&quot;articleList&quot;</span> style=<span class="string">&quot;width: 100%&quot;</span>&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">label</span>=<span class="string">&quot;文章标题&quot;</span> <span class="attr">width</span>=<span class="string">&quot;400&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">template</span> #<span class="attr">default</span>=<span class="string">&quot;&#123; row &#125;&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">el-link</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> <span class="attr">:underline</span>=<span class="string">&quot;false&quot;</span>&gt;</span>&#123;&#123; row.title &#125;&#125;<span class="tag">&lt;/<span class="name">el-link</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">label</span>=<span class="string">&quot;分类&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;cate_name&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">label</span>=<span class="string">&quot;发表时间&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;pub_date&quot;</span>&gt;</span> <span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">label</span>=<span class="string">&quot;状态&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;state&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">label</span>=<span class="string">&quot;操作&quot;</span> <span class="attr">width</span>=<span class="string">&quot;100&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">template</span> #<span class="attr">default</span>=<span class="string">&quot;&#123; row &#125;&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">el-button</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">:icon</span>=<span class="string">&quot;Edit&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">circle</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">plain</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        @<span class="attr">click</span>=<span class="string">&quot;onEditArticle(row)&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      &gt;</span><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">el-button</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">:icon</span>=<span class="string">&quot;Delete&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">circle</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">plain</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">type</span>=<span class="string">&quot;danger&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        @<span class="attr">click</span>=<span class="string">&quot;onDeleteArticle(row)&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      &gt;</span><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">template</span> #<span class="attr">empty</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">el-empty</span> <span class="attr">description</span>=<span class="string">&quot;没有数据&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line">&lt;/el-table&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">onEditArticle</span> = (<span class="params">row</span>) =&gt; &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(row)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">onDeleteArticle</span> = (<span class="params">row</span>) =&gt; &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(row)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="中英国际化处理"><a href="#中英国际化处理" class="headerlink" title="中英国际化处理"></a>中英国际化处理</h3><p>默认是英文的，由于这里不涉及切换， 所以在 App.vue 中直接导入设置成中文即可，</p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line"><span class="keyword">import</span> zh <span class="keyword">from</span> <span class="string">&#x27;element-plus/es/locale/lang/zh-cn.mjs&#x27;</span></span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="comment">&lt;!-- 国际化处理 --&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">el-config-provider</span> <span class="attr">:locale</span>=<span class="string">&quot;zh&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">router-view</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">el-config-provider</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br></pre></td></tr></table></figure>





<h3 id="文章分类选择"><a href="#文章分类选择" class="headerlink" title="文章分类选择"></a>文章分类选择</h3><p>为了便于维护，直接拆分成一个小组件 ChannelSelect.vue</p>
<ol>
<li>新建 article&#x2F;components&#x2F;ChannelSelect.vue</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">el-select</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">el-option</span> <span class="attr">label</span>=<span class="string">&quot;新闻&quot;</span> <span class="attr">value</span>=<span class="string">&quot;新闻&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-option</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">el-option</span> <span class="attr">label</span>=<span class="string">&quot;体育&quot;</span> <span class="attr">value</span>=<span class="string">&quot;体育&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-option</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">el-select</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>页面中导入渲染</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import ChannelSelect from &#x27;./components/ChannelSelect.vue&#x27;</span><br><span class="line"></span><br><span class="line">&lt;el-form-item label=&quot;文章分类：&quot;&gt;</span><br><span class="line">  &lt;channel-select&gt;&lt;/channel-select&gt;</span><br><span class="line">&lt;/el-form-item&gt;</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>调用接口，动态渲染下拉分类，设计成 v-model 的使用方式</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line"><span class="keyword">import</span> &#123; artGetChannelsService &#125; <span class="keyword">from</span> <span class="string">&#x27;@/api/article&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; ref &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="title function_">defineProps</span>(&#123;</span><br><span class="line">  <span class="attr">modelValue</span>: &#123;</span><br><span class="line">    <span class="attr">type</span>: [<span class="title class_">Number</span>, <span class="title class_">String</span>]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> emit = <span class="title function_">defineEmits</span>([<span class="string">&#x27;update:modelValue&#x27;</span>])</span><br><span class="line"><span class="keyword">const</span> channelList = <span class="title function_">ref</span>([])</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">getChannelList</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> res = <span class="keyword">await</span> <span class="title function_">artGetChannelsService</span>()</span><br><span class="line">  channelList.<span class="property">value</span> = res.<span class="property">data</span>.<span class="property">data</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">getChannelList</span>()</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">el-select</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">:modelValue</span>=<span class="string">&quot;modelValue&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    @<span class="attr">update:modelValue</span>=<span class="string">&quot;emit(&#x27;update:modelValue&#x27;, $event)&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">  &gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">el-option</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">v-for</span>=<span class="string">&quot;channel in channelList&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">:key</span>=<span class="string">&quot;channel.id&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">:label</span>=<span class="string">&quot;channel.cate_name&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">:value</span>=<span class="string">&quot;channel.id&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    &gt;</span><span class="tag">&lt;/<span class="name">el-option</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">el-select</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<ol start="4">
<li>父组件定义参数绑定</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> params = <span class="title function_">ref</span>(&#123;</span><br><span class="line">  <span class="attr">pagenum</span>: <span class="number">1</span>,</span><br><span class="line">  <span class="attr">pagesize</span>: <span class="number">5</span>,</span><br><span class="line">  <span class="attr">cate_id</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">  <span class="attr">state</span>: <span class="string">&#x27;&#x27;</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">&lt;channel-select v-model=<span class="string">&quot;params.cate_id&quot;</span>&gt;&lt;/channel-select&gt;</span><br></pre></td></tr></table></figure>

<ol start="5">
<li>发布状态，也绑定一下，便于将来提交表单</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;el-select v-model=<span class="string">&quot;params.state&quot;</span>&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">el-option</span> <span class="attr">label</span>=<span class="string">&quot;已发布&quot;</span> <span class="attr">value</span>=<span class="string">&quot;已发布&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-option</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">el-option</span> <span class="attr">label</span>=<span class="string">&quot;草稿&quot;</span> <span class="attr">value</span>=<span class="string">&quot;草稿&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-option</span>&gt;</span></span></span><br><span class="line">&lt;/el-select&gt;</span><br></pre></td></tr></table></figure>



<h3 id="封装-API-接口，请求渲染"><a href="#封装-API-接口，请求渲染" class="headerlink" title="封装 API 接口，请求渲染"></a>封装 API 接口，请求渲染</h3><p><strong>没有数据，可以登录已完成的系统，添加几条数据</strong></p>
<ol>
<li><code>api/article.js</code>封装接口</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">artGetListService</span> = (<span class="params">params</span>) =&gt;</span><br><span class="line">  request.<span class="title function_">get</span>(<span class="string">&#x27;/my/article/list&#x27;</span>, &#123; params &#125;)</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>页面中调用保存数据</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> articleList = <span class="title function_">ref</span>([])</span><br><span class="line"><span class="keyword">const</span> total = <span class="title function_">ref</span>(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">getArticleList</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> res = <span class="keyword">await</span> <span class="title function_">artGetListService</span>(params.<span class="property">value</span>)</span><br><span class="line">  articleList.<span class="property">value</span> = res.<span class="property">data</span>.<span class="property">data</span></span><br><span class="line">  total.<span class="property">value</span> = res.<span class="property">data</span>.<span class="property">total</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">getArticleList</span>()</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>新建 <code>utils/format.js</code> 封装格式化日期函数</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; dayjs &#125; <span class="keyword">from</span> <span class="string">&#x27;element-plus&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">formatTime</span> = (<span class="params">time</span>) =&gt; <span class="title function_">dayjs</span>(time).<span class="title function_">format</span>(<span class="string">&#x27;YYYY年MM月DD日&#x27;</span>)</span><br></pre></td></tr></table></figure>

<ol start="4">
<li>导入使用</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import &#123; formatTime &#125; from &#x27;@/utils/format&#x27;</span><br><span class="line"></span><br><span class="line">&lt;el-table-column label=&quot;发表时间&quot;&gt;</span><br><span class="line">  &lt;template #default=&quot;&#123; row &#125;&quot;&gt;</span><br><span class="line">    &#123;&#123; formatTime(row.pub_date) &#125;&#125;</span><br><span class="line">  &lt;/template&gt;</span><br><span class="line">&lt;/el-table-column&gt;</span><br></pre></td></tr></table></figure>





<h3 id="分页渲染-element-plus-分页"><a href="#分页渲染-element-plus-分页" class="headerlink" title="分页渲染 [element-plus 分页]"></a>分页渲染 [element-plus 分页]</h3><ol>
<li>分页组件</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;el-pagination</span><br><span class="line">  v-<span class="attr">model</span>:current-page=<span class="string">&quot;params.pagenum&quot;</span></span><br><span class="line">  v-<span class="attr">model</span>:page-size=<span class="string">&quot;params.pagesize&quot;</span></span><br><span class="line">  :page-sizes=<span class="string">&quot;[2, 3, 4, 5, 10]&quot;</span></span><br><span class="line">  layout=<span class="string">&quot;jumper, total, sizes, prev, pager, next&quot;</span></span><br><span class="line">  background</span><br><span class="line">  :total=<span class="string">&quot;total&quot;</span></span><br><span class="line">  @size-change=<span class="string">&quot;onSizeChange&quot;</span></span><br><span class="line">  @current-change=<span class="string">&quot;onCurrentChange&quot;</span></span><br><span class="line">  style=<span class="string">&quot;margin-top: 20px; justify-content: flex-end&quot;</span></span><br><span class="line">/&gt;</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>提供分页修改逻辑</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">onSizeChange</span> = (<span class="params">size</span>) =&gt; &#123;</span><br><span class="line">  params.<span class="property">value</span>.<span class="property">pagenum</span> = <span class="number">1</span></span><br><span class="line">  params.<span class="property">value</span>.<span class="property">pagesize</span> = size</span><br><span class="line">  <span class="title function_">getArticleList</span>()</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">onCurrentChange</span> = (<span class="params">page</span>) =&gt; &#123;</span><br><span class="line">  params.<span class="property">value</span>.<span class="property">pagenum</span> = page</span><br><span class="line">  <span class="title function_">getArticleList</span>()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="添加-loading-处理"><a href="#添加-loading-处理" class="headerlink" title="添加 loading 处理"></a>添加 loading 处理</h3><ol>
<li>准备数据</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> loading = <span class="title function_">ref</span>(<span class="literal">false</span>)</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>el-table上面绑定</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;el-table v-loading=<span class="string">&quot;loading&quot;</span> &gt; ... &lt;/el-table&gt;</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>发送请求时添加 loading</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">getArticleList</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  loading.<span class="property">value</span> = <span class="literal">true</span></span><br><span class="line">    </span><br><span class="line">  ...</span><br><span class="line">  </span><br><span class="line">  loading.<span class="property">value</span> = <span class="literal">false</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">getArticleList</span>()</span><br></pre></td></tr></table></figure>



<h3 id="搜索-和-重置功能"><a href="#搜索-和-重置功能" class="headerlink" title="搜索 和 重置功能"></a>搜索 和 重置功能</h3><ol>
<li>注册事件</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;el-form-item&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">el-button</span> @<span class="attr">click</span>=<span class="string">&quot;onSearch&quot;</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span>&gt;</span>搜索<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">el-button</span> @<span class="attr">click</span>=<span class="string">&quot;onReset&quot;</span>&gt;</span>重置<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span></span><br><span class="line">&lt;/el-form-item&gt;</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>绑定处理</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">onSearch</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  params.<span class="property">value</span>.<span class="property">pagenum</span> = <span class="number">1</span></span><br><span class="line">  <span class="title function_">getArticleList</span>()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">onReset</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  params.<span class="property">value</span>.<span class="property">pagenum</span> = <span class="number">1</span></span><br><span class="line">  params.<span class="property">value</span>.<span class="property">cate_id</span> = <span class="string">&#x27;&#x27;</span></span><br><span class="line">  params.<span class="property">value</span>.<span class="property">state</span> = <span class="string">&#x27;&#x27;</span></span><br><span class="line">  <span class="title function_">getArticleList</span>()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>





<h2 id="文章发布-修改-element-plus-抽屉"><a href="#文章发布-修改-element-plus-抽屉" class="headerlink" title="文章发布&amp;修改 [element-plus - 抽屉]"></a>文章发布&amp;修改 [element-plus - 抽屉]</h2><h3 id="点击显示抽屉"><a href="#点击显示抽屉" class="headerlink" title="点击显示抽屉"></a>点击显示抽屉</h3><ol>
<li>准备数据</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; ref &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">const</span> visibleDrawer = <span class="title function_">ref</span>(<span class="literal">false</span>)</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>准备抽屉容器</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;el-drawer</span><br><span class="line">  v-model=<span class="string">&quot;visibleDrawer&quot;</span></span><br><span class="line">  title=<span class="string">&quot;大标题&quot;</span></span><br><span class="line">  direction=<span class="string">&quot;rtl&quot;</span></span><br><span class="line">  size=<span class="string">&quot;50%&quot;</span></span><br><span class="line">&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">span</span>&gt;</span>Hi there!<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line">&lt;/el-drawer&gt;</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>点击修改布尔值显示抽屉</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;el-button type=<span class="string">&quot;primary&quot;</span> @click=<span class="string">&quot;onAddArticle&quot;</span>&gt;发布文章&lt;/el-button&gt;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> visibleDrawer = <span class="title function_">ref</span>(<span class="literal">false</span>)</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">onAddArticle</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  visibleDrawer.<span class="property">value</span> = <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="封装抽屉组件-ArticleEdit"><a href="#封装抽屉组件-ArticleEdit" class="headerlink" title="封装抽屉组件 ArticleEdit"></a>封装抽屉组件 ArticleEdit</h3><p>添加 和 编辑，可以共用一个抽屉，所以可以将抽屉封装成一个组件</p>
<p>组件对外暴露一个方法 open,  基于 open 的参数，初始化表单数据，并判断区分是添加 还是 编辑</p>
<ol>
<li>open({ })                   &#x3D;&gt;  添加操作，添加表单初始化无数据</li>
<li>open({ id: xx,  …  })  &#x3D;&gt;  编辑操作，编辑表单初始化需回显</li>
</ol>
<p>具体实现：</p>
<ol>
<li>封装组件 <code>article/components/ArticleEdit.vue</code></li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line"><span class="keyword">import</span> &#123; ref &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">const</span> visibleDrawer = <span class="title function_">ref</span>(<span class="literal">false</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">open</span> = (<span class="params">row</span>) =&gt; &#123;</span><br><span class="line">  visibleDrawer.<span class="property">value</span> = <span class="literal">true</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(row)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">defineExpose</span>(&#123;</span><br><span class="line">  open</span><br><span class="line">&#125;)</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="comment">&lt;!-- 抽屉 --&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">el-drawer</span> <span class="attr">v-model</span>=<span class="string">&quot;visibleDrawer&quot;</span> <span class="attr">title</span>=<span class="string">&quot;大标题&quot;</span> <span class="attr">direction</span>=<span class="string">&quot;rtl&quot;</span> <span class="attr">size</span>=<span class="string">&quot;50%&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>Hi there!<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">el-drawer</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<ol start="2">
<li>通过 ref 绑定</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> articleEditRef = <span class="title function_">ref</span>()</span><br><span class="line"></span><br><span class="line">&lt;!-- 弹窗 --&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">article-edit</span> <span class="attr">ref</span>=<span class="string">&quot;articleEditRef&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">article-edit</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<ol start="3">
<li>点击调用方法显示弹窗</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 编辑新增逻辑</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">onAddArticle</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  articleEditRef.<span class="property">value</span>.<span class="title function_">open</span>(&#123;&#125;)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">onEditArticle</span> = (<span class="params">row</span>) =&gt; &#123;</span><br><span class="line">  articleEditRef.<span class="property">value</span>.<span class="title function_">open</span>(row)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="完善抽屉表单结构"><a href="#完善抽屉表单结构" class="headerlink" title="完善抽屉表单结构"></a>完善抽屉表单结构</h3><ol>
<li>准备数据</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> formModel = <span class="title function_">ref</span>(&#123;</span><br><span class="line">  <span class="attr">title</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">  <span class="attr">cate_id</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">  <span class="attr">cover_img</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">  <span class="attr">content</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">  <span class="attr">state</span>: <span class="string">&#x27;&#x27;</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">open</span> = <span class="keyword">async</span> (<span class="params">row</span>) =&gt; &#123;</span><br><span class="line">  visibleDrawer.<span class="property">value</span> = <span class="literal">true</span></span><br><span class="line">  <span class="keyword">if</span> (row.<span class="property">id</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;编辑回显&#x27;</span>)</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;添加功能&#x27;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>准备 form 表单结构</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">ChannelSelect</span> <span class="keyword">from</span> <span class="string">&#x27;./ChannelSelect.vue&#x27;</span></span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">el-drawer</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">v-model</span>=<span class="string">&quot;visibleDrawer&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">:title</span>=<span class="string">&quot;formModel.id ? &#x27;编辑文章&#x27; : &#x27;添加文章&#x27;&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">direction</span>=<span class="string">&quot;rtl&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">size</span>=<span class="string">&quot;50%&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">  &gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="comment">&lt;!-- 发表文章表单 --&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">el-form</span> <span class="attr">:model</span>=<span class="string">&quot;formModel&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;formRef&quot;</span> <span class="attr">label-width</span>=<span class="string">&quot;100px&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;文章标题&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;title&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">&quot;formModel.title&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入标题&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;文章分类&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;cate_id&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">channel-select</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">v-model</span>=<span class="string">&quot;formModel.cate_id&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">width</span>=<span class="string">&quot;100%&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        &gt;</span><span class="tag">&lt;/<span class="name">channel-select</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;文章封面&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;cover_img&quot;</span>&gt;</span> 文件上传 <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;文章内容&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;content&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;editor&quot;</span>&gt;</span>富文本编辑器<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span>&gt;</span>发布<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;info&quot;</span>&gt;</span>草稿<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">el-form</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">el-drawer</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>一打开默认重置添加的 form 表单数据</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> defaultForm = &#123;</span><br><span class="line">  <span class="attr">title</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">  <span class="attr">cate_id</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">  <span class="attr">cover_img</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">  <span class="attr">content</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">  <span class="attr">state</span>: <span class="string">&#x27;&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> formModel = <span class="title function_">ref</span>(&#123; ...defaultForm &#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">open</span> = <span class="keyword">async</span> (<span class="params">row</span>) =&gt; &#123;</span><br><span class="line">  visibleDrawer.<span class="property">value</span> = <span class="literal">true</span></span><br><span class="line">  <span class="keyword">if</span> (row.<span class="property">id</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;编辑回显&#x27;</span>)</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;添加功能&#x27;</span>)</span><br><span class="line">    formModel.<span class="property">value</span> = &#123; ...defaultForm &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="4">
<li>扩展 下拉菜单 width props</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="title function_">defineProps</span>(&#123;</span><br><span class="line">  <span class="attr">modelValue</span>: &#123;</span><br><span class="line">    <span class="attr">type</span>: [<span class="title class_">Number</span>, <span class="title class_">String</span>]</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">width</span>: &#123;</span><br><span class="line">    <span class="attr">type</span>: <span class="title class_">String</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">&lt;el-select</span><br><span class="line"> ...</span><br><span class="line"> :style=<span class="string">&quot;&#123; width &#125;&quot;</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure>







<h3 id="上传文件-element-plus-文件预览"><a href="#上传文件-element-plus-文件预览" class="headerlink" title="上传文件 [element-plus - 文件预览]"></a>上传文件 [element-plus - 文件预览]</h3><ol>
<li>关闭自动上传，准备结构</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Plus</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;@element-plus/icons-vue&#x27;</span></span><br><span class="line"></span><br><span class="line">&lt;el-upload</span><br><span class="line">  <span class="keyword">class</span>=<span class="string">&quot;avatar-uploader&quot;</span></span><br><span class="line">  :auto-upload=<span class="string">&quot;false&quot;</span></span><br><span class="line">  :show-file-list=<span class="string">&quot;false&quot;</span></span><br><span class="line">  :on-change=<span class="string">&quot;onUploadFile&quot;</span></span><br><span class="line">&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">v-if</span>=<span class="string">&quot;imgUrl&quot;</span> <span class="attr">:src</span>=<span class="string">&quot;imgUrl&quot;</span> <span class="attr">class</span>=<span class="string">&quot;avatar&quot;</span> /&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">el-icon</span> <span class="attr">v-else</span> <span class="attr">class</span>=<span class="string">&quot;avatar-uploader-icon&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">Plus</span> /&gt;</span><span class="tag">&lt;/<span class="name">el-icon</span>&gt;</span></span></span><br><span class="line">&lt;/el-upload&gt;</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>准备数据 和 选择图片的处理逻辑</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> imgUrl = <span class="title function_">ref</span>(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">onUploadFile</span> = (<span class="params">uploadFile</span>) =&gt; &#123;</span><br><span class="line">  imgUrl.<span class="property">value</span> = <span class="variable constant_">URL</span>.<span class="title function_">createObjectURL</span>(uploadFile.<span class="property">raw</span>)</span><br><span class="line">  formModel.<span class="property">value</span>.<span class="property">cover_img</span> = uploadFile.<span class="property">raw</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>样式美化</li>
</ol>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.avatar-uploader</span> &#123;</span><br><span class="line">  :<span class="built_in">deep</span>() &#123;</span><br><span class="line">    <span class="selector-class">.avatar</span> &#123;</span><br><span class="line">      <span class="attribute">width</span>: <span class="number">178px</span>;</span><br><span class="line">      <span class="attribute">height</span>: <span class="number">178px</span>;</span><br><span class="line">      <span class="attribute">display</span>: block;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.el-upload</span> &#123;</span><br><span class="line">      <span class="attribute">border</span>: <span class="number">1px</span> dashed <span class="built_in">var</span>(--el-border-color);</span><br><span class="line">      <span class="attribute">border-radius</span>: <span class="number">6px</span>;</span><br><span class="line">      <span class="attribute">cursor</span>: pointer;</span><br><span class="line">      <span class="attribute">position</span>: relative;</span><br><span class="line">      <span class="attribute">overflow</span>: hidden;</span><br><span class="line">      <span class="attribute">transition</span>: <span class="built_in">var</span>(--el-transition-duration-fast);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.el-upload</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">      <span class="attribute">border-color</span>: <span class="built_in">var</span>(--el-color-primary);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.el-icon</span><span class="selector-class">.avatar-uploader-icon</span> &#123;</span><br><span class="line">      <span class="attribute">font-size</span>: <span class="number">28px</span>;</span><br><span class="line">      <span class="attribute">color</span>: <span class="number">#8c939d</span>;</span><br><span class="line">      <span class="attribute">width</span>: <span class="number">178px</span>;</span><br><span class="line">      <span class="attribute">height</span>: <span class="number">178px</span>;</span><br><span class="line">      <span class="attribute">text-align</span>: center;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>





<h3 id="富文本编辑器-vue-quill"><a href="#富文本编辑器-vue-quill" class="headerlink" title="富文本编辑器 [ vue-quill ]"></a>富文本编辑器 [ vue-quill ]</h3><p>官网地址：<a href="https://vueup.github.io/vue-quill/">https://vueup.github.io/vue-quill/</a></p>
<ol>
<li>安装包</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">pnpm add @vueup/vue-quill@latest</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>注册成局部组件</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">QuillEditor</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;@vueup/vue-quill&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;@vueup/vue-quill/dist/vue-quill.snow.css&#x27;</span></span><br></pre></td></tr></table></figure>

<ol start="3">
<li>页面中使用绑定</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;div <span class="keyword">class</span>=<span class="string">&quot;editor&quot;</span>&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">quill-editor</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">theme</span>=<span class="string">&quot;snow&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">v-model:content</span>=<span class="string">&quot;formModel.content&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">contentType</span>=<span class="string">&quot;html&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">  &gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">quill-editor</span>&gt;</span></span></span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure>

<ol start="4">
<li>样式美化</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">.<span class="property">editor</span> &#123;</span><br><span class="line">  <span class="attr">width</span>: <span class="number">100</span>%;</span><br><span class="line">  :<span class="title function_">deep</span>(<span class="params">.ql-editor</span>) &#123;</span><br><span class="line">    min-<span class="attr">height</span>: 200px;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="添加文章功能"><a href="#添加文章功能" class="headerlink" title="添加文章功能"></a>添加文章功能</h3><ol>
<li>封装添加接口</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">artPublishService</span> = (<span class="params">data</span>) =&gt;</span><br><span class="line">  request.<span class="title function_">post</span>(<span class="string">&#x27;/my/article/add&#x27;</span>, data)</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>注册点击事件调用</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;el-form-item&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">el-button</span> @<span class="attr">click</span>=<span class="string">&quot;onPublish(&#x27;已发布&#x27;)&quot;</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span>&gt;</span>发布<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">el-button</span> @<span class="attr">click</span>=<span class="string">&quot;onPublish(&#x27;草稿&#x27;)&quot;</span> <span class="attr">type</span>=<span class="string">&quot;info&quot;</span>&gt;</span>草稿<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span></span><br><span class="line">&lt;/el-form-item&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 发布文章</span></span><br><span class="line"><span class="keyword">const</span> emit = <span class="title function_">defineEmits</span>([<span class="string">&#x27;success&#x27;</span>])</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">onPublish</span> = <span class="keyword">async</span> (<span class="params">state</span>) =&gt; &#123;</span><br><span class="line">  <span class="comment">// 将已发布还是草稿状态，存入 state</span></span><br><span class="line">  formModel.<span class="property">value</span>.<span class="property">state</span> = state</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 转换 formData 数据</span></span><br><span class="line">  <span class="keyword">const</span> fd = <span class="keyword">new</span> <span class="title class_">FormData</span>()</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> key <span class="keyword">in</span> formModel.<span class="property">value</span>) &#123;</span><br><span class="line">    fd.<span class="title function_">append</span>(key, formModel.<span class="property">value</span>[key])</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (formModel.<span class="property">value</span>.<span class="property">id</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;编辑操作&#x27;</span>)</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// 添加请求</span></span><br><span class="line">    <span class="keyword">await</span> <span class="title function_">artPublishService</span>(fd)</span><br><span class="line">    <span class="title class_">ElMessage</span>.<span class="title function_">success</span>(<span class="string">&#x27;添加成功&#x27;</span>)</span><br><span class="line">    visibleDrawer.<span class="property">value</span> = <span class="literal">false</span></span><br><span class="line">    <span class="title function_">emit</span>(<span class="string">&#x27;success&#x27;</span>, <span class="string">&#x27;add&#x27;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>父组件监听事件，重新渲染</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;article-edit ref=<span class="string">&quot;articleEditRef&quot;</span> @success=<span class="string">&quot;onSuccess&quot;</span>&gt;&lt;/article-edit&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 添加修改成功</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">onSuccess</span> = (<span class="params">type</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">if</span> (type === <span class="string">&#x27;add&#x27;</span>) &#123;</span><br><span class="line">    <span class="comment">// 如果是添加，需要跳转渲染最后一页，编辑直接渲染当前页</span></span><br><span class="line">    <span class="keyword">const</span> lastPage = <span class="title class_">Math</span>.<span class="title function_">ceil</span>((total.<span class="property">value</span> + <span class="number">1</span>) / params.<span class="property">value</span>.<span class="property">pagesize</span>)</span><br><span class="line">    params.<span class="property">value</span>.<span class="property">pagenum</span> = lastPage</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="title function_">getArticleList</span>()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="添加完成后的内容重置"><a href="#添加完成后的内容重置" class="headerlink" title="添加完成后的内容重置"></a>添加完成后的内容重置</h3><figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> formRef = <span class="title function_">ref</span>()</span><br><span class="line"><span class="keyword">const</span> editorRef = <span class="title function_">ref</span>()</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">open</span> = <span class="keyword">async</span> (<span class="params">row</span>) =&gt; &#123;</span><br><span class="line">  visibleDrawer.<span class="property">value</span> = <span class="literal">true</span></span><br><span class="line">  <span class="keyword">if</span> (row.<span class="property">id</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;编辑回显&#x27;</span>)</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    formModel.<span class="property">value</span> = &#123; ...defaultForm &#125;</span><br><span class="line">    imgUrl.<span class="property">value</span> = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    editorRef.<span class="property">value</span>.<span class="title function_">setHTML</span>(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>





<h3 id="编辑文章回显"><a href="#编辑文章回显" class="headerlink" title="编辑文章回显"></a>编辑文章回显</h3><p>如果是编辑操作，一打开抽屉，就需要发送请求，获取数据进行回显</p>
<ol>
<li>封装接口，根据 id 获取详情数据</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">artGetDetailService</span> = (<span class="params">id</span>) =&gt;</span><br><span class="line">  request.<span class="title function_">get</span>(<span class="string">&#x27;my/article/info&#x27;</span>, &#123; <span class="attr">params</span>: &#123; id &#125; &#125;)</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>页面中调用渲染</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">open</span> = <span class="keyword">async</span> (<span class="params">row</span>) =&gt; &#123;</span><br><span class="line">  visibleDrawer.<span class="property">value</span> = <span class="literal">true</span></span><br><span class="line">  <span class="keyword">if</span> (row.<span class="property">id</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;编辑回显&#x27;</span>)</span><br><span class="line">    <span class="keyword">const</span> res = <span class="keyword">await</span> <span class="title function_">artGetDetailService</span>(row.<span class="property">id</span>)</span><br><span class="line">    formModel.<span class="property">value</span> = res.<span class="property">data</span>.<span class="property">data</span></span><br><span class="line">    imgUrl.<span class="property">value</span> = baseURL + formModel.<span class="property">value</span>.<span class="property">cover_img</span></span><br><span class="line">    <span class="comment">// 提交给后台，需要的是 file 格式的，将网络图片，转成 file 格式</span></span><br><span class="line">    <span class="comment">// 网络图片转成 file 对象, 需要转换一下</span></span><br><span class="line">    formModel.<span class="property">value</span>.<span class="property">cover_img</span> = <span class="keyword">await</span> <span class="title function_">imageUrlToFile</span>(imgUrl.<span class="property">value</span>, formModel.<span class="property">value</span>.<span class="property">cover_img</span>)</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;添加功能&#x27;</span>)</span><br><span class="line">    ...</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>chatGPT prompt：封装一个函数，基于 axios， 网络图片地址，转 file 对象， 请注意：写中文注释</p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 将网络图片地址转换为File对象</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">imageUrlToFile</span>(<span class="params">url, fileName</span>) &#123;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="comment">// 第一步：使用axios获取网络图片数据</span></span><br><span class="line">    <span class="keyword">const</span> response = <span class="keyword">await</span> axios.<span class="title function_">get</span>(url, &#123; <span class="attr">responseType</span>: <span class="string">&#x27;arraybuffer&#x27;</span> &#125;);</span><br><span class="line">    <span class="keyword">const</span> imageData = response.<span class="property">data</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 第二步：将图片数据转换为Blob对象</span></span><br><span class="line">    <span class="keyword">const</span> blob = <span class="keyword">new</span> <span class="title class_">Blob</span>([imageData], &#123; <span class="attr">type</span>: response.<span class="property">headers</span>[<span class="string">&#x27;content-type&#x27;</span>] &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 第三步：创建一个新的File对象</span></span><br><span class="line">    <span class="keyword">const</span> file = <span class="keyword">new</span> <span class="title class_">File</span>([blob], fileName, &#123; <span class="attr">type</span>: blob.<span class="property">type</span> &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> file;</span><br><span class="line">  &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;将图片转换为File对象时发生错误:&#x27;</span>, error);</span><br><span class="line">    <span class="keyword">throw</span> error;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>





<h3 id="编辑文章功能"><a href="#编辑文章功能" class="headerlink" title="编辑文章功能"></a>编辑文章功能</h3><ol>
<li>封装编辑接口</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">artEditService</span> = (<span class="params">data</span>) =&gt; request.<span class="title function_">put</span>(<span class="string">&#x27;my/article/info&#x27;</span>, data)</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>提交时调用</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">onPublish</span> = <span class="keyword">async</span> (<span class="params">state</span>) =&gt; &#123;</span><br><span class="line">  ...</span><br><span class="line">  <span class="keyword">if</span> (formModel.<span class="property">value</span>.<span class="property">id</span>) &#123;</span><br><span class="line">    <span class="keyword">await</span> <span class="title function_">artEditService</span>(fd)</span><br><span class="line">    <span class="title class_">ElMessage</span>.<span class="title function_">success</span>(<span class="string">&#x27;编辑成功&#x27;</span>)</span><br><span class="line">    visibleDrawer.<span class="property">value</span> = <span class="literal">false</span></span><br><span class="line">    <span class="title function_">emit</span>(<span class="string">&#x27;success&#x27;</span>, <span class="string">&#x27;edit&#x27;</span>)</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// 添加请求</span></span><br><span class="line">    ...</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="文章删除"><a href="#文章删除" class="headerlink" title="文章删除"></a>文章删除</h2><ol>
<li>封装删除接口</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">artDelService</span> = (<span class="params">id</span>) =&gt; request.<span class="title function_">delete</span>(<span class="string">&#x27;my/article/info&#x27;</span>, &#123; <span class="attr">params</span>: &#123; id &#125; &#125;)</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>页面中添加确认框调用</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">onDeleteArticle</span> = <span class="keyword">async</span> (<span class="params">row</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">await</span> <span class="title class_">ElMessageBox</span>.<span class="title function_">confirm</span>(<span class="string">&#x27;你确认删除该文章信息吗？&#x27;</span>, <span class="string">&#x27;温馨提示&#x27;</span>, &#123;</span><br><span class="line">    <span class="attr">type</span>: <span class="string">&#x27;warning&#x27;</span>,</span><br><span class="line">    <span class="attr">confirmButtonText</span>: <span class="string">&#x27;确认&#x27;</span>,</span><br><span class="line">    <span class="attr">cancelButtonText</span>: <span class="string">&#x27;取消&#x27;</span></span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="keyword">await</span> <span class="title function_">artDelService</span>(row.<span class="property">id</span>)</span><br><span class="line">  <span class="title class_">ElMessage</span>(&#123; <span class="attr">type</span>: <span class="string">&#x27;success&#x27;</span>, <span class="attr">message</span>: <span class="string">&#x27;删除成功&#x27;</span> &#125;)</span><br><span class="line">  <span class="title function_">getArticleList</span>()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>





<h1 id="ChatGPT-Copilot"><a href="#ChatGPT-Copilot" class="headerlink" title="ChatGPT &amp; Copilot"></a>ChatGPT &amp; Copilot</h1><h2 id="AI-的认知-讲解内容说明"><a href="#AI-的认知-讲解内容说明" class="headerlink" title="AI 的认知 &amp; 讲解内容说明"></a>AI 的认知 &amp; 讲解内容说明</h2><p>认知同步：</p>
<ol>
<li>AI 早已不是新事物 (接受)  &#x3D;&gt;  语音识别，人脸识别，无人驾驶，智能机器人…    (包括 ChatGPT 也是研发了多年的产物)</li>
<li>AI 本质是智能工具 (认识)  &#x3D;&gt;  人工智能辅助，可以提升效率，但不具备思想意识，无法从零到一取代人类工作</li>
<li>AI 一定会淘汰掉一部分人  &#x3D;&gt;  逆水行舟，不进则退；学会拥抱变化，尽早上车</li>
</ol>
<p>两个工具：</p>
<ol>
<li><p>ChatGPT 3.5 的使用   (4.0 使用方式一致，回答准确度更高，但付费，且每3小时，有次数限制)</p>
<ol>
<li><p>正常注册流程  (IP限制，手机号限制)</p>
</li>
<li><p>三方整合产品</p>
<ul>
<li><p>谷歌搜索：chatgpt 免费网站列表</p>
</li>
<li><p><a href="https://github.com/LiLittleCat/awesome-free-chatgpt">https://github.com/LiLittleCat/awesome-free-chatgpt</a></p>
</li>
</ul>
</li>
</ol>
</li>
<li><p>工具 Github Copilot 智能生成代码</p>
</li>
</ol>
<h2 id="ChatGPT-的基本使用-Prompt-优化"><a href="#ChatGPT-的基本使用-Prompt-优化" class="headerlink" title="ChatGPT 的基本使用 - Prompt 优化"></a>ChatGPT 的基本使用 - Prompt 优化</h2><p>AI 互动的过程中，容易出现的问题：</p>
<ul>
<li>AI未能理解问题的核心要点</li>
<li>AI的回答过于宽泛 或 过于具体</li>
<li>AI提供了错误的信息或观点</li>
<li>AI未能提供有价值的建议或解决方案</li>
</ul>
<p>在识别了问题所在之后，我们可以尝试以下策略来优化我们的Prompt：</p>
<ul>
<li><p><strong>明确提问</strong>：</p>
<p>确保问题表述清晰明确，关键字的准确度，决定了AI 对于需求的理解。</p>
</li>
<li><p><strong>细化需求：</strong></p>
<p>将问题拆分成多个小问题，可以帮助AI更具针对性地回答，也利于即时纠错。</p>
</li>
<li><p><strong>添加背景信息：</strong></p>
<p>提供有关问题背景的详细信息，也可以给 AI 预设一个角色，将有助于AI生成更具深度和价值的回答。</p>
</li>
<li><p><strong>适当引导：</strong></p>
<p>比如：“例如”、“请注意”、“请使用”等，来告诉模型你期望它做什么 或者 不做什么</p>
</li>
<li><p><strong>限制范围：</strong></p>
<p>通过限定回答的范围和长度，可以引导AI生成更精炼的回答</p>
</li>
</ul>
<p>​	…</p>
<h3 id="案例-前端简历"><a href="#案例-前端简历" class="headerlink" title="案例 - 前端简历"></a>案例 - 前端简历</h3><h4 id="Prompt-优化前："><a href="#Prompt-优化前：" class="headerlink" title="Prompt 优化前："></a>Prompt 优化前：</h4><p>Prompt1:  </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">前端简历</span><br></pre></td></tr></table></figure>

<h4 id="Prompt-优化后："><a href="#Prompt-优化后：" class="headerlink" title="Prompt 优化后："></a>Prompt 优化后：</h4><p>Prompt1:  </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">背景：你是一名【具有三年开发经验】的前端开发工程师，这三年期间，前两年，你做的【金融】相关四个项目，最后一年做的是【医疗】相关领域的两个项目，且有一定的管理 10人+ 团队的经验。主要的技术栈：【Vue】 和 【小程序】。由于你是计算机软件工程专业，所以你具备一些Java后台、Mysql数据库的知识，也掌握一些基础的算法。</span><br><span class="line"></span><br><span class="line">问题：你会如何编写你的简历个人技能介绍</span><br><span class="line"></span><br><span class="line">要求：8条技能介绍，请注意：你不会 angular。</span><br></pre></td></tr></table></figure>

<p>Prompt2：</p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">基于上文情境，你会如何编写你的项目经验介绍</span><br></pre></td></tr></table></figure>

<p>Prompt3：</p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">你刚才说的方向完全没有问题，但是我想看到更多的项目技术亮点，项目业务解决方案。</span><br><span class="line">请注意：每个项目<span class="number">3</span>个技术亮点，<span class="number">3</span>个业务解决方案。</span><br></pre></td></tr></table></figure>





<h2 id="工具-Github-Copilot-智能生成代码的使用"><a href="#工具-Github-Copilot-智能生成代码的使用" class="headerlink" title="工具 Github Copilot 智能生成代码的使用"></a>工具 Github Copilot 智能生成代码的使用</h2><h3 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h3><ul>
<li>登录 github，试用 Copilot</li>
<li>打开 vscode， 搜索并安装插件 Copilot</li>
</ul>
<h3 id="使用说明"><a href="#使用说明" class="headerlink" title="使用说明"></a>使用说明</h3><ul>
<li>删除键：不接受</li>
<li>Tab键：接收</li>
<li>Ctrl + enter： 查看更多方案</li>
</ul>
<h2 id="个人中心项目实战-基本资料"><a href="#个人中心项目实战-基本资料" class="headerlink" title="个人中心项目实战 - 基本资料"></a>个人中心项目实战 - 基本资料</h2><h3 id="静态结构-校验处理"><a href="#静态结构-校验处理" class="headerlink" title="静态结构 + 校验处理"></a>静态结构 + 校验处理</h3><p>chatgpt prompt 提示词参考：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">请基于 elementPlus 和 Vue3 的语法，生成组件代码</span><br><span class="line">要求：</span><br><span class="line">一、表单结构要求</span><br><span class="line">1.  组件中包含一个el-form表单，有四行内容，前三行是输入框，第四行是按钮</span><br><span class="line">2. 第一行 label 登录名称，输入框禁用不可输入状态</span><br><span class="line">3. 第二行 label 用户昵称，输入框可输入</span><br><span class="line">4. 第三行 label 用户邮箱，输入框可输入</span><br><span class="line">5. 第四行按钮，提交修改</span><br><span class="line"></span><br><span class="line">二、校验需求</span><br><span class="line">给昵称 和 邮箱添加校验</span><br><span class="line">1. 昵称 nickname 必须是2-10位的非空字符串</span><br><span class="line">2. 邮箱 email 符合邮箱格式即可，且不能为空</span><br></pre></td></tr></table></figure>

<p>参考目标代码：</p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line"><span class="keyword">import</span> &#123; useUserStore &#125; <span class="keyword">from</span> <span class="string">&#x27;@/stores&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; ref &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">const</span> &#123;</span><br><span class="line">  <span class="attr">user</span>: &#123; username, nickname, email, id &#125;</span><br><span class="line">&#125; = <span class="title function_">useUserStore</span>()</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> userInfo = <span class="title function_">ref</span>(&#123; username, nickname, email, id &#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> rules = &#123;</span><br><span class="line">  <span class="attr">nickname</span>: [</span><br><span class="line">    &#123; <span class="attr">required</span>: <span class="literal">true</span>, <span class="attr">message</span>: <span class="string">&#x27;请输入用户昵称&#x27;</span>, <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span> &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">pattern</span>: <span class="regexp">/^\S&#123;2,10&#125;$/</span>,</span><br><span class="line">      <span class="attr">message</span>: <span class="string">&#x27;昵称必须是2-10位的非空字符串&#x27;</span>,</span><br><span class="line">      <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">email</span>: [</span><br><span class="line">    &#123; <span class="attr">required</span>: <span class="literal">true</span>, <span class="attr">message</span>: <span class="string">&#x27;请输入用户邮箱&#x27;</span>, <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">type</span>: <span class="string">&#x27;email&#x27;</span>, <span class="attr">message</span>: <span class="string">&#x27;邮箱格式不正确&#x27;</span>, <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span> &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">page-container</span> <span class="attr">title</span>=<span class="string">&quot;基本资料&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">el-row</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;12&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">el-form</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">:model</span>=<span class="string">&quot;userInfo&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">:rules</span>=<span class="string">&quot;rules&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">ref</span>=<span class="string">&quot;formRef&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">label-width</span>=<span class="string">&quot;100px&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">size</span>=<span class="string">&quot;large&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        &gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;登录名称&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">&quot;userInfo.username&quot;</span> <span class="attr">disabled</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;用户昵称&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;nickname&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">&quot;userInfo.nickname&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;用户邮箱&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;email&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">&quot;userInfo.email&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span>&gt;</span>提交修改<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">el-form</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">el-row</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">page-container</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<h3 id="封装接口，更新个人信息"><a href="#封装接口，更新个人信息" class="headerlink" title="封装接口，更新个人信息"></a>封装接口，更新个人信息</h3><ol>
<li>封装接口</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">userUpdateInfoService</span> = (<span class="params">&#123; id, nickname, email &#125;</span>) =&gt;</span><br><span class="line">  request.<span class="title function_">put</span>(<span class="string">&#x27;/my/userinfo&#x27;</span>, &#123; id, nickname, email &#125;)</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>页面中校验后，封装调用</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> formRef = <span class="title function_">ref</span>()</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">onSubmit</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> valid = <span class="keyword">await</span> formRef.<span class="property">value</span>.<span class="title function_">validate</span>()</span><br><span class="line">  <span class="keyword">if</span> (valid) &#123;</span><br><span class="line">    <span class="keyword">await</span> <span class="title function_">userUpdateInfoService</span>(userInfo.<span class="property">value</span>)</span><br><span class="line">    <span class="keyword">await</span> <span class="title function_">getUser</span>()</span><br><span class="line">    <span class="title class_">ElMessage</span>.<span class="title function_">success</span>(<span class="string">&#x27;修改成功&#x27;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>





<h2 id="个人中心项目实战-更换头像"><a href="#个人中心项目实战-更换头像" class="headerlink" title="个人中心项目实战 - 更换头像"></a>个人中心项目实战 - 更换头像</h2><h3 id="静态结构"><a href="#静态结构" class="headerlink" title="静态结构"></a>静态结构</h3><figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line"><span class="keyword">import</span> &#123; ref &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Plus</span>, <span class="title class_">Upload</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;@element-plus/icons-vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; useUserStore &#125; <span class="keyword">from</span> <span class="string">&#x27;@/stores&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> userStore = <span class="title function_">useUserStore</span>()</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> imgUrl = <span class="title function_">ref</span>(userStore.<span class="property">user</span>.<span class="property">user_pic</span>)</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">onUploadFile</span> = (<span class="params">file</span>) =&gt; &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(file)</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">page-container</span> <span class="attr">title</span>=<span class="string">&quot;更换头像&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">el-row</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;12&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">el-upload</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">ref</span>=<span class="string">&quot;uploadRef&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">class</span>=<span class="string">&quot;avatar-uploader&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">:auto-upload</span>=<span class="string">&quot;false&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">:show-file-list</span>=<span class="string">&quot;false&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">:on-change</span>=<span class="string">&quot;onUploadFile&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        &gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">img</span> <span class="attr">v-if</span>=<span class="string">&quot;imgUrl&quot;</span> <span class="attr">:src</span>=<span class="string">&quot;imgUrl&quot;</span> <span class="attr">class</span>=<span class="string">&quot;avatar&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">img</span> <span class="attr">v-else</span> <span class="attr">src</span>=<span class="string">&quot;@/assets/avatar.jpg&quot;</span> <span class="attr">width</span>=<span class="string">&quot;278&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">el-upload</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">br</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> <span class="attr">:icon</span>=<span class="string">&quot;Plus&quot;</span> <span class="attr">size</span>=<span class="string">&quot;large&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          选择图片</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;success&quot;</span> <span class="attr">:icon</span>=<span class="string">&quot;Upload&quot;</span> <span class="attr">size</span>=<span class="string">&quot;large&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          上传头像</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">el-row</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">page-container</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">style</span> <span class="attr">lang</span>=<span class="string">&quot;scss&quot;</span> <span class="attr">scoped</span>&gt;</span><span class="language-css"></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"><span class="selector-class">.avatar-uploader</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  :<span class="built_in">deep</span>() &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="selector-class">.avatar</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">width</span>: <span class="number">278px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">height</span>: <span class="number">278px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">display</span>: block;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="selector-class">.el-upload</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">border</span>: <span class="number">1px</span> dashed <span class="built_in">var</span>(--el-border-color);</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">border-radius</span>: <span class="number">6px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">cursor</span>: pointer;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">position</span>: relative;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">overflow</span>: hidden;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">transition</span>: <span class="built_in">var</span>(--el-transition-duration-fast);</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="selector-class">.el-upload</span><span class="selector-pseudo">:hover</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">border-color</span>: <span class="built_in">var</span>(--el-color-primary);</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="selector-class">.el-icon</span><span class="selector-class">.avatar-uploader-icon</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">font-size</span>: <span class="number">28px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">color</span>: <span class="number">#8c939d</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">width</span>: <span class="number">278px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">height</span>: <span class="number">278px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">text-align</span>: center;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<h3 id="选择预览图片"><a href="#选择预览图片" class="headerlink" title="选择预览图片"></a>选择预览图片</h3><figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> uploadRef = <span class="title function_">ref</span>()</span><br><span class="line"><span class="keyword">const</span> imgUrl = <span class="title function_">ref</span>(userStore.<span class="property">user</span>.<span class="property">user_pic</span>)</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">onUploadFile</span> = (<span class="params">file</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> reader = <span class="keyword">new</span> <span class="title class_">FileReader</span>()</span><br><span class="line">  reader.<span class="title function_">readAsDataURL</span>(file.<span class="property">raw</span>)</span><br><span class="line">  reader.<span class="property">onload</span> = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    imgUrl.<span class="property">value</span> = reader.<span class="property">result</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;el-upload ref=<span class="string">&quot;uploadRef&quot;</span>&gt;&lt;/el-upload&gt; </span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">el-button</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">  @<span class="attr">click</span>=<span class="string">&quot;uploadRef.$el.querySelector(&#x27;input&#x27;).click()&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">  <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">  <span class="attr">:icon</span>=<span class="string">&quot;Plus&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">  <span class="attr">size</span>=<span class="string">&quot;large&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">  &gt;</span>选择图片&lt;/el-button</span></span><br><span class="line"><span class="language-xml">&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="上传头像"><a href="#上传头像" class="headerlink" title="上传头像"></a>上传头像</h3><ol>
<li>封装接口</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">userUploadAvatarService</span> = (<span class="params">avatar</span>) =&gt; request.<span class="title function_">patch</span>(<span class="string">&#x27;/my/update/avatar&#x27;</span>, &#123; avatar &#125;)</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>调用接口</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">onUpdateAvatar</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">await</span> <span class="title function_">userUploadAvatarService</span>(imgUrl.<span class="property">value</span>)</span><br><span class="line">  <span class="keyword">await</span> userStore.<span class="title function_">getUser</span>()</span><br><span class="line">  <span class="title class_">ElMessage</span>(&#123; <span class="attr">type</span>: <span class="string">&#x27;success&#x27;</span>, <span class="attr">message</span>: <span class="string">&#x27;更换头像成功&#x27;</span> &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="个人中心项目实战-重置密码"><a href="#个人中心项目实战-重置密码" class="headerlink" title="个人中心项目实战 - 重置密码"></a>个人中心项目实战 - 重置密码</h2><p>chatgpt  prompt</p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">请基于 elementPlus 和 <span class="title class_">Vue3</span> 的语法，生成组件代码</span><br><span class="line">要求：</span><br><span class="line">一、表单结构要求</span><br><span class="line"><span class="number">1.</span> 组件中包含一个el-form表单，有四行内容，前三行是表单输入框，第四行是两个按钮</span><br><span class="line"><span class="number">2.</span> 第一行 label 原密码</span><br><span class="line"><span class="number">3.</span> 第二行 label 新密码</span><br><span class="line"><span class="number">4.</span> 第三行 label 确认密码</span><br><span class="line"><span class="number">5.</span> 第四行两个按钮，修改密码 和 重置</span><br><span class="line"></span><br><span class="line">二、form绑定字段如下：</span><br><span class="line"><span class="keyword">const</span> pwdForm = <span class="title function_">ref</span>(&#123;</span><br><span class="line">  <span class="attr">old_pwd</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">  <span class="attr">new_pwd</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">  <span class="attr">re_pwd</span>: <span class="string">&#x27;&#x27;</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">三、校验需求</span><br><span class="line">所有字段，都是 <span class="number">6</span>-<span class="number">15</span>位 非空</span><br><span class="line">自定义校验<span class="number">1</span>：原密码 和 新密码不能一样</span><br><span class="line">自定义校验<span class="number">2</span>：新密码 和 确认密码必须一样</span><br></pre></td></tr></table></figure>



<h3 id="静态结构-校验处理-1"><a href="#静态结构-校验处理-1" class="headerlink" title="静态结构 + 校验处理"></a>静态结构 + 校验处理</h3><figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line"><span class="keyword">import</span> &#123; ref &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">const</span> pwdForm = <span class="title function_">ref</span>(&#123;</span><br><span class="line">  <span class="attr">old_pwd</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">  <span class="attr">new_pwd</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">  <span class="attr">re_pwd</span>: <span class="string">&#x27;&#x27;</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">checkOldSame</span> = (<span class="params">rule, value, cb</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">if</span> (value === pwdForm.<span class="property">value</span>.<span class="property">old_pwd</span>) &#123;</span><br><span class="line">    <span class="title function_">cb</span>(<span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;原密码和新密码不能一样!&#x27;</span>))</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="title function_">cb</span>()</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">checkNewSame</span> = (<span class="params">rule, value, cb</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">if</span> (value !== pwdForm.<span class="property">value</span>.<span class="property">new_pwd</span>) &#123;</span><br><span class="line">    <span class="title function_">cb</span>(<span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;新密码和确认再次输入的新密码不一样!&#x27;</span>))</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="title function_">cb</span>()</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> rules = &#123;</span><br><span class="line">  <span class="comment">// 原密码</span></span><br><span class="line">  <span class="attr">old_pwd</span>: [</span><br><span class="line">    &#123; <span class="attr">required</span>: <span class="literal">true</span>, <span class="attr">message</span>: <span class="string">&#x27;请输入密码&#x27;</span>, <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span> &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">pattern</span>: <span class="regexp">/^\S&#123;6,15&#125;$/</span>,</span><br><span class="line">      <span class="attr">message</span>: <span class="string">&#x27;密码长度必须是6-15位的非空字符串&#x27;</span>,</span><br><span class="line">      <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="comment">// 新密码</span></span><br><span class="line">  <span class="attr">new_pwd</span>: [</span><br><span class="line">    &#123; <span class="attr">required</span>: <span class="literal">true</span>, <span class="attr">message</span>: <span class="string">&#x27;请输入新密码&#x27;</span>, <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span> &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">pattern</span>: <span class="regexp">/^\S&#123;6,15&#125;$/</span>,</span><br><span class="line">      <span class="attr">message</span>: <span class="string">&#x27;密码长度必须是6-15位的非空字符串&#x27;</span>,</span><br><span class="line">      <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123; <span class="attr">validator</span>: checkOldSame, <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span> &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="comment">// 确认新密码</span></span><br><span class="line">  <span class="attr">re_pwd</span>: [</span><br><span class="line">    &#123; <span class="attr">required</span>: <span class="literal">true</span>, <span class="attr">message</span>: <span class="string">&#x27;请再次确认新密码&#x27;</span>, <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span> &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">pattern</span>: <span class="regexp">/^\S&#123;6,15&#125;$/</span>,</span><br><span class="line">      <span class="attr">message</span>: <span class="string">&#x27;密码长度必须是6-15位的非空字符串&#x27;</span>,</span><br><span class="line">      <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123; <span class="attr">validator</span>: checkNewSame, <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span> &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">page-container</span> <span class="attr">title</span>=<span class="string">&quot;重置密码&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">el-row</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;12&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">el-form</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">:model</span>=<span class="string">&quot;pwdForm&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">:rules</span>=<span class="string">&quot;rules&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">ref</span>=<span class="string">&quot;formRef&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">label-width</span>=<span class="string">&quot;100px&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">size</span>=<span class="string">&quot;large&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        &gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;原密码&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;old_pwd&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">&quot;pwdForm.old_pwd&quot;</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;新密码&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;new_pwd&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">&quot;pwdForm.new_pwd&quot;</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;确认新密码&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;re_pwd&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">&quot;pwdForm.re_pwd&quot;</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">el-button</span> @<span class="attr">click</span>=<span class="string">&quot;onSubmit&quot;</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span>&gt;</span>修改密码<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">el-button</span> @<span class="attr">click</span>=<span class="string">&quot;onReset&quot;</span>&gt;</span>重置<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">el-form</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">el-row</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">page-container</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br></pre></td></tr></table></figure>





<h3 id="封装接口，更新密码信息"><a href="#封装接口，更新密码信息" class="headerlink" title="封装接口，更新密码信息"></a>封装接口，更新密码信息</h3><ol>
<li>封装接口</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">userUpdatePassService</span> = (<span class="params">&#123; old_pwd, new_pwd, re_pwd &#125;</span>) =&gt;</span><br><span class="line">  request.<span class="title function_">patch</span>(<span class="string">&#x27;/my/updatepwd&#x27;</span>, &#123; old_pwd, new_pwd, re_pwd &#125;)</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>页面中调用</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> formRef = <span class="title function_">ref</span>()</span><br><span class="line"><span class="keyword">const</span> router = <span class="title function_">useRouter</span>()</span><br><span class="line"><span class="keyword">const</span> userStore = <span class="title function_">useUserStore</span>()</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">onSubmit</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> valid = <span class="keyword">await</span> formRef.<span class="property">value</span>.<span class="title function_">validate</span>()</span><br><span class="line">  <span class="keyword">if</span> (valid) &#123;</span><br><span class="line">    <span class="keyword">await</span> <span class="title function_">userUpdatePassService</span>(pwdForm.<span class="property">value</span>)</span><br><span class="line">    <span class="title class_">ElMessage</span>(&#123; <span class="attr">type</span>: <span class="string">&#x27;success&#x27;</span>, <span class="attr">message</span>: <span class="string">&#x27;更换密码成功&#x27;</span> &#125;)</span><br><span class="line">    userStore.<span class="title function_">setToken</span>(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    userStore.<span class="title function_">setUser</span>(&#123;&#125;)</span><br><span class="line">    router.<span class="title function_">push</span>(<span class="string">&#x27;/login&#x27;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">onReset</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  formRef.<span class="property">value</span>.<span class="title function_">resetFields</span>()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>









]]></content>
      <categories>
        <category>前端</category>
        <category>Vue</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>Vue3.0</tag>
        <tag>项目实践</tag>
      </tags>
  </entry>
  <entry>
    <title>智慧商城项目-vue2</title>
    <url>/2024/11/19/%E6%99%BA%E6%85%A7%E5%95%86%E5%9F%8E%E9%A1%B9%E7%9B%AE-vue2/</url>
    <content><![CDATA[<h1 id="智慧商城-授课大纲"><a href="#智慧商城-授课大纲" class="headerlink" title="智慧商城 - 授课大纲"></a>智慧商城 - 授课大纲</h1><p>接口文档：<a href="https://apifox.com/apidoc/shared-12ab6b18-adc2-444c-ad11-0e60f5693f66/doc-2221080">https://apifox.com/apidoc/shared-12ab6b18-adc2-444c-ad11-0e60f5693f66/doc-2221080</a></p>
<p>演示地址：<a href="http://cba.itlike.com/public/mweb/#/">http://cba.itlike.com/public/mweb/#/</a></p>
<h2 id="01-项目功能演示"><a href="#01-项目功能演示" class="headerlink" title="01. 项目功能演示"></a>01. 项目功能演示</h2><h3 id="1-明确功能模块"><a href="#1-明确功能模块" class="headerlink" title="1.明确功能模块"></a>1.明确功能模块</h3><p>启动准备好的代码，演示移动端面经内容，明确功能模块</p>
<img data-src="/2024/11/19/%E6%99%BA%E6%85%A7%E5%95%86%E5%9F%8E%E9%A1%B9%E7%9B%AE-vue2/image-20230624164519220.png" class="" title="image-20230624164519220">



<h3 id="2-项目收获"><a href="#2-项目收获" class="headerlink" title="2.项目收获"></a>2.项目收获</h3><img data-src="/2024/11/19/%E6%99%BA%E6%85%A7%E5%95%86%E5%9F%8E%E9%A1%B9%E7%9B%AE-vue2/image-20230616163440573.png" class="" title="image-20230616163440573">





<h2 id="02-项目创建目录初始化"><a href="#02-项目创建目录初始化" class="headerlink" title="02. 项目创建目录初始化"></a>02. 项目创建目录初始化</h2><h3 id="vue-cli-建项目"><a href="#vue-cli-建项目" class="headerlink" title="vue-cli 建项目"></a>vue-cli 建项目</h3><p>1.安装脚手架 (已安装)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm i @vue/cli -g</span><br></pre></td></tr></table></figure>

<p>2.创建项目</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vue create hm-shopping</span><br></pre></td></tr></table></figure>

<ul>
<li>选项</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="title class_">Vue</span> <span class="variable constant_">CLI</span> v5<span class="number">.0</span><span class="number">.8</span></span><br><span class="line">? <span class="title class_">Please</span> pick a <span class="attr">preset</span>:</span><br><span class="line">  <span class="title class_">Default</span> ([<span class="title class_">Vue</span> <span class="number">3</span>] babel, eslint)</span><br><span class="line">  <span class="title class_">Default</span> ([<span class="title class_">Vue</span> <span class="number">2</span>] babel, eslint)</span><br><span class="line">&gt; <span class="title class_">Manually</span> select features     选自定义</span><br></pre></td></tr></table></figure>

<ul>
<li>手动选择功能</li>
</ul>
<img data-src="/2024/11/19/%E6%99%BA%E6%85%A7%E5%95%86%E5%9F%8E%E9%A1%B9%E7%9B%AE-vue2/1682941856172.png" class="" width="68294185617">

<ul>
<li>选择vue的版本</li>
</ul>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">  <span class="number">3.</span>x</span><br><span class="line">&gt; <span class="number">2.</span>x</span><br></pre></td></tr></table></figure>

<ul>
<li>是否使用history模式</li>
</ul>
<img data-src="/2024/11/19/%E6%99%BA%E6%85%A7%E5%95%86%E5%9F%8E%E9%A1%B9%E7%9B%AE-vue2/1682941888453.png" class="" title="image-20201025150602129">

<ul>
<li>选择css预处理</li>
</ul>
<img data-src="/2024/11/19/%E6%99%BA%E6%85%A7%E5%95%86%E5%9F%8E%E9%A1%B9%E7%9B%AE-vue2/1682941900018.png" class="" title="image-20220629175133593">

<ul>
<li>选择eslint的风格 （eslint 代码规范的检验工具，检验代码是否符合规范）</li>
<li>比如：const age &#x3D; 18;   &#x3D;&gt;  报错！多加了分号！后面有工具，一保存，全部格式化成最规范的样子</li>
</ul>
<img data-src="/2024/11/19/%E6%99%BA%E6%85%A7%E5%95%86%E5%9F%8E%E9%A1%B9%E7%9B%AE-vue2/1682941918562.png" class="" width="68294191856">

<ul>
<li>选择校验的时机 （直接回车）</li>
</ul>
<img data-src="/2024/11/19/%E6%99%BA%E6%85%A7%E5%95%86%E5%9F%8E%E9%A1%B9%E7%9B%AE-vue2/1682941935794.png" class="" width="68294193579">

<ul>
<li>选择配置文件的生成方式 （直接回车）</li>
</ul>
<img data-src="/2024/11/19/%E6%99%BA%E6%85%A7%E5%95%86%E5%9F%8E%E9%A1%B9%E7%9B%AE-vue2/1682941947985.png" class="" width="68294194798">

<ul>
<li>是否保存预设，下次直接使用？  &#x3D;&gt;   不保存，输入 N</li>
</ul>
<img data-src="/2024/11/19/%E6%99%BA%E6%85%A7%E5%95%86%E5%9F%8E%E9%A1%B9%E7%9B%AE-vue2/1682941961551.png" class="" width="68294196155">

<ul>
<li>等待安装，项目初始化完成</li>
</ul>
<img data-src="/2024/11/19/%E6%99%BA%E6%85%A7%E5%95%86%E5%9F%8E%E9%A1%B9%E7%9B%AE-vue2/1682941974763.png" class="" width="68294197476">

<ul>
<li>启动项目</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm run serve</span><br></pre></td></tr></table></figure>



<h2 id="03-调整初始化目录结构"><a href="#03-调整初始化目录结构" class="headerlink" title="03. 调整初始化目录结构"></a>03. 调整初始化目录结构</h2><blockquote>
<p>强烈建议大家严格按照老师的步骤进行调整，为了符合企业规范</p>
</blockquote>
<p>为了更好的实现后面的操作，我们把整体的目录结构做一些调整。</p>
<p>目标:</p>
<ol>
<li>删除初始化的一些默认文件</li>
<li>修改没删除的文件</li>
<li>新增我们需要的目录结构</li>
</ol>
<h3 id="1-删除文件"><a href="#1-删除文件" class="headerlink" title="1.删除文件"></a>1.删除文件</h3><ul>
<li>src&#x2F;智慧商城项目-vue2&#x2F;logo.png</li>
<li>src&#x2F;components&#x2F;HelloWorld.vue</li>
<li>src&#x2F;views&#x2F;AboutView.vue</li>
<li>src&#x2F;views&#x2F;HomeView.vue</li>
</ul>
<h3 id="2-修改文件"><a href="#2-修改文件" class="headerlink" title="2.修改文件"></a>2.修改文件</h3><p><code>main.js</code> 不需要修改</p>
<p><code>router/index.js</code></p>
<p>删除默认的路由配置</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Vue</span> <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">VueRouter</span> <span class="keyword">from</span> <span class="string">&#x27;vue-router&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">use</span>(<span class="title class_">VueRouter</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> routes = [</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> router = <span class="keyword">new</span> <span class="title class_">VueRouter</span>(&#123;</span><br><span class="line">  routes</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><code>App.vue</code></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">router-view</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="3-新增目录"><a href="#3-新增目录" class="headerlink" title="3.新增目录"></a>3.新增目录</h3><ul>
<li>src&#x2F;api 目录<ul>
<li>存储接口模块 (发送ajax请求接口的模块)</li>
</ul>
</li>
<li>src&#x2F;utils 目录<ul>
<li>存储一些工具模块 (自己封装的方法)</li>
</ul>
</li>
</ul>
<p>目录效果如下:</p>
<img data-src="/2024/11/19/%E6%99%BA%E6%85%A7%E5%95%86%E5%9F%8E%E9%A1%B9%E7%9B%AE-vue2/image-20230616184644176.png" class="" title="image-20230616184644176">



<h2 id="04-vant组件库及Vue周边的其他组件库"><a href="#04-vant组件库及Vue周边的其他组件库" class="headerlink" title="04. vant组件库及Vue周边的其他组件库"></a>04. vant组件库及Vue周边的其他组件库</h2><blockquote>
<p>组件库：第三方封装好了很多很多的组件，整合到一起就是一个组件库。</p>
<p><a href="https://vant-contrib.gitee.io/vant/v2/#/zh-CN/">https://vant-contrib.gitee.io/vant/v2/#/zh-CN/</a></p>
</blockquote>
<img data-src="/2024/11/19/%E6%99%BA%E6%85%A7%E5%95%86%E5%9F%8E%E9%A1%B9%E7%9B%AE-vue2/image-20230616184726099.png" class="" title="image-20230616184726099">

<p>比如日历组件、键盘组件、打分组件、下拉筛选组件等</p>
<p>组件库并不是唯一的，常用的组件库还有以下几种：</p>
<p>pc:  <a href="https://element.eleme.cn/#/zh-CN">element-ui</a>    <a href="https://element-plus.gitee.io/zh-CN/">element-plus</a>  <a href="https://iview.github.io/">iview</a>      <strong><a href="https://antdv.com/components/overview-cn">ant-design</a></strong></p>
<p>移动：<a href="https://vant-contrib.gitee.io/vant/v2/#/zh-CN/">vant-ui</a>     <a href="http://mint-ui.github.io/docs/#/zh-cn2">Mint UI</a> (饿了么)    <a href="https://didi.github.io/cube-ui/#/zh-CN/">Cube UI</a> (滴滴)</p>
<h2 id="05-全部导入和按需导入的区别"><a href="#05-全部导入和按需导入的区别" class="headerlink" title="05. 全部导入和按需导入的区别"></a>05. 全部导入和按需导入的区别</h2><p>目标：明确 <strong>全部导入</strong> 和 <strong>按需导入</strong> 的区别</p>
<img data-src="/2024/11/19/%E6%99%BA%E6%85%A7%E5%95%86%E5%9F%8E%E9%A1%B9%E7%9B%AE-vue2/1682944688666.png" class="" width="68294468866">

<p>区别：</p>
<p>1.全部导入会引起项目打包后的体积变大，进而影响用户访问网站的性能</p>
<p>2.按需导入只会导入你使用的组件，进而节约了资源</p>
<h2 id="06-全部导入"><a href="#06-全部导入" class="headerlink" title="06. 全部导入"></a>06. 全部导入</h2><ul>
<li>安装vant-ui</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yarn add vant@latest-v2</span><br></pre></td></tr></table></figure>

<ul>
<li>在main.js中</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Vant</span> <span class="keyword">from</span> <span class="string">&#x27;vant&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;vant/lib/index.css&#x27;</span>;</span><br><span class="line"><span class="comment">// 把vant中所有的组件都导入了</span></span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">use</span>(<span class="title class_">Vant</span>)</span><br></pre></td></tr></table></figure>

<ul>
<li>即可使用</li>
</ul>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;van-button type=<span class="string">&quot;primary&quot;</span>&gt;主要按钮&lt;/van-button&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">van-button</span> <span class="attr">type</span>=<span class="string">&quot;info&quot;</span>&gt;</span>信息按钮<span class="tag">&lt;/<span class="name">van-button</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<img data-src="/2024/11/19/%E6%99%BA%E6%85%A7%E5%95%86%E5%9F%8E%E9%A1%B9%E7%9B%AE-vue2/1682944830403.png" class="" width="68294483040">

<p>vant-ui提供了很多的组件，全部导入，会导致项目打包变得很大。</p>
<h2 id="07-按需导入"><a href="#07-按需导入" class="headerlink" title="07. 按需导入"></a>07. 按需导入</h2><ul>
<li>安装vant-ui</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yarn add vant@latest-v2</span><br></pre></td></tr></table></figure>

<ul>
<li>安装一个插件</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yarn add babel-plugin-import -D</span><br></pre></td></tr></table></figure>

<ul>
<li>在<code>babel.config.js</code>中配置</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="attr">presets</span>: [</span><br><span class="line">    <span class="string">&#x27;@vue/cli-plugin-babel/preset&#x27;</span></span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">plugins</span>: [</span><br><span class="line">    [<span class="string">&#x27;import&#x27;</span>, &#123;</span><br><span class="line">      <span class="attr">libraryName</span>: <span class="string">&#x27;vant&#x27;</span>,</span><br><span class="line">      <span class="attr">libraryDirectory</span>: <span class="string">&#x27;es&#x27;</span>,</span><br><span class="line">      <span class="attr">style</span>: <span class="literal">true</span></span><br><span class="line">    &#125;, <span class="string">&#x27;vant&#x27;</span>]</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>按需加载，在<code>main.js</code></li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Button</span>, <span class="title class_">Icon</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;vant&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">use</span>(<span class="title class_">Button</span>)</span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">use</span>(<span class="title class_">Icon</span>)</span><br></pre></td></tr></table></figure>

<ul>
<li><code>app.vue</code>中进行测试</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;van-button type=<span class="string">&quot;primary&quot;</span>&gt;主要按钮&lt;/van-button&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">van-button</span> <span class="attr">type</span>=<span class="string">&quot;info&quot;</span>&gt;</span>信息按钮<span class="tag">&lt;/<span class="name">van-button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">van-button</span> <span class="attr">type</span>=<span class="string">&quot;default&quot;</span>&gt;</span>默认按钮<span class="tag">&lt;/<span class="name">van-button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">van-button</span> <span class="attr">type</span>=<span class="string">&quot;warning&quot;</span>&gt;</span>警告按钮<span class="tag">&lt;/<span class="name">van-button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">van-button</span> <span class="attr">type</span>=<span class="string">&quot;danger&quot;</span>&gt;</span>危险按钮<span class="tag">&lt;/<span class="name">van-button</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<ul>
<li>把引入组件的步骤抽离到单独的js文件中比如 <code>utils/vant-ui.js</code></li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Button</span>, <span class="title class_">Icon</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;vant&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">use</span>(<span class="title class_">Button</span>)</span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">use</span>(<span class="title class_">Icon</span>)</span><br></pre></td></tr></table></figure>

<p>main.js中进行导入</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 导入按需导入的配置文件</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;@/utils/vant-ui&#x27;</span></span><br></pre></td></tr></table></figure>



<h2 id="08-项目中的vw适配"><a href="#08-项目中的vw适配" class="headerlink" title="08. 项目中的vw适配"></a>08. 项目中的vw适配</h2><p>官方说明：<a href="https://vant-contrib.gitee.io/vant/v2/#/zh-CN/advanced-usage">https://vant-contrib.gitee.io/vant/v2/#/zh-CN/advanced-usage</a></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">yarn add postcss-px-to-viewport@<span class="number">1.1</span><span class="number">.1</span> -D</span><br></pre></td></tr></table></figure>

<ul>
<li>项目根目录， 新建postcss的配置文件<code>postcss.config.js</code></li>
</ul>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="comment">// postcss.config.js</span></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="attr">plugins</span>: &#123;</span><br><span class="line">    <span class="string">&#x27;postcss-px-to-viewport&#x27;</span>: &#123;</span><br><span class="line">      <span class="attr">viewportWidth</span>: <span class="number">375</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<p>viewportWidth:设计稿的视口宽度</p>
<ol>
<li>vant-ui中的组件就是按照375的视口宽度设计的</li>
<li>恰好面经项目中的设计稿也是按照375的视口宽度设计的，所以此时 我们只需要配置375就可以了</li>
<li>如果设计稿不是按照375而是按照750的宽度设计，<a href="https://zhuanlan.zhihu.com/p/366664788">那此时这个值该怎么填呢？</a></li>
</ol>
<h2 id="09-路由配置-一级路由"><a href="#09-路由配置-一级路由" class="headerlink" title="09. 路由配置 - 一级路由"></a>09. 路由配置 - 一级路由</h2><p><strong>但凡是单个页面，独立展示的，都是一级路由</strong></p>
<p>路由设计：</p>
<ul>
<li>登录页</li>
<li>首页架子<ul>
<li>首页 - 二级</li>
<li>分类页 - 二级</li>
<li>购物车 - 二级</li>
<li>我的 - 二级</li>
</ul>
</li>
<li>搜索页</li>
<li>搜索列表页</li>
<li>商品详情页</li>
<li>结算支付页</li>
<li>我的订单页</li>
</ul>
<p><code>router/index.js</code> 配置一级路由，新建对应的页面文件</p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Vue</span> <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">VueRouter</span> <span class="keyword">from</span> <span class="string">&#x27;vue-router&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Layout</span> <span class="keyword">from</span> <span class="string">&#x27;@/views/layout&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Search</span> <span class="keyword">from</span> <span class="string">&#x27;@/views/search&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">SearchList</span> <span class="keyword">from</span> <span class="string">&#x27;@/views/search/list&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">ProDetail</span> <span class="keyword">from</span> <span class="string">&#x27;@/views/prodetail&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Login</span> <span class="keyword">from</span> <span class="string">&#x27;@/views/login&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Pay</span> <span class="keyword">from</span> <span class="string">&#x27;@/views/pay&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">MyOrder</span> <span class="keyword">from</span> <span class="string">&#x27;@/views/myorder&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">use</span>(<span class="title class_">VueRouter</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> router = <span class="keyword">new</span> <span class="title class_">VueRouter</span>(&#123;</span><br><span class="line">  <span class="attr">routes</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&#x27;/login&#x27;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="title class_">Login</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&#x27;/&#x27;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="title class_">Layout</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&#x27;/search&#x27;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="title class_">Search</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&#x27;/searchlist&#x27;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="title class_">SearchList</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&#x27;/prodetail/:id&#x27;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="title class_">ProDetail</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&#x27;/pay&#x27;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="title class_">Pay</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&#x27;/myorder&#x27;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="title class_">MyOrder</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router</span><br></pre></td></tr></table></figure>





<h2 id="10-路由配置-tabbar标签页"><a href="#10-路由配置-tabbar标签页" class="headerlink" title="10. 路由配置-tabbar标签页"></a>10. 路由配置-tabbar标签页</h2><img data-src="/2024/11/19/%E6%99%BA%E6%85%A7%E5%95%86%E5%9F%8E%E9%A1%B9%E7%9B%AE-vue2/image-20230617152947594.png" class="" title="image-20230617152947594">

<p><a href="https://vant-contrib.gitee.io/vant/v2/#/zh-CN/tabbar">https://vant-contrib.gitee.io/vant/v2/#/zh-CN/tabbar</a></p>
<p><code>vant-ui.js</code> 引入组件</p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Tabbar</span>, <span class="title class_">TabbarItem</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;vant&#x27;</span></span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">use</span>(<span class="title class_">Tabbar</span>)</span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">use</span>(<span class="title class_">TabbarItem</span>)</span><br></pre></td></tr></table></figure>

<p><code>layout.vue</code></p>
<ol>
<li>复制官方代码</li>
<li>修改显示文本及显示的图标</li>
<li>配置高亮颜色</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="comment">&lt;!-- 二级路由出口 --&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">van-tabbar</span> <span class="attr">active-color</span>=<span class="string">&quot;#ee0a24&quot;</span> <span class="attr">inactive-color</span>=<span class="string">&quot;#000&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">van-tabbar-item</span> <span class="attr">icon</span>=<span class="string">&quot;wap-home-o&quot;</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">van-tabbar-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">van-tabbar-item</span> <span class="attr">icon</span>=<span class="string">&quot;apps-o&quot;</span>&gt;</span>分类页<span class="tag">&lt;/<span class="name">van-tabbar-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">van-tabbar-item</span> <span class="attr">icon</span>=<span class="string">&quot;shopping-cart-o&quot;</span>&gt;</span>购物车<span class="tag">&lt;/<span class="name">van-tabbar-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">van-tabbar-item</span> <span class="attr">icon</span>=<span class="string">&quot;user-o&quot;</span>&gt;</span>我的<span class="tag">&lt;/<span class="name">van-tabbar-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">van-tabbar</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure>



<h2 id="11-路由配置-二级路由"><a href="#11-路由配置-二级路由" class="headerlink" title="11. 路由配置 - 二级路由"></a>11. 路由配置 - 二级路由</h2><ol>
<li><code>router/index.js</code>配置二级路由</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Vue</span> <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">VueRouter</span> <span class="keyword">from</span> <span class="string">&#x27;vue-router&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Layout</span> <span class="keyword">from</span> <span class="string">&#x27;@/views/layout&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Search</span> <span class="keyword">from</span> <span class="string">&#x27;@/views/search&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">SearchList</span> <span class="keyword">from</span> <span class="string">&#x27;@/views/search/list&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">ProDetail</span> <span class="keyword">from</span> <span class="string">&#x27;@/views/prodetail&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Login</span> <span class="keyword">from</span> <span class="string">&#x27;@/views/login&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Pay</span> <span class="keyword">from</span> <span class="string">&#x27;@/views/pay&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">MyOrder</span> <span class="keyword">from</span> <span class="string">&#x27;@/views/myorder&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Home</span> <span class="keyword">from</span> <span class="string">&#x27;@/views/layout/home&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Category</span> <span class="keyword">from</span> <span class="string">&#x27;@/views/layout/category&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Cart</span> <span class="keyword">from</span> <span class="string">&#x27;@/views/layout/cart&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">User</span> <span class="keyword">from</span> <span class="string">&#x27;@/views/layout/user&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">use</span>(<span class="title class_">VueRouter</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> router = <span class="keyword">new</span> <span class="title class_">VueRouter</span>(&#123;</span><br><span class="line">  <span class="attr">routes</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&#x27;/login&#x27;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="title class_">Login</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&#x27;/&#x27;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="title class_">Layout</span>,</span><br><span class="line">      <span class="attr">redirect</span>: <span class="string">&#x27;/home&#x27;</span>,</span><br><span class="line">      <span class="attr">children</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">path</span>: <span class="string">&#x27;home&#x27;</span>,</span><br><span class="line">          <span class="attr">component</span>: <span class="title class_">Home</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">path</span>: <span class="string">&#x27;category&#x27;</span>,</span><br><span class="line">          <span class="attr">component</span>: <span class="title class_">Category</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">path</span>: <span class="string">&#x27;cart&#x27;</span>,</span><br><span class="line">          <span class="attr">component</span>: <span class="title class_">Cart</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">path</span>: <span class="string">&#x27;user&#x27;</span>,</span><br><span class="line">          <span class="attr">component</span>: <span class="title class_">User</span></span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&#x27;/search&#x27;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="title class_">Search</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&#x27;/searchlist&#x27;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="title class_">SearchList</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&#x27;/prodetail/:id&#x27;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="title class_">ProDetail</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&#x27;/pay&#x27;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="title class_">Pay</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&#x27;/myorder&#x27;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="title class_">MyOrder</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router</span><br></pre></td></tr></table></figure>

<ol start="2">
<li><p>准备对应的组件文件</p>
<ul>
<li><code>layout/home.vue</code></li>
<li><code>layout/category.vue</code></li>
<li><code>layout/cart.vue</code></li>
<li><code>layout/user.vue</code></li>
</ul>
</li>
<li><p><code>layout.vue</code> 配置路由出口,  配置 tabbar</p>
</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">router-view</span>&gt;</span><span class="tag">&lt;/<span class="name">router-view</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">van-tabbar</span> <span class="attr">route</span> <span class="attr">active-color</span>=<span class="string">&quot;#ee0a24&quot;</span> <span class="attr">inactive-color</span>=<span class="string">&quot;#000&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">van-tabbar-item</span> <span class="attr">to</span>=<span class="string">&quot;/home&quot;</span> <span class="attr">icon</span>=<span class="string">&quot;wap-home-o&quot;</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">van-tabbar-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">van-tabbar-item</span> <span class="attr">to</span>=<span class="string">&quot;/category&quot;</span> <span class="attr">icon</span>=<span class="string">&quot;apps-o&quot;</span>&gt;</span>分类页<span class="tag">&lt;/<span class="name">van-tabbar-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">van-tabbar-item</span> <span class="attr">to</span>=<span class="string">&quot;/cart&quot;</span> <span class="attr">icon</span>=<span class="string">&quot;shopping-cart-o&quot;</span>&gt;</span>购物车<span class="tag">&lt;/<span class="name">van-tabbar-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">van-tabbar-item</span> <span class="attr">to</span>=<span class="string">&quot;/user&quot;</span> <span class="attr">icon</span>=<span class="string">&quot;user-o&quot;</span>&gt;</span>我的<span class="tag">&lt;/<span class="name">van-tabbar-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">van-tabbar</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure>



<h2 id="12-登录页静态布局"><a href="#12-登录页静态布局" class="headerlink" title="12. 登录页静态布局"></a>12. 登录页静态布局</h2><h3 id="1-准备工作"><a href="#1-准备工作" class="headerlink" title="(1) 准备工作"></a>(1) 准备工作</h3><ol>
<li>新建  <code>styles/common.less</code> 重置默认样式</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 重置默认样式</span></span><br><span class="line">* &#123;</span><br><span class="line">  <span class="attr">margin</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attr">padding</span>: <span class="number">0</span>;</span><br><span class="line">  box-<span class="attr">sizing</span>: border-box;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 文字溢出省略号</span></span><br><span class="line">.<span class="property">text</span>-ellipsis-<span class="number">2</span> &#123;</span><br><span class="line">  <span class="attr">overflow</span>: hidden;</span><br><span class="line">  -webkit-line-<span class="attr">clamp</span>: <span class="number">2</span>;</span><br><span class="line">  text-<span class="attr">overflow</span>: ellipsis;</span><br><span class="line">  <span class="attr">display</span>: -webkit-box;</span><br><span class="line">  -webkit-box-<span class="attr">orient</span>: vertical;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>main.js 中导入应用</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">&#x27;@/styles/common.less&#x27;</span></span><br></pre></td></tr></table></figure>

<ol start="3">
<li>将准备好的一些图片素材拷贝到 智慧商城项目-vue2 目录【备用】</li>
</ol>
<img data-src="/2024/11/19/%E6%99%BA%E6%85%A7%E5%95%86%E5%9F%8E%E9%A1%B9%E7%9B%AE-vue2/image-20230617155648436.png" class="" title="image-20230617155648436">

<h3 id="2-登录静态布局"><a href="#2-登录静态布局" class="headerlink" title="(2) 登录静态布局"></a>(2) 登录静态布局</h3><img data-src="/2024/11/19/%E6%99%BA%E6%85%A7%E5%95%86%E5%9F%8E%E9%A1%B9%E7%9B%AE-vue2/image-20230617160232955.png" class="" title="image-20230617160232955">

<p>使用组件</p>
<ul>
<li>van-nav-bar</li>
</ul>
<p><code>vant-ui.js</code> 注册</p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">NavBar</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;vant&#x27;</span></span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">use</span>(<span class="title class_">NavBar</span>)</span><br></pre></td></tr></table></figure>

<p><code>Login.vue</code> 使用</p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;login&quot;&gt;</span><br><span class="line">    &lt;van-nav-bar title=&quot;会员登录&quot; left-arrow @click-left=&quot;$router.go(-1)&quot; /&gt;</span><br><span class="line">    &lt;div class=&quot;container&quot;&gt;</span><br><span class="line">      &lt;div class=&quot;title&quot;&gt;</span><br><span class="line">        &lt;h3&gt;手机号登录&lt;/h3&gt;</span><br><span class="line">        &lt;p&gt;未注册的手机号登录后将自动注册&lt;/p&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">      &lt;div class=&quot;form&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;form-item&quot;&gt;</span><br><span class="line">          &lt;input class=&quot;inp&quot; maxlength=&quot;11&quot; placeholder=&quot;请输入手机号码&quot; type=&quot;text&quot;&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;form-item&quot;&gt;</span><br><span class="line">          &lt;input class=&quot;inp&quot; maxlength=&quot;5&quot; placeholder=&quot;请输入图形验证码&quot; type=&quot;text&quot;&gt;</span><br><span class="line">          &lt;img src=&quot;@/智慧商城项目-vue2/code.png&quot; alt=&quot;&quot;&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;form-item&quot;&gt;</span><br><span class="line">          &lt;input class=&quot;inp&quot; placeholder=&quot;请输入短信验证码&quot; type=&quot;text&quot;&gt;</span><br><span class="line">          &lt;button&gt;获取验证码&lt;/button&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">      &lt;div class=&quot;login-btn&quot;&gt;登录&lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &#x27;LoginPage&#x27;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=&quot;less&quot; scoped&gt;</span><br><span class="line">.container &#123;</span><br><span class="line">  padding: 49px 29px;</span><br><span class="line"></span><br><span class="line">  .title &#123;</span><br><span class="line">    margin-bottom: 20px;</span><br><span class="line">    h3 &#123;</span><br><span class="line">      font-size: 26px;</span><br><span class="line">      font-weight: normal;</span><br><span class="line">    &#125;</span><br><span class="line">    p &#123;</span><br><span class="line">      line-height: 40px;</span><br><span class="line">      font-size: 14px;</span><br><span class="line">      color: #b8b8b8;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .form-item &#123;</span><br><span class="line">    border-bottom: 1px solid #f3f1f2;</span><br><span class="line">    padding: 8px;</span><br><span class="line">    margin-bottom: 14px;</span><br><span class="line">    display: flex;</span><br><span class="line">    align-items: center;</span><br><span class="line">    .inp &#123;</span><br><span class="line">      display: block;</span><br><span class="line">      border: none;</span><br><span class="line">      outline: none;</span><br><span class="line">      height: 32px;</span><br><span class="line">      font-size: 14px;</span><br><span class="line">      flex: 1;</span><br><span class="line">    &#125;</span><br><span class="line">    img &#123;</span><br><span class="line">      width: 94px;</span><br><span class="line">      height: 31px;</span><br><span class="line">    &#125;</span><br><span class="line">    button &#123;</span><br><span class="line">      height: 31px;</span><br><span class="line">      border: none;</span><br><span class="line">      font-size: 13px;</span><br><span class="line">      color: #cea26a;</span><br><span class="line">      background-color: transparent;</span><br><span class="line">      padding-right: 9px;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .login-btn &#123;</span><br><span class="line">    width: 100%;</span><br><span class="line">    height: 42px;</span><br><span class="line">    margin-top: 39px;</span><br><span class="line">    background: linear-gradient(90deg,#ecb53c,#ff9211);</span><br><span class="line">    color: #fff;</span><br><span class="line">    border-radius: 39px;</span><br><span class="line">    box-shadow: 0 10px 20px 0 rgba(0,0,0,.1);</span><br><span class="line">    letter-spacing: 2px;</span><br><span class="line">    display: flex;</span><br><span class="line">    justify-content: center;</span><br><span class="line">    align-items: center;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<p><strong>添加通用样式</strong></p>
<p><code>styles/common.less</code> 设置导航条，返回箭头颜色</p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 设置导航条 返回箭头 颜色</span></span><br><span class="line">.<span class="property">van</span>-nav-bar &#123;</span><br><span class="line">  .<span class="property">van</span>-icon-arrow-left &#123;</span><br><span class="line">    <span class="attr">color</span>: #<span class="number">333</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="13-request模块-axios封装"><a href="#13-request模块-axios封装" class="headerlink" title="13. request模块 - axios封装"></a>13. request模块 - axios封装</h2><p>接口文档：<a href="https://apifox.com/apidoc/shared-12ab6b18-adc2-444c-ad11-0e60f5693f66/doc-2221080">https://apifox.com/apidoc/shared-12ab6b18-adc2-444c-ad11-0e60f5693f66/doc-2221080</a></p>
<p>演示地址：<a href="http://cba.itlike.com/public/mweb/#/">http://cba.itlike.com/public/mweb/#/</a></p>
<p>基地址：<a href="http://cba.itlike.com/public/index.php?s=/api/">http://cba.itlike.com/public/index.php?s=/api/</a></p>
<p>我们会使用 axios 来请求<strong>后端接口</strong>, 一般都会对 axios 进行<strong>一些配置</strong> (比如: 配置基础地址,请求响应拦截器等等)</p>
<p>一般项目开发中, 都会对 axios 进行基本的<strong>二次封装</strong>, 单独封装到一个模块中, 便于使用</p>
<p><strong>目标：将 axios 请求方法，封装到 request 模块</strong></p>
<ol>
<li>安装 axios</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm i axios</span><br></pre></td></tr></table></figure>

<ol start="2">
<li><p>新建 <code>utils/request.js</code> 封装 axios 模块</p>
<p>利用 axios.create 创建一个自定义的 axios 来使用</p>
<p><a href="http://www.axios-js.com/zh-cn/docs/#axios-create-config">http://www.axios-js.com/zh-cn/docs/#axios-create-config</a></p>
</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 封装axios用于发送请求 */</span></span><br><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&#x27;axios&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建一个新的axios实例</span></span><br><span class="line"><span class="keyword">const</span> request = axios.<span class="title function_">create</span>(&#123;</span><br><span class="line">  <span class="attr">baseURL</span>: <span class="string">&#x27;http://cba.itlike.com/public/index.php?s=/api/&#x27;</span>,</span><br><span class="line">  <span class="attr">timeout</span>: <span class="number">5000</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 添加请求拦截器</span></span><br><span class="line">request.<span class="property">interceptors</span>.<span class="property">request</span>.<span class="title function_">use</span>(<span class="keyword">function</span> (<span class="params">config</span>) &#123;</span><br><span class="line">  <span class="comment">// 在发送请求之前做些什么</span></span><br><span class="line">  <span class="keyword">return</span> config</span><br><span class="line">&#125;, <span class="keyword">function</span> (<span class="params">error</span>) &#123;</span><br><span class="line">  <span class="comment">// 对请求错误做些什么</span></span><br><span class="line">  <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(error)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 添加响应拦截器</span></span><br><span class="line">request.<span class="property">interceptors</span>.<span class="property">response</span>.<span class="title function_">use</span>(<span class="keyword">function</span> (<span class="params">response</span>) &#123;</span><br><span class="line">  <span class="comment">// 对响应数据做点什么</span></span><br><span class="line">  <span class="keyword">return</span> response.<span class="property">data</span></span><br><span class="line">&#125;, <span class="keyword">function</span> (<span class="params">error</span>) &#123;</span><br><span class="line">  <span class="comment">// 对响应错误做点什么</span></span><br><span class="line">  <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(error)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> request</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>获取图形验证码，请求测试</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> request <span class="keyword">from</span> <span class="string">&#x27;@/utils/request&#x27;</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;LoginPage&#x27;</span>,</span><br><span class="line">  <span class="keyword">async</span> <span class="title function_">created</span> () &#123;</span><br><span class="line">    <span class="keyword">const</span> res = <span class="keyword">await</span> request.<span class="title function_">get</span>(<span class="string">&#x27;/captcha/image&#x27;</span>)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(res)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<img data-src="/2024/11/19/%E6%99%BA%E6%85%A7%E5%95%86%E5%9F%8E%E9%A1%B9%E7%9B%AE-vue2/image-20230617161654856.png" class="" title="image-20230617161654856">





<h2 id="14-图形验证码功能完成"><a href="#14-图形验证码功能完成" class="headerlink" title="14. 图形验证码功能完成"></a>14. 图形验证码功能完成</h2><img data-src="/2024/11/19/%E6%99%BA%E6%85%A7%E5%95%86%E5%9F%8E%E9%A1%B9%E7%9B%AE-vue2/image-20230617163721858.png" class="" title="image-20230617163721858">

<ol>
<li>准备数据，获取图形验证码后存储图片路径，存储图片唯一标识</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="title function_">created</span> () &#123;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="title function_">getPicCode</span>()</span><br><span class="line">&#125;,</span><br><span class="line"><span class="title function_">data</span> () &#123;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    <span class="attr">picUrl</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">    <span class="attr">picKey</span>: <span class="string">&#x27;&#x27;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br><span class="line"><span class="attr">methods</span>: &#123;</span><br><span class="line">  <span class="comment">// 获取图形验证码</span></span><br><span class="line">  <span class="keyword">async</span> <span class="title function_">getPicCode</span> () &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; <span class="attr">data</span>: &#123; base64, key &#125; &#125; = <span class="keyword">await</span> request.<span class="title function_">get</span>(<span class="string">&#x27;/captcha/image&#x27;</span>)</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">picUrl</span> = base64</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">picKey</span> = key</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>动态渲染图形验证码，并且点击时要重新刷新验证码</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;img v-<span class="keyword">if</span>=<span class="string">&quot;picUrl&quot;</span> :src=<span class="string">&quot;picUrl&quot;</span> @click=<span class="string">&quot;getPicCode&quot;</span>&gt;</span><br></pre></td></tr></table></figure>



<h2 id="15-封装api接口-图片验证码接口"><a href="#15-封装api接口-图片验证码接口" class="headerlink" title="15. 封装api接口 - 图片验证码接口"></a>15. 封装api接口 - 图片验证码接口</h2><p><strong>1.目标：</strong>将请求封装成方法，统一存放到 api 模块，与页面分离</p>
<p><strong>2.原因：以前的模式</strong></p>
<img data-src="/2024/11/19/%E6%99%BA%E6%85%A7%E5%95%86%E5%9F%8E%E9%A1%B9%E7%9B%AE-vue2/image-20230619121937770.png" class="" title="image-20230619121937770">

<ul>
<li><p>页面中充斥着请求代码</p>
</li>
<li><p>可阅读性不高</p>
</li>
<li><p><strong>相同的请求没有复用请求没有统一管理</strong></p>
</li>
</ul>
<p><strong>3.期望：</strong></p>
<img data-src="/2024/11/19/%E6%99%BA%E6%85%A7%E5%95%86%E5%9F%8E%E9%A1%B9%E7%9B%AE-vue2/image-20230619122706439.png" class="" title="image-20230619122706439">

<ul>
<li>请求与页面逻辑分离</li>
<li>相同的请求可以直接复用请求</li>
<li>进行了统一管理</li>
</ul>
<p><strong>4.具体实现</strong></p>
<p>新建 <code>api/login.js</code> 提供获取图形验证码 Api 函数</p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> request <span class="keyword">from</span> <span class="string">&#x27;@/utils/request&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取图形验证码</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">getPicCode</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> request.<span class="title function_">get</span>(<span class="string">&#x27;/captcha/image&#x27;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><code>login/index.vue</code>页面中调用测试</p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="title function_">getPicCode</span> () &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; <span class="attr">data</span>: &#123; base64, key &#125; &#125; = <span class="keyword">await</span> <span class="title function_">getPicCode</span>()</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">picUrl</span> = base64</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">picKey</span> = key</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>



<h2 id="16-toast-轻提示"><a href="#16-toast-轻提示" class="headerlink" title="16. toast 轻提示"></a>16. toast 轻提示</h2><p><a href="https://vant-contrib.gitee.io/vant/v2/#/zh-CN/toast">https://vant-contrib.gitee.io/vant/v2/#/zh-CN/toast</a></p>
<p>两种使用方式</p>
<ol>
<li>导入调用 ( <strong>组件内</strong> 或 <strong>非组件中均可</strong> )</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Toast</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;vant&#x27;</span>;</span><br><span class="line"><span class="title class_">Toast</span>(<span class="string">&#x27;提示内容&#x27;</span>);</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>通过this直接调用 ( **组件内 **)</li>
</ol>
<p>main.js 注册绑定到原型</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Toast</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;vant&#x27;</span>;</span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">use</span>(<span class="title class_">Toast</span>)</span><br></pre></td></tr></table></figure>

<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">this</span>.$toast(<span class="string">&#x27;提示内容&#x27;</span>)</span><br></pre></td></tr></table></figure>



<h2 id="17-短信验证倒计时功能"><a href="#17-短信验证倒计时功能" class="headerlink" title="17. 短信验证倒计时功能"></a>17. 短信验证倒计时功能</h2><img data-src="/2024/11/19/%E6%99%BA%E6%85%A7%E5%95%86%E5%9F%8E%E9%A1%B9%E7%9B%AE-vue2/image-20230617165906943.png" class="" title="image-20230617165906943">

<h3 id="1-倒计时基础效果"><a href="#1-倒计时基础效果" class="headerlink" title="(1) 倒计时基础效果"></a>(1) 倒计时基础效果</h3><ol>
<li>准备 data 数据</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="title function_">data</span> () &#123;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    <span class="attr">totalSecond</span>: <span class="number">60</span>, <span class="comment">// 总秒数</span></span><br><span class="line">    <span class="attr">second</span>: <span class="number">60</span>, <span class="comment">// 倒计时的秒数</span></span><br><span class="line">    <span class="attr">timer</span>: <span class="literal">null</span> <span class="comment">// 定时器 id</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>给按钮注册点击事件</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;button @click=<span class="string">&quot;getCode&quot;</span>&gt;</span><br><span class="line">  &#123;&#123; second === totalSecond ? <span class="string">&#x27;获取验证码&#x27;</span> : second + <span class="string">`秒后重新发送`</span>&#125;&#125;</span><br><span class="line">&lt;/button&gt;</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>开启倒计时时</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="title function_">getCode</span> () &#123;</span><br><span class="line">  <span class="keyword">if</span> (!<span class="variable language_">this</span>.<span class="property">timer</span> &amp;&amp; <span class="variable language_">this</span>.<span class="property">second</span> === <span class="variable language_">this</span>.<span class="property">totalSecond</span>) &#123;</span><br><span class="line">    <span class="comment">// 开启倒计时</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">timer</span> = <span class="built_in">setInterval</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">second</span>--</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">second</span> &lt; <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="built_in">clearInterval</span>(<span class="variable language_">this</span>.<span class="property">timer</span>)</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">timer</span> = <span class="literal">null</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">second</span> = <span class="variable language_">this</span>.<span class="property">totalSecond</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;, <span class="number">1000</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 发送请求，获取验证码</span></span><br><span class="line">    <span class="variable language_">this</span>.$toast(<span class="string">&#x27;发送成功，请注意查收&#x27;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="4">
<li>离开页面销毁定时器</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="title function_">destroyed</span> () &#123;</span><br><span class="line">  <span class="built_in">clearInterval</span>(<span class="variable language_">this</span>.<span class="property">timer</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="2-验证码请求校验处理"><a href="#2-验证码请求校验处理" class="headerlink" title="(2) 验证码请求校验处理"></a>(2) 验证码请求校验处理</h3><ol>
<li>输入框 v-model 绑定变量</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="title function_">data</span> () &#123;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    <span class="attr">mobile</span>: <span class="string">&#x27;&#x27;</span>, <span class="comment">// 手机号</span></span><br><span class="line">    <span class="attr">picCode</span>: <span class="string">&#x27;&#x27;</span> <span class="comment">// 图形验证码</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br><span class="line">    </span><br><span class="line">&lt;input v-model=&quot;mobile&quot; class=&quot;inp&quot; maxlength=&quot;11&quot; placeholder=&quot;请输入手机号码&quot; type=&quot;text&quot;&gt;</span><br><span class="line">&lt;input v-model=&quot;picCode&quot; class=&quot;inp&quot; maxlength=&quot;5&quot; placeholder=&quot;请输入图形验证码&quot; type=&quot;text&quot;&gt;</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>methods中封装校验方法</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 校验输入框内容</span></span><br><span class="line"><span class="title function_">validFn</span> () &#123;</span><br><span class="line">  <span class="keyword">if</span> (!<span class="regexp">/^1[3-9]\d&#123;9&#125;$/</span>.<span class="title function_">test</span>(<span class="variable language_">this</span>.<span class="property">mobile</span>)) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.$toast(<span class="string">&#x27;请输入正确的手机号&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (!<span class="regexp">/^\w&#123;4&#125;$/</span>.<span class="title function_">test</span>(<span class="variable language_">this</span>.<span class="property">picCode</span>)) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.$toast(<span class="string">&#x27;请输入正确的图形验证码&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>请求倒计时前进行校验</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 获取短信验证码</span></span><br><span class="line"><span class="keyword">async</span> <span class="title function_">getCode</span> () &#123;</span><br><span class="line">  <span class="keyword">if</span> (!<span class="variable language_">this</span>.<span class="title function_">validFn</span>()) &#123;</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line">  &#125;</span><br><span class="line">  ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="3-封装接口，请求获取验证码"><a href="#3-封装接口，请求获取验证码" class="headerlink" title="(3) 封装接口，请求获取验证码"></a>(3) 封装接口，请求获取验证码</h3><ol>
<li>封装接口 <code>api/login.js</code></li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 获取短信验证码</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">getMsgCode</span> = (<span class="params">captchaCode, captchaKey, mobile</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> request.<span class="title function_">post</span>(<span class="string">&#x27;/captcha/sendSmsCaptcha&#x27;</span>, &#123;</span><br><span class="line">    <span class="attr">form</span>: &#123;</span><br><span class="line">      captchaCode,</span><br><span class="line">      captchaKey,</span><br><span class="line">      mobile</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>调用接口，添加提示</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 获取短信验证码</span></span><br><span class="line"><span class="keyword">async</span> <span class="title function_">getCode</span> () &#123;</span><br><span class="line">  <span class="keyword">if</span> (!<span class="variable language_">this</span>.<span class="title function_">validFn</span>()) &#123;</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (!<span class="variable language_">this</span>.<span class="property">timer</span> &amp;&amp; <span class="variable language_">this</span>.<span class="property">second</span> === <span class="variable language_">this</span>.<span class="property">totalSecond</span>) &#123;</span><br><span class="line">    <span class="comment">// 发送请求，获取验证码</span></span><br><span class="line">    <span class="keyword">await</span> <span class="title function_">getMsgCode</span>(<span class="variable language_">this</span>.<span class="property">picCode</span>, <span class="variable language_">this</span>.<span class="property">picKey</span>, <span class="variable language_">this</span>.<span class="property">mobile</span>)</span><br><span class="line">    <span class="variable language_">this</span>.$toast(<span class="string">&#x27;发送成功，请注意查收&#x27;</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 开启倒计时</span></span><br><span class="line">    ...</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="18-封装api接口-登录功能"><a href="#18-封装api接口-登录功能" class="headerlink" title="18. 封装api接口 - 登录功能"></a>18. 封装api接口 - 登录功能</h2><p><code>api/login.js</code> 提供登录 Api 函数</p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 验证码登录</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">codeLogin</span> = (<span class="params">mobile, smsCode</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> request.<span class="title function_">post</span>(<span class="string">&#x27;/passport/login&#x27;</span>, &#123;</span><br><span class="line">    <span class="attr">form</span>: &#123;</span><br><span class="line">      <span class="attr">isParty</span>: <span class="literal">false</span>,</span><br><span class="line">      mobile,</span><br><span class="line">      <span class="attr">partyData</span>: &#123;&#125;,</span><br><span class="line">      smsCode</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><code>login/index.vue</code> 登录功能</p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;input <span class="keyword">class</span>=<span class="string">&quot;inp&quot;</span> v-model=<span class="string">&quot;msgCode&quot;</span> maxlength=<span class="string">&quot;6&quot;</span> placeholder=<span class="string">&quot;请输入短信验证码&quot;</span> type=<span class="string">&quot;text&quot;</span>&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;login-btn&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;login&quot;</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="title function_">data</span> () &#123;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    <span class="attr">msgCode</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br><span class="line"><span class="attr">methods</span>: &#123;</span><br><span class="line">  <span class="keyword">async</span> <span class="title function_">login</span> () &#123;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="variable language_">this</span>.<span class="title function_">validFn</span>()) &#123;</span><br><span class="line">      <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="regexp">/^\d&#123;6&#125;$/</span>.<span class="title function_">test</span>(<span class="variable language_">this</span>.<span class="property">msgCode</span>)) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.$toast(<span class="string">&#x27;请输入正确的手机验证码&#x27;</span>)</span><br><span class="line">      <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">await</span> <span class="title function_">codeLogin</span>(<span class="variable language_">this</span>.<span class="property">mobile</span>, <span class="variable language_">this</span>.<span class="property">msgCode</span>)</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">$router</span>.<span class="title function_">push</span>(<span class="string">&#x27;/&#x27;</span>)</span><br><span class="line">    <span class="variable language_">this</span>.$toast(<span class="string">&#x27;登录成功&#x27;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>





<h2 id="19-响应拦截器统一处理错误提示"><a href="#19-响应拦截器统一处理错误提示" class="headerlink" title="19. 响应拦截器统一处理错误提示"></a>19. 响应拦截器统一处理错误提示</h2><p>响应拦截器是咱们拿到数据的 <strong>第一个</strong> “数据流转站”，可以在里面统一处理错误，只要不是 200 默认给提示，抛出错误</p>
<p><code>utils/request.js</code></p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Toast</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;vant&#x27;</span></span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="comment">// 添加响应拦截器</span></span><br><span class="line">request.<span class="property">interceptors</span>.<span class="property">response</span>.<span class="title function_">use</span>(<span class="keyword">function</span> (<span class="params">response</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> res = response.<span class="property">data</span></span><br><span class="line">  <span class="keyword">if</span> (res.<span class="property">status</span> !== <span class="number">200</span>) &#123;</span><br><span class="line">    <span class="title class_">Toast</span>(res.<span class="property">message</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(res.<span class="property">message</span>)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 对响应数据做点什么</span></span><br><span class="line">  <span class="keyword">return</span> res</span><br><span class="line">&#125;, <span class="keyword">function</span> (<span class="params">error</span>) &#123;</span><br><span class="line">  <span class="comment">// 对响应错误做点什么</span></span><br><span class="line">  <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(error)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>





<h2 id="20-将登录权证信息存入-vuex"><a href="#20-将登录权证信息存入-vuex" class="headerlink" title="20. 将登录权证信息存入 vuex"></a>20. 将登录权证信息存入 vuex</h2><ol>
<li>新建 vuex user 模块  store&#x2F;modules&#x2F;user.js</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">namespaced</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="title function_">state</span> () &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">userInfo</span>: &#123;</span><br><span class="line">        <span class="attr">token</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">        <span class="attr">userId</span>: <span class="string">&#x27;&#x27;</span></span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">mutations</span>: &#123;&#125;,</span><br><span class="line">  <span class="attr">actions</span>: &#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>挂载到 vuex 上</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Vue</span> <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Vuex</span> <span class="keyword">from</span> <span class="string">&#x27;vuex&#x27;</span></span><br><span class="line"><span class="keyword">import</span> user <span class="keyword">from</span> <span class="string">&#x27;./modules/user&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">use</span>(<span class="title class_">Vuex</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> <span class="title class_">Vuex</span>.<span class="title class_">Store</span>(&#123;</span><br><span class="line">  <span class="attr">modules</span>: &#123;</span><br><span class="line">    user,</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>提供 mutations</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="attr">mutations</span>: &#123;</span><br><span class="line">  <span class="title function_">setUserInfo</span> (state, obj) &#123;</span><br><span class="line">    state.<span class="property">userInfo</span> = obj</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>

<ol start="4">
<li>页面中 commit 调用</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 登录按钮（校验 &amp; 提交）</span></span><br><span class="line"><span class="keyword">async</span> <span class="title function_">login</span> () &#123;</span><br><span class="line">  <span class="keyword">if</span> (!<span class="variable language_">this</span>.<span class="title function_">validFn</span>()) &#123;</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line">  &#125;</span><br><span class="line">  ...</span><br><span class="line">  <span class="keyword">const</span> res = <span class="keyword">await</span> <span class="title function_">codeLogin</span>(<span class="variable language_">this</span>.<span class="property">mobile</span>, <span class="variable language_">this</span>.<span class="property">msgCode</span>)</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">$store</span>.<span class="title function_">commit</span>(<span class="string">&#x27;user/setUserInfo&#x27;</span>, res.<span class="property">data</span>)</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">$router</span>.<span class="title function_">push</span>(<span class="string">&#x27;/&#x27;</span>)</span><br><span class="line">  <span class="variable language_">this</span>.$toast(<span class="string">&#x27;登录成功&#x27;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="21-vuex持久化处理"><a href="#21-vuex持久化处理" class="headerlink" title="21. vuex持久化处理"></a>21. vuex持久化处理</h2><ol>
<li>新建 <code>utils/storage.js</code> 封装方法</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="variable constant_">INFO_KEY</span> = <span class="string">&#x27;hm_shopping_info&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取个人信息</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">getInfo</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> result = <span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="variable constant_">INFO_KEY</span>)</span><br><span class="line">  <span class="keyword">return</span> result ? <span class="title class_">JSON</span>.<span class="title function_">parse</span>(result) : &#123;</span><br><span class="line">    <span class="attr">token</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">    <span class="attr">userId</span>: <span class="string">&#x27;&#x27;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置个人信息</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">setInfo</span> = (<span class="params">info</span>) =&gt; &#123;</span><br><span class="line">  <span class="variable language_">localStorage</span>.<span class="title function_">setItem</span>(<span class="variable constant_">INFO_KEY</span>, <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(info))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 移除个人信息</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">removeInfo</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="variable language_">localStorage</span>.<span class="title function_">removeItem</span>(<span class="variable constant_">INFO_KEY</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>vuex user 模块持久化处理</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; getInfo, setInfo &#125; <span class="keyword">from</span> <span class="string">&#x27;@/utils/storage&#x27;</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">namespaced</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="title function_">state</span> () &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">userInfo</span>: <span class="title function_">getInfo</span>()</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">mutations</span>: &#123;</span><br><span class="line">    <span class="title function_">setUserInfo</span> (state, obj) &#123;</span><br><span class="line">      state.<span class="property">userInfo</span> = obj</span><br><span class="line">      <span class="title function_">setInfo</span>(obj)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">actions</span>: &#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="22-优化：添加请求-loading-效果"><a href="#22-优化：添加请求-loading-效果" class="headerlink" title="22. 优化：添加请求 loading 效果"></a>22. 优化：添加请求 loading 效果</h2><ol>
<li>请求时，打开 loading</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 添加请求拦截器</span></span><br><span class="line">request.<span class="property">interceptors</span>.<span class="property">request</span>.<span class="title function_">use</span>(<span class="keyword">function</span> (<span class="params">config</span>) &#123;</span><br><span class="line">  <span class="comment">// 在发送请求之前做些什么</span></span><br><span class="line">  <span class="title class_">Toast</span>.<span class="title function_">loading</span>(&#123;</span><br><span class="line">    <span class="attr">message</span>: <span class="string">&#x27;请求中...&#x27;</span>,</span><br><span class="line">    <span class="attr">forbidClick</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">loadingType</span>: <span class="string">&#x27;spinner&#x27;</span>,</span><br><span class="line">    <span class="attr">duration</span>: <span class="number">0</span></span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="keyword">return</span> config</span><br><span class="line">&#125;, <span class="keyword">function</span> (<span class="params">error</span>) &#123;</span><br><span class="line">  <span class="comment">// 对请求错误做些什么</span></span><br><span class="line">  <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(error)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>响应时，关闭 loading</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 添加响应拦截器</span></span><br><span class="line">request.<span class="property">interceptors</span>.<span class="property">response</span>.<span class="title function_">use</span>(<span class="keyword">function</span> (<span class="params">response</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> res = response.<span class="property">data</span></span><br><span class="line">  <span class="keyword">if</span> (res.<span class="property">status</span> !== <span class="number">200</span>) &#123;</span><br><span class="line">    <span class="title class_">Toast</span>(res.<span class="property">message</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(res.<span class="property">message</span>)</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// 清除 loading 中的效果</span></span><br><span class="line">    <span class="title class_">Toast</span>.<span class="title function_">clear</span>()</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 对响应数据做点什么</span></span><br><span class="line">  <span class="keyword">return</span> res</span><br><span class="line">&#125;, <span class="keyword">function</span> (<span class="params">error</span>) &#123;</span><br><span class="line">  <span class="comment">// 对响应错误做点什么</span></span><br><span class="line">  <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(error)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>



<h2 id="23-登录访问拦截-路由前置守卫"><a href="#23-登录访问拦截-路由前置守卫" class="headerlink" title="23. 登录访问拦截 - 路由前置守卫"></a>23. 登录访问拦截 - 路由前置守卫</h2><p><strong>目标：基于全局前置守卫，进行页面访问拦截处理</strong></p>
<p>说明：智慧商城项目，大部分页面，游客都可以直接访问, 如遇到需要登录才能进行的操作，提示并跳转到登录</p>
<p>但是：对于支付页，订单页等，必须是登录的用户才能访问的，游客不能进入该页面，需要做拦截处理</p>
<img data-src="/2024/11/19/%E6%99%BA%E6%85%A7%E5%95%86%E5%9F%8E%E9%A1%B9%E7%9B%AE-vue2/image-20230623173049799.png" class="" title="image-20230623173049799">

<p>路由导航守卫 - <a href="https://v3.router.vuejs.org/zh/guide/advanced/navigation-guards.html">全局前置守卫</a></p>
<p>1.所有的路由一旦被匹配到，都会先经过全局前置守卫</p>
<p>2.只有全局前置守卫放行，才会真正解析渲染组件，才能看到页面内容</p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">router.<span class="title function_">beforeEach</span>(<span class="function">(<span class="params">to, <span class="keyword">from</span>, next</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 1. to   往哪里去， 到哪去的路由信息对象  </span></span><br><span class="line">  <span class="comment">// 2. from 从哪里来， 从哪来的路由信息对象</span></span><br><span class="line">  <span class="comment">// 3. next() 是否放行</span></span><br><span class="line">  <span class="comment">//    如果next()调用，就是放行</span></span><br><span class="line">  <span class="comment">//    next(路径) 拦截到某个路径页面</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<img data-src="/2024/11/19/%E6%99%BA%E6%85%A7%E5%95%86%E5%9F%8E%E9%A1%B9%E7%9B%AE-vue2/image-20230623173117931.png" class="" title="image-20230623173117931">

<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> authUrl = [<span class="string">&#x27;/pay&#x27;</span>, <span class="string">&#x27;/myorder&#x27;</span>]</span><br><span class="line">router.<span class="title function_">beforeEach</span>(<span class="function">(<span class="params">to, <span class="keyword">from</span>, next</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> token = store.<span class="property">getters</span>.<span class="property">token</span></span><br><span class="line">  <span class="keyword">if</span> (!authUrl.<span class="title function_">includes</span>(to.<span class="property">path</span>)) &#123;</span><br><span class="line">    <span class="title function_">next</span>()</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (token) &#123;</span><br><span class="line">    <span class="title function_">next</span>()</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="title function_">next</span>(<span class="string">&#x27;/login&#x27;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>







<h2 id="24-首页-静态结构准备"><a href="#24-首页-静态结构准备" class="headerlink" title="24. 首页 - 静态结构准备"></a>24. 首页 - 静态结构准备</h2><img data-src="/2024/11/19/%E6%99%BA%E6%85%A7%E5%95%86%E5%9F%8E%E9%A1%B9%E7%9B%AE-vue2/image-20230620220932154.png" class="" title="image-20230620220932154">

<ol>
<li>静态结构和样式 <code>layout/home.vue</code></li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;home&quot;&gt;</span><br><span class="line">    &lt;!-- 导航条 --&gt;</span><br><span class="line">    &lt;van-nav-bar title=&quot;智慧商城&quot; fixed /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 搜索框 --&gt;</span><br><span class="line">    &lt;van-search</span><br><span class="line">      readonly</span><br><span class="line">      shape=&quot;round&quot;</span><br><span class="line">      background=&quot;#f1f1f2&quot;</span><br><span class="line">      placeholder=&quot;请在此输入搜索关键词&quot;</span><br><span class="line">      @click=&quot;$router.push(&#x27;/search&#x27;)&quot;</span><br><span class="line">    /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 轮播图 --&gt;</span><br><span class="line">    &lt;van-swipe class=&quot;my-swipe&quot; :autoplay=&quot;3000&quot; indicator-color=&quot;white&quot;&gt;</span><br><span class="line">      &lt;van-swipe-item&gt;</span><br><span class="line">        &lt;img src=&quot;@/智慧商城项目-vue2/banner1.jpg&quot; alt=&quot;&quot;&gt;</span><br><span class="line">      &lt;/van-swipe-item&gt;</span><br><span class="line">      &lt;van-swipe-item&gt;</span><br><span class="line">        &lt;img src=&quot;@/智慧商城项目-vue2/banner2.jpg&quot; alt=&quot;&quot;&gt;</span><br><span class="line">      &lt;/van-swipe-item&gt;</span><br><span class="line">      &lt;van-swipe-item&gt;</span><br><span class="line">        &lt;img src=&quot;@/智慧商城项目-vue2/banner3.jpg&quot; alt=&quot;&quot;&gt;</span><br><span class="line">      &lt;/van-swipe-item&gt;</span><br><span class="line">    &lt;/van-swipe&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 导航 --&gt;</span><br><span class="line">    &lt;van-grid column-num=&quot;5&quot; icon-size=&quot;40&quot;&gt;</span><br><span class="line">      &lt;van-grid-item</span><br><span class="line">        v-for=&quot;item in 10&quot; :key=&quot;item&quot;</span><br><span class="line">        icon=&quot;http://cba.itlike.com/public/uploads/10001/20230320/58a7c1f62df4cb1eb47fe83ff0e566e6.png&quot;</span><br><span class="line">        text=&quot;新品首发&quot;</span><br><span class="line">        @click=&quot;$router.push(&#x27;/category&#x27;)&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">    &lt;/van-grid&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 主会场 --&gt;</span><br><span class="line">    &lt;div class=&quot;main&quot;&gt;</span><br><span class="line">      &lt;img src=&quot;@/智慧商城项目-vue2/main.png&quot; alt=&quot;&quot;&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 猜你喜欢 --&gt;</span><br><span class="line">    &lt;div class=&quot;guess&quot;&gt;</span><br><span class="line">      &lt;p class=&quot;guess-title&quot;&gt;—— 猜你喜欢 ——&lt;/p&gt;</span><br><span class="line"></span><br><span class="line">      &lt;div class=&quot;goods-list&quot;&gt;</span><br><span class="line">        &lt;GoodsItem v-for=&quot;item in 10&quot; :key=&quot;item&quot;&gt;&lt;/GoodsItem&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import GoodsItem from &#x27;@/components/GoodsItem.vue&#x27;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &#x27;HomePage&#x27;,</span><br><span class="line">  components: &#123;</span><br><span class="line">    GoodsItem</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=&quot;less&quot; scoped&gt;</span><br><span class="line">// 主题 padding</span><br><span class="line">.home &#123;</span><br><span class="line">  padding-top: 100px;</span><br><span class="line">  padding-bottom: 50px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 导航条样式定制</span><br><span class="line">.van-nav-bar &#123;</span><br><span class="line">  z-index: 999;</span><br><span class="line">  background-color: #c21401;</span><br><span class="line">  ::v-deep .van-nav-bar__title &#123;</span><br><span class="line">    color: #fff;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 搜索框样式定制</span><br><span class="line">.van-search &#123;</span><br><span class="line">  position: fixed;</span><br><span class="line">  width: 100%;</span><br><span class="line">  top: 46px;</span><br><span class="line">  z-index: 999;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 分类导航部分</span><br><span class="line">.my-swipe .van-swipe-item &#123;</span><br><span class="line">  height: 185px;</span><br><span class="line">  color: #fff;</span><br><span class="line">  font-size: 20px;</span><br><span class="line">  text-align: center;</span><br><span class="line">  background-color: #39a9ed;</span><br><span class="line">&#125;</span><br><span class="line">.my-swipe .van-swipe-item img &#123;</span><br><span class="line">  width: 100%;</span><br><span class="line">  height: 185px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 主会场</span><br><span class="line">.main img &#123;</span><br><span class="line">  display: block;</span><br><span class="line">  width: 100%;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 猜你喜欢</span><br><span class="line">.guess .guess-title &#123;</span><br><span class="line">  height: 40px;</span><br><span class="line">  line-height: 40px;</span><br><span class="line">  text-align: center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 商品样式</span><br><span class="line">.goods-list &#123;</span><br><span class="line">  background-color: #f6f6f6;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>新建<code>components/GoodsItem.vue</code></li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;goods-item&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;$router.push(&#x27;/prodetail&#x27;)&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;left&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;@/智慧商城项目-vue2/product.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;right&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;tit text-ellipsis-2&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        三星手机 SAMSUNG Galaxy S23 8GB+256GB 超视觉夜拍系统 超清夜景 悠雾紫</span></span><br><span class="line"><span class="language-xml">        5G手机 游戏拍照旗舰机s23</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;count&quot;</span>&gt;</span>已售104件<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;price&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;new&quot;</span>&gt;</span>¥3999.00<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;old&quot;</span>&gt;</span>¥6699.00<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">style</span> <span class="attr">lang</span>=<span class="string">&quot;less&quot;</span> <span class="attr">scoped</span>&gt;</span><span class="language-css"></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"><span class="selector-class">.goods-item</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">height</span>: <span class="number">148px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">margin-bottom</span>: <span class="number">6px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">padding</span>: <span class="number">10px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">display</span>: flex;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="selector-class">.left</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">width</span>: <span class="number">127px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="selector-tag">img</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">display</span>: block;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">width</span>: <span class="number">100%</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="selector-class">.right</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">flex</span>: <span class="number">1</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">font-size</span>: <span class="number">14px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">line-height</span>: <span class="number">1.3</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">padding</span>: <span class="number">10px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">display</span>: flex;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">flex-direction</span>: column;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">justify-content</span>: space-evenly;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="selector-class">.count</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">color</span>: <span class="number">#999</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">font-size</span>: <span class="number">12px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="selector-class">.price</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">color</span>: <span class="number">#999</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">font-size</span>: <span class="number">16px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="selector-class">.new</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">        <span class="attribute">color</span>: <span class="number">#f03c3c</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">        <span class="attribute">margin-right</span>: <span class="number">10px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="selector-class">.old</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">        <span class="attribute">text-decoration</span>: line-through;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">        <span class="attribute">font-size</span>: <span class="number">12px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ol start="3">
<li>组件按需引入</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Search</span>, <span class="title class_">Swipe</span>, <span class="title class_">SwipeItem</span>, <span class="title class_">Grid</span>, <span class="title class_">GridItem</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;vant&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">use</span>(<span class="title class_">GridItem</span>)</span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">use</span>(<span class="title class_">Search</span>)</span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">use</span>(<span class="title class_">Swipe</span>)</span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">use</span>(<span class="title class_">SwipeItem</span>)</span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">use</span>(<span class="title class_">Grid</span>)</span><br></pre></td></tr></table></figure>



<h2 id="25-首页-动态渲染"><a href="#25-首页-动态渲染" class="headerlink" title="25. 首页 - 动态渲染"></a>25. 首页 - 动态渲染</h2><ol>
<li>封装准备接口 <code>api/home.js</code></li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> request <span class="keyword">from</span> <span class="string">&#x27;@/utils/request&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取首页数据</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">getHomeData</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> request.<span class="title function_">get</span>(<span class="string">&#x27;/page/detail&#x27;</span>, &#123;</span><br><span class="line">    <span class="attr">params</span>: &#123;</span><br><span class="line">      <span class="attr">pageId</span>: <span class="number">0</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>页面中请求调用</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">GoodsItem</span> <span class="keyword">from</span> <span class="string">&#x27;@/components/GoodsItem.vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; getHomeData &#125; <span class="keyword">from</span> <span class="string">&#x27;@/api/home&#x27;</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;HomePage&#x27;</span>,</span><br><span class="line">  <span class="attr">components</span>: &#123;</span><br><span class="line">    <span class="title class_">GoodsItem</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="title function_">data</span> () &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">bannerList</span>: [],</span><br><span class="line">      <span class="attr">navList</span>: [],</span><br><span class="line">      <span class="attr">proList</span>: []</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="keyword">async</span> <span class="title function_">created</span> () &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; <span class="attr">data</span>: &#123; pageData &#125; &#125; = <span class="keyword">await</span> <span class="title function_">getHomeData</span>()</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">bannerList</span> = pageData.<span class="property">items</span>[<span class="number">1</span>].<span class="property">data</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">navList</span> = pageData.<span class="property">items</span>[<span class="number">3</span>].<span class="property">data</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">proList</span> = pageData.<span class="property">items</span>[<span class="number">6</span>].<span class="property">data</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>轮播图、导航、猜你喜欢渲染</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;!-- 轮播图 --&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">van-swipe</span> <span class="attr">class</span>=<span class="string">&quot;my-swipe&quot;</span> <span class="attr">:autoplay</span>=<span class="string">&quot;3000&quot;</span> <span class="attr">indicator-color</span>=<span class="string">&quot;white&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">van-swipe-item</span> <span class="attr">v-for</span>=<span class="string">&quot;item in bannerList&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;item.imgUrl&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">:src</span>=<span class="string">&quot;item.imgUrl&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">van-swipe-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">van-swipe</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"><span class="comment">&lt;!-- 导航 --&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">van-grid</span> <span class="attr">column-num</span>=<span class="string">&quot;5&quot;</span> <span class="attr">icon-size</span>=<span class="string">&quot;40&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">van-grid-item</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">v-for</span>=<span class="string">&quot;item in navList&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;item.imgUrl&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">:icon</span>=<span class="string">&quot;item.imgUrl&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">:text</span>=<span class="string">&quot;item.text&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    @<span class="attr">click</span>=<span class="string">&quot;$router.push(&#x27;/category&#x27;)&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">  /&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">van-grid</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    </span></span><br><span class="line"><span class="language-xml"><span class="comment">&lt;!-- 猜你喜欢 --&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;guess&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;guess-title&quot;</span>&gt;</span>—— 猜你喜欢 ——<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;goods-list&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">GoodsItem</span> <span class="attr">v-for</span>=<span class="string">&quot;item in proList&quot;</span>  <span class="attr">:item</span>=<span class="string">&quot;item&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;item.goods_id&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">GoodsItem</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<ol start="4">
<li>商品组件内，动态渲染</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-if</span>=<span class="string">&quot;item.goods_name&quot;</span> <span class="attr">class</span>=<span class="string">&quot;goods-item&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;$router.push(`/prodetail/$&#123;item.goods_id&#125;`)&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;left&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">img</span> <span class="attr">:src</span>=<span class="string">&quot;item.goods_image&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;right&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;tit text-ellipsis-2&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        &#123;&#123; item.goods_name &#125;&#125;</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;count&quot;</span>&gt;</span>已售 &#123;&#123; item.goods_sales &#125;&#125;件<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;price&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;new&quot;</span>&gt;</span>¥&#123;&#123; item.goods_price_min &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;old&quot;</span>&gt;</span>¥&#123;&#123; item.goods_price_max &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">props</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">item</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">type</span>: <span class="title class_">Object</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">default</span>: <span class="function">() =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">return</span> &#123;&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>



<h2 id="26-搜索-静态布局准备"><a href="#26-搜索-静态布局准备" class="headerlink" title="26. 搜索 - 静态布局准备"></a>26. 搜索 - 静态布局准备</h2><img data-src="/2024/11/19/%E6%99%BA%E6%85%A7%E5%95%86%E5%9F%8E%E9%A1%B9%E7%9B%AE-vue2/image-20230621144449700.png" class="" title="image-20230621144449700">

<ol>
<li>静态结构和代码</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;search&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">van-nav-bar</span> <span class="attr">title</span>=<span class="string">&quot;商品搜索&quot;</span> <span class="attr">left-arrow</span> @<span class="attr">click-left</span>=<span class="string">&quot;$router.go(-1)&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">van-search</span> <span class="attr">show-action</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入搜索关键词&quot;</span> <span class="attr">clearable</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">template</span> #<span class="attr">action</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">div</span>&gt;</span>搜索<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">van-search</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">    <span class="comment">&lt;!-- 搜索历史 --&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;search-history&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;title&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>最近搜索<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">van-icon</span> <span class="attr">name</span>=<span class="string">&quot;delete-o&quot;</span> <span class="attr">size</span>=<span class="string">&quot;16&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;list&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;list-item&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;$router.push(&#x27;/searchlist&#x27;)&quot;</span>&gt;</span>炒锅<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;list-item&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;$router.push(&#x27;/searchlist&#x27;)&quot;</span>&gt;</span>电视<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;list-item&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;$router.push(&#x27;/searchlist&#x27;)&quot;</span>&gt;</span>冰箱<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;list-item&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;$router.push(&#x27;/searchlist&#x27;)&quot;</span>&gt;</span>手机<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">name</span>: <span class="string">&#x27;SearchIndex&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">style</span> <span class="attr">lang</span>=<span class="string">&quot;less&quot;</span> <span class="attr">scoped</span>&gt;</span><span class="language-css"></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"><span class="selector-class">.search</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="selector-class">.searchBtn</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">background-color</span>: <span class="number">#fa2209</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">color</span>: <span class="number">#fff</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  ::v-deep .van-search__action &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">background-color</span>: <span class="number">#c21401</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">color</span>: <span class="number">#fff</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">20px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">border-radius</span>: <span class="number">0</span> <span class="number">5px</span> <span class="number">5px</span> <span class="number">0</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">margin-right</span>: <span class="number">10px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  ::v-deep .van-icon-arrow-left &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">color</span>: <span class="number">#333</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="selector-class">.title</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">height</span>: <span class="number">40px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">line-height</span>: <span class="number">40px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">font-size</span>: <span class="number">14px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">display</span>: flex;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">justify-content</span>: space-between;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">align-items</span>: center;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">15px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="selector-class">.list</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">display</span>: flex;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">justify-content</span>: flex-start;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">flex-wrap</span>: wrap;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">10px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">gap</span>: <span class="number">5%</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="selector-class">.list-item</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">width</span>: <span class="number">30%</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">text-align</span>: center;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">padding</span>: <span class="number">7px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">line-height</span>: <span class="number">15px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">border-radius</span>: <span class="number">50px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">background</span>: <span class="number">#fff</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">font-size</span>: <span class="number">13px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#efefef</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">overflow</span>: hidden;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">white-space</span>: nowrap;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">text-overflow</span>: ellipsis;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">margin-bottom</span>: <span class="number">10px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<ol start="2">
<li>组件按需导入</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Icon</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;vant&#x27;</span></span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">use</span>(<span class="title class_">Icon</span>)</span><br></pre></td></tr></table></figure>





<h2 id="27-搜索-历史记录-基本管理"><a href="#27-搜索-历史记录-基本管理" class="headerlink" title="27. 搜索 - 历史记录 - 基本管理"></a>27. 搜索 - 历史记录 - 基本管理</h2><ol>
<li>data 中提供数据，和搜索框双向绑定 (实时获取用户内容)</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="title function_">data</span> () &#123;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    <span class="attr">search</span>: <span class="string">&#x27;&#x27;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;van-search v-model=<span class="string">&quot;search&quot;</span> show-action placeholder=<span class="string">&quot;请输入搜索关键词&quot;</span> clearable&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">template</span> #<span class="attr">action</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>搜索<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line">&lt;/van-search&gt;</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>准备假数据，进行基本的历史纪录渲染</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="title function_">data</span> () &#123;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="attr">history</span>: [<span class="string">&#x27;手机&#x27;</span>, <span class="string">&#x27;空调&#x27;</span>, <span class="string">&#x27;白酒&#x27;</span>, <span class="string">&#x27;电视&#x27;</span>]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br><span class="line">    </span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;search-history&quot;</span> <span class="attr">v-if</span>=<span class="string">&quot;history.length &gt; 0&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  ...</span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;list&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-for</span>=<span class="string">&quot;item in history&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;item&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;goSearch(item)&quot;</span> <span class="attr">class</span>=<span class="string">&quot;list-item&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      &#123;&#123; item &#125;&#125;</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<ol start="3">
<li>点击搜索，或者下面搜索历史按钮，都要进行搜索历史记录更新 (去重，新搜索的内容置顶)</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;div @click=<span class="string">&quot;goSearch(search)&quot;</span>&gt;搜索&lt;/div&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;list&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-for</span>=<span class="string">&quot;item in history&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;item&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;goSearch(item)&quot;</span> <span class="attr">class</span>=<span class="string">&quot;list-item&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    &#123;&#123; item &#125;&#125;</span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="title function_">goSearch</span> (key) &#123;</span><br><span class="line">  <span class="keyword">const</span> index = <span class="variable language_">this</span>.<span class="property">history</span>.<span class="title function_">indexOf</span>(key)</span><br><span class="line">  <span class="keyword">if</span> (index !== -<span class="number">1</span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">history</span>.<span class="title function_">splice</span>(index, <span class="number">1</span>)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">history</span>.<span class="title function_">unshift</span>(key)</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">$router</span>.<span class="title function_">push</span>(<span class="string">`/searchlist?search=<span class="subst">$&#123;key&#125;</span>`</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="4">
<li>清空历史</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;van-icon @click=<span class="string">&quot;clear&quot;</span> name=<span class="string">&quot;delete-o&quot;</span> size=<span class="string">&quot;16&quot;</span> /&gt;</span><br><span class="line"></span><br><span class="line"><span class="title function_">clear</span> () &#123;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">history</span> = []</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="28-搜索-历史记录-持久化"><a href="#28-搜索-历史记录-持久化" class="headerlink" title="28. 搜索 - 历史记录 - 持久化"></a>28. 搜索 - 历史记录 - 持久化</h2><ol>
<li>持久化到本地 - 封装方法</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="variable constant_">HISTORY_KEY</span> = <span class="string">&#x27;hm_history_list&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取搜索历史</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">getHistoryList</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> result = <span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="variable constant_">HISTORY_KEY</span>)</span><br><span class="line">  <span class="keyword">return</span> result ? <span class="title class_">JSON</span>.<span class="title function_">parse</span>(result) : []</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置搜索历史</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">setHistoryList</span> = (<span class="params">arr</span>) =&gt; &#123;</span><br><span class="line">  <span class="variable language_">localStorage</span>.<span class="title function_">setItem</span>(<span class="variable constant_">HISTORY_KEY</span>, <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(arr))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>页面中调用 - 实现持久化</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="title function_">data</span> () &#123;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    <span class="attr">search</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">    <span class="attr">history</span>: <span class="title function_">getHistoryList</span>()</span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br><span class="line"><span class="attr">methods</span>: &#123;</span><br><span class="line">  <span class="title function_">goSearch</span> (key) &#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="title function_">setHistoryList</span>(<span class="variable language_">this</span>.<span class="property">history</span>)</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">$router</span>.<span class="title function_">push</span>(<span class="string">`/searchlist?search=<span class="subst">$&#123;key&#125;</span>`</span>)</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="title function_">clear</span> () &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">history</span> = []</span><br><span class="line">    <span class="title function_">setHistoryList</span>([])</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">$toast</span>.<span class="title function_">success</span>(<span class="string">&#x27;清空历史成功&#x27;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>





<h2 id="29-搜索列表-静态布局"><a href="#29-搜索列表-静态布局" class="headerlink" title="29. 搜索列表 - 静态布局"></a>29. 搜索列表 - 静态布局</h2><img data-src="/2024/11/19/%E6%99%BA%E6%85%A7%E5%95%86%E5%9F%8E%E9%A1%B9%E7%9B%AE-vue2/image-20230624222814532.png" class="" title="image-20230624222814532">



<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;search&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">van-nav-bar</span> <span class="attr">fixed</span> <span class="attr">title</span>=<span class="string">&quot;商品列表&quot;</span> <span class="attr">left-arrow</span> @<span class="attr">click-left</span>=<span class="string">&quot;$router.go(-1)&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">van-search</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">readonly</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">shape</span>=<span class="string">&quot;round&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">background</span>=<span class="string">&quot;#ffffff&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">value</span>=<span class="string">&quot;手机&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">show-action</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      @<span class="attr">click</span>=<span class="string">&quot;$router.push(&#x27;/search&#x27;)&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    &gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">template</span> #<span class="attr">action</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">van-icon</span> <span class="attr">class</span>=<span class="string">&quot;tool&quot;</span> <span class="attr">name</span>=<span class="string">&quot;apps-o&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">van-search</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">    <span class="comment">&lt;!-- 排序选项按钮 --&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;sort-btns&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;sort-item&quot;</span>&gt;</span>综合<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;sort-item&quot;</span>&gt;</span>销量<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;sort-item&quot;</span>&gt;</span>价格 <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;goods-list&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">GoodsItem</span> <span class="attr">v-for</span>=<span class="string">&quot;item in 10&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;item&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">GoodsItem</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">import</span> <span class="title class_">GoodsItem</span> <span class="keyword">from</span> <span class="string">&#x27;@/components/GoodsItem.vue&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">name</span>: <span class="string">&#x27;SearchIndex&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">components</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title class_">GoodsItem</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">style</span> <span class="attr">lang</span>=<span class="string">&quot;less&quot;</span> <span class="attr">scoped</span>&gt;</span><span class="language-css"></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"><span class="selector-class">.search</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">padding-top</span>: <span class="number">46px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  ::v-deep .van-icon-arrow-left &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">color</span>: <span class="number">#333</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="selector-class">.tool</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">font-size</span>: <span class="number">24px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">height</span>: <span class="number">40px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">line-height</span>: <span class="number">40px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="selector-class">.sort-btns</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">display</span>: flex;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">height</span>: <span class="number">36px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">line-height</span>: <span class="number">36px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="selector-class">.sort-item</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">text-align</span>: center;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">flex</span>: <span class="number">1</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">font-size</span>: <span class="number">16px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">// 商品样式</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"><span class="selector-class">.goods-list</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">background-color</span>: <span class="number">#f6f6f6</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure>



<h2 id="30-搜索列表-动态渲染"><a href="#30-搜索列表-动态渲染" class="headerlink" title="30. 搜索列表 - 动态渲染"></a>30. 搜索列表 - 动态渲染</h2><h3 id="1-搜索关键字搜索"><a href="#1-搜索关键字搜索" class="headerlink" title="(1) 搜索关键字搜索"></a>(1) 搜索关键字搜索</h3><style>.xzqbogdgjeez{zoom:80%;}</style><img data-src="/2024/11/19/%E6%99%BA%E6%85%A7%E5%95%86%E5%9F%8E%E9%A1%B9%E7%9B%AE-vue2/image-20230621155728973.png" class="xzqbogdgjeez" alt="image-20230621155728973">



<ol>
<li>计算属性，基于query 解析路由参数</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="attr">computed</span>: &#123;</span><br><span class="line">  <span class="title function_">querySearch</span> () &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">$route</span>.<span class="property">query</span>.<span class="property">search</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>根据不同的情况，设置输入框的值</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;van-search</span><br><span class="line">  ...</span><br><span class="line">  :value=<span class="string">&quot;querySearch || &#x27;搜索商品&#x27;&quot;</span></span><br><span class="line">&gt;&lt;/van-search&gt;</span><br></pre></td></tr></table></figure>

<ol start="3">
<li><code>api/product.js</code> 封装接口，获取搜索商品</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> request <span class="keyword">from</span> <span class="string">&#x27;@/utils/request&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取搜索商品列表数据</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">getProList</span> = (<span class="params">paramsObj</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; categoryId, goodsName, page &#125; = paramsObj</span><br><span class="line">  <span class="keyword">return</span> request.<span class="title function_">get</span>(<span class="string">&#x27;/goods/list&#x27;</span>, &#123;</span><br><span class="line">    <span class="attr">params</span>: &#123;</span><br><span class="line">      categoryId,</span><br><span class="line">      goodsName,</span><br><span class="line">      page</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="4">
<li>页面中基于 goodsName 发送请求，动态渲染</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="title function_">data</span> () &#123;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    <span class="attr">page</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="attr">proList</span>: []</span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br><span class="line"><span class="keyword">async</span> <span class="title function_">created</span> () &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; <span class="attr">data</span>: &#123; list &#125; &#125; = <span class="keyword">await</span> <span class="title function_">getProList</span>(&#123;</span><br><span class="line">    <span class="attr">goodsName</span>: <span class="variable language_">this</span>.<span class="property">querySearch</span>,</span><br><span class="line">    <span class="attr">page</span>: <span class="variable language_">this</span>.<span class="property">page</span></span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">proList</span> = list.<span class="property">data</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;div <span class="keyword">class</span>=<span class="string">&quot;goods-list&quot;</span>&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">GoodsItem</span> <span class="attr">v-for</span>=<span class="string">&quot;item in proList&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;item.goods_id&quot;</span> <span class="attr">:item</span>=<span class="string">&quot;item&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">GoodsItem</span>&gt;</span></span></span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure>



<h3 id="2-分类id搜索"><a href="#2-分类id搜索" class="headerlink" title="(2) 分类id搜索"></a>(2) 分类id搜索</h3><style>.wyqzhbydxvpt{zoom:67%;}</style><img data-src="/2024/11/19/%E6%99%BA%E6%85%A7%E5%95%86%E5%9F%8E%E9%A1%B9%E7%9B%AE-vue2/image-20230624231331980.png" class="wyqzhbydxvpt" alt="image-20230624231331980">



<p>1 封装接口 <code>api/category.js</code></p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> request <span class="keyword">from</span> <span class="string">&#x27;@/utils/request&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取分类数据</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">getCategoryData</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> request.<span class="title function_">get</span>(<span class="string">&#x27;/category/list&#x27;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>2 分类页静态结构</p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;category&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="comment">&lt;!-- 分类 --&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">van-nav-bar</span> <span class="attr">title</span>=<span class="string">&quot;全部分类&quot;</span> <span class="attr">fixed</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">    <span class="comment">&lt;!-- 搜索框 --&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">van-search</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">readonly</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">shape</span>=<span class="string">&quot;round&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">background</span>=<span class="string">&quot;#f1f1f2&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">placeholder</span>=<span class="string">&quot;请输入搜索关键词&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      @<span class="attr">click</span>=<span class="string">&quot;$router.push(&#x27;/search&#x27;)&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    /&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">    <span class="comment">&lt;!-- 分类列表 --&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;list-box&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;left&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(item, index) in list&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;item.category_id&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">:class</span>=<span class="string">&quot;&#123; active: index === activeIndex &#125;&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;activeIndex = index&quot;</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span>&gt;</span>&#123;&#123; item.name &#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;right&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">div</span> @<span class="attr">click</span>=<span class="string">&quot;$router.push(`/searchlist?categoryId=$&#123;item.category_id&#125;`)&quot;</span> <span class="attr">v-for</span>=<span class="string">&quot;item in list[activeIndex]?.children&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;item.category_id&quot;</span> <span class="attr">class</span>=<span class="string">&quot;cate-goods&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">img</span> <span class="attr">:src</span>=<span class="string">&quot;item.image?.external_url&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123; item.name &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">import</span> &#123; getCategoryData &#125; <span class="keyword">from</span> <span class="string">&#x27;@/api/category&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">name</span>: <span class="string">&#x27;CategoryPage&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="title function_">created</span> () &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="variable language_">this</span>.<span class="title function_">getCategoryList</span>()</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="title function_">data</span> () &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">return</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">list</span>: [],</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">activeIndex</span>: <span class="number">0</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">methods</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">async</span> <span class="title function_">getCategoryList</span> () &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="keyword">const</span> &#123; <span class="attr">data</span>: &#123; list &#125; &#125; = <span class="keyword">await</span> <span class="title function_">getCategoryData</span>()</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="variable language_">this</span>.<span class="property">list</span> = list</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">style</span> <span class="attr">lang</span>=<span class="string">&quot;less&quot;</span> <span class="attr">scoped</span>&gt;</span><span class="language-css"></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">// 主题 <span class="attribute">padding</span></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"><span class="selector-class">.category</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">padding-top</span>: <span class="number">100px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">padding-bottom</span>: <span class="number">50px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">height</span>: <span class="number">100vh</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="selector-class">.list-box</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">height</span>: <span class="number">100%</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">display</span>: flex;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="selector-class">.left</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">width</span>: <span class="number">85px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">height</span>: <span class="number">100%</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">background-color</span>: <span class="number">#f3f3f3</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">overflow</span>: auto;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="selector-tag">a</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">        <span class="attribute">display</span>: block;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">        <span class="attribute">height</span>: <span class="number">45px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">        <span class="attribute">line-height</span>: <span class="number">45px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">        <span class="attribute">text-align</span>: center;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">        <span class="attribute">color</span>: <span class="number">#444444</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">        <span class="attribute">font-size</span>: <span class="number">12px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">        &amp;<span class="selector-class">.active</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">          <span class="attribute">color</span>: <span class="number">#fb442f</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">          <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="selector-class">.right</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">flex</span>: <span class="number">1</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">height</span>: <span class="number">100%</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">background-color</span>: <span class="number">#ffffff</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">display</span>: flex;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">flex-wrap</span>: wrap;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">justify-content</span>: flex-start;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">align-content</span>: flex-start;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">padding</span>: <span class="number">10px</span> <span class="number">0</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">overflow</span>: auto;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="selector-class">.cate-goods</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">        <span class="attribute">width</span>: <span class="number">33.3%</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">        <span class="attribute">margin-bottom</span>: <span class="number">10px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">        <span class="selector-tag">img</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">          <span class="attribute">width</span>: <span class="number">70px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">          <span class="attribute">height</span>: <span class="number">70px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">          <span class="attribute">display</span>: block;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">          <span class="attribute">margin</span>: <span class="number">5px</span> auto;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">        <span class="selector-tag">p</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">          <span class="attribute">text-align</span>: center;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">          <span class="attribute">font-size</span>: <span class="number">12px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">// 导航条样式定制</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"><span class="selector-class">.van-nav-bar</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">z-index</span>: <span class="number">999</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">// 搜索框样式定制</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"><span class="selector-class">.van-search</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">position</span>: fixed;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">width</span>: <span class="number">100%</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">top</span>: <span class="number">46px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">z-index</span>: <span class="number">999</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<p>3 搜索页，基于分类 ID 请求</p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="title function_">created</span> () &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; <span class="attr">data</span>: &#123; list &#125; &#125; = <span class="keyword">await</span> <span class="title function_">getProList</span>(&#123;</span><br><span class="line">    <span class="attr">categoryId</span>: <span class="variable language_">this</span>.<span class="property">$route</span>.<span class="property">query</span>.<span class="property">categoryId</span>,</span><br><span class="line">    <span class="attr">goodsName</span>: <span class="variable language_">this</span>.<span class="property">querySearch</span>,</span><br><span class="line">    <span class="attr">page</span>: <span class="variable language_">this</span>.<span class="property">page</span></span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">proList</span> = list.<span class="property">data</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>











<h2 id="31-商品详情-静态布局"><a href="#31-商品详情-静态布局" class="headerlink" title="31. 商品详情 - 静态布局"></a>31. 商品详情 - 静态布局</h2><style>.hxdbqwadgtrv{zoom: 67%;}</style><img data-src="/2024/11/19/%E6%99%BA%E6%85%A7%E5%95%86%E5%9F%8E%E9%A1%B9%E7%9B%AE-vue2/image-20230624233945821.png" class="hxdbqwadgtrv" alt="image-20230624233945821">

<p>静态结构 和 样式</p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;prodetail&quot;&gt;</span><br><span class="line">    &lt;van-nav-bar fixed title=&quot;商品详情页&quot; left-arrow @click-left=&quot;$router.go(-1)&quot; /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;van-swipe :autoplay=&quot;3000&quot; @change=&quot;onChange&quot;&gt;</span><br><span class="line">      &lt;van-swipe-item v-for=&quot;(image, index) in images&quot; :key=&quot;index&quot;&gt;</span><br><span class="line">        &lt;img :src=&quot;image&quot; /&gt;</span><br><span class="line">      &lt;/van-swipe-item&gt;</span><br><span class="line"></span><br><span class="line">      &lt;template #indicator&gt;</span><br><span class="line">        &lt;div class=&quot;custom-indicator&quot;&gt;&#123;&#123; current + 1 &#125;&#125; / &#123;&#123; images.length &#125;&#125;&lt;/div&gt;</span><br><span class="line">      &lt;/template&gt;</span><br><span class="line">    &lt;/van-swipe&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 商品说明 --&gt;</span><br><span class="line">    &lt;div class=&quot;info&quot;&gt;</span><br><span class="line">      &lt;div class=&quot;title&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;price&quot;&gt;</span><br><span class="line">          &lt;span class=&quot;now&quot;&gt;￥0.01&lt;/span&gt;</span><br><span class="line">          &lt;span class=&quot;oldprice&quot;&gt;￥6699.00&lt;/span&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;sellcount&quot;&gt;已售1001件&lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;div class=&quot;msg text-ellipsis-2&quot;&gt;</span><br><span class="line">        三星手机 SAMSUNG Galaxy S23 8GB+256GB 超视觉夜拍系统 超清夜景 悠雾紫 5G手机 游戏拍照旗舰机s23</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">      &lt;div class=&quot;service&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;left-words&quot;&gt;</span><br><span class="line">          &lt;span&gt;&lt;van-icon name=&quot;passed&quot; /&gt;七天无理由退货&lt;/span&gt;</span><br><span class="line">          &lt;span&gt;&lt;van-icon name=&quot;passed&quot; /&gt;48小时发货&lt;/span&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;right-icon&quot;&gt;</span><br><span class="line">          &lt;van-icon name=&quot;arrow&quot; /&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 商品评价 --&gt;</span><br><span class="line">    &lt;div class=&quot;comment&quot;&gt;</span><br><span class="line">      &lt;div class=&quot;comment-title&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;left&quot;&gt;商品评价 (5条)&lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;right&quot;&gt;查看更多 &lt;van-icon name=&quot;arrow&quot; /&gt; &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;div class=&quot;comment-list&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;comment-item&quot; v-for=&quot;item in 3&quot; :key=&quot;item&quot;&gt;</span><br><span class="line">          &lt;div class=&quot;top&quot;&gt;</span><br><span class="line">            &lt;img src=&quot;http://cba.itlike.com/public/uploads/10001/20230321/a0db9adb2e666a65bc8dd133fbed7834.png&quot; alt=&quot;&quot;&gt;</span><br><span class="line">            &lt;div class=&quot;name&quot;&gt;神雕大侠&lt;/div&gt;</span><br><span class="line">            &lt;van-rate :size=&quot;16&quot; :value=&quot;5&quot; color=&quot;#ffd21e&quot; void-icon=&quot;star&quot; void-color=&quot;#eee&quot;/&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">          &lt;div class=&quot;content&quot;&gt;</span><br><span class="line">            质量很不错 挺喜欢的</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">          &lt;div class=&quot;time&quot;&gt;</span><br><span class="line">            2023-03-21 15:01:35</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 商品描述 --&gt;</span><br><span class="line">    &lt;div class=&quot;desc&quot;&gt;</span><br><span class="line">      &lt;img src=&quot;https://uimgproxy.suning.cn/uimg1/sop/commodity/kHgx21fZMWwqirkMhawkAw.jpg&quot; alt=&quot;&quot;&gt;</span><br><span class="line">      &lt;img src=&quot;https://uimgproxy.suning.cn/uimg1/sop/commodity/0rRMmncfF0kGjuK5cvLolg.jpg&quot; alt=&quot;&quot;&gt;</span><br><span class="line">      &lt;img src=&quot;https://uimgproxy.suning.cn/uimg1/sop/commodity/2P04A4Jn0HKxbKYSHc17kw.jpg&quot; alt=&quot;&quot;&gt;</span><br><span class="line">      &lt;img src=&quot;https://uimgproxy.suning.cn/uimg1/sop/commodity/MT4k-mPd0veQXWPPO5yTIw.jpg&quot; alt=&quot;&quot;&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 底部 --&gt;</span><br><span class="line">    &lt;div class=&quot;footer&quot;&gt;</span><br><span class="line">      &lt;div class=&quot;icon-home&quot;&gt;</span><br><span class="line">        &lt;van-icon name=&quot;wap-home-o&quot; /&gt;</span><br><span class="line">        &lt;span&gt;首页&lt;/span&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;div class=&quot;icon-cart&quot;&gt;</span><br><span class="line">        &lt;van-icon name=&quot;shopping-cart-o&quot; /&gt;</span><br><span class="line">        &lt;span&gt;购物车&lt;/span&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;div class=&quot;btn-add&quot;&gt;加入购物车&lt;/div&gt;</span><br><span class="line">      &lt;div class=&quot;btn-buy&quot;&gt;立刻购买&lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &#x27;ProDetail&#x27;,</span><br><span class="line">  data () &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      images: [</span><br><span class="line">        &#x27;https://img01.yzcdn.cn/vant/apple-1.jpg&#x27;,</span><br><span class="line">        &#x27;https://img01.yzcdn.cn/vant/apple-2.jpg&#x27;</span><br><span class="line">      ],</span><br><span class="line">      current: 0</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    onChange (index) &#123;</span><br><span class="line">      this.current = index</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=&quot;less&quot; scoped&gt;</span><br><span class="line">.prodetail &#123;</span><br><span class="line">  padding-top: 46px;</span><br><span class="line">  ::v-deep .van-icon-arrow-left &#123;</span><br><span class="line">    color: #333;</span><br><span class="line">  &#125;</span><br><span class="line">  img &#123;</span><br><span class="line">    display: block;</span><br><span class="line">    width: 100%;</span><br><span class="line">  &#125;</span><br><span class="line">  .custom-indicator &#123;</span><br><span class="line">    position: absolute;</span><br><span class="line">    right: 10px;</span><br><span class="line">    bottom: 10px;</span><br><span class="line">    padding: 5px 10px;</span><br><span class="line">    font-size: 12px;</span><br><span class="line">    background: rgba(0, 0, 0, 0.1);</span><br><span class="line">    border-radius: 15px;</span><br><span class="line">  &#125;</span><br><span class="line">  .desc &#123;</span><br><span class="line">    width: 100%;</span><br><span class="line">    overflow: scroll;</span><br><span class="line">    ::v-deep img &#123;</span><br><span class="line">      display: block;</span><br><span class="line">      width: 100%!important;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  .info &#123;</span><br><span class="line">    padding: 10px;</span><br><span class="line">  &#125;</span><br><span class="line">  .title &#123;</span><br><span class="line">    display: flex;</span><br><span class="line">    justify-content: space-between;</span><br><span class="line">    .now &#123;</span><br><span class="line">      color: #fa2209;</span><br><span class="line">      font-size: 20px;</span><br><span class="line">    &#125;</span><br><span class="line">    .oldprice &#123;</span><br><span class="line">      color: #959595;</span><br><span class="line">      font-size: 16px;</span><br><span class="line">      text-decoration: line-through;</span><br><span class="line">      margin-left: 5px;</span><br><span class="line">    &#125;</span><br><span class="line">    .sellcount &#123;</span><br><span class="line">      color: #959595;</span><br><span class="line">      font-size: 16px;</span><br><span class="line">      position: relative;</span><br><span class="line">      top: 4px;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  .msg &#123;</span><br><span class="line">    font-size: 16px;</span><br><span class="line">    line-height: 24px;</span><br><span class="line">    margin-top: 5px;</span><br><span class="line">  &#125;</span><br><span class="line">  .service &#123;</span><br><span class="line">    display: flex;</span><br><span class="line">    justify-content: space-between;</span><br><span class="line">    line-height: 40px;</span><br><span class="line">    margin-top: 10px;</span><br><span class="line">    font-size: 16px;</span><br><span class="line">    background-color: #fafafa;</span><br><span class="line">    .left-words &#123;</span><br><span class="line">      span &#123;</span><br><span class="line">        margin-right: 10px;</span><br><span class="line">      &#125;</span><br><span class="line">      .van-icon &#123;</span><br><span class="line">        margin-right: 4px;</span><br><span class="line">        color: #fa2209;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .comment &#123;</span><br><span class="line">    padding: 10px;</span><br><span class="line">  &#125;</span><br><span class="line">  .comment-title &#123;</span><br><span class="line">    display: flex;</span><br><span class="line">    justify-content: space-between;</span><br><span class="line">    .right &#123;</span><br><span class="line">      color: #959595;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .comment-item &#123;</span><br><span class="line">    font-size: 16px;</span><br><span class="line">    line-height: 30px;</span><br><span class="line">    .top &#123;</span><br><span class="line">      height: 30px;</span><br><span class="line">      display: flex;</span><br><span class="line">      align-items: center;</span><br><span class="line">      margin-top: 20px;</span><br><span class="line">      img &#123;</span><br><span class="line">        width: 20px;</span><br><span class="line">        height: 20px;</span><br><span class="line">      &#125;</span><br><span class="line">      .name &#123;</span><br><span class="line">        margin: 0 10px;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    .time &#123;</span><br><span class="line">      color: #999;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .footer &#123;</span><br><span class="line">    position: fixed;</span><br><span class="line">    left: 0;</span><br><span class="line">    bottom: 0;</span><br><span class="line">    width: 100%;</span><br><span class="line">    height: 55px;</span><br><span class="line">    background-color: #fff;</span><br><span class="line">    border-top: 1px solid #ccc;</span><br><span class="line">    display: flex;</span><br><span class="line">    justify-content: space-evenly;</span><br><span class="line">    align-items: center;</span><br><span class="line">    .icon-home, .icon-cart &#123;</span><br><span class="line">      display: flex;</span><br><span class="line">      flex-direction: column;</span><br><span class="line">      align-items: center;</span><br><span class="line">      justify-content: center;</span><br><span class="line">      font-size: 14px;</span><br><span class="line">      .van-icon &#123;</span><br><span class="line">        font-size: 24px;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    .btn-add,</span><br><span class="line">    .btn-buy &#123;</span><br><span class="line">      height: 36px;</span><br><span class="line">      line-height: 36px;</span><br><span class="line">      width: 120px;</span><br><span class="line">      border-radius: 18px;</span><br><span class="line">      background-color: #ffa900;</span><br><span class="line">      text-align: center;</span><br><span class="line">      color: #fff;</span><br><span class="line">      font-size: 14px;</span><br><span class="line">    &#125;</span><br><span class="line">    .btn-buy &#123;</span><br><span class="line">      background-color: #fe5630;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line">.tips &#123;</span><br><span class="line">  padding: 10px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<p><code>Lazyload</code> 是 <code>Vue</code> 指令，使用前需要对指令进行注册。</p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Lazyload</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;vant&#x27;</span></span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">use</span>(<span class="title class_">Lazyload</span>)</span><br></pre></td></tr></table></figure>



<h2 id="32-商品详情-动态渲染介绍"><a href="#32-商品详情-动态渲染介绍" class="headerlink" title="32. 商品详情 - 动态渲染介绍"></a>32. 商品详情 - 动态渲染介绍</h2><ol>
<li>动态路由参数，获取商品 id</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="attr">computed</span>: &#123;</span><br><span class="line">  <span class="title function_">goodsId</span> () &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">$route</span>.<span class="property">params</span>.<span class="property">id</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>封装 api 接口 <code>api/product.js</code></li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 获取商品详情数据</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">getProDetail</span> = (<span class="params">goodsId</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> request.<span class="title function_">get</span>(<span class="string">&#x27;/goods/detail&#x27;</span>, &#123;</span><br><span class="line">    <span class="attr">params</span>: &#123;</span><br><span class="line">      goodsId</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>一进入页面发送请求，获取商品详情数据</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="title function_">data</span> () &#123;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    <span class="attr">images</span>: [</span><br><span class="line">      <span class="string">&#x27;https://img01.yzcdn.cn/vant/apple-1.jpg&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;https://img01.yzcdn.cn/vant/apple-2.jpg&#x27;</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">current</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="attr">detail</span>: &#123;&#125;,</span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="title function_">created</span> () &#123;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="title function_">getDetail</span>()</span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line"><span class="attr">methods</span>: &#123;</span><br><span class="line">  ...</span><br><span class="line">  <span class="keyword">async</span> <span class="title function_">getDetail</span> () &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; <span class="attr">data</span>: &#123; detail &#125; &#125; = <span class="keyword">await</span> <span class="title function_">getProDetail</span>(<span class="variable language_">this</span>.<span class="property">goodsId</span>)</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">detail</span> = detail</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">images</span> = detail.<span class="property">goods_images</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="4">
<li>动态渲染</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;div <span class="keyword">class</span>=<span class="string">&quot;prodetail&quot;</span> v-<span class="keyword">if</span>=<span class="string">&quot;detail.goods_name&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">van-swipe</span> <span class="attr">:autoplay</span>=<span class="string">&quot;3000&quot;</span> @<span class="attr">change</span>=<span class="string">&quot;onChange&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">van-swipe-item</span> <span class="attr">v-for</span>=<span class="string">&quot;(image, index) in images&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;index&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">v-lazy</span>=<span class="string">&quot;image.external_url&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">van-swipe-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">template</span> #<span class="attr">indicator</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;custom-indicator&quot;</span>&gt;</span>&#123;&#123; current + 1 &#125;&#125; / &#123;&#123; images.length &#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">van-swipe</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">&lt;!-- 商品说明 --&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;info&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;title&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;price&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;now&quot;</span>&gt;</span>￥&#123;&#123; detail.goods_price_min &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;oldprice&quot;</span>&gt;</span>￥&#123;&#123; detail.goods_price_max &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;sellcount&quot;</span>&gt;</span>已售&#123;&#123; detail.goods_sales &#125;&#125;件<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;msg text-ellipsis-2&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    &#123;&#123; detail.goods_name &#125;&#125;</span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;service&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;left-words&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">van-icon</span> <span class="attr">name</span>=<span class="string">&quot;passed&quot;</span> /&gt;</span>七天无理由退货<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">van-icon</span> <span class="attr">name</span>=<span class="string">&quot;passed&quot;</span> /&gt;</span>48小时发货<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;right-icon&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">van-icon</span> <span class="attr">name</span>=<span class="string">&quot;arrow&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">&lt;!-- 商品描述 --&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;tips&quot;</span>&gt;</span>商品描述<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;desc&quot;</span> <span class="attr">v-html</span>=<span class="string">&quot;detail.content&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure>



<h2 id="33-商品详情-动态渲染评价"><a href="#33-商品详情-动态渲染评价" class="headerlink" title="33. 商品详情 - 动态渲染评价"></a>33. 商品详情 - 动态渲染评价</h2><ol>
<li>封装接口 <code>api/product.js</code></li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 获取商品评价</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">getProComments</span> = (<span class="params">goodsId, limit</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> request.<span class="title function_">get</span>(<span class="string">&#x27;/comment/listRows&#x27;</span>, &#123;</span><br><span class="line">    <span class="attr">params</span>: &#123;</span><br><span class="line">      goodsId,</span><br><span class="line">      limit</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>页面调用获取数据</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> defaultImg <span class="keyword">from</span> <span class="string">&#x27;@/智慧商城项目-vue2/default-avatar.png&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="title function_">data</span> () &#123;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="attr">total</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="attr">commentList</span>: [],</span><br><span class="line">    defaultImg</span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="title function_">created</span> () &#123;</span><br><span class="line">  ...</span><br><span class="line">  <span class="variable language_">this</span>.<span class="title function_">getComments</span>()</span><br><span class="line">&#125;,</span><br><span class="line">    </span><br><span class="line"><span class="keyword">async</span> <span class="title function_">getComments</span> () &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; <span class="attr">data</span>: &#123; list, total &#125; &#125; = <span class="keyword">await</span> <span class="title function_">getProComments</span>(<span class="variable language_">this</span>.<span class="property">goodsId</span>, <span class="number">3</span>)</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">commentList</span> = list</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">total</span> = total</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>动态渲染评价</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;!-- 商品评价 --&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;comment&quot;</span> <span class="attr">v-if</span>=<span class="string">&quot;total &gt; 0&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;comment-title&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;left&quot;</span>&gt;</span>商品评价 (&#123;&#123; total &#125;&#125;条)<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;right&quot;</span>&gt;</span>查看更多 <span class="tag">&lt;<span class="name">van-icon</span> <span class="attr">name</span>=<span class="string">&quot;arrow&quot;</span> /&gt;</span> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;comment-list&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;comment-item&quot;</span> <span class="attr">v-for</span>=<span class="string">&quot;item in commentList&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;item.comment_id&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;top&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">:src</span>=<span class="string">&quot;item.user.avatar_url || defaultImg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;name&quot;</span>&gt;</span>&#123;&#123; item.user.nick_name &#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">van-rate</span> <span class="attr">:size</span>=<span class="string">&quot;16&quot;</span> <span class="attr">:value</span>=<span class="string">&quot;item.score / 2&quot;</span> <span class="attr">color</span>=<span class="string">&quot;#ffd21e&quot;</span> <span class="attr">void-icon</span>=<span class="string">&quot;star&quot;</span> <span class="attr">void-color</span>=<span class="string">&quot;#eee&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;content&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        &#123;&#123; item.content &#125;&#125;</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;time&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        &#123;&#123; item.create_time &#125;&#125;</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span> </span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure>





<h2 id="34-加入购物车-唤起弹窗"><a href="#34-加入购物车-唤起弹窗" class="headerlink" title="34. 加入购物车 - 唤起弹窗"></a>34. 加入购物车 - 唤起弹窗</h2><img data-src="/2024/11/19/%E6%99%BA%E6%85%A7%E5%95%86%E5%9F%8E%E9%A1%B9%E7%9B%AE-vue2/image-20230621193957697.png" class="" title="image-20230621193957697">



<ol>
<li>按需导入 van-action-sheet</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ActionSheet</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;vant&#x27;</span></span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">use</span>(<span class="title class_">ActionSheet</span>)</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>准备 van-action-sheet 基本结构</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;van-action-sheet v-model=<span class="string">&quot;showPannel&quot;</span> :title=<span class="string">&quot;mode === &#x27;cart&#x27; ? &#x27;加入购物车&#x27; : &#x27;立刻购买&#x27;&quot;</span>&gt;</span><br><span class="line">	<span class="number">111</span></span><br><span class="line">&lt;/van-action-sheet&gt;</span><br><span class="line">    </span><br><span class="line"><span class="title function_">data</span> () &#123;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="attr">mode</span>: <span class="string">&#x27;cart&#x27;</span></span><br><span class="line">    <span class="attr">showPannel</span>: <span class="literal">false</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>注册点击事件，点击时唤起弹窗</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;div <span class="keyword">class</span>=<span class="string">&quot;btn-add&quot;</span> @click=<span class="string">&quot;addFn&quot;</span>&gt;加入购物车&lt;/div&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;btn-buy&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;buyFn&quot;</span>&gt;</span>立刻购买<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="title function_">addFn</span> () &#123;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">mode</span> = <span class="string">&#x27;cart&#x27;</span></span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">showPannel</span> = <span class="literal">true</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="title function_">buyFn</span> () &#123;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">mode</span> = <span class="string">&#x27;buyNow&#x27;</span></span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">showPannel</span> = <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="4">
<li>完善结构</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;van-action-sheet v-model=<span class="string">&quot;showPannel&quot;</span> :title=<span class="string">&quot;mode === &#x27;cart&#x27; ? &#x27;加入购物车&#x27; : &#x27;立刻购买&#x27;&quot;</span>&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;product&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;product-title&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;left&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;http://cba.itlike.com/public/uploads/10001/20230321/8f505c6c437fc3d4b4310b57b1567544.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;right&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;price&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">span</span>&gt;</span>¥<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;nowprice&quot;</span>&gt;</span>9.99<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;count&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">span</span>&gt;</span>库存<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">span</span>&gt;</span>55<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;num-box&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">span</span>&gt;</span>数量<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      数字框占位</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;showbtn&quot;</span> <span class="attr">v-if</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;btn&quot;</span> <span class="attr">v-if</span>=<span class="string">&quot;true&quot;</span>&gt;</span>加入购物车<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;btn now&quot;</span> <span class="attr">v-else</span>&gt;</span>立刻购买<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;btn-none&quot;</span> <span class="attr">v-else</span>&gt;</span>该商品已抢完<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">van-action-sheet</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.product</span> &#123;</span><br><span class="line">  <span class="selector-class">.product-title</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="selector-class">.left</span> &#123;</span><br><span class="line">      <span class="selector-tag">img</span> &#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">90px</span>;</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">90px</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="attribute">margin</span>: <span class="number">10px</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.right</span> &#123;</span><br><span class="line">      <span class="attribute">flex</span>: <span class="number">1</span>;</span><br><span class="line">      <span class="attribute">padding</span>: <span class="number">10px</span>;</span><br><span class="line">      <span class="selector-class">.price</span> &#123;</span><br><span class="line">        <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">        <span class="attribute">color</span>: <span class="number">#fe560a</span>;</span><br><span class="line">        <span class="selector-class">.nowprice</span> &#123;</span><br><span class="line">          <span class="attribute">font-size</span>: <span class="number">24px</span>;</span><br><span class="line">          <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">5px</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.num-box</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">justify-content</span>: space-between;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">align-items</span>: center;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.btn</span>, <span class="selector-class">.btn-none</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">40px</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">40px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">color</span>: <span class="built_in">rgb</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>);</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">255</span>, <span class="number">148</span>, <span class="number">2</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.btn</span><span class="selector-class">.now</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#fe5630</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.btn-none</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#cccccc</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="5">
<li>动态渲染</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;van-action-sheet v-model=<span class="string">&quot;showPannel&quot;</span> :title=<span class="string">&quot;mode === &#x27;cart&#x27; ? &#x27;加入购物车&#x27; : &#x27;立刻购买&#x27;&quot;</span>&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;product&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;product-title&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;left&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">:src</span>=<span class="string">&quot;detail.goods_image&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;right&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;price&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">span</span>&gt;</span>¥<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;nowprice&quot;</span>&gt;</span>&#123;&#123; detail.goods_price_min &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;count&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">span</span>&gt;</span>库存<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123; detail.stock_total &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;num-box&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">span</span>&gt;</span>数量<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      数字框组件</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;showbtn&quot;</span> <span class="attr">v-if</span>=<span class="string">&quot;detail.stock_total &gt; 0&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;btn&quot;</span> <span class="attr">v-if</span>=<span class="string">&quot;mode === &#x27;cart&#x27;&quot;</span>&gt;</span>加入购物车<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;btn now&quot;</span> <span class="attr">v-if</span>=<span class="string">&quot;mode === &#x27;buyNow&#x27;&quot;</span>&gt;</span>立刻购买<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;btn-none&quot;</span> <span class="attr">v-else</span>&gt;</span>该商品已抢完<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">van-action-sheet</span>&gt;</span></span></span><br></pre></td></tr></table></figure>







<h2 id="35-加入购物车-封装数字框组件"><a href="#35-加入购物车-封装数字框组件" class="headerlink" title="35. 加入购物车 - 封装数字框组件"></a>35. 加入购物车 - 封装数字框组件</h2><img data-src="/2024/11/19/%E6%99%BA%E6%85%A7%E5%95%86%E5%9F%8E%E9%A1%B9%E7%9B%AE-vue2/image-20230621195126291.png" class="" title="image-20230621195126291">



<ol>
<li>封装组件 <code>components/CountBox.vue</code></li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;count-box&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;handleSub&quot;</span> <span class="attr">class</span>=<span class="string">&quot;minus&quot;</span>&gt;</span>-<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">:value</span>=<span class="string">&quot;value&quot;</span> @<span class="attr">change</span>=<span class="string">&quot;handleChange&quot;</span> <span class="attr">class</span>=<span class="string">&quot;inp&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;handleAdd&quot;</span> <span class="attr">class</span>=<span class="string">&quot;add&quot;</span>&gt;</span>+<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">props</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">value</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">type</span>: <span class="title class_">Number</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">default</span>: <span class="number">1</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">methods</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">handleSub</span> () &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">value</span> &lt;= <span class="number">1</span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">return</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="variable language_">this</span>.$emit(<span class="string">&#x27;input&#x27;</span>, <span class="variable language_">this</span>.<span class="property">value</span> - <span class="number">1</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">handleAdd</span> () &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="variable language_">this</span>.$emit(<span class="string">&#x27;input&#x27;</span>, <span class="variable language_">this</span>.<span class="property">value</span> + <span class="number">1</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">handleChange</span> (e) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="comment">// console.log(e.target.value)</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="keyword">const</span> num = +e.<span class="property">target</span>.<span class="property">value</span> <span class="comment">// 转数字处理 (1) 数字 (2) NaN</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="comment">// 输入了不合法的文本 或 输入了负值，回退成原来的 value 值</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="keyword">if</span> (<span class="built_in">isNaN</span>(num) || num &lt; <span class="number">1</span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        e.<span class="property">target</span>.<span class="property">value</span> = <span class="variable language_">this</span>.<span class="property">value</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">return</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="variable language_">this</span>.$emit(<span class="string">&#x27;input&#x27;</span>, num)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">style</span> <span class="attr">lang</span>=<span class="string">&quot;less&quot;</span> <span class="attr">scoped</span>&gt;</span><span class="language-css"></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"><span class="selector-class">.count-box</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">width</span>: <span class="number">110px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">display</span>: flex;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="selector-class">.add</span>, <span class="selector-class">.minus</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">width</span>: <span class="number">30px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">height</span>: <span class="number">30px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">outline</span>: none;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">border</span>: none;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">background-color</span>: <span class="number">#efefef</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="selector-class">.inp</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">width</span>: <span class="number">40px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">height</span>: <span class="number">30px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">outline</span>: none;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">border</span>: none;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">5px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">background-color</span>: <span class="number">#efefef</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">text-align</span>: center;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ol start="2">
<li>使用组件</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">CountBox</span> <span class="keyword">from</span> <span class="string">&#x27;@/components/CountBox.vue&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;ProDetail&#x27;</span>,</span><br><span class="line">  <span class="attr">components</span>: &#123;</span><br><span class="line">    <span class="title class_">CountBox</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="title function_">data</span> () &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">addCount</span>: <span class="number">1</span></span><br><span class="line">      ...</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;div <span class="keyword">class</span>=<span class="string">&quot;num-box&quot;</span>&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">span</span>&gt;</span>数量<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">CountBox</span> <span class="attr">v-model</span>=<span class="string">&quot;addCount&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">CountBox</span>&gt;</span></span></span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure>







<h2 id="36-加入购物车-判断-token-登录提示"><a href="#36-加入购物车-判断-token-登录提示" class="headerlink" title="36. 加入购物车 - 判断 token 登录提示"></a>36. 加入购物车 - 判断 token 登录提示</h2><p>说明：加入购物车，是一个登录后的用户才能进行的操作，所以需要进行鉴权判断，判断用户 token 是否存在</p>
<ol>
<li>若存在：继续加入购物车操作</li>
<li>不存在：提示用户未登录，引导到登录页</li>
</ol>
<img data-src="/2024/11/19/%E6%99%BA%E6%85%A7%E5%95%86%E5%9F%8E%E9%A1%B9%E7%9B%AE-vue2/image-20230624150118755.png" class="" title="image-20230624150118755">



<ol>
<li>按需注册 dialog 组件</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Dialog</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;vant&#x27;</span></span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">use</span>(<span class="title class_">Dialog</span>)</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>按钮注册点击事件</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;div <span class="keyword">class</span>=<span class="string">&quot;btn&quot;</span> v-<span class="keyword">if</span>=<span class="string">&quot;mode === &#x27;cart&#x27;&quot;</span> @click=<span class="string">&quot;addCart&quot;</span>&gt;加入购物车&lt;/div&gt;</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>添加 token 鉴权判断，跳转携带回跳地址</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="title function_">addCart</span> () &#123;</span><br><span class="line">  <span class="comment">// 判断用户是否有登录</span></span><br><span class="line">  <span class="keyword">if</span> (!<span class="variable language_">this</span>.<span class="property">$store</span>.<span class="property">getters</span>.<span class="property">token</span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">$dialog</span>.<span class="title function_">confirm</span>(&#123;</span><br><span class="line">      <span class="attr">title</span>: <span class="string">&#x27;温馨提示&#x27;</span>,</span><br><span class="line">      <span class="attr">message</span>: <span class="string">&#x27;此时需要先登录才能继续操作哦&#x27;</span>,</span><br><span class="line">      <span class="attr">confirmButtonText</span>: <span class="string">&#x27;去登录&#x27;</span>,</span><br><span class="line">      <span class="attr">cancelButtonText</span>: <span class="string">&#x27;再逛逛&#x27;</span></span><br><span class="line">    &#125;)</span><br><span class="line">      .<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$router</span>.<span class="title function_">replace</span>(&#123;</span><br><span class="line">          <span class="attr">path</span>: <span class="string">&#x27;/login&#x27;</span>,</span><br><span class="line">          <span class="attr">query</span>: &#123;</span><br><span class="line">            <span class="attr">backUrl</span>: <span class="variable language_">this</span>.<span class="property">$route</span>.<span class="property">fullPath</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;)</span><br><span class="line">      .<span class="title function_">catch</span>(<span class="function">() =&gt;</span> &#123;&#125;)</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;进行加入购物车操作&#x27;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="4">
<li>登录后，若有回跳地址，则回跳页面</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 判断有无回跳地址</span></span><br><span class="line"><span class="keyword">const</span> url = <span class="variable language_">this</span>.<span class="property">$route</span>.<span class="property">query</span>.<span class="property">backUrl</span> || <span class="string">&#x27;/&#x27;</span></span><br><span class="line"><span class="variable language_">this</span>.<span class="property">$router</span>.<span class="title function_">replace</span>(url)</span><br></pre></td></tr></table></figure>



<h2 id="37-加入购物车-封装接口进行请求"><a href="#37-加入购物车-封装接口进行请求" class="headerlink" title="37. 加入购物车 - 封装接口进行请求"></a>37. 加入购物车 - 封装接口进行请求</h2><img data-src="/2024/11/19/%E6%99%BA%E6%85%A7%E5%95%86%E5%9F%8E%E9%A1%B9%E7%9B%AE-vue2/image-20230624154814818.png" class="" title="image-20230624154814818">



<ol>
<li>封装接口 <code>api/cart.js</code></li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 加入购物车</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">addCart</span> = (<span class="params">goodsId, goodsNum, goodsSkuId</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> request.<span class="title function_">post</span>(<span class="string">&#x27;/cart/add&#x27;</span>, &#123;</span><br><span class="line">    goodsId,</span><br><span class="line">    goodsNum,</span><br><span class="line">    goodsSkuId</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>页面中调用请求</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="title function_">data</span> () &#123;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">cartTotal</span>: <span class="number">0</span></span><br><span class="line">  &#125;  </span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="title function_">addCart</span> () &#123;</span><br><span class="line">  ...</span><br><span class="line">  <span class="keyword">const</span> &#123; data &#125; = <span class="keyword">await</span> <span class="title function_">addCart</span>(<span class="variable language_">this</span>.<span class="property">goodsId</span>, <span class="variable language_">this</span>.<span class="property">addCount</span>, <span class="variable language_">this</span>.<span class="property">detail</span>.<span class="property">skuList</span>[<span class="number">0</span>].<span class="property">goods_sku_id</span>)</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">cartTotal</span> = data.<span class="property">cartTotal</span></span><br><span class="line">  <span class="variable language_">this</span>.$toast(<span class="string">&#x27;加入购物车成功&#x27;</span>)</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">showPannel</span> = <span class="literal">false</span></span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>

<img data-src="/2024/11/19/%E6%99%BA%E6%85%A7%E5%95%86%E5%9F%8E%E9%A1%B9%E7%9B%AE-vue2/image-20230624154339504.png" class="" title="image-20230624154339504">

<ol start="3">
<li>请求拦截器中，统一携带 token</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 自定义配置 - 请求/响应 拦截器</span></span><br><span class="line"><span class="comment">// 添加请求拦截器</span></span><br><span class="line">instance.<span class="property">interceptors</span>.<span class="property">request</span>.<span class="title function_">use</span>(<span class="keyword">function</span> (<span class="params">config</span>) &#123;</span><br><span class="line">  ...</span><br><span class="line">  <span class="keyword">const</span> token = store.<span class="property">getters</span>.<span class="property">token</span></span><br><span class="line">  <span class="keyword">if</span> (token) &#123;</span><br><span class="line">    config.<span class="property">headers</span>[<span class="string">&#x27;Access-Token&#x27;</span>] = token</span><br><span class="line">    config.<span class="property">headers</span>.<span class="property">platform</span> = <span class="string">&#x27;H5&#x27;</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> config</span><br><span class="line">&#125;, <span class="keyword">function</span> (<span class="params">error</span>) &#123;</span><br><span class="line">  <span class="comment">// 对请求错误做些什么</span></span><br><span class="line">  <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(error)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<ol start="4">
<li>准备小图标</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;div <span class="keyword">class</span>=<span class="string">&quot;icon-cart&quot;</span>&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">span</span> <span class="attr">v-if</span>=<span class="string">&quot;cartTotal &gt; 0&quot;</span> <span class="attr">class</span>=<span class="string">&quot;num&quot;</span>&gt;</span>&#123;&#123; cartTotal &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">van-icon</span> <span class="attr">name</span>=<span class="string">&quot;shopping-cart-o&quot;</span> /&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">span</span>&gt;</span>购物车<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure>

<ol start="5">
<li>定制样式</li>
</ol>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.footer</span> <span class="selector-class">.icon-cart</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">6px</span>;</span><br><span class="line">  <span class="selector-class">.num</span> &#123;</span><br><span class="line">    <span class="attribute">z-index</span>: <span class="number">999</span>;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">top</span>: -<span class="number">2px</span>;</span><br><span class="line">    <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">min-width</span>: <span class="number">16px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">4px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#ee0a24</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="38-购物车-静态布局"><a href="#38-购物车-静态布局" class="headerlink" title="38. 购物车 - 静态布局"></a>38. 购物车 - 静态布局</h2><img data-src="/2024/11/19/%E6%99%BA%E6%85%A7%E5%95%86%E5%9F%8E%E9%A1%B9%E7%9B%AE-vue2/image-20230624160427732.png" class="" title="image-20230624160427732">

<ol>
<li>基本结构</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;cart&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">van-nav-bar</span> <span class="attr">title</span>=<span class="string">&quot;购物车&quot;</span> <span class="attr">fixed</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="comment">&lt;!-- 购物车开头 --&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;cart-title&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;all&quot;</span>&gt;</span>共<span class="tag">&lt;<span class="name">i</span>&gt;</span>4<span class="tag">&lt;/<span class="name">i</span>&gt;</span>件商品<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;edit&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">van-icon</span> <span class="attr">name</span>=<span class="string">&quot;edit&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">        编辑</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">    <span class="comment">&lt;!-- 购物车列表 --&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;cart-list&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;cart-item&quot;</span> <span class="attr">v-for</span>=<span class="string">&quot;item in 10&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;item&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">van-checkbox</span>&gt;</span><span class="tag">&lt;/<span class="name">van-checkbox</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;show&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;http://cba.itlike.com/public/uploads/10001/20230321/a072ef0eef1648a5c4eae81fad1b7583.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;info&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;tit text-ellipsis-2&quot;</span>&gt;</span>新Pad 14英寸 12+128 远峰蓝 M6平板电脑 智能安卓娱乐十核游戏学习二合一 低蓝光护眼超清4K全面三星屏5GWIFI全网通 蓝魔快本平板<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;bottom&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;price&quot;</span>&gt;</span>¥ <span class="tag">&lt;<span class="name">span</span>&gt;</span>1247.04<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;count-box&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">              <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;minus&quot;</span>&gt;</span>-<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">              <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">&quot;inp&quot;</span> <span class="attr">:value</span>=<span class="string">&quot;4&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">readonly</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">              <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;add&quot;</span>&gt;</span>+<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;footer-fixed&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span>  <span class="attr">class</span>=<span class="string">&quot;all-check&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">van-checkbox</span>  <span class="attr">icon-size</span>=<span class="string">&quot;18&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">van-checkbox</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        全选</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;all-total&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;price&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">span</span>&gt;</span>合计：<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">span</span>&gt;</span>¥ <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;totalPrice&quot;</span>&gt;</span>99.99<span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-if</span>=<span class="string">&quot;true&quot;</span> <span class="attr">class</span>=<span class="string">&quot;goPay&quot;</span>&gt;</span>结算(5)<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-else</span> <span class="attr">class</span>=<span class="string">&quot;delete&quot;</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">name</span>: <span class="string">&#x27;CartPage&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">style</span> <span class="attr">lang</span>=<span class="string">&quot;less&quot;</span> <span class="attr">scoped</span>&gt;</span><span class="language-css"></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">// 主题 <span class="attribute">padding</span></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"><span class="selector-class">.cart</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">padding-top</span>: <span class="number">46px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">padding-bottom</span>: <span class="number">100px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">background-color</span>: <span class="number">#f5f5f5</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">min-height</span>: <span class="number">100vh</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="selector-class">.cart-title</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">height</span>: <span class="number">40px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">display</span>: flex;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">justify-content</span>: space-between;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">align-items</span>: center;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">10px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">font-size</span>: <span class="number">14px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="selector-class">.all</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="selector-tag">i</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">        <span class="attribute">font-style</span>: normal;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">        <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">2px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">        <span class="attribute">color</span>: <span class="number">#fa2209</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">        <span class="attribute">font-size</span>: <span class="number">16px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="selector-class">.edit</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="selector-class">.van-icon</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">        <span class="attribute">font-size</span>: <span class="number">18px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="selector-class">.cart-item</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">10px</span> <span class="number">10px</span> <span class="number">10px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">padding</span>: <span class="number">10px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">display</span>: flex;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">justify-content</span>: space-between;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">background-color</span>: <span class="number">#ffffff</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="selector-class">.show</span> <span class="selector-tag">img</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">width</span>: <span class="number">100px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">height</span>: <span class="number">100px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="selector-class">.info</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">width</span>: <span class="number">210px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">padding</span>: <span class="number">10px</span> <span class="number">5px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">font-size</span>: <span class="number">14px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">display</span>: flex;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">flex-direction</span>: column;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">justify-content</span>: space-between;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="selector-class">.bottom</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">        <span class="attribute">display</span>: flex;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">        <span class="attribute">justify-content</span>: space-between;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">        <span class="selector-class">.price</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">          <span class="attribute">display</span>: flex;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">          <span class="attribute">align-items</span>: flex-end;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">          <span class="attribute">color</span>: <span class="number">#fa2209</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">          <span class="attribute">font-size</span>: <span class="number">12px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">          <span class="selector-tag">span</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">            <span class="attribute">font-size</span>: <span class="number">16px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">          &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">        <span class="selector-class">.count-box</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">          <span class="attribute">display</span>: flex;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">          <span class="attribute">width</span>: <span class="number">110px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">          <span class="selector-class">.add</span>,</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">          <span class="selector-class">.minus</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">            <span class="attribute">width</span>: <span class="number">30px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">            <span class="attribute">height</span>: <span class="number">30px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">            <span class="attribute">outline</span>: none;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">            <span class="attribute">border</span>: none;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">          &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">          <span class="selector-class">.inp</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">            <span class="attribute">width</span>: <span class="number">40px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">            <span class="attribute">height</span>: <span class="number">30px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">            <span class="attribute">outline</span>: none;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">            <span class="attribute">border</span>: none;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">            <span class="attribute">background-color</span>: <span class="number">#efefef</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">            <span class="attribute">text-align</span>: center;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">            <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">5px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">          &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"><span class="selector-class">.footer-fixed</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">position</span>: fixed;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">left</span>: <span class="number">0</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">bottom</span>: <span class="number">50px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">height</span>: <span class="number">50px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">width</span>: <span class="number">100%</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">display</span>: flex;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">justify-content</span>: space-between;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">align-items</span>: center;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">10px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="selector-class">.all-check</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">display</span>: flex;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">align-items</span>: center;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="selector-class">.van-checkbox</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">margin-right</span>: <span class="number">5px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="selector-class">.all-total</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">display</span>: flex;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">line-height</span>: <span class="number">36px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="selector-class">.price</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">font-size</span>: <span class="number">14px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">margin-right</span>: <span class="number">10px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="selector-class">.totalPrice</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">        <span class="attribute">color</span>: <span class="number">#fa2209</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">        <span class="attribute">font-size</span>: <span class="number">18px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">        <span class="attribute">font-style</span>: normal;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="selector-class">.goPay</span>, <span class="selector-class">.delete</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">min-width</span>: <span class="number">100px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">height</span>: <span class="number">36px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">line-height</span>: <span class="number">36px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">text-align</span>: center;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">background-color</span>: <span class="number">#fa2f21</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">color</span>: <span class="number">#fff</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">border-radius</span>: <span class="number">18px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      &amp;<span class="selector-class">.disabled</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">        <span class="attribute">background-color</span>: <span class="number">#ff9779</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<ol start="2">
<li>按需导入组件</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Checkbox</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;vant&#x27;</span></span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">use</span>(<span class="title class_">Checkbox</span>)</span><br></pre></td></tr></table></figure>



<h2 id="39-购物车-构建-vuex-模块-获取数据存储"><a href="#39-购物车-构建-vuex-模块-获取数据存储" class="headerlink" title="39. 购物车 - 构建 vuex 模块 - 获取数据存储"></a>39. 购物车 - 构建 vuex 模块 - 获取数据存储</h2><img data-src="/2024/11/19/%E6%99%BA%E6%85%A7%E5%95%86%E5%9F%8E%E9%A1%B9%E7%9B%AE-vue2/image-20230624161704931.png" class="" title="image-20230624161704931">



<ol>
<li>新建 <code>modules/cart.js</code> 模块</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">namespaced</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="title function_">state</span> () &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">cartList</span>: []</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">mutations</span>: &#123;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">actions</span>: &#123;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">getters</span>: &#123;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>挂载到 store 上面</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Vue</span> <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Vuex</span> <span class="keyword">from</span> <span class="string">&#x27;vuex&#x27;</span></span><br><span class="line"><span class="keyword">import</span> user <span class="keyword">from</span> <span class="string">&#x27;./modules/user&#x27;</span></span><br><span class="line"><span class="keyword">import</span> cart <span class="keyword">from</span> <span class="string">&#x27;./modules/cart&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">use</span>(<span class="title class_">Vuex</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> <span class="title class_">Vuex</span>.<span class="title class_">Store</span>(&#123;</span><br><span class="line">  <span class="attr">getters</span>: &#123;</span><br><span class="line">    <span class="attr">token</span>: <span class="function"><span class="params">state</span> =&gt;</span> state.<span class="property">user</span>.<span class="property">userInfo</span>.<span class="property">token</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">modules</span>: &#123;</span><br><span class="line">    user,</span><br><span class="line">    cart</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>封装 API 接口 <code>api/cart.js</code></li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 获取购物车列表数据</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">getCartList</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> request.<span class="title function_">get</span>(<span class="string">&#x27;/cart/list&#x27;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="4">
<li>封装 action 和 mutation</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="attr">mutations</span>: &#123;</span><br><span class="line">  <span class="title function_">setCartList</span> (state, newList) &#123;</span><br><span class="line">    state.<span class="property">cartList</span> = newList</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;,</span><br><span class="line"><span class="attr">actions</span>: &#123;</span><br><span class="line">  <span class="keyword">async</span> <span class="title function_">getCartAction</span> (context) &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; data &#125; = <span class="keyword">await</span> <span class="title function_">getCartList</span>()</span><br><span class="line">    data.<span class="property">list</span>.<span class="title function_">forEach</span>(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span><br><span class="line">      item.<span class="property">isChecked</span> = <span class="literal">true</span></span><br><span class="line">    &#125;)</span><br><span class="line">    context.<span class="title function_">commit</span>(<span class="string">&#x27;setCartList&#x27;</span>, data.<span class="property">list</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>

<ol start="5">
<li>页面中 dispatch 调用</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="attr">computed</span>: &#123;</span><br><span class="line">  <span class="title function_">isLogin</span> () &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">$store</span>.<span class="property">getters</span>.<span class="property">token</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br><span class="line"><span class="title function_">created</span> () &#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">isLogin</span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">$store</span>.<span class="title function_">dispatch</span>(<span class="string">&#x27;cart/getCartAction&#x27;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>





<h2 id="40-购物车-mapState-渲染购物车列表"><a href="#40-购物车-mapState-渲染购物车列表" class="headerlink" title="40. 购物车 - mapState - 渲染购物车列表"></a>40. 购物车 - mapState - 渲染购物车列表</h2><ol>
<li>将数据映射到页面</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; mapState &#125; <span class="keyword">from</span> <span class="string">&#x27;vuex&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">computed</span>: &#123;</span><br><span class="line">  ...<span class="title function_">mapState</span>(<span class="string">&#x27;cart&#x27;</span>, [<span class="string">&#x27;cartList&#x27;</span>])</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>动态渲染</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;!-- 购物车列表 --&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;cart-list&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;cart-item&quot;</span> <span class="attr">v-for</span>=<span class="string">&quot;item in cartList&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;item.goods_id&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">van-checkbox</span> <span class="attr">icon-size</span>=<span class="string">&quot;18&quot;</span> <span class="attr">:value</span>=<span class="string">&quot;item.isChecked&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">van-checkbox</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;show&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;$router.push(`/prodetail/$&#123;item.goods_id&#125;`)&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">img</span> <span class="attr">:src</span>=<span class="string">&quot;item.goods.goods_image&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;info&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;tit text-ellipsis-2&quot;</span>&gt;</span>&#123;&#123; item.goods.goods_name &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;bottom&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;price&quot;</span>&gt;</span>¥ <span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123; item.goods.goods_price_min &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">CountBox</span> <span class="attr">:value</span>=<span class="string">&quot;item.goods_num&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">CountBox</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure>





<h2 id="41-购物车-封装-getters-动态计算展示"><a href="#41-购物车-封装-getters-动态计算展示" class="headerlink" title="41. 购物车 - 封装 getters - 动态计算展示"></a>41. 购物车 - 封装 getters - 动态计算展示</h2><ol>
<li>封装 getters：商品总数  &#x2F; 选中的商品列表  &#x2F;   选中的商品总数  &#x2F;   选中的商品总价</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="attr">getters</span>: &#123;</span><br><span class="line">  <span class="title function_">cartTotal</span> (state) &#123;</span><br><span class="line">    <span class="keyword">return</span> state.<span class="property">cartList</span>.<span class="title function_">reduce</span>(<span class="function">(<span class="params">sum, item, index</span>) =&gt;</span> sum + item.<span class="property">goods_num</span>, <span class="number">0</span>)</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="title function_">selCartList</span> (state) &#123;</span><br><span class="line">    <span class="keyword">return</span> state.<span class="property">cartList</span>.<span class="title function_">filter</span>(<span class="function"><span class="params">item</span> =&gt;</span> item.<span class="property">isChecked</span>)</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="title function_">selCount</span> (state, getters) &#123;</span><br><span class="line">    <span class="keyword">return</span> getters.<span class="property">selCartList</span>.<span class="title function_">reduce</span>(<span class="function">(<span class="params">sum, item, index</span>) =&gt;</span> sum + item.<span class="property">goods_num</span>, <span class="number">0</span>)</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="title function_">selPrice</span> (state, getters) &#123;</span><br><span class="line">    <span class="keyword">return</span> getters.<span class="property">selCartList</span>.<span class="title function_">reduce</span>(<span class="function">(<span class="params">sum, item, index</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> sum + item.<span class="property">goods_num</span> * item.<span class="property">goods</span>.<span class="property">goods_price_min</span></span><br><span class="line">    &#125;, <span class="number">0</span>).<span class="title function_">toFixed</span>(<span class="number">2</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>页面中 mapGetters 映射使用</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="attr">computed</span>: &#123;</span><br><span class="line">  ...<span class="title function_">mapGetters</span>(<span class="string">&#x27;cart&#x27;</span>, [<span class="string">&#x27;cartTotal&#x27;</span>, <span class="string">&#x27;selCount&#x27;</span>, <span class="string">&#x27;selPrice&#x27;</span>]),</span><br><span class="line">&#125;,</span><br><span class="line">    </span><br><span class="line">&lt;!-- 购物车开头 --&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;cart-title&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;all&quot;</span>&gt;</span>共<span class="tag">&lt;<span class="name">i</span>&gt;</span>&#123;&#123; cartTotal || 0 &#125;&#125;<span class="tag">&lt;/<span class="name">i</span>&gt;</span>件商品<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;edit&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">van-icon</span> <span class="attr">name</span>=<span class="string">&quot;edit&quot;</span>  /&gt;</span></span></span><br><span class="line"><span class="language-xml">    编辑</span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;footer-fixed&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">div</span>  <span class="attr">class</span>=<span class="string">&quot;all-check&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">van-checkbox</span>  <span class="attr">icon-size</span>=<span class="string">&quot;18&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">van-checkbox</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    全选</span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;all-total&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;price&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">span</span>&gt;</span>合计：<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">span</span>&gt;</span>¥ <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;totalPrice&quot;</span>&gt;</span>&#123;&#123; selPrice &#125;&#125;<span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-if</span>=<span class="string">&quot;true&quot;</span> <span class="attr">:class</span>=<span class="string">&quot;&#123; disabled: selCount === 0 &#125;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;goPay&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      结算(&#123;&#123; selCount &#125;&#125;)</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-else</span>  <span class="attr">:class</span>=<span class="string">&quot;&#123; disabled: selCount === 0 &#125;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;delete&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      删除(&#123;&#123; selCount &#125;&#125;)</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure>





<h2 id="42-购物车-全选反选功能"><a href="#42-购物车-全选反选功能" class="headerlink" title="42. 购物车 - 全选反选功能"></a>42. 购物车 - 全选反选功能</h2><ol>
<li>全选 getters</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="attr">getters</span>: &#123;</span><br><span class="line">  <span class="title function_">isAllChecked</span> (state) &#123;</span><br><span class="line">    <span class="keyword">return</span> state.<span class="property">cartList</span>.<span class="title function_">every</span>(<span class="function"><span class="params">item</span> =&gt;</span> item.<span class="property">isChecked</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line">...<span class="title function_">mapGetters</span>(<span class="string">&#x27;cart&#x27;</span>, [<span class="string">&#x27;isAllChecked&#x27;</span>]),</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;all-check&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">van-checkbox</span> <span class="attr">:value</span>=<span class="string">&quot;isAllChecked&quot;</span> <span class="attr">icon-size</span>=<span class="string">&quot;18&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">van-checkbox</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  全选</span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<ol start="2">
<li>点击小选，修改状态</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;van-checkbox @click=<span class="string">&quot;toggleCheck(item.goods_id)&quot;</span> ...&gt;&lt;/van-checkbox&gt;</span><br><span class="line">    </span><br><span class="line"><span class="title function_">toggleCheck</span> (goodsId) &#123;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">$store</span>.<span class="title function_">commit</span>(<span class="string">&#x27;cart/toggleCheck&#x27;</span>, goodsId)</span><br><span class="line">&#125;,</span><br><span class="line">    </span><br><span class="line"><span class="attr">mutations</span>: &#123;</span><br><span class="line">  <span class="title function_">toggleCheck</span> (state, goodsId) &#123;</span><br><span class="line">    <span class="keyword">const</span> goods = state.<span class="property">cartList</span>.<span class="title function_">find</span>(<span class="function"><span class="params">item</span> =&gt;</span> item.<span class="property">goods_id</span> === goodsId)</span><br><span class="line">    goods.<span class="property">isChecked</span> = !goods.<span class="property">isChecked</span></span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>点击全选，重置状态</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;div @click=<span class="string">&quot;toggleAllCheck&quot;</span> <span class="keyword">class</span>=<span class="string">&quot;all-check&quot;</span>&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">van-checkbox</span> <span class="attr">:value</span>=<span class="string">&quot;isAllChecked&quot;</span> <span class="attr">icon-size</span>=<span class="string">&quot;18&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">van-checkbox</span>&gt;</span></span></span><br><span class="line">  全选</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line"><span class="title function_">toggleAllCheck</span> () &#123;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">$store</span>.<span class="title function_">commit</span>(<span class="string">&#x27;cart/toggleAllCheck&#x27;</span>, !<span class="variable language_">this</span>.<span class="property">isAllChecked</span>)</span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line"><span class="attr">mutations</span>: &#123;</span><br><span class="line">  <span class="title function_">toggleAllCheck</span> (state, flag) &#123;</span><br><span class="line">    state.<span class="property">cartList</span>.<span class="title function_">forEach</span>(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span><br><span class="line">      item.<span class="property">isChecked</span> = flag</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="43-购物车-数字框修改数量"><a href="#43-购物车-数字框修改数量" class="headerlink" title="43. 购物车 - 数字框修改数量"></a>43. 购物车 - 数字框修改数量</h2><ol>
<li>封装 api 接口</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 更新购物车商品数量</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">changeCount</span> = (<span class="params">goodsId, goodsNum, goodsSkuId</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> request.<span class="title function_">post</span>(<span class="string">&#x27;/cart/update&#x27;</span>, &#123;</span><br><span class="line">    goodsId,</span><br><span class="line">    goodsNum,</span><br><span class="line">    goodsSkuId</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>页面中注册点击事件，传递数据</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;<span class="title class_">CountBox</span> :value=<span class="string">&quot;item.goods_num&quot;</span> @input=<span class="string">&quot;value =&gt; changeCount(value, item.goods_id, item.goods_sku_id)&quot;</span>&gt;&lt;/<span class="title class_">CountBox</span>&gt;</span><br><span class="line"></span><br><span class="line"><span class="title function_">changeCount</span> (value, goodsId, skuId) &#123;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">$store</span>.<span class="title function_">dispatch</span>(<span class="string">&#x27;cart/changeCountAction&#x27;</span>, &#123;</span><br><span class="line">    value,</span><br><span class="line">    goodsId,</span><br><span class="line">    skuId</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>提供 action 发送请求， commit mutation</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="attr">mutations</span>: &#123;</span><br><span class="line">  <span class="title function_">changeCount</span> (state, &#123; goodsId, value &#125;) &#123;</span><br><span class="line">    <span class="keyword">const</span> obj = state.<span class="property">cartList</span>.<span class="title function_">find</span>(<span class="function"><span class="params">item</span> =&gt;</span> item.<span class="property">goods_id</span> === goodsId)</span><br><span class="line">    obj.<span class="property">goods_num</span> = value</span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br><span class="line"><span class="attr">actions</span>: &#123;</span><br><span class="line">  <span class="keyword">async</span> <span class="title function_">changeCountAction</span> (context, obj) &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; goodsId, value, skuId &#125; = obj</span><br><span class="line">    context.<span class="title function_">commit</span>(<span class="string">&#x27;changeCount&#x27;</span>, &#123;</span><br><span class="line">      goodsId,</span><br><span class="line">      value</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">await</span> <span class="title function_">changeCount</span>(goodsId, value, skuId)</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>





<h2 id="44-购物车-编辑切换状态"><a href="#44-购物车-编辑切换状态" class="headerlink" title="44. 购物车 - 编辑切换状态"></a>44. 购物车 - 编辑切换状态</h2><ol>
<li>data 提供数据, 定义是否在编辑删除的状态</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="title function_">data</span> () &#123;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    <span class="attr">isEdit</span>: <span class="literal">false</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>注册点击事件，修改状态</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;span <span class="keyword">class</span>=<span class="string">&quot;edit&quot;</span> @click=<span class="string">&quot;isEdit = !isEdit&quot;</span>&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">van-icon</span> <span class="attr">name</span>=<span class="string">&quot;edit&quot;</span>  /&gt;</span></span></span><br><span class="line">  编辑</span><br><span class="line">&lt;/span&gt;</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>底下按钮根据状态变化</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;div v-<span class="keyword">if</span>=<span class="string">&quot;!isEdit&quot;</span> :<span class="keyword">class</span>=<span class="string">&quot;&#123; disabled: selCount === 0 &#125;&quot;</span> <span class="keyword">class</span>=<span class="string">&quot;goPay&quot;</span>&gt;</span><br><span class="line">    去结算（&#123;&#123; selCount &#125;&#125;）</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-else</span> <span class="attr">:class</span>=<span class="string">&quot;&#123; disabled: selCount === 0 &#125;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;delete&quot;</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<ol start="4">
<li>监视编辑状态，动态控制复选框状态</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="attr">watch</span>: &#123;</span><br><span class="line">  <span class="title function_">isEdit</span> (value) &#123;</span><br><span class="line">    <span class="keyword">if</span> (value) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">$store</span>.<span class="title function_">commit</span>(<span class="string">&#x27;cart/toggleAllCheck&#x27;</span>, <span class="literal">false</span>)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">$store</span>.<span class="title function_">commit</span>(<span class="string">&#x27;cart/toggleAllCheck&#x27;</span>, <span class="literal">true</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>





<h2 id="45-购物车-删除功能完成"><a href="#45-购物车-删除功能完成" class="headerlink" title="45. 购物车 - 删除功能完成"></a>45. 购物车 - 删除功能完成</h2><ol>
<li>查看接口，封装 API ( 注意：此处 id 为获取回来的购物车数据的 id )</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 删除购物车</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">delSelect</span> = (<span class="params">cartIds</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> request.<span class="title function_">post</span>(<span class="string">&#x27;/cart/clear&#x27;</span>, &#123;</span><br><span class="line">    cartIds</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>注册删除点击事件</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;div v-<span class="keyword">else</span> :<span class="keyword">class</span>=<span class="string">&quot;&#123; disabled: selCount === 0 &#125;&quot;</span> @click=<span class="string">&quot;handleDel&quot;</span> <span class="keyword">class</span>=<span class="string">&quot;delete&quot;</span>&gt;</span><br><span class="line">  删除(&#123;&#123; selCount &#125;&#125;)</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="title function_">handleDel</span> () &#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">selCount</span> === <span class="number">0</span>) <span class="keyword">return</span></span><br><span class="line">  <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="property">$store</span>.<span class="title function_">dispatch</span>(<span class="string">&#x27;cart/delSelect&#x27;</span>)</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">isEdit</span> = <span class="literal">false</span></span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>提供 actions</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="attr">actions</span>: &#123;</span><br><span class="line">    <span class="comment">// 删除购物车数据</span></span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">delSelect</span> (context) &#123;</span><br><span class="line">      <span class="keyword">const</span> selCartList = context.<span class="property">getters</span>.<span class="property">selCartList</span></span><br><span class="line">      <span class="keyword">const</span> cartIds = selCartList.<span class="title function_">map</span>(<span class="function"><span class="params">item</span> =&gt;</span> item.<span class="property">id</span>)</span><br><span class="line">      <span class="keyword">await</span> <span class="title function_">delSelect</span>(cartIds)</span><br><span class="line">      <span class="title class_">Toast</span>(<span class="string">&#x27;删除成功&#x27;</span>)</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 重新拉取最新的购物车数据 (重新渲染)</span></span><br><span class="line">      context.<span class="title function_">dispatch</span>(<span class="string">&#x27;getCartAction&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>



<h2 id="46-购物车-空购物车处理"><a href="#46-购物车-空购物车处理" class="headerlink" title="46. 购物车 - 空购物车处理"></a>46. 购物车 - 空购物车处理</h2><ol>
<li>外面包个大盒子，添加 v-if 判断</li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;div <span class="keyword">class</span>=<span class="string">&quot;cart-box&quot;</span> v-<span class="keyword">if</span>=<span class="string">&quot;isLogin &amp;&amp; cartList.length &gt; 0&quot;</span>&gt;</span><br><span class="line">  &lt;!-- 购物车开头 --&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;cart-title&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    ...</span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">  &lt;!-- 购物车列表 --&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;cart-list&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    ...</span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;footer-fixed&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    ...</span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;empty-cart&quot;</span> <span class="attr">v-else</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;@/智慧商城项目-vue2/empty.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;tips&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    您的购物车是空的, 快去逛逛吧</span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;btn&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;$router.push(&#x27;/&#x27;)&quot;</span>&gt;</span>去逛逛<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<ol start="2">
<li>相关样式</li>
</ol>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.empty-cart</span> &#123;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">80px</span> <span class="number">30px</span>;</span><br><span class="line">  <span class="selector-tag">img</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">140px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">92px</span>;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.tips</span> &#123;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#666</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">30px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.btn</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">110px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">32px</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">32px</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#fa2c20</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">16px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="47-订单结算台"><a href="#47-订单结算台" class="headerlink" title="47. 订单结算台"></a>47. 订单结算台</h2><p>所谓的 “立即结算”，本质就是跳转到订单结算台，并且跳转的同时，需要携带上对应的订单参数。</p>
<p>而具体需要哪些参数，就需要基于 【订单结算台】 的需求来定。</p>
<h3 id="1-静态布局"><a href="#1-静态布局" class="headerlink" title="(1) 静态布局"></a>(1) 静态布局</h3><img data-src="/2024/11/19/%E6%99%BA%E6%85%A7%E5%95%86%E5%9F%8E%E9%A1%B9%E7%9B%AE-vue2/image-20230702155433790.png" class="" title="image-20230702155433790">

<p>准备静态页面</p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;pay&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">van-nav-bar</span> <span class="attr">fixed</span> <span class="attr">title</span>=<span class="string">&quot;订单结算台&quot;</span> <span class="attr">left-arrow</span> @<span class="attr">click-left</span>=<span class="string">&quot;$router.go(-1)&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">    <span class="comment">&lt;!-- 地址相关 --&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;address&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;left-icon&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">van-icon</span> <span class="attr">name</span>=<span class="string">&quot;logistics&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;info&quot;</span> <span class="attr">v-if</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;info-content&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;name&quot;</span>&gt;</span>小红<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;mobile&quot;</span>&gt;</span>13811112222<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;info-address&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          江苏省 无锡市 南长街 110号 504</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;info&quot;</span> <span class="attr">v-else</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        请选择配送地址</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;right-icon&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">van-icon</span> <span class="attr">name</span>=<span class="string">&quot;arrow&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">    <span class="comment">&lt;!-- 订单明细 --&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;pay-list&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;list&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;goods-item&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;left&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">              <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;http://cba.itlike.com/public/uploads/10001/20230321/8f505c6c437fc3d4b4310b57b1567544.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;right&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">              <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;tit text-ellipsis-2&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">                 三星手机 SAMSUNG Galaxy S23 8GB+256GB 超视觉夜拍系统 超清夜景 悠雾紫 5G手机 游戏拍照旗舰机s23</span></span><br><span class="line"><span class="language-xml">              <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">              <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;info&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;count&quot;</span>&gt;</span>x3<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;price&quot;</span>&gt;</span>¥9.99<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">              <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;flow-num-box&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>共 12 件商品，合计：<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;money&quot;</span>&gt;</span>￥1219.00<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;pay-detail&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;pay-cell&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">span</span>&gt;</span>订单总金额：<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;red&quot;</span>&gt;</span>￥1219.00<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;pay-cell&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">span</span>&gt;</span>优惠券：<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">span</span>&gt;</span>无优惠券可用<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;pay-cell&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">span</span>&gt;</span>配送费用：<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-if</span>=<span class="string">&quot;false&quot;</span>&gt;</span>请先选择配送地址<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-else</span> <span class="attr">class</span>=<span class="string">&quot;red&quot;</span>&gt;</span>+￥0.00<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">      <span class="comment">&lt;!-- 支付方式 --&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;pay-way&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;tit&quot;</span>&gt;</span>支付方式<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;pay-cell&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">van-icon</span> <span class="attr">name</span>=<span class="string">&quot;balance-o&quot;</span> /&gt;</span>余额支付（可用 ¥ 999919.00 元）<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="comment">&lt;!-- &lt;span&gt;请先选择配送地址&lt;/span&gt; --&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;red&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">van-icon</span> <span class="attr">name</span>=<span class="string">&quot;passed&quot;</span> /&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">      <span class="comment">&lt;!-- 买家留言 --&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;buytips&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">placeholder</span>=<span class="string">&quot;选填：买家留言（50字内）&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;&quot;</span> <span class="attr">cols</span>=<span class="string">&quot;30&quot;</span> <span class="attr">rows</span>=<span class="string">&quot;10&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">    <span class="comment">&lt;!-- 底部提交 --&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;footer-fixed&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;left&quot;</span>&gt;</span>实付款：<span class="tag">&lt;<span class="name">span</span>&gt;</span>￥999919<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;tipsbtn&quot;</span>&gt;</span>提交订单<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">name</span>: <span class="string">&#x27;PayIndex&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="title function_">data</span> () &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">return</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">methods</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">style</span> <span class="attr">lang</span>=<span class="string">&quot;less&quot;</span> <span class="attr">scoped</span>&gt;</span><span class="language-css"></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"><span class="selector-class">.pay</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">padding-top</span>: <span class="number">46px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">padding-bottom</span>: <span class="number">46px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  ::v-deep &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="selector-class">.van-nav-bar__arrow</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">color</span>: <span class="number">#333</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"><span class="selector-class">.address</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">display</span>: flex;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">align-items</span>: center;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">justify-content</span>: flex-start;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">padding</span>: <span class="number">20px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">font-size</span>: <span class="number">14px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">color</span>: <span class="number">#666</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">position</span>: relative;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">@/智慧商城项目-vue2/border-line.png</span>) bottom repeat-x;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">background-size</span>: <span class="number">60px</span> auto;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="selector-class">.left-icon</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">margin-right</span>: <span class="number">20px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="selector-class">.right-icon</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">position</span>: absolute;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">right</span>: <span class="number">20px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">top</span>: <span class="number">50%</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">transform</span>: <span class="built_in">translateY</span>(-<span class="number">7px</span>);</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"><span class="selector-class">.goods-item</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">height</span>: <span class="number">100px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">margin-bottom</span>: <span class="number">6px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">padding</span>: <span class="number">10px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">display</span>: flex;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="selector-class">.left</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">width</span>: <span class="number">100px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="selector-tag">img</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">display</span>: block;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">width</span>: <span class="number">80px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">margin</span>: <span class="number">10px</span> auto;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="selector-class">.right</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">flex</span>: <span class="number">1</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">font-size</span>: <span class="number">14px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">line-height</span>: <span class="number">1.3</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">padding</span>: <span class="number">10px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">padding-right</span>: <span class="number">0px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">display</span>: flex;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">flex-direction</span>: column;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">justify-content</span>: space-evenly;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">color</span>: <span class="number">#333</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="selector-class">.info</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">margin-top</span>: <span class="number">5px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">display</span>: flex;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">justify-content</span>: space-between;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="selector-class">.price</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">        <span class="attribute">color</span>: <span class="number">#fa2209</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"><span class="selector-class">.flow-num-box</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">display</span>: flex;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">justify-content</span>: flex-end;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">padding</span>: <span class="number">10px</span> <span class="number">10px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">font-size</span>: <span class="number">14px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="number">#efefef</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="selector-class">.money</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">color</span>: <span class="number">#fa2209</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"><span class="selector-class">.pay-cell</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">font-size</span>: <span class="number">14px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">padding</span>: <span class="number">10px</span> <span class="number">12px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">color</span>: <span class="number">#333</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">display</span>: flex;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">justify-content</span>: space-between;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="selector-class">.red</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">color</span>: <span class="number">#fa2209</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"><span class="selector-class">.pay-detail</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="number">#efefef</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"><span class="selector-class">.pay-way</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">font-size</span>: <span class="number">14px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">padding</span>: <span class="number">10px</span> <span class="number">12px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="number">#efefef</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">color</span>: <span class="number">#333</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="selector-class">.tit</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">line-height</span>: <span class="number">30px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="selector-class">.pay-cell</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">padding</span>: <span class="number">10px</span> <span class="number">0</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="selector-class">.van-icon</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">font-size</span>: <span class="number">20px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">margin-right</span>: <span class="number">5px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"><span class="selector-class">.buytips</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">display</span>: block;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="selector-tag">textarea</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">display</span>: block;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">width</span>: <span class="number">100%</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">border</span>: none;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">font-size</span>: <span class="number">14px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">padding</span>: <span class="number">12px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">height</span>: <span class="number">100px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"><span class="selector-class">.footer-fixed</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">position</span>: fixed;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">left</span>: <span class="number">0</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">bottom</span>: <span class="number">0</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">width</span>: <span class="number">100%</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">height</span>: <span class="number">46px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">line-height</span>: <span class="number">46px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">border-top</span>: <span class="number">1px</span> solid <span class="number">#efefef</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">font-size</span>: <span class="number">14px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">display</span>: flex;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="selector-class">.left</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">flex</span>: <span class="number">1</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">padding-left</span>: <span class="number">12px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">color</span>: <span class="number">#666</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="selector-tag">span</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">color</span>:<span class="number">#fa2209</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="selector-class">.tipsbtn</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">width</span>: <span class="number">121px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">background</span>: <span class="built_in">linear-gradient</span>(<span class="number">90deg</span>,<span class="number">#f9211c</span>,<span class="number">#ff6335</span>);</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">color</span>: <span class="number">#fff</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">text-align</span>: center;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">line-height</span>: <span class="number">46px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">display</span>: block;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">font-size</span>: <span class="number">14px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<h3 id="2-获取收货地址列表"><a href="#2-获取收货地址列表" class="headerlink" title="(2) 获取收货地址列表"></a>(2) 获取收货地址列表</h3><p>1 封装获取地址的接口</p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> request <span class="keyword">from</span> <span class="string">&#x27;@/utils/request&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取地址列表</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">getAddressList</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> request.<span class="title function_">get</span>(<span class="string">&#x27;/address/list&#x27;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>2 页面中 - 调用获取地址</p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="title function_">data</span> () &#123;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    <span class="attr">addressList</span>: []</span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br><span class="line"><span class="attr">computed</span>: &#123;</span><br><span class="line">  <span class="title function_">selectAddress</span> () &#123;</span><br><span class="line">    <span class="comment">// 这里地址管理不是主线业务，直接获取默认第一条地址</span></span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">addressList</span>[<span class="number">0</span>] </span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br><span class="line"><span class="keyword">async</span> <span class="title function_">created</span> () &#123;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="title function_">getAddressList</span>()</span><br><span class="line">&#125;,</span><br><span class="line"><span class="attr">methods</span>: &#123;</span><br><span class="line">  <span class="keyword">async</span> <span class="title function_">getAddressList</span> () &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; <span class="attr">data</span>: &#123; list &#125; &#125; = <span class="keyword">await</span> <span class="title function_">getAddressList</span>()</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">addressList</span> = list</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>3 页面中 - 进行渲染</p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="attr">computed</span>: &#123;</span><br><span class="line">  <span class="title function_">longAddress</span> () &#123;</span><br><span class="line">    <span class="keyword">const</span> region = <span class="variable language_">this</span>.<span class="property">selectAddress</span>.<span class="property">region</span></span><br><span class="line">    <span class="keyword">return</span> region.<span class="property">province</span> + region.<span class="property">city</span> + region.<span class="property">region</span> + <span class="variable language_">this</span>.<span class="property">selectAddress</span>.<span class="property">detail</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;info&quot;</span> <span class="attr">v-if</span>=<span class="string">&quot;selectAddress?.address_id&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;info-content&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;name&quot;</span>&gt;</span>&#123;&#123; selectAddress.name &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;mobile&quot;</span>&gt;</span>&#123;&#123; selectAddress.phone &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;info-address&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    &#123;&#123; longAddress &#125;&#125;</span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure>



<h3 id="3-订单结算-封装通用接口"><a href="#3-订单结算-封装通用接口" class="headerlink" title="(3) 订单结算 - 封装通用接口"></a>(3) 订单结算 - 封装通用接口</h3><p><strong>思路分析：</strong>这里的订单结算，有两种情况：</p>
<ol>
<li><p>购物车结算，需要两个参数</p>
<p>① mode&#x3D;”cart”</p>
<p>② cartIds&#x3D;”cartId, cartId”</p>
</li>
<li><p>立即购买结算，需要三个参数</p>
<p>① mode&#x3D;”buyNow”</p>
<p>② goodsId&#x3D;”商品id” </p>
<p>③ goodsSkuId&#x3D;”商品skuId”</p>
</li>
</ol>
<p>都需要跳转时将参数传递过来</p>
<hr>
<p>封装通用 API 接口 <code>api/order</code> </p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> request <span class="keyword">from</span> <span class="string">&#x27;@/utils/request&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">checkOrder</span> = (<span class="params">mode, obj</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> request.<span class="title function_">get</span>(<span class="string">&#x27;/checkout/order&#x27;</span>, &#123;</span><br><span class="line">    <span class="attr">params</span>: &#123;</span><br><span class="line">      mode,</span><br><span class="line">      <span class="attr">delivery</span>: <span class="number">0</span>,</span><br><span class="line">      <span class="attr">couponId</span>: <span class="number">0</span>,</span><br><span class="line">      <span class="attr">isUsePoints</span>: <span class="number">0</span>,</span><br><span class="line">      ...obj</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="4-订单结算-购物车结算"><a href="#4-订单结算-购物车结算" class="headerlink" title="(4) 订单结算 - 购物车结算"></a>(4) 订单结算 - 购物车结算</h3><p>1 跳转时，传递查询参数</p>
<p><code>layout/cart.vue</code></p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;div @click=<span class="string">&quot;goPay&quot;</span>&gt;结算(&#123;&#123; selCount &#125;&#125;)&lt;/div&gt;</span><br><span class="line"></span><br><span class="line"><span class="title function_">goPay</span> () &#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">selCount</span> &gt; <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">$router</span>.<span class="title function_">push</span>(&#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&#x27;/pay&#x27;</span>,</span><br><span class="line">      <span class="attr">query</span>: &#123;</span><br><span class="line">        <span class="attr">mode</span>: <span class="string">&#x27;cart&#x27;</span>,</span><br><span class="line">        <span class="attr">cartIds</span>: <span class="variable language_">this</span>.<span class="property">selCartList</span>.<span class="title function_">map</span>(<span class="function"><span class="params">item</span> =&gt;</span> item.<span class="property">id</span>).<span class="title function_">join</span>(<span class="string">&#x27;,&#x27;</span>)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>2 页面中接收参数,   调用接口，获取数据</p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="title function_">data</span> () &#123;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    <span class="attr">order</span>: &#123;&#125;,</span><br><span class="line">    <span class="attr">personal</span>: &#123;&#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br><span class="line">    </span><br><span class="line"><span class="attr">computed</span>: &#123;</span><br><span class="line">  <span class="title function_">mode</span> () &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">$route</span>.<span class="property">query</span>.<span class="property">mode</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="title function_">cartIds</span> () &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">$route</span>.<span class="property">query</span>.<span class="property">cartIds</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="title function_">created</span> () &#123;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="title function_">getOrderList</span>()</span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="title function_">getOrderList</span> () &#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">mode</span> === <span class="string">&#x27;cart&#x27;</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; <span class="attr">data</span>: &#123; order, personal &#125; &#125; = <span class="keyword">await</span> <span class="title function_">checkOrder</span>(<span class="variable language_">this</span>.<span class="property">mode</span>, &#123; <span class="attr">cartIds</span>: <span class="variable language_">this</span>.<span class="property">cartIds</span> &#125;)</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">order</span> = order</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">personal</span> = personal</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>3 基于数据进行渲染</p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;!-- 订单明细 --&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;pay-list&quot;</span> <span class="attr">v-if</span>=<span class="string">&quot;order.goodsList&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;list&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;goods-item&quot;</span> <span class="attr">v-for</span>=<span class="string">&quot;item in order.goodsList&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;item.goods_id&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;left&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">img</span> <span class="attr">:src</span>=<span class="string">&quot;item.goods_image&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;right&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;tit text-ellipsis-2&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            &#123;&#123; item.goods_name &#125;&#125;</span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;info&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;count&quot;</span>&gt;</span>x&#123;&#123; item.total_num &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;price&quot;</span>&gt;</span>¥&#123;&#123; item.total_pay_price &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;flow-num-box&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>共 &#123;&#123; order.orderTotalNum &#125;&#125; 件商品，合计：<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;money&quot;</span>&gt;</span>￥&#123;&#123; order.orderTotalPrice &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;pay-detail&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;pay-cell&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">span</span>&gt;</span>订单总金额：<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;red&quot;</span>&gt;</span>￥&#123;&#123; order.orderTotalPrice &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;pay-cell&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">span</span>&gt;</span>优惠券：<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">span</span>&gt;</span>无优惠券可用<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;pay-cell&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">span</span>&gt;</span>配送费用：<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-if</span>=<span class="string">&quot;!selectAddress&quot;</span>&gt;</span>请先选择配送地址<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-else</span> <span class="attr">class</span>=<span class="string">&quot;red&quot;</span>&gt;</span>+￥0.00<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">  <span class="comment">&lt;!-- 支付方式 --&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;pay-way&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;tit&quot;</span>&gt;</span>支付方式<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;pay-cell&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">van-icon</span> <span class="attr">name</span>=<span class="string">&quot;balance-o&quot;</span> /&gt;</span>余额支付（可用 ¥ &#123;&#123; personal.balance &#125;&#125; 元）<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="comment">&lt;!-- &lt;span&gt;请先选择配送地址&lt;/span&gt; --&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;red&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">van-icon</span> <span class="attr">name</span>=<span class="string">&quot;passed&quot;</span> /&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">  <span class="comment">&lt;!-- 买家留言 --&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;buytips&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">placeholder</span>=<span class="string">&quot;选填：买家留言（50字内）&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;&quot;</span> <span class="attr">cols</span>=<span class="string">&quot;30&quot;</span> <span class="attr">rows</span>=<span class="string">&quot;10&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">&lt;!-- 底部提交 --&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;footer-fixed&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;left&quot;</span>&gt;</span>实付款：<span class="tag">&lt;<span class="name">span</span>&gt;</span>￥&#123;&#123; order.orderTotalPrice &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;tipsbtn&quot;</span>&gt;</span>提交订单<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure>



<h3 id="5-订单结算-立即购买结算"><a href="#5-订单结算-立即购买结算" class="headerlink" title="(5) 订单结算 - 立即购买结算"></a>(5) 订单结算 - 立即购买结算</h3><p>1 点击跳转传参</p>
<p><code>prodetail/index.vue</code></p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;div <span class="keyword">class</span>=<span class="string">&quot;btn&quot;</span> v-<span class="keyword">if</span>=<span class="string">&quot;mode === &#x27;buyNow&#x27;&quot;</span> @click=<span class="string">&quot;goBuyNow&quot;</span>&gt;立刻购买&lt;/div&gt;</span><br><span class="line"></span><br><span class="line"><span class="title function_">goBuyNow</span> () &#123;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">$router</span>.<span class="title function_">push</span>(&#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&#x27;/pay&#x27;</span>,</span><br><span class="line">    <span class="attr">query</span>: &#123;</span><br><span class="line">      <span class="attr">mode</span>: <span class="string">&#x27;buyNow&#x27;</span>,</span><br><span class="line">      <span class="attr">goodsId</span>: <span class="variable language_">this</span>.<span class="property">goodsId</span>,</span><br><span class="line">      <span class="attr">goodsSkuId</span>: <span class="variable language_">this</span>.<span class="property">detail</span>.<span class="property">skuList</span>[<span class="number">0</span>].<span class="property">goods_sku_id</span>,</span><br><span class="line">      <span class="attr">goodsNum</span>: <span class="variable language_">this</span>.<span class="property">addCount</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>2 计算属性处理参数</p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="attr">computed</span>: &#123;</span><br><span class="line">  ...</span><br><span class="line">  <span class="title function_">goodsId</span> () &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">$route</span>.<span class="property">query</span>.<span class="property">goodsId</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="title function_">goodsSkuId</span> () &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">$route</span>.<span class="property">query</span>.<span class="property">goodsSkuId</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="title function_">goodsNum</span> () &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">$route</span>.<span class="property">query</span>.<span class="property">goodsNum</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>3 基于请求时携带参数发请求渲染</p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="title function_">getOrderList</span> () &#123;</span><br><span class="line">  ...</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">mode</span> === <span class="string">&#x27;buyNow&#x27;</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; <span class="attr">data</span>: &#123; order, personal &#125; &#125; = <span class="keyword">await</span> <span class="title function_">checkOrder</span>(<span class="variable language_">this</span>.<span class="property">mode</span>, &#123;</span><br><span class="line">      <span class="attr">goodsId</span>: <span class="variable language_">this</span>.<span class="property">goodsId</span>,</span><br><span class="line">      <span class="attr">goodsSkuId</span>: <span class="variable language_">this</span>.<span class="property">goodsSkuId</span>,</span><br><span class="line">      <span class="attr">goodsNum</span>: <span class="variable language_">this</span>.<span class="property">goodsNum</span></span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">order</span> = order</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">personal</span> = personal</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="6-mixins-复用-处理登录确认框的弹出"><a href="#6-mixins-复用-处理登录确认框的弹出" class="headerlink" title="(6) mixins 复用 - 处理登录确认框的弹出"></a>(6) mixins 复用 - 处理登录确认框的弹出</h3><p>1 新建一个 mixin 文件   <code>mixins/loginConfirm.js</code></p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">methods</span>: &#123;</span><br><span class="line">    <span class="comment">// 是否需要弹登录确认框</span></span><br><span class="line">    <span class="comment">// (1) 需要，返回 true，并直接弹出登录确认框</span></span><br><span class="line">    <span class="comment">// (2) 不需要，返回 false</span></span><br><span class="line">    <span class="title function_">loginConfirm</span> () &#123;</span><br><span class="line">      <span class="keyword">if</span> (!<span class="variable language_">this</span>.<span class="property">$store</span>.<span class="property">getters</span>.<span class="property">token</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$dialog</span>.<span class="title function_">confirm</span>(&#123;</span><br><span class="line">          <span class="attr">title</span>: <span class="string">&#x27;温馨提示&#x27;</span>,</span><br><span class="line">          <span class="attr">message</span>: <span class="string">&#x27;此时需要先登录才能继续操作哦&#x27;</span>,</span><br><span class="line">          <span class="attr">confirmButtonText</span>: <span class="string">&#x27;去登陆&#x27;</span>,</span><br><span class="line">          <span class="attr">cancelButtonText</span>: <span class="string">&#x27;再逛逛&#x27;</span></span><br><span class="line">        &#125;)</span><br><span class="line">          .<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">            <span class="comment">// 如果希望，跳转到登录 =&gt; 登录后能回跳回来，需要在跳转去携带参数 (当前的路径地址)</span></span><br><span class="line">            <span class="comment">// this.$route.fullPath (会包含查询参数)</span></span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">$router</span>.<span class="title function_">replace</span>(&#123;</span><br><span class="line">              <span class="attr">path</span>: <span class="string">&#x27;/login&#x27;</span>,</span><br><span class="line">              <span class="attr">query</span>: &#123;</span><br><span class="line">                <span class="attr">backUrl</span>: <span class="variable language_">this</span>.<span class="property">$route</span>.<span class="property">fullPath</span></span><br><span class="line">              &#125;</span><br><span class="line">            &#125;)</span><br><span class="line">          &#125;)</span><br><span class="line">          .<span class="title function_">catch</span>(<span class="function">() =&gt;</span> &#123;&#125;)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>2 页面中导入，混入方法</p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> loginConfirm <span class="keyword">from</span> <span class="string">&#x27;@/mixins/loginConfirm&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;ProDetail&#x27;</span>,</span><br><span class="line">  <span class="attr">mixins</span>: [loginConfirm],</span><br><span class="line">  ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>3 页面中调用 混入的方法</p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="title function_">addCart</span> () &#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="title function_">loginConfirm</span>()) &#123;</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">const</span> &#123; data &#125; = <span class="keyword">await</span> <span class="title function_">addCart</span>(<span class="variable language_">this</span>.<span class="property">goodsId</span>, <span class="variable language_">this</span>.<span class="property">addCount</span>, <span class="variable language_">this</span>.<span class="property">detail</span>.<span class="property">skuList</span>[<span class="number">0</span>].<span class="property">goods_sku_id</span>)</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">cartTotal</span> = data.<span class="property">cartTotal</span></span><br><span class="line">  <span class="variable language_">this</span>.$toast(<span class="string">&#x27;加入购物车成功&#x27;</span>)</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">showPannel</span> = <span class="literal">false</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">cartTotal</span>)</span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line"><span class="title function_">goBuyNow</span> () &#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="title function_">loginConfirm</span>()) &#123;</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">$router</span>.<span class="title function_">push</span>(&#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&#x27;/pay&#x27;</span>,</span><br><span class="line">    <span class="attr">query</span>: &#123;</span><br><span class="line">      <span class="attr">mode</span>: <span class="string">&#x27;buyNow&#x27;</span>,</span><br><span class="line">      <span class="attr">goodsId</span>: <span class="variable language_">this</span>.<span class="property">goodsId</span>,</span><br><span class="line">      <span class="attr">goodsSkuId</span>: <span class="variable language_">this</span>.<span class="property">detail</span>.<span class="property">skuList</span>[<span class="number">0</span>].<span class="property">goods_sku_id</span>,</span><br><span class="line">      <span class="attr">goodsNum</span>: <span class="variable language_">this</span>.<span class="property">addCount</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>





<h2 id="48-提交订单并支付"><a href="#48-提交订单并支付" class="headerlink" title="48. 提交订单并支付"></a>48. 提交订单并支付</h2><p>1 封装 API 通用方法（统一余额支付）</p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 提交订单</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">submitOrder</span> = (<span class="params">mode, params</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> request.<span class="title function_">post</span>(<span class="string">&#x27;/checkout/submit&#x27;</span>, &#123;</span><br><span class="line">    mode,</span><br><span class="line">    <span class="attr">delivery</span>: <span class="number">10</span>, <span class="comment">// 物流方式  配送方式 (10快递配送 20门店自提)</span></span><br><span class="line">    <span class="attr">couponId</span>: <span class="number">0</span>, <span class="comment">// 优惠券 id</span></span><br><span class="line">    <span class="attr">payType</span>: <span class="number">10</span>, <span class="comment">// 余额支付</span></span><br><span class="line">    <span class="attr">isUsePoints</span>: <span class="number">0</span>, <span class="comment">// 是否使用积分</span></span><br><span class="line">    ...params</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>2 买家留言绑定</p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="title function_">data</span> () &#123;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    <span class="attr">remark</span>: <span class="string">&#x27;&#x27;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;buytips&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">v-model</span>=<span class="string">&quot;remark&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;选填：买家留言（50字内）&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;&quot;</span> <span class="attr">cols</span>=<span class="string">&quot;30&quot;</span> <span class="attr">rows</span>=<span class="string">&quot;10&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<p>3 注册点击事件，提交订单并支付 </p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;div <span class="keyword">class</span>=<span class="string">&quot;tipsbtn&quot;</span> @click=<span class="string">&quot;submitOrder&quot;</span>&gt;提交订单&lt;/div&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 提交订单</span></span><br><span class="line"><span class="keyword">async</span> <span class="title function_">submitOrder</span> () &#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">mode</span> === <span class="string">&#x27;cart&#x27;</span>) &#123;</span><br><span class="line">    <span class="keyword">await</span> <span class="title function_">submitOrder</span>(<span class="variable language_">this</span>.<span class="property">mode</span>, &#123;</span><br><span class="line">      <span class="attr">remark</span>: <span class="variable language_">this</span>.<span class="property">remark</span>,</span><br><span class="line">      <span class="attr">cartIds</span>: <span class="variable language_">this</span>.<span class="property">cartIds</span></span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">mode</span> === <span class="string">&#x27;buyNow&#x27;</span>) &#123;</span><br><span class="line">    <span class="keyword">await</span> <span class="title function_">submitOrder</span>(<span class="variable language_">this</span>.<span class="property">mode</span>, &#123;</span><br><span class="line">      <span class="attr">remark</span>: <span class="variable language_">this</span>.<span class="property">remark</span>,</span><br><span class="line">      <span class="attr">goodsId</span>: <span class="variable language_">this</span>.<span class="property">goodsId</span>,</span><br><span class="line">      <span class="attr">goodsSkuId</span>: <span class="variable language_">this</span>.<span class="property">goodsSkuId</span>,</span><br><span class="line">      <span class="attr">goodsNum</span>: <span class="variable language_">this</span>.<span class="property">goodsNum</span></span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">$toast</span>.<span class="title function_">success</span>(<span class="string">&#x27;支付成功&#x27;</span>)</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">$router</span>.<span class="title function_">replace</span>(<span class="string">&#x27;/myorder&#x27;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>





<h2 id="49-订单管理"><a href="#49-订单管理" class="headerlink" title="49. 订单管理"></a>49. 订单管理</h2><h3 id="1-静态布局-1"><a href="#1-静态布局-1" class="headerlink" title="(1) 静态布局"></a>(1) 静态布局</h3><p>1 基础静态结构</p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;order&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">van-nav-bar</span> <span class="attr">title</span>=<span class="string">&quot;我的订单&quot;</span> <span class="attr">left-arrow</span> @<span class="attr">click-left</span>=<span class="string">&quot;$router.go(-1)&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">van-tabs</span> <span class="attr">v-model</span>=<span class="string">&quot;active&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">van-tab</span> <span class="attr">title</span>=<span class="string">&quot;全部&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">van-tab</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">van-tab</span> <span class="attr">title</span>=<span class="string">&quot;待支付&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">van-tab</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">van-tab</span> <span class="attr">title</span>=<span class="string">&quot;待发货&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">van-tab</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">van-tab</span> <span class="attr">title</span>=<span class="string">&quot;待收货&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">van-tab</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">van-tab</span> <span class="attr">title</span>=<span class="string">&quot;待评价&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">van-tab</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">van-tabs</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">OrderListItem</span>&gt;</span><span class="tag">&lt;/<span class="name">OrderListItem</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">import</span> <span class="title class_">OrderListItem</span> <span class="keyword">from</span> <span class="string">&#x27;@/components/OrderListItem.vue&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">name</span>: <span class="string">&#x27;OrderPage&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">components</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title class_">OrderListItem</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="title function_">data</span> () &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">return</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">active</span>: <span class="number">0</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">style</span> <span class="attr">lang</span>=<span class="string">&quot;less&quot;</span> <span class="attr">scoped</span>&gt;</span><span class="language-css"></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"><span class="selector-class">.order</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">background-color</span>: <span class="number">#fafafa</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"><span class="selector-class">.van-tabs</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">position</span>: sticky;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">top</span>: <span class="number">0</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<p>2 <code>components/OrderListItem</code></p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;order-list-item&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;tit&quot;&gt;</span><br><span class="line">      &lt;div class=&quot;time&quot;&gt;2023-07-01 12:02:13&lt;/div&gt;</span><br><span class="line">      &lt;div class=&quot;status&quot;&gt;</span><br><span class="line">        &lt;span&gt;待支付&lt;/span&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;list&quot;&gt;</span><br><span class="line">      &lt;div class=&quot;list-item&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;goods-img&quot;&gt;</span><br><span class="line">          &lt;img src=&quot;http://cba.itlike.com/public/uploads/10001/20230321/c4b5c61e46489bb9b9c0630002fbd69e.jpg&quot; alt=&quot;&quot;&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;goods-content text-ellipsis-2&quot;&gt;</span><br><span class="line">          Apple iPhone 14 Pro Max 256G 银色 移动联通电信5G双卡双待手机</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;goods-trade&quot;&gt;</span><br><span class="line">          &lt;p&gt;¥ 1299.00&lt;/p&gt;</span><br><span class="line">          &lt;p&gt;x 3&lt;/p&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;div class=&quot;list-item&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;goods-img&quot;&gt;</span><br><span class="line">          &lt;img src=&quot;http://cba.itlike.com/public/uploads/10001/20230321/c4b5c61e46489bb9b9c0630002fbd69e.jpg&quot; alt=&quot;&quot;&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;goods-content text-ellipsis-2&quot;&gt;</span><br><span class="line">          Apple iPhone 14 Pro Max 256G 银色 移动联通电信5G双卡双待手机</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;goods-trade&quot;&gt;</span><br><span class="line">          &lt;p&gt;¥ 1299.00&lt;/p&gt;</span><br><span class="line">          &lt;p&gt;x 3&lt;/p&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;div class=&quot;list-item&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;goods-img&quot;&gt;</span><br><span class="line">          &lt;img src=&quot;http://cba.itlike.com/public/uploads/10001/20230321/c4b5c61e46489bb9b9c0630002fbd69e.jpg&quot; alt=&quot;&quot;&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;goods-content text-ellipsis-2&quot;&gt;</span><br><span class="line">          Apple iPhone 14 Pro Max 256G 银色 移动联通电信5G双卡双待手机</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;goods-trade&quot;&gt;</span><br><span class="line">          &lt;p&gt;¥ 1299.00&lt;/p&gt;</span><br><span class="line">          &lt;p&gt;x 3&lt;/p&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;total&quot;&gt;</span><br><span class="line">      共12件商品，总金额 ¥29888.00</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;actions&quot;&gt;</span><br><span class="line">      &lt;span v-if=&quot;false&quot;&gt;立刻付款&lt;/span&gt;</span><br><span class="line">      &lt;span v-if=&quot;true&quot;&gt;申请取消&lt;/span&gt;</span><br><span class="line">      &lt;span v-if=&quot;false&quot;&gt;确认收货&lt;/span&gt;</span><br><span class="line">      &lt;span v-if=&quot;false&quot;&gt;评价&lt;/span&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=&quot;less&quot; scoped&gt;</span><br><span class="line">.order-list-item &#123;</span><br><span class="line">  margin: 10px auto;</span><br><span class="line">  width: 94%;</span><br><span class="line">  padding: 15px;</span><br><span class="line">  background-color: #ffffff;</span><br><span class="line">  box-shadow: 0 0.5px 2px 0 rgba(0,0,0,.05);</span><br><span class="line">  border-radius: 8px;</span><br><span class="line">  color: #333;</span><br><span class="line">  font-size: 13px;</span><br><span class="line"></span><br><span class="line">  .tit &#123;</span><br><span class="line">    height: 24px;</span><br><span class="line">    line-height: 24px;</span><br><span class="line">    display: flex;</span><br><span class="line">    justify-content: space-between;</span><br><span class="line">    margin-bottom: 20px;</span><br><span class="line">    .status &#123;</span><br><span class="line">      color: #fa2209;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .list-item &#123;</span><br><span class="line">    display: flex;</span><br><span class="line">    .goods-img &#123;</span><br><span class="line">      width: 90px;</span><br><span class="line">      height: 90px;</span><br><span class="line">      margin: 0px 10px 10px 0;</span><br><span class="line">      img &#123;</span><br><span class="line">        width: 100%;</span><br><span class="line">        height: 100%;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    .goods-content &#123;</span><br><span class="line">      flex: 2;</span><br><span class="line">      line-height: 18px;</span><br><span class="line">      max-height: 36px;</span><br><span class="line">      margin-top: 8px;</span><br><span class="line">    &#125;</span><br><span class="line">    .goods-trade &#123;</span><br><span class="line">      flex: 1;</span><br><span class="line">      line-height: 18px;</span><br><span class="line">      text-align: right;</span><br><span class="line">      color: #b39999;</span><br><span class="line">      margin-top: 8px;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .total &#123;</span><br><span class="line">    text-align: right;</span><br><span class="line">  &#125;</span><br><span class="line">  .actions &#123;</span><br><span class="line">    text-align: right;</span><br><span class="line">    span &#123;</span><br><span class="line">      display: inline-block;</span><br><span class="line">      height: 28px;</span><br><span class="line">      line-height: 28px;</span><br><span class="line">      color: #383838;</span><br><span class="line">      border: 0.5px solid #a8a8a8;</span><br><span class="line">      font-size: 14px;</span><br><span class="line">      padding: 0 15px;</span><br><span class="line">      border-radius: 5px;</span><br><span class="line">      margin: 10px 0;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<p>3 导入注册</p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Tab</span>, <span class="title class_">Tabs</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;vant&#x27;</span></span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">use</span>(<span class="title class_">Tab</span>)</span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">use</span>(<span class="title class_">Tabs</span>)</span><br></pre></td></tr></table></figure>



<h3 id="2-点击-tab-切换渲染"><a href="#2-点击-tab-切换渲染" class="headerlink" title="(2) 点击 tab 切换渲染"></a>(2) 点击 tab 切换渲染</h3><p>1 封装获取订单列表的 API 接口</p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 订单列表</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">getMyOrderList</span> = (<span class="params">dataType, page</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> request.<span class="title function_">get</span>(<span class="string">&#x27;/order/list&#x27;</span>, &#123;</span><br><span class="line">    <span class="attr">params</span>: &#123;</span><br><span class="line">      dataType,</span><br><span class="line">      page</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>2 给 tab 绑定 name 属性</p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;van-tabs v-model=<span class="string">&quot;active&quot;</span> sticky&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">van-tab</span> <span class="attr">name</span>=<span class="string">&quot;all&quot;</span> <span class="attr">title</span>=<span class="string">&quot;全部&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">van-tab</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">van-tab</span> <span class="attr">name</span>=<span class="string">&quot;payment&quot;</span> <span class="attr">title</span>=<span class="string">&quot;待支付&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">van-tab</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">van-tab</span> <span class="attr">name</span>=<span class="string">&quot;delivery&quot;</span> <span class="attr">title</span>=<span class="string">&quot;待发货&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">van-tab</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">van-tab</span> <span class="attr">name</span>=<span class="string">&quot;received&quot;</span> <span class="attr">title</span>=<span class="string">&quot;待收货&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">van-tab</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">van-tab</span> <span class="attr">name</span>=<span class="string">&quot;comment&quot;</span> <span class="attr">title</span>=<span class="string">&quot;待评价&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">van-tab</span>&gt;</span></span></span><br><span class="line">&lt;/van-tabs&gt;</span><br><span class="line"></span><br><span class="line"><span class="title function_">data</span> () &#123;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    <span class="attr">active</span>: <span class="variable language_">this</span>.<span class="property">$route</span>.<span class="property">query</span>.<span class="property">dataType</span> || <span class="string">&#x27;all&#x27;</span>,</span><br><span class="line">    <span class="attr">page</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="attr">list</span>: []</span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>

<p>3 封装调用接口获取数据</p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="attr">methods</span>: &#123;</span><br><span class="line">  <span class="keyword">async</span> <span class="title function_">getOrderList</span> () &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; <span class="attr">data</span>: &#123; list &#125; &#125; = <span class="keyword">await</span> <span class="title function_">getMyOrderList</span>(<span class="variable language_">this</span>.<span class="property">active</span>, <span class="variable language_">this</span>.<span class="property">page</span>)</span><br><span class="line">    list.<span class="property">data</span>.<span class="title function_">forEach</span>(<span class="function">(<span class="params">item</span>) =&gt;</span> &#123;</span><br><span class="line">      item.<span class="property">total_num</span> = <span class="number">0</span></span><br><span class="line">      item.<span class="property">goods</span>.<span class="title function_">forEach</span>(<span class="function"><span class="params">goods</span> =&gt;</span> &#123;</span><br><span class="line">        item.<span class="property">total_num</span> += goods.<span class="property">total_num</span></span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">list</span> = list.<span class="property">data</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br><span class="line"><span class="attr">watch</span>: &#123;</span><br><span class="line">  <span class="attr">active</span>: &#123;</span><br><span class="line">    <span class="attr">immediate</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="title function_">handler</span> () &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="title function_">getOrderList</span>()</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>4 动态渲染</p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;<span class="title class_">OrderListItem</span> v-<span class="keyword">for</span>=<span class="string">&quot;item in list&quot;</span> :key=<span class="string">&quot;item.order_id&quot;</span> :item=<span class="string">&quot;item&quot;</span>&gt;&lt;/<span class="title class_">OrderListItem</span>&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;order-list-item&quot;</span> <span class="attr">v-if</span>=<span class="string">&quot;item.order_id&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;tit&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;time&quot;</span>&gt;</span>&#123;&#123; item.create_time &#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;status&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123; item.state_text &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;list&quot;</span> &gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;list-item&quot;</span> <span class="attr">v-for</span>=<span class="string">&quot;(goods, index) in item.goods&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;index&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;goods-img&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">img</span> <span class="attr">:src</span>=<span class="string">&quot;goods.goods_image&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;goods-content text-ellipsis-2&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          &#123;&#123; goods.goods_name &#125;&#125;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;goods-trade&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">p</span>&gt;</span>¥ &#123;&#123; goods.total_pay_price &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">p</span>&gt;</span>x &#123;&#123; goods.total_num &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;total&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      共 &#123;&#123; item.total_num &#125;&#125; 件商品，总金额 ¥&#123;&#123; item.total_price &#125;&#125;</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;actions&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-if</span>=<span class="string">&quot;item.order_status === 10&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-if</span>=<span class="string">&quot;item.pay_status === 10&quot;</span>&gt;</span>立刻付款<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-else-if</span>=<span class="string">&quot;item.delivery_status === 10&quot;</span>&gt;</span>申请取消<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-else-if</span>=<span class="string">&quot;item.delivery_status === 20 || item.delivery_status === 30&quot;</span>&gt;</span>确认收货<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-if</span>=<span class="string">&quot;item.order_status === 30&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>评价<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">props</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">item</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">type</span>: <span class="title class_">Object</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">default</span>: <span class="function">() =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">return</span> &#123;&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>





<h2 id="50-个人中心-基本渲染"><a href="#50-个人中心-基本渲染" class="headerlink" title="50. 个人中心 - 基本渲染"></a>50. 个人中心 - 基本渲染</h2><p>1 封装获取个人信息 - API接口</p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> request <span class="keyword">from</span> <span class="string">&#x27;@/utils/request&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取个人信息</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">getUserInfoDetail</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> request.<span class="title function_">get</span>(<span class="string">&#x27;/user/info&#x27;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>2 调用接口，获取数据进行渲染</p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;user&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;head-page&quot;</span> <span class="attr">v-if</span>=<span class="string">&quot;isLogin&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;head-img&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;@/智慧商城项目-vue2/default-avatar.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;info&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;mobile&quot;</span>&gt;</span>&#123;&#123; detail.mobile &#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;vip&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">van-icon</span> <span class="attr">name</span>=<span class="string">&quot;diamond-o&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">          普通会员</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-else</span> <span class="attr">class</span>=<span class="string">&quot;head-page&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;$router.push(&#x27;/login&#x27;)&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;head-img&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;@/智慧商城项目-vue2/default-avatar.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;info&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;mobile&quot;</span>&gt;</span>未登录<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;words&quot;</span>&gt;</span>点击登录账号<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;my-asset&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;asset-left&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;asset-left-item&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123; detail.pay_money || 0 &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">span</span>&gt;</span>账户余额<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;asset-left-item&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">span</span>&gt;</span>0<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">span</span>&gt;</span>积分<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;asset-left-item&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">span</span>&gt;</span>0<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">span</span>&gt;</span>优惠券<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;asset-right&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;asset-right-item&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">van-icon</span> <span class="attr">name</span>=<span class="string">&quot;balance-pay&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">span</span>&gt;</span>我的钱包<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;order-navbar&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;order-navbar-item&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;$router.push(&#x27;/myorder?dataType=all&#x27;)&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">van-icon</span> <span class="attr">name</span>=<span class="string">&quot;balance-list-o&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>全部订单<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;order-navbar-item&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;$router.push(&#x27;/myorder?dataType=payment&#x27;)&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">van-icon</span> <span class="attr">name</span>=<span class="string">&quot;clock-o&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>待支付<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;order-navbar-item&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;$router.push(&#x27;/myorder?dataType=delivery&#x27;)&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">van-icon</span> <span class="attr">name</span>=<span class="string">&quot;logistics&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>待发货<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;order-navbar-item&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;$router.push(&#x27;/myorder?dataType=received&#x27;)&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">van-icon</span> <span class="attr">name</span>=<span class="string">&quot;send-gift-o&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>待收货<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;service&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;title&quot;</span>&gt;</span>我的服务<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;content&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;content-item&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">van-icon</span> <span class="attr">name</span>=<span class="string">&quot;records&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">span</span>&gt;</span>收货地址<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;content-item&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">van-icon</span> <span class="attr">name</span>=<span class="string">&quot;gift-o&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">span</span>&gt;</span>领券中心<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;content-item&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">van-icon</span> <span class="attr">name</span>=<span class="string">&quot;gift-card-o&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">span</span>&gt;</span>优惠券<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;content-item&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">van-icon</span> <span class="attr">name</span>=<span class="string">&quot;question-o&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">span</span>&gt;</span>我的帮助<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;content-item&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">van-icon</span> <span class="attr">name</span>=<span class="string">&quot;balance-o&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">span</span>&gt;</span>我的积分<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;content-item&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">van-icon</span> <span class="attr">name</span>=<span class="string">&quot;refund-o&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">span</span>&gt;</span>退换/售后<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;logout-btn&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">     <span class="tag">&lt;<span class="name">button</span>&gt;</span>退出登录<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">import</span> &#123; getUserInfoDetail &#125; <span class="keyword">from</span> <span class="string">&#x27;@/api/user.js&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">name</span>: <span class="string">&#x27;UserPage&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="title function_">data</span> () &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">return</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">detail</span>: &#123;&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="title function_">created</span> () &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">isLogin</span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="variable language_">this</span>.<span class="title function_">getUserInfoDetail</span>()</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">computed</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">isLogin</span> () &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">$store</span>.<span class="property">getters</span>.<span class="property">token</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">methods</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">async</span> <span class="title function_">getUserInfoDetail</span> () &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="keyword">const</span> &#123; <span class="attr">data</span>: &#123; userInfo &#125; &#125; = <span class="keyword">await</span> <span class="title function_">getUserInfoDetail</span>()</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="variable language_">this</span>.<span class="property">detail</span> = userInfo</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">detail</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">style</span> <span class="attr">lang</span>=<span class="string">&quot;less&quot;</span> <span class="attr">scoped</span>&gt;</span><span class="language-css"></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"><span class="selector-class">.user</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">min-height</span>: <span class="number">100vh</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">background-color</span>: <span class="number">#f7f7f7</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">padding-bottom</span>: <span class="number">50px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"><span class="selector-class">.head-page</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">height</span>: <span class="number">130px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">&quot;http://cba.itlike.com/public/mweb/static/background/user-header2.png&quot;</span>);</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">background-size</span>: cover;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">display</span>: flex;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">align-items</span>: center;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="selector-class">.head-img</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">width</span>: <span class="number">50px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">height</span>: <span class="number">50px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">overflow</span>: hidden;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">10px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="selector-tag">img</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">width</span>: <span class="number">100%</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">height</span>: <span class="number">100%</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">object-fit</span>: cover;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"><span class="selector-class">.info</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="selector-class">.mobile</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">margin-bottom</span>: <span class="number">5px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">color</span>: <span class="number">#c59a46</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">font-size</span>: <span class="number">18px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">font-weight</span>: bold;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="selector-class">.vip</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">display</span>: inline-block;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">background-color</span>: <span class="number">#3c3c3c</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">padding</span>: <span class="number">3px</span> <span class="number">5px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">color</span>: <span class="number">#e0d3b6</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">font-size</span>: <span class="number">14px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="selector-class">.van-icon</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">font-weight</span>: bold;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">color</span>: <span class="number">#ffb632</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"><span class="selector-class">.my-asset</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">display</span>: flex;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">padding</span>: <span class="number">20px</span> <span class="number">0</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">font-size</span>: <span class="number">14px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="selector-class">.asset-left</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">display</span>: flex;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">justify-content</span>: space-evenly;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">flex</span>: <span class="number">3</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="selector-class">.asset-left-item</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">display</span>: flex;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">flex-direction</span>: column;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">justify-content</span>: center;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">align-items</span>: center;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="selector-tag">span</span><span class="selector-pseudo">:first-child</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">        <span class="attribute">margin-bottom</span>: <span class="number">5px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">        <span class="attribute">color</span>: <span class="number">#ff0000</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">        <span class="attribute">font-size</span>: <span class="number">16px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="selector-class">.asset-right</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">flex</span>: <span class="number">1</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="selector-class">.asset-right-item</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">display</span>: flex;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">flex-direction</span>: column;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">justify-content</span>: center;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">align-items</span>: center;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="selector-class">.van-icon</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">        <span class="attribute">font-size</span>: <span class="number">24px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">        <span class="attribute">margin-bottom</span>: <span class="number">5px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"><span class="selector-class">.order-navbar</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">display</span>: flex;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">padding</span>: <span class="number">15px</span> <span class="number">0</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">margin</span>: <span class="number">10px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">font-size</span>: <span class="number">14px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="selector-class">.order-navbar-item</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">display</span>: flex;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">flex-direction</span>: column;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">justify-content</span>: center;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">align-items</span>: center;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">width</span>: <span class="number">25%</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="selector-class">.van-icon</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">font-size</span>: <span class="number">24px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">margin-bottom</span>: <span class="number">5px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"><span class="selector-class">.service</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">font-size</span>: <span class="number">14px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="attribute">margin</span>: <span class="number">10px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="selector-class">.title</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">height</span>: <span class="number">50px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">line-height</span>: <span class="number">50px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">15px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">font-size</span>: <span class="number">16px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="selector-class">.content</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">display</span>: flex;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">justify-content</span>: flex-start;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">flex-wrap</span>: wrap;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">font-size</span>: <span class="number">14px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="selector-class">.content-item</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">display</span>: flex;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">flex-direction</span>: column;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">justify-content</span>: center;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">align-items</span>: center;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">width</span>: <span class="number">25%</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">margin-bottom</span>: <span class="number">20px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="selector-class">.van-icon</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">        <span class="attribute">font-size</span>: <span class="number">24px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">        <span class="attribute">margin-bottom</span>: <span class="number">5px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">        <span class="attribute">color</span>: <span class="number">#ff3800</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"><span class="selector-class">.logout-btn</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="selector-tag">button</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">width</span>: <span class="number">60%</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">margin</span>: <span class="number">10px</span> auto;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">display</span>: block;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">font-size</span>: <span class="number">13px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">color</span>: <span class="number">#616161</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">border-radius</span>: <span class="number">9px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#dcdcdc</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">padding</span>: <span class="number">7px</span> <span class="number">0</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">text-align</span>: center;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">background-color</span>: <span class="number">#fafafa</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure>



<h2 id="51-个人中心-退出功能"><a href="#51-个人中心-退出功能" class="headerlink" title="51. 个人中心 - 退出功能"></a>51. 个人中心 - 退出功能</h2><p>1 注册点击事件</p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">&lt;button @click=<span class="string">&quot;logout&quot;</span>&gt;退出登录&lt;/button&gt;</span><br></pre></td></tr></table></figure>

<p>2 提供方法</p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="attr">methods</span>: &#123;</span><br><span class="line">  <span class="title function_">logout</span> () &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">$dialog</span>.<span class="title function_">confirm</span>(&#123;</span><br><span class="line">      <span class="attr">title</span>: <span class="string">&#x27;温馨提示&#x27;</span>,</span><br><span class="line">      <span class="attr">message</span>: <span class="string">&#x27;你确认要退出么？&#x27;</span></span><br><span class="line">    &#125;)</span><br><span class="line">      .<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$store</span>.<span class="title function_">dispatch</span>(<span class="string">&#x27;user/logout&#x27;</span>)</span><br><span class="line">      &#125;)</span><br><span class="line">      .<span class="title function_">catch</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line"></span><br><span class="line">      &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="attr">actions</span>: &#123;</span><br><span class="line">  <span class="title function_">logout</span> (context) &#123;</span><br><span class="line">    context.<span class="title function_">commit</span>(<span class="string">&#x27;setUserInfo&#x27;</span>, &#123;&#125;)</span><br><span class="line">    context.<span class="title function_">commit</span>(<span class="string">&#x27;cart/setCartList&#x27;</span>, [], &#123; <span class="attr">root</span>: <span class="literal">true</span> &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>









<h2 id="52-项目打包优化"><a href="#52-项目打包优化" class="headerlink" title="52. 项目打包优化"></a>52. 项目打包优化</h2><p>vue脚手架只是开发过程中，协助开发的工具，当真正开发完了 &#x3D;&gt; 脚手架不参与上线</p>
<p>参与上线的是 &#x3D;&gt; 打包后的源代码</p>
<p>打包：</p>
<ul>
<li>将多个文件压缩合并成一个文件</li>
<li>语法降级</li>
<li>less sass ts 语法解析, 解析成css</li>
<li>….</li>
</ul>
<p>打包后，可以生成，浏览器能够直接运行的网页 &#x3D;&gt; 就是需要上线的源码！</p>
<h3 id="1-打包命令"><a href="#1-打包命令" class="headerlink" title="(1) 打包命令"></a>(1) 打包命令</h3><p>vue脚手架工具已经提供了打包命令，直接使用即可。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yarn build</span><br></pre></td></tr></table></figure>

<p>在项目的根目录会自动创建一个文件夹<code>dist</code>,dist中的文件就是打包后的文件，只需要放到服务器中即可。</p>
<h3 id="2-配置publicPath"><a href="#2-配置publicPath" class="headerlink" title="(2) 配置publicPath"></a>(2) 配置publicPath</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="comment">// 设置获取.js,.css文件时，是以相对地址为基准的。</span></span><br><span class="line">  <span class="comment">// https://cli.vuejs.org/zh/config/#publicpath</span></span><br><span class="line">  <span class="attr">publicPath</span>: <span class="string">&#x27;./&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="3-路由懒加载"><a href="#3-路由懒加载" class="headerlink" title="(3) 路由懒加载"></a>(3) 路由懒加载</h3><p>路由懒加载 &amp; 异步组件， 不会一上来就将所有的组件都加载，而是访问到对应的路由了，才加载解析这个路由对应的所有组件</p>
<p>官网链接：<a href="https://router.vuejs.org/zh/guide/advanced/lazy-loading.html#%E4%BD%BF%E7%94%A8-webpack">https://router.vuejs.org/zh/guide/advanced/lazy-loading.html#%E4%BD%BF%E7%94%A8-webpack</a></p>
<blockquote>
<p>当打包构建应用时，JavaScript 包会变得非常大，影响页面加载。如果我们能把不同路由对应的组件分割成不同的代码块，然后当路由被访问的时候才加载对应组件，这样就更加高效了。</p>
</blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">ProDetail</span> = (<span class="params"></span>) =&gt; <span class="keyword">import</span>(<span class="string">&#x27;@/views/prodetail&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">Pay</span> = (<span class="params"></span>) =&gt; <span class="keyword">import</span>(<span class="string">&#x27;@/views/pay&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">MyOrder</span> = (<span class="params"></span>) =&gt; <span class="keyword">import</span>(<span class="string">&#x27;@/views/myorder&#x27;</span>)</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>前端</category>
        <category>Vue</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>Vue2.0</tag>
        <tag>项目实践</tag>
      </tags>
  </entry>
  <entry>
    <title>小兔鲜-Vue3</title>
    <url>/2024/11/19/%E5%B0%8F%E5%85%94%E9%B2%9C-Vue3/</url>
    <content><![CDATA[<h1 id="什么是pinia"><a href="#什么是pinia" class="headerlink" title="什么是pinia"></a>什么是pinia</h1><p>Pinia 是 Vue 的专属状态管理库，可以实现跨组件或页面共享状态，是 vuex 状态管理工具的替代品，和 Vuex相比，具备以下优势</p>
<ol>
<li>提供更加简单的API （去掉了 mutation ）</li>
<li>提供符合组合式API风格的API （和 Vue3 新语法统一）</li>
<li>去掉了modules的概念，每一个store都是一个独立的模块</li>
<li>搭配 TypeScript 一起使用提供可靠的类型推断</li>
</ol>
<h1 id="创建空Vue项目并安装Pinia"><a href="#创建空Vue项目并安装Pinia" class="headerlink" title="创建空Vue项目并安装Pinia"></a>创建空Vue项目并安装Pinia</h1><h3 id="1-创建空Vue项目"><a href="#1-创建空Vue项目" class="headerlink" title="1. 创建空Vue项目"></a>1. 创建空Vue项目</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm init vue@latest</span><br></pre></td></tr></table></figure>

<h3 id="2-安装Pinia并注册"><a href="#2-安装Pinia并注册" class="headerlink" title="2. 安装Pinia并注册"></a>2. 安装Pinia并注册</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm i pinia</span><br></pre></td></tr></table></figure>

<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createPinia &#125; <span class="keyword">from</span> <span class="string">&#x27;pinia&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">createApp</span>(<span class="title class_">App</span>)</span><br><span class="line"><span class="comment">// 以插件的形式注册</span></span><br><span class="line">app.<span class="title function_">use</span>(<span class="title function_">createPinia</span>())</span><br><span class="line">app.<span class="title function_">use</span>(router)</span><br><span class="line">app.<span class="title function_">mount</span>(<span class="string">&#x27;#app&#x27;</span>)</span><br></pre></td></tr></table></figure>

<h1 id="实现counter"><a href="#实现counter" class="headerlink" title="实现counter"></a>实现counter</h1><blockquote>
<p>核心步骤：</p>
<ol>
<li>定义store</li>
<li>组件使用store</li>
</ol>
</blockquote>
<p>1- 定义store</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; defineStore &#125; <span class="keyword">from</span> <span class="string">&#x27;pinia&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; ref &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> useCounterStore = <span class="title function_">defineStore</span>(<span class="string">&#x27;counter&#x27;</span>, <span class="function">()=&gt;</span>&#123;</span><br><span class="line">  <span class="comment">// 数据 （state）</span></span><br><span class="line">  <span class="keyword">const</span> count = <span class="title function_">ref</span>(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 修改数据的方法 （action）</span></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">increment</span> = (<span class="params"></span>)=&gt;&#123;</span><br><span class="line">    count.<span class="property">value</span>++</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 以对象形式返回</span></span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    count,</span><br><span class="line">    increment</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>2- 组件使用store</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">  // 1. 导入use方法</span><br><span class="line">	import &#123; useCounterStore &#125; from &#x27;@/stores/counter&#x27;</span><br><span class="line">  // 2. 执行方法得到store store里有数据和方法</span><br><span class="line">  const counterStore = useCounterStore()</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">	&lt;button @click=&quot;counterStore.increment&quot;&gt;</span><br><span class="line">    &#123;&#123; counterStore.count &#125;&#125;</span><br><span class="line">  &lt;/button&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure>

<h1 id="实现getters"><a href="#实现getters" class="headerlink" title="实现getters"></a>实现getters</h1><blockquote>
<p>getters直接使用计算属性即可实现</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 数据（state）</span></span><br><span class="line"><span class="keyword">const</span> count = <span class="title function_">ref</span>(<span class="number">0</span>)</span><br><span class="line"><span class="comment">// getter (computed)</span></span><br><span class="line"><span class="keyword">const</span> doubleCount = <span class="title function_">computed</span>(<span class="function">() =&gt;</span> count.<span class="property">value</span> * <span class="number">2</span>)</span><br></pre></td></tr></table></figure>

<h1 id="异步action"><a href="#异步action" class="headerlink" title="异步action"></a>异步action</h1><blockquote>
<p>思想：action函数既支持同步也支持异步，和在组件中发送网络请求写法保持一致<br>步骤：</p>
<ol>
<li>store中定义action</li>
<li>组件中触发action</li>
</ol>
</blockquote>
<p>1- store中定义action</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="variable constant_">API_URL</span> = <span class="string">&#x27;http://geek.itheima.net/v1_0/channels&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> useCounterStore = <span class="title function_">defineStore</span>(<span class="string">&#x27;counter&#x27;</span>, <span class="function">()=&gt;</span>&#123;</span><br><span class="line">  <span class="comment">// 数据</span></span><br><span class="line">  <span class="keyword">const</span> list = <span class="title function_">ref</span>([])</span><br><span class="line">  <span class="comment">// 异步action</span></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">loadList</span> = <span class="keyword">async</span> (<span class="params"></span>)=&gt;&#123;</span><br><span class="line">    <span class="keyword">const</span> res = <span class="keyword">await</span> axios.<span class="title function_">get</span>(<span class="variable constant_">API_URL</span>)</span><br><span class="line">    list.<span class="property">value</span> = res.<span class="property">data</span>.<span class="property">data</span>.<span class="property">channels</span></span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    list,</span><br><span class="line">    loadList</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<p>2- 组件中调用action</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">	import &#123; useCounterStore &#125; from &#x27;@/stores/counter&#x27;</span><br><span class="line">  const counterStore = useCounterStore()</span><br><span class="line">  // 调用异步action</span><br><span class="line">  counterStore.loadList()</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">	&lt;ul&gt;</span><br><span class="line">    &lt;li v-for=&quot;item in counterStore.list&quot; :key=&quot;item.id&quot;&gt;&#123;&#123; item.name &#125;&#125;&lt;/li&gt;</span><br><span class="line">  &lt;/ul&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure>

<h1 id="storeToRefs保持响应式解构"><a href="#storeToRefs保持响应式解构" class="headerlink" title="storeToRefs保持响应式解构"></a>storeToRefs保持响应式解构</h1><blockquote>
<p>直接基于store进行解构赋值，响应式数据（state和getter）会丢失响应式特性，使用storeToRefs辅助保持响应式</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">  import &#123; storeToRefs &#125; from &#x27;pinia&#x27;</span><br><span class="line">	import &#123; useCounterStore &#125; from &#x27;@/stores/counter&#x27;</span><br><span class="line">  const counterStore = useCounterStore()</span><br><span class="line">  // 使用它storeToRefs包裹之后解构保持响应式</span><br><span class="line">  const &#123; count &#125; = storeToRefs(counterStore)</span><br><span class="line"></span><br><span class="line">  const &#123; increment &#125; = counterStore</span><br><span class="line">  </span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">	&lt;button @click=&quot;increment&quot;&gt;</span><br><span class="line">    &#123;&#123; count &#125;&#125;</span><br><span class="line">  &lt;/button&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure>


<h1 id="创建项目并整理目录"><a href="#创建项目并整理目录" class="headerlink" title="创建项目并整理目录"></a>创建项目并整理目录</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm init vue@latest</span><br></pre></td></tr></table></figure>

<p><img data-src="https://cdn.nlark.com/yuque/0/2022/png/274425/1670247123883-f43f81f8-7600-4fd7-aa82-2751d9032a54.png#averageHue=%23212120&clientId=ufebee43b-b163-4&from=paste&height=494&id=u1b534575&name=image.png&originHeight=659&originWidth=1280&originalType=binary&ratio=1&rotation=0&showTitle=false&size=3380277&status=done&style=none&taskId=ud39028ba-b1d4-47ed-adf7-79865628edd&title=&width=960" alt="image.png"></p>
<h1 id="jsconfig-json配置别名路径"><a href="#jsconfig-json配置别名路径" class="headerlink" title="jsconfig.json配置别名路径"></a>jsconfig.json配置别名路径</h1><blockquote>
<p>配置别名路径可以在写代码时联想提示路径</p>
</blockquote>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;compilerOptions&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;baseUrl&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;./&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;paths&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;@/*&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="string">&quot;src/*&quot;</span><span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<h1 id="elementPlus引入"><a href="#elementPlus引入" class="headerlink" title="elementPlus引入"></a>elementPlus引入</h1><h2 id="1-安装elementPlus和自动导入插件"><a href="#1-安装elementPlus和自动导入插件" class="headerlink" title="1. 安装elementPlus和自动导入插件"></a>1. 安装elementPlus和自动导入插件</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm i elementPlus</span><br><span class="line">npm install -D unplugin-vue-components unplugin-auto-import</span><br></pre></td></tr></table></figure>

<h2 id="2-配置自动按需导入"><a href="#2-配置自动按需导入" class="headerlink" title="2. 配置自动按需导入"></a>2. 配置自动按需导入</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 引入插件</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">AutoImport</span> <span class="keyword">from</span> <span class="string">&#x27;unplugin-auto-import/vite&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Components</span> <span class="keyword">from</span> <span class="string">&#x27;unplugin-vue-components/vite&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ElementPlusResolver</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;unplugin-vue-components/resolvers&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">defineConfig</span>(&#123;</span><br><span class="line">  <span class="attr">plugins</span>: [</span><br><span class="line">    <span class="comment">// 配置插件</span></span><br><span class="line">    <span class="title class_">AutoImport</span>(&#123;</span><br><span class="line">      <span class="attr">resolvers</span>: [<span class="title class_">ElementPlusResolver</span>()],</span><br><span class="line">    &#125;),</span><br><span class="line">    <span class="title class_">Components</span>(&#123;</span><br><span class="line">      <span class="attr">resolvers</span>: [<span class="title class_">ElementPlusResolver</span>()],</span><br><span class="line">    &#125;),</span><br><span class="line">  ]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h2 id="3-测试组件"><a href="#3-测试组件" class="headerlink" title="3. 测试组件"></a>3. 测试组件</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;el-button type=&quot;primary&quot;&gt;i am button&lt;/el-button&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure>

<h1 id="定制elementPlus主题"><a href="#定制elementPlus主题" class="headerlink" title="定制elementPlus主题"></a>定制elementPlus主题</h1><h2 id="1-安装sass"><a href="#1-安装sass" class="headerlink" title="1. 安装sass"></a>1. 安装sass</h2><blockquote>
<p>基于vite的项目默认不支持css预处理器，需要开发者单独安装</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm i sass -D</span><br></pre></td></tr></table></figure>

<h2 id="2-准备定制化的样式文件"><a href="#2-准备定制化的样式文件" class="headerlink" title="2. 准备定制化的样式文件"></a>2. 准备定制化的样式文件</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 只需要重写你需要的即可 */</span></span><br><span class="line">@forward <span class="string">&#x27;element-plus/theme-chalk/src/common/var.scss&#x27;</span> <span class="title function_">with</span> (</span><br><span class="line">  <span class="attr">$colors</span>: (</span><br><span class="line">    <span class="string">&#x27;primary&#x27;</span>: (</span><br><span class="line">      <span class="comment">// 主色</span></span><br><span class="line">      <span class="string">&#x27;base&#x27;</span>: #27ba9b,</span><br><span class="line">    ),</span><br><span class="line">    <span class="string">&#x27;success&#x27;</span>: (</span><br><span class="line">      <span class="comment">// 成功色</span></span><br><span class="line">      <span class="string">&#x27;base&#x27;</span>: #1dc779,</span><br><span class="line">    ),</span><br><span class="line">    <span class="string">&#x27;warning&#x27;</span>: (</span><br><span class="line">      <span class="comment">// 警告色</span></span><br><span class="line">      <span class="string">&#x27;base&#x27;</span>: #ffb302,</span><br><span class="line">    ),</span><br><span class="line">    <span class="string">&#x27;danger&#x27;</span>: (</span><br><span class="line">      <span class="comment">// 危险色</span></span><br><span class="line">      <span class="string">&#x27;base&#x27;</span>: #e26237,</span><br><span class="line">    ),</span><br><span class="line">    <span class="string">&#x27;error&#x27;</span>: (</span><br><span class="line">      <span class="comment">// 错误色</span></span><br><span class="line">      <span class="string">&#x27;base&#x27;</span>: #cf4444,</span><br><span class="line">    ),</span><br><span class="line">  )</span><br><span class="line">)</span><br></pre></td></tr></table></figure>

<h2 id="3-自动导入配置"><a href="#3-自动导入配置" class="headerlink" title="3. 自动导入配置"></a>3. 自动导入配置</h2><blockquote>
<p>这里自动导入需要深入到elementPlus的组件中，按照官方的配置文档来</p>
<ol>
<li>自动导入定制化样式文件进行样式覆盖</li>
<li>按需定制主题配置 （需要安装 unplugin-element-plus）</li>
</ol>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; fileURLToPath, <span class="variable constant_">URL</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;node:url&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; defineConfig &#125; <span class="keyword">from</span> <span class="string">&#x27;vite&#x27;</span></span><br><span class="line"><span class="keyword">import</span> vue <span class="keyword">from</span> <span class="string">&#x27;@vitejs/plugin-vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">AutoImport</span> <span class="keyword">from</span> <span class="string">&#x27;unplugin-auto-import/vite&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Components</span> <span class="keyword">from</span> <span class="string">&#x27;unplugin-vue-components/vite&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ElementPlusResolver</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;unplugin-vue-components/resolvers&#x27;</span></span><br><span class="line"><span class="comment">// 导入对应包</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">ElementPlus</span> <span class="keyword">from</span> <span class="string">&#x27;unplugin-element-plus/vite&#x27;</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">defineConfig</span>(&#123;</span><br><span class="line">  <span class="attr">plugins</span>: [</span><br><span class="line">    <span class="title function_">vue</span>(),</span><br><span class="line">    <span class="title class_">AutoImport</span>(&#123;</span><br><span class="line">      <span class="attr">resolvers</span>: [<span class="title class_">ElementPlusResolver</span>()],</span><br><span class="line">    &#125;),</span><br><span class="line">      <span class="comment">//配置elementPlus采用sass配色系统</span></span><br><span class="line">    <span class="title class_">Components</span>(&#123;</span><br><span class="line">      <span class="attr">resolvers</span>: [<span class="title class_">ElementPlusResolver</span>(&#123;<span class="attr">importStyle</span>:<span class="string">&quot;sass&quot;</span>&#125;)],</span><br><span class="line">    &#125;),</span><br><span class="line">    <span class="comment">// 按需定制主题配置</span></span><br><span class="line">    <span class="comment">/*ElementPlus(&#123;</span></span><br><span class="line"><span class="comment">      useSource: true,</span></span><br><span class="line"><span class="comment">    &#125;),*/</span></span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">resolve</span>: &#123;</span><br><span class="line">    <span class="attr">alias</span>: &#123;</span><br><span class="line">      <span class="string">&#x27;@&#x27;</span>: <span class="title function_">fileURLToPath</span>(<span class="keyword">new</span> <span class="title function_">URL</span>(<span class="string">&#x27;./src&#x27;</span>, <span class="keyword">import</span>.<span class="property">meta</span>.<span class="property">url</span>))</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">css</span>: &#123;</span><br><span class="line">    <span class="attr">preprocessorOptions</span>: &#123;</span><br><span class="line">      <span class="attr">scss</span>: &#123;</span><br><span class="line">        <span class="comment">// 自动导入定制化样式文件进行样式覆盖</span></span><br><span class="line">        <span class="attr">additionalData</span>: <span class="string">`</span></span><br><span class="line"><span class="string">          @use &quot;@/styles/element/index.scss&quot; as *;</span></span><br><span class="line"><span class="string">        `</span>,</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h1 id="axios安装并简单封装"><a href="#axios安装并简单封装" class="headerlink" title="axios安装并简单封装"></a>axios安装并简单封装</h1><h2 id="1-安装axios"><a href="#1-安装axios" class="headerlink" title="1. 安装axios"></a>1. 安装axios</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm i axios</span><br></pre></td></tr></table></figure>

<h2 id="2-基础配置"><a href="#2-基础配置" class="headerlink" title="2. 基础配置"></a>2. 基础配置</h2><blockquote>
<p>官方文档地址：<a href="https://axios-http.com/zh/docs/intro">https://axios-http.com/zh/docs/intro</a><br>基础配置通常包括：</p>
<ol>
<li>实例化 - baseURL + timeout</li>
<li>拦截器 - 携带token 401拦截等</li>
</ol>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&#x27;axios&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建axios实例</span></span><br><span class="line"><span class="keyword">const</span> http = axios.<span class="title function_">create</span>(&#123;</span><br><span class="line">  <span class="attr">baseURL</span>: <span class="string">&#x27;http://pcapi-xiaotuxian-front-devtest.itheima.net&#x27;</span>,</span><br><span class="line">  <span class="attr">timeout</span>: <span class="number">5000</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// axios请求拦截器</span></span><br><span class="line">instance.<span class="property">interceptors</span>.<span class="property">request</span>.<span class="title function_">use</span>(<span class="function"><span class="params">config</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> config</span><br><span class="line">&#125;, <span class="function"><span class="params">e</span> =&gt;</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(e))</span><br><span class="line"></span><br><span class="line"><span class="comment">// axios响应式拦截器</span></span><br><span class="line">instance.<span class="property">interceptors</span>.<span class="property">response</span>.<span class="title function_">use</span>(<span class="function"><span class="params">res</span> =&gt;</span> res.<span class="property">data</span>, <span class="function"><span class="params">e</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(e)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> http</span><br></pre></td></tr></table></figure>

<h2 id="3-封装请求函数并测试"><a href="#3-封装请求函数并测试" class="headerlink" title="3. 封装请求函数并测试"></a>3. 封装请求函数并测试</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> http <span class="keyword">from</span> <span class="string">&#x27;@/utils/http&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">getCategoryAPI</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">http</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">&#x27;home/category/head&#x27;</span></span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="路由整体设计"><a href="#路由整体设计" class="headerlink" title="路由整体设计"></a>路由整体设计</h1><p>路由设计原则：找页面的切换方式，如果是整体切换，则为一级路由，如果是在一级路由的内部进行的内容切换，则为二级路由</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  我是登录页</span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  我是首页</span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  我是home</span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  我是分类</span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// createRouter：创建router实例对象</span></span><br><span class="line"><span class="comment">// createWebHistory：创建history模式的路由</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; createRouter, createWebHistory &#125; <span class="keyword">from</span> <span class="string">&#x27;vue-router&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Login</span> <span class="keyword">from</span> <span class="string">&#x27;@/views/Login/index.vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Layout</span> <span class="keyword">from</span> <span class="string">&#x27;@/views/Layout/index.vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Home</span> <span class="keyword">from</span> <span class="string">&#x27;@/views/Home/index.vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Category</span> <span class="keyword">from</span> <span class="string">&#x27;@/views/Category/index.vue&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> router = <span class="title function_">createRouter</span>(&#123;</span><br><span class="line">  <span class="attr">history</span>: <span class="title function_">createWebHistory</span>(<span class="keyword">import</span>.<span class="property">meta</span>.<span class="property">env</span>.<span class="property">BASE_URL</span>),</span><br><span class="line">  <span class="comment">// path和component对应关系的位置</span></span><br><span class="line">  <span class="attr">routes</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&#x27;/&#x27;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="title class_">Layout</span>,</span><br><span class="line">      <span class="attr">children</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="comment">//path配置项置空的二级路由为默认二级路由，访问一级路由时会访问该路由</span></span><br><span class="line">          <span class="attr">path</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">          <span class="attr">component</span>: <span class="title class_">Home</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">path</span>: <span class="string">&#x27;category&#x27;</span>,</span><br><span class="line">          <span class="attr">component</span>: <span class="title class_">Category</span></span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&#x27;/login&#x27;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="title class_">Login</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router</span><br></pre></td></tr></table></figure>

<h1 id="静态资源引入和Error-Lens安装"><a href="#静态资源引入和Error-Lens安装" class="headerlink" title="静态资源引入和Error Lens安装"></a>静态资源引入和Error Lens安装</h1><h2 id="1-静态资源引入"><a href="#1-静态资源引入" class="headerlink" title="1. 静态资源引入"></a>1. 静态资源引入</h2><ol>
<li>图片资源 - 把 images 文件夹放到 assets 目录下</li>
<li>样式资源 - 把 common.scss 文件放到 styles 目录下</li>
</ol>
<h2 id="2-Error-Lens插件安装"><a href="#2-Error-Lens插件安装" class="headerlink" title="2. Error Lens插件安装"></a>2. Error Lens插件安装</h2><p><img data-src="https://cdn.nlark.com/yuque/0/2023/png/274425/1677637778086-7314f9de-8130-4388-9fc3-0cf4c59b8454.png#averageHue=%232a2e36&clientId=u68bde7ec-09c8-4&from=paste&height=196&id=udc027a23&name=image.png&originHeight=392&originWidth=1528&originalType=binary&ratio=2&rotation=0&showTitle=false&size=87943&status=done&style=none&taskId=ue37b0611-a082-4595-9dde-66e51632ef7&title=&width=764" alt="image.png"></p>
<h1 id="scss变量自动导入"><a href="#scss变量自动导入" class="headerlink" title="scss变量自动导入"></a>scss变量自动导入</h1><figure class="highlight css"><table><tr><td class="code"><pre><span class="line">$xtxColor: <span class="number">#27ba9b</span>;</span><br><span class="line">$helpColor: <span class="number">#e26237</span>;</span><br><span class="line">$sucColor: <span class="number">#1dc779</span>;</span><br><span class="line">$warnColor: <span class="number">#ffb302</span>;</span><br><span class="line">$priceColor: <span class="number">#cf4444</span>;</span><br></pre></td></tr></table></figure>

<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">css<span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    preprocessorOptions<span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      scss<span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="comment">// 自动导入scss文件</span></span><br><span class="line">        additionalData<span class="punctuation">:</span> `</span><br><span class="line">          @use <span class="string">&quot;@/styles/element/index.scss&quot;</span> as *;</span><br><span class="line">          @use <span class="string">&quot;@/styles/var.scss&quot;</span> as *;</span><br><span class="line">        `<span class="punctuation">,</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>



<h1 id="组件结构快速搭建"><a href="#组件结构快速搭建" class="headerlink" title="组件结构快速搭建"></a>组件结构快速搭建</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;nav class=&quot;app-topnav&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;container&quot;&gt;</span><br><span class="line">      &lt;ul&gt;</span><br><span class="line">        &lt;template v-if=&quot;true&quot;&gt;</span><br><span class="line">          &lt;li&gt;&lt;a href=&quot;javascript:;&quot;&gt;&lt;i class=&quot;iconfont icon-user&quot;&gt;&lt;/i&gt;周杰伦&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">          &lt;li&gt;</span><br><span class="line">            &lt;el-popconfirm title=&quot;确认退出吗?&quot; confirm-button-text=&quot;确认&quot; cancel-button-text=&quot;取消&quot;&gt;</span><br><span class="line">              &lt;template #reference&gt;</span><br><span class="line">                &lt;a href=&quot;javascript:;&quot;&gt;退出登录&lt;/a&gt;</span><br><span class="line">              &lt;/template&gt;</span><br><span class="line">            &lt;/el-popconfirm&gt;</span><br><span class="line">          &lt;/li&gt;</span><br><span class="line">          &lt;li&gt;&lt;a href=&quot;javascript:;&quot;&gt;我的订单&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">          &lt;li&gt;&lt;a href=&quot;javascript:;&quot;&gt;会员中心&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">        &lt;/template&gt;</span><br><span class="line">        &lt;template v-else&gt;</span><br><span class="line">          &lt;li&gt;&lt;a href=&quot;javascript:;&quot;&gt;请先登录&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">          &lt;li&gt;&lt;a href=&quot;javascript:;&quot;&gt;帮助中心&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">          &lt;li&gt;&lt;a href=&quot;javascript:;&quot;&gt;关于我们&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">        &lt;/template&gt;</span><br><span class="line">      &lt;/ul&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/nav&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;style scoped lang=&quot;scss&quot;&gt;</span><br><span class="line">.app-topnav &#123;</span><br><span class="line">  background: #333;</span><br><span class="line">  ul &#123;</span><br><span class="line">    display: flex;</span><br><span class="line">    height: 53px;</span><br><span class="line">    justify-content: flex-end;</span><br><span class="line">    align-items: center;</span><br><span class="line">    li &#123;</span><br><span class="line">      a &#123;</span><br><span class="line">        padding: 0 15px;</span><br><span class="line">        color: #cdcdcd;</span><br><span class="line">        line-height: 1;</span><br><span class="line">        display: inline-block;</span><br><span class="line"></span><br><span class="line">        i &#123;</span><br><span class="line">          font-size: 14px;</span><br><span class="line">          margin-right: 2px;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        &amp;:hover &#123;</span><br><span class="line">          color: $xtxColor;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      ~li &#123;</span><br><span class="line">        a &#123;</span><br><span class="line">          border-left: 2px solid #666;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;header class=&#x27;app-header&#x27;&gt;</span><br><span class="line">    &lt;div class=&quot;container&quot;&gt;</span><br><span class="line">      &lt;h1 class=&quot;logo&quot;&gt;</span><br><span class="line">        &lt;RouterLink to=&quot;/&quot;&gt;小兔鲜&lt;/RouterLink&gt;</span><br><span class="line">      &lt;/h1&gt;</span><br><span class="line">      &lt;ul class=&quot;app-header-nav&quot;&gt;</span><br><span class="line">        &lt;li class=&quot;home&quot;&gt;</span><br><span class="line">          &lt;RouterLink to=&quot;/&quot;&gt;首页&lt;/RouterLink&gt;</span><br><span class="line">        &lt;/li&gt;</span><br><span class="line">        &lt;li&gt; &lt;RouterLink to=&quot;/&quot;&gt;居家&lt;/RouterLink&gt; &lt;/li&gt;</span><br><span class="line">        &lt;li&gt; &lt;RouterLink to=&quot;/&quot;&gt;美食&lt;/RouterLink&gt; &lt;/li&gt;</span><br><span class="line">        &lt;li&gt; &lt;RouterLink to=&quot;/&quot;&gt;服饰&lt;/RouterLink&gt; &lt;/li&gt;</span><br><span class="line">      &lt;/ul&gt;</span><br><span class="line">      &lt;div class=&quot;search&quot;&gt;</span><br><span class="line">        &lt;i class=&quot;iconfont icon-search&quot;&gt;&lt;/i&gt;</span><br><span class="line">        &lt;input type=&quot;text&quot; placeholder=&quot;搜一搜&quot;&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;!-- 头部购物车 --&gt;</span><br><span class="line">      </span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/header&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;style scoped lang=&#x27;scss&#x27;&gt;</span><br><span class="line">.app-header &#123;</span><br><span class="line">  background: #fff;</span><br><span class="line"></span><br><span class="line">  .container &#123;</span><br><span class="line">    display: flex;</span><br><span class="line">    align-items: center;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .logo &#123;</span><br><span class="line">    width: 200px;</span><br><span class="line"></span><br><span class="line">    a &#123;</span><br><span class="line">      display: block;</span><br><span class="line">      height: 132px;</span><br><span class="line">      width: 100%;</span><br><span class="line">      text-indent: -9999px;</span><br><span class="line">      background: url(&#x27;@/assets/images/logo.png&#x27;) no-repeat center 18px / contain;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .app-header-nav &#123;</span><br><span class="line">    width: 820px;</span><br><span class="line">    display: flex;</span><br><span class="line">    padding-left: 40px;</span><br><span class="line">    position: relative;</span><br><span class="line">    z-index: 998;</span><br><span class="line">  </span><br><span class="line">    li &#123;</span><br><span class="line">      margin-right: 40px;</span><br><span class="line">      width: 38px;</span><br><span class="line">      text-align: center;</span><br><span class="line">  </span><br><span class="line">      a &#123;</span><br><span class="line">        font-size: 16px;</span><br><span class="line">        line-height: 32px;</span><br><span class="line">        height: 32px;</span><br><span class="line">        display: inline-block;</span><br><span class="line">  </span><br><span class="line">        &amp;:hover &#123;</span><br><span class="line">          color: $xtxColor;</span><br><span class="line">          border-bottom: 1px solid $xtxColor;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">  </span><br><span class="line">      .active &#123;</span><br><span class="line">        color: $xtxColor;</span><br><span class="line">        border-bottom: 1px solid $xtxColor;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .search &#123;</span><br><span class="line">    width: 170px;</span><br><span class="line">    height: 32px;</span><br><span class="line">    position: relative;</span><br><span class="line">    border-bottom: 1px solid #e7e7e7;</span><br><span class="line">    line-height: 32px;</span><br><span class="line"></span><br><span class="line">    .icon-search &#123;</span><br><span class="line">      font-size: 18px;</span><br><span class="line">      margin-left: 5px;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    input &#123;</span><br><span class="line">      width: 140px;</span><br><span class="line">      padding-left: 5px;</span><br><span class="line">      color: #666;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .cart &#123;</span><br><span class="line">    width: 50px;</span><br><span class="line"></span><br><span class="line">    .curr &#123;</span><br><span class="line">      height: 32px;</span><br><span class="line">      line-height: 32px;</span><br><span class="line">      text-align: center;</span><br><span class="line">      position: relative;</span><br><span class="line">      display: block;</span><br><span class="line"></span><br><span class="line">      .icon-cart &#123;</span><br><span class="line">        font-size: 22px;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      em &#123;</span><br><span class="line">        font-style: normal;</span><br><span class="line">        position: absolute;</span><br><span class="line">        right: 0;</span><br><span class="line">        top: 0;</span><br><span class="line">        padding: 1px 6px;</span><br><span class="line">        line-height: 1;</span><br><span class="line">        background: $helpColor;</span><br><span class="line">        color: #fff;</span><br><span class="line">        font-size: 12px;</span><br><span class="line">        border-radius: 10px;</span><br><span class="line">        font-family: Arial;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;footer class=&quot;app_footer&quot;&gt;</span><br><span class="line">    &lt;!-- 联系我们 --&gt;</span><br><span class="line">    &lt;div class=&quot;contact&quot;&gt;</span><br><span class="line">      &lt;div class=&quot;container&quot;&gt;</span><br><span class="line">        &lt;dl&gt;</span><br><span class="line">          &lt;dt&gt;客户服务&lt;/dt&gt;</span><br><span class="line">          &lt;dd&gt;&lt;i class=&quot;iconfont icon-kefu&quot;&gt;&lt;/i&gt; 在线客服&lt;/dd&gt;</span><br><span class="line">          &lt;dd&gt;&lt;i class=&quot;iconfont icon-question&quot;&gt;&lt;/i&gt; 问题反馈&lt;/dd&gt;</span><br><span class="line">        &lt;/dl&gt;</span><br><span class="line">        &lt;dl&gt;</span><br><span class="line">          &lt;dt&gt;关注我们&lt;/dt&gt;</span><br><span class="line">          &lt;dd&gt;&lt;i class=&quot;iconfont icon-weixin&quot;&gt;&lt;/i&gt; 公众号&lt;/dd&gt;</span><br><span class="line">          &lt;dd&gt;&lt;i class=&quot;iconfont icon-weibo&quot;&gt;&lt;/i&gt; 微博&lt;/dd&gt;</span><br><span class="line">        &lt;/dl&gt;</span><br><span class="line">        &lt;dl&gt;</span><br><span class="line">          &lt;dt&gt;下载APP&lt;/dt&gt;</span><br><span class="line">          &lt;dd class=&quot;qrcode&quot;&gt;&lt;img src=&quot;@/assets/images/qrcode.jpg&quot; /&gt;&lt;/dd&gt;</span><br><span class="line">          &lt;dd class=&quot;download&quot;&gt;</span><br><span class="line">            &lt;span&gt;扫描二维码&lt;/span&gt;</span><br><span class="line">            &lt;span&gt;立马下载APP&lt;/span&gt;</span><br><span class="line">            &lt;a href=&quot;javascript:;&quot;&gt;下载页面&lt;/a&gt;</span><br><span class="line">          &lt;/dd&gt;</span><br><span class="line">        &lt;/dl&gt;</span><br><span class="line">        &lt;dl&gt;</span><br><span class="line">          &lt;dt&gt;服务热线&lt;/dt&gt;</span><br><span class="line">          &lt;dd class=&quot;hotline&quot;&gt;400-0000-000 &lt;small&gt;周一至周日 8:00-18:00&lt;/small&gt;&lt;/dd&gt;</span><br><span class="line">        &lt;/dl&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;!-- 其它 --&gt;</span><br><span class="line">    &lt;div class=&quot;extra&quot;&gt;</span><br><span class="line">      &lt;div class=&quot;container&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;slogan&quot;&gt;</span><br><span class="line">          &lt;a href=&quot;javascript:;&quot;&gt;</span><br><span class="line">            &lt;i class=&quot;iconfont icon-footer01&quot;&gt;&lt;/i&gt;</span><br><span class="line">            &lt;span&gt;价格亲民&lt;/span&gt;</span><br><span class="line">          &lt;/a&gt;</span><br><span class="line">          &lt;a href=&quot;javascript:;&quot;&gt;</span><br><span class="line">            &lt;i class=&quot;iconfont icon-footer02&quot;&gt;&lt;/i&gt;</span><br><span class="line">            &lt;span&gt;物流快捷&lt;/span&gt;</span><br><span class="line">          &lt;/a&gt;</span><br><span class="line">          &lt;a href=&quot;javascript:;&quot;&gt;</span><br><span class="line">            &lt;i class=&quot;iconfont icon-footer03&quot;&gt;&lt;/i&gt;</span><br><span class="line">            &lt;span&gt;品质新鲜&lt;/span&gt;</span><br><span class="line">          &lt;/a&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;!-- 版权信息 --&gt;</span><br><span class="line">        &lt;div class=&quot;copyright&quot;&gt;</span><br><span class="line">          &lt;p&gt;</span><br><span class="line">            &lt;a href=&quot;javascript:;&quot;&gt;关于我们&lt;/a&gt;</span><br><span class="line">            &lt;a href=&quot;javascript:;&quot;&gt;帮助中心&lt;/a&gt;</span><br><span class="line">            &lt;a href=&quot;javascript:;&quot;&gt;售后服务&lt;/a&gt;</span><br><span class="line">            &lt;a href=&quot;javascript:;&quot;&gt;配送与验收&lt;/a&gt;</span><br><span class="line">            &lt;a href=&quot;javascript:;&quot;&gt;商务合作&lt;/a&gt;</span><br><span class="line">            &lt;a href=&quot;javascript:;&quot;&gt;搜索推荐&lt;/a&gt;</span><br><span class="line">            &lt;a href=&quot;javascript:;&quot;&gt;友情链接&lt;/a&gt;</span><br><span class="line">          &lt;/p&gt;</span><br><span class="line">          &lt;p&gt;CopyRight © 小兔鲜儿&lt;/p&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/footer&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped lang=&#x27;scss&#x27;&gt;</span><br><span class="line">.app_footer &#123;</span><br><span class="line">  overflow: hidden;</span><br><span class="line">  background-color: #f5f5f5;</span><br><span class="line">  padding-top: 20px;</span><br><span class="line"></span><br><span class="line">  .contact &#123;</span><br><span class="line">    background: #fff;</span><br><span class="line"></span><br><span class="line">    .container &#123;</span><br><span class="line">      padding: 60px 0 40px 25px;</span><br><span class="line">      display: flex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    dl &#123;</span><br><span class="line">      height: 190px;</span><br><span class="line">      text-align: center;</span><br><span class="line">      padding: 0 72px;</span><br><span class="line">      border-right: 1px solid #f2f2f2;</span><br><span class="line">      color: #999;</span><br><span class="line"></span><br><span class="line">      &amp;:first-child &#123;</span><br><span class="line">        padding-left: 0;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      &amp;:last-child &#123;</span><br><span class="line">        border-right: none;</span><br><span class="line">        padding-right: 0;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    dt &#123;</span><br><span class="line">      line-height: 1;</span><br><span class="line">      font-size: 18px;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    dd &#123;</span><br><span class="line">      margin: 36px 12px 0 0;</span><br><span class="line">      float: left;</span><br><span class="line">      width: 92px;</span><br><span class="line">      height: 92px;</span><br><span class="line">      padding-top: 10px;</span><br><span class="line">      border: 1px solid #ededed;</span><br><span class="line"></span><br><span class="line">      .iconfont &#123;</span><br><span class="line">        font-size: 36px;</span><br><span class="line">        display: block;</span><br><span class="line">        color: #666;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      &amp;:hover &#123;</span><br><span class="line">        .iconfont &#123;</span><br><span class="line">          color: $xtxColor;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      &amp;:last-child &#123;</span><br><span class="line">        margin-right: 0;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .qrcode &#123;</span><br><span class="line">      width: 92px;</span><br><span class="line">      height: 92px;</span><br><span class="line">      padding: 7px;</span><br><span class="line">      border: 1px solid #ededed;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .download &#123;</span><br><span class="line">      padding-top: 5px;</span><br><span class="line">      font-size: 14px;</span><br><span class="line">      width: auto;</span><br><span class="line">      height: auto;</span><br><span class="line">      border: none;</span><br><span class="line"></span><br><span class="line">      span &#123;</span><br><span class="line">        display: block;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      a &#123;</span><br><span class="line">        display: block;</span><br><span class="line">        line-height: 1;</span><br><span class="line">        padding: 10px 25px;</span><br><span class="line">        margin-top: 5px;</span><br><span class="line">        color: #fff;</span><br><span class="line">        border-radius: 2px;</span><br><span class="line">        background-color: $xtxColor;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .hotline &#123;</span><br><span class="line">      padding-top: 20px;</span><br><span class="line">      font-size: 22px;</span><br><span class="line">      color: #666;</span><br><span class="line">      width: auto;</span><br><span class="line">      height: auto;</span><br><span class="line">      border: none;</span><br><span class="line"></span><br><span class="line">      small &#123;</span><br><span class="line">        display: block;</span><br><span class="line">        font-size: 15px;</span><br><span class="line">        color: #999;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .extra &#123;</span><br><span class="line">    background-color: #333;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .slogan &#123;</span><br><span class="line">    height: 178px;</span><br><span class="line">    line-height: 58px;</span><br><span class="line">    padding: 60px 100px;</span><br><span class="line">    border-bottom: 1px solid #434343;</span><br><span class="line">    display: flex;</span><br><span class="line">    justify-content: space-between;</span><br><span class="line"></span><br><span class="line">    a &#123;</span><br><span class="line">      height: 58px;</span><br><span class="line">      line-height: 58px;</span><br><span class="line">      color: #fff;</span><br><span class="line">      font-size: 28px;</span><br><span class="line"></span><br><span class="line">      i &#123;</span><br><span class="line">        font-size: 50px;</span><br><span class="line">        vertical-align: middle;</span><br><span class="line">        margin-right: 10px;</span><br><span class="line">        font-weight: 100;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      span &#123;</span><br><span class="line">        vertical-align: middle;</span><br><span class="line">        text-shadow: 0 0 1px #333;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .copyright &#123;</span><br><span class="line">    height: 170px;</span><br><span class="line">    padding-top: 40px;</span><br><span class="line">    text-align: center;</span><br><span class="line">    color: #999;</span><br><span class="line">    font-size: 15px;</span><br><span class="line"></span><br><span class="line">    p &#123;</span><br><span class="line">      line-height: 1;</span><br><span class="line">      margin-bottom: 20px;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    a &#123;</span><br><span class="line">      color: #999;</span><br><span class="line">      line-height: 1;</span><br><span class="line">      padding: 0 10px;</span><br><span class="line">      border-right: 1px solid #999;</span><br><span class="line"></span><br><span class="line">      &amp;:last-child &#123;</span><br><span class="line">        border-right: none;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">import LayoutNav from &#x27;./components/LayoutNav.vue&#x27;</span><br><span class="line">import LayoutHeader from &#x27;./components/LayoutHeader.vue&#x27;</span><br><span class="line">import LayoutFooter from &#x27;./components/LayoutFooter.vue&#x27;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;LayoutNav /&gt;</span><br><span class="line">  &lt;LayoutHeader /&gt;</span><br><span class="line">  &lt;RouterView /&gt;</span><br><span class="line">  &lt;LayoutFooter /&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure>

<h1 id="字体图标渲染"><a href="#字体图标渲染" class="headerlink" title="字体图标渲染"></a>字体图标渲染</h1><blockquote>
<p>字体图标采用的是阿里的字体图标库，样式文件已经准备好，在 <code>index.html</code>文件中引入即可</p>
</blockquote>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;//at.alicdn.com/t/font_2143783_iq6z4ey5vu.css&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h1 id="一级导航渲染"><a href="#一级导航渲染" class="headerlink" title="一级导航渲染"></a>一级导航渲染</h1><p><img data-src="https://cdn.nlark.com/yuque/0/2023/png/274425/1677638045286-b328a3ce-8241-4ce7-9db3-e9c872da5b73.png#averageHue=%23f9f6f3&clientId=u4a91ceff-e2c9-4&from=paste&height=77&id=u7c505a73&name=image.png&originHeight=103&originWidth=1253&originalType=binary&ratio=2&rotation=0&showTitle=false&size=22333&status=done&style=none&taskId=u1a062488-8d43-4b66-a7e9-591b938bde7&title=&width=940" alt="image.png"><br><strong>实现步骤</strong></p>
<ol>
<li>封装接口函数</li>
<li>调用接口函数</li>
<li>v-for渲染模版</li>
</ol>
<p><strong>代码落地</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> httpInstance <span class="keyword">from</span> <span class="string">&#x27;@/utils/http&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">getCategoryAPI</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">httpInstance</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">&#x27;/home/category/head&#x27;</span></span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">  import &#123; getCategoryAPI &#125; from &#x27;@/apis/layout&#x27;</span><br><span class="line">  import &#123; onMounted, ref &#125; from &#x27;vue&#x27;</span><br><span class="line"></span><br><span class="line">  const categoryList = ref([])</span><br><span class="line">  const getCategory = async () =&gt; &#123;</span><br><span class="line">    const res = await getCategoryAPI()</span><br><span class="line">    categoryList.value = res.result</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  onMounted(() =&gt; getCategory())</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;header class=&#x27;app-header&#x27;&gt;</span><br><span class="line">    &lt;div class=&quot;container&quot;&gt;</span><br><span class="line">      &lt;h1 class=&quot;logo&quot;&gt;</span><br><span class="line">        &lt;RouterLink to=&quot;/&quot;&gt;小兔鲜&lt;/RouterLink&gt;</span><br><span class="line">      &lt;/h1&gt;</span><br><span class="line">      &lt;ul class=&quot;app-header-nav&quot;&gt;</span><br><span class="line">        &lt;li class=&quot;home&quot; v-for=&quot;item in categoryList&quot; :key=&quot;item.id&quot;&gt;</span><br><span class="line">          &lt;RouterLink to=&quot;/&quot;&gt;&#123;&#123; item.name &#125;&#125;&lt;/RouterLink&gt;</span><br><span class="line">        &lt;/li&gt;</span><br><span class="line">      &lt;/ul&gt;</span><br><span class="line">      &lt;div class=&quot;search&quot;&gt;</span><br><span class="line">        &lt;i class=&quot;iconfont icon-search&quot;&gt;&lt;/i&gt;</span><br><span class="line">        &lt;input type=&quot;text&quot; placeholder=&quot;搜一搜&quot;&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;!-- 头部购物车 --&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/header&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure>

<h1 id="吸顶导航交互实现"><a href="#吸顶导航交互实现" class="headerlink" title="吸顶导航交互实现"></a>吸顶导航交互实现</h1><h2 id="1-准备组件静态结构"><a href="#1-准备组件静态结构" class="headerlink" title="1. 准备组件静态结构"></a>1. 准备组件静态结构</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;app-header-sticky&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;container&quot;&gt;</span><br><span class="line">      &lt;RouterLink class=&quot;logo&quot; to=&quot;/&quot; /&gt;</span><br><span class="line">      &lt;!-- 导航区域 --&gt;</span><br><span class="line">      &lt;ul class=&quot;app-header-nav &quot;&gt;</span><br><span class="line">        &lt;li class=&quot;home&quot;&gt;</span><br><span class="line">          &lt;RouterLink to=&quot;/&quot;&gt;首页&lt;/RouterLink&gt;</span><br><span class="line">        &lt;/li&gt;</span><br><span class="line">        &lt;li&gt;</span><br><span class="line">          &lt;RouterLink to=&quot;/&quot;&gt;居家&lt;/RouterLink&gt;</span><br><span class="line">        &lt;/li&gt;</span><br><span class="line">        &lt;li&gt;</span><br><span class="line">          &lt;RouterLink to=&quot;/&quot;&gt;美食&lt;/RouterLink&gt;</span><br><span class="line">        &lt;/li&gt;</span><br><span class="line">        &lt;li&gt;</span><br><span class="line">          &lt;RouterLink to=&quot;/&quot;&gt;服饰&lt;/RouterLink&gt;</span><br><span class="line">        &lt;/li&gt;</span><br><span class="line">        &lt;li&gt;</span><br><span class="line">          &lt;RouterLink to=&quot;/&quot;&gt;母婴&lt;/RouterLink&gt;</span><br><span class="line">        &lt;/li&gt;</span><br><span class="line">        &lt;li&gt;</span><br><span class="line">          &lt;RouterLink to=&quot;/&quot;&gt;个护&lt;/RouterLink&gt;</span><br><span class="line">        &lt;/li&gt;</span><br><span class="line">        &lt;li&gt;</span><br><span class="line">          &lt;RouterLink to=&quot;/&quot;&gt;严选&lt;/RouterLink&gt;</span><br><span class="line">        &lt;/li&gt;</span><br><span class="line">        &lt;li&gt;</span><br><span class="line">          &lt;RouterLink to=&quot;/&quot;&gt;数码&lt;/RouterLink&gt;</span><br><span class="line">        &lt;/li&gt;</span><br><span class="line">        &lt;li&gt;</span><br><span class="line">          &lt;RouterLink to=&quot;/&quot;&gt;运动&lt;/RouterLink&gt;</span><br><span class="line">        &lt;/li&gt;</span><br><span class="line">        &lt;li&gt;</span><br><span class="line">          &lt;RouterLink to=&quot;/&quot;&gt;杂项&lt;/RouterLink&gt;</span><br><span class="line">        &lt;/li&gt;</span><br><span class="line">      &lt;/ul&gt;</span><br><span class="line"></span><br><span class="line">      &lt;div class=&quot;right&quot;&gt;</span><br><span class="line">        &lt;RouterLink to=&quot;/&quot;&gt;品牌&lt;/RouterLink&gt;</span><br><span class="line">        &lt;RouterLink to=&quot;/&quot;&gt;专题&lt;/RouterLink&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;style scoped lang=&#x27;scss&#x27;&gt;</span><br><span class="line">.app-header-sticky &#123;</span><br><span class="line">  width: 100%;</span><br><span class="line">  height: 80px;</span><br><span class="line">  position: fixed;</span><br><span class="line">  left: 0;</span><br><span class="line">  top: 0;</span><br><span class="line">  z-index: 999;</span><br><span class="line">  background-color: #fff;</span><br><span class="line">  border-bottom: 1px solid #e4e4e4;</span><br><span class="line">  // 此处为关键样式!!!</span><br><span class="line">  // 状态一：往上平移自身高度 + 完全透明</span><br><span class="line">  transform: translateY(-100%);</span><br><span class="line">  opacity: 0;</span><br><span class="line"></span><br><span class="line">  // 状态二：移除平移 + 完全不透明</span><br><span class="line">  &amp;.show &#123;</span><br><span class="line">    transition: all 0.3s linear;</span><br><span class="line">    transform: none;</span><br><span class="line">    opacity: 1;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .container &#123;</span><br><span class="line">    display: flex;</span><br><span class="line">    align-items: center;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .logo &#123;</span><br><span class="line">    width: 200px;</span><br><span class="line">    height: 80px;</span><br><span class="line">    background: url(&quot;@/assets/images/logo.png&quot;) no-repeat right 2px;</span><br><span class="line">    background-size: 160px auto;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .right &#123;</span><br><span class="line">    width: 220px;</span><br><span class="line">    display: flex;</span><br><span class="line">    text-align: center;</span><br><span class="line">    padding-left: 40px;</span><br><span class="line">    border-left: 2px solid $xtxColor;</span><br><span class="line"></span><br><span class="line">    a &#123;</span><br><span class="line">      width: 38px;</span><br><span class="line">      margin-right: 40px;</span><br><span class="line">      font-size: 16px;</span><br><span class="line">      line-height: 1;</span><br><span class="line"></span><br><span class="line">      &amp;:hover &#123;</span><br><span class="line">        color: $xtxColor;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.app-header-nav &#123;</span><br><span class="line">  width: 820px;</span><br><span class="line">  display: flex;</span><br><span class="line">  padding-left: 40px;</span><br><span class="line">  position: relative;</span><br><span class="line">  z-index: 998;</span><br><span class="line"></span><br><span class="line">  li &#123;</span><br><span class="line">    margin-right: 40px;</span><br><span class="line">    width: 38px;</span><br><span class="line">    text-align: center;</span><br><span class="line"></span><br><span class="line">    a &#123;</span><br><span class="line">      font-size: 16px;</span><br><span class="line">      line-height: 32px;</span><br><span class="line">      height: 32px;</span><br><span class="line">      display: inline-block;</span><br><span class="line"></span><br><span class="line">      &amp;:hover &#123;</span><br><span class="line">        color: $xtxColor;</span><br><span class="line">        border-bottom: 1px solid $xtxColor;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .active &#123;</span><br><span class="line">      color: $xtxColor;</span><br><span class="line">      border-bottom: 1px solid $xtxColor;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<h2 id="2-渲染基础数据"><a href="#2-渲染基础数据" class="headerlink" title="2. 渲染基础数据"></a>2. 渲染基础数据</h2><h2 id="3-实现吸顶交互"><a href="#3-实现吸顶交互" class="headerlink" title="3. 实现吸顶交互"></a>3. 实现吸顶交互</h2><blockquote>
<p>核心逻辑：根据滚动距离判断当前show类名是否显示，大于78显示，小于78，不显示</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">import LayoutHeaderUl from &#x27;./LayoutHeaderUl.vue&#x27;</span><br><span class="line">// vueUse</span><br><span class="line">import &#123; useScroll &#125; from &#x27;@vueuse/core&#x27;</span><br><span class="line">const &#123; y &#125; = useScroll(window)</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;app-header-sticky&quot; :class=&quot;&#123; show: y &gt; 78 &#125;&quot;&gt;</span><br><span class="line">    &lt;!-- 省略部分代码 --&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure>

<h1 id="Pinia优化重复请求"><a href="#Pinia优化重复请求" class="headerlink" title="Pinia优化重复请求"></a>Pinia优化重复请求</h1><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; ref &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; defineStore &#125; <span class="keyword">from</span> <span class="string">&#x27;pinia&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; getCategoryAPI &#125; <span class="keyword">from</span> <span class="string">&#x27;@/apis/layout&#x27;</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> useCategoryStore = <span class="title function_">defineStore</span>(<span class="string">&#x27;category&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 导航列表的数据管理</span></span><br><span class="line">  <span class="comment">// state 导航列表数据</span></span><br><span class="line">  <span class="keyword">const</span> categoryList = <span class="title function_">ref</span>([])</span><br><span class="line"></span><br><span class="line">  <span class="comment">// action 获取导航数据的方法</span></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">getCategory</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> res = <span class="keyword">await</span> <span class="title function_">getCategoryAPI</span>()</span><br><span class="line">    categoryList.<span class="property">value</span> = res.<span class="property">result</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    categoryList,</span><br><span class="line">    getCategory</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>


<h1 id="静态结构搭建和分类实现"><a href="#静态结构搭建和分类实现" class="headerlink" title="静态结构搭建和分类实现"></a>静态结构搭建和分类实现</h1><h2 id="1-整体结构创建"><a href="#1-整体结构创建" class="headerlink" title="1. 整体结构创建"></a>1. 整体结构创建</h2><p><img data-src="https://cdn.nlark.com/yuque/0/2023/png/274425/1675417667651-eb841c73-5b36-48a5-a8ee-118dbeaaeb0d.png#averageHue=%23fcf8f8&clientId=u19c1ce9d-cad7-4&from=paste&height=458&id=u7e2d2595&name=image.png&originHeight=916&originWidth=1368&originalType=binary&ratio=1&rotation=0&showTitle=false&size=37531&status=done&style=none&taskId=uf8f39479-333b-4074-b888-53dc829c807&title=&width=684" alt="image.png"></p>
<p>1- 按照结构新增五个组件，准备最简单的模版，分别在Home模块的入口组件中引入</p>
<ul>
<li>HomeCategory</li>
<li>HomeBanner</li>
<li>HomeNew</li>
<li>HomeHot</li>
<li>HomeProduct</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt; HomeCategory &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure>

<p>2- Home模块入口组件中引入并渲染</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">import HomeCategory from &#x27;./components/HomeCategory.vue&#x27;</span><br><span class="line">import HomeBanner from &#x27;./components/HomeBanner.vue&#x27;</span><br><span class="line">import HomeNew from &#x27;./components/HomeNew.vue&#x27;</span><br><span class="line">import HomeHot from &#x27;./components/HomeHot.vue&#x27;</span><br><span class="line">import homeProduct from &#x27;./components/HomeProduct.vue&#x27;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;container&quot;&gt;</span><br><span class="line">    &lt;HomeCategory /&gt;</span><br><span class="line">    &lt;HomeBanner /&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">  &lt;HomeNew /&gt;</span><br><span class="line">  &lt;HomeHot /&gt;</span><br><span class="line">  &lt;homeProduct /&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure>

<h2 id="2-分类实现"><a href="#2-分类实现" class="headerlink" title="2. 分类实现"></a>2. 分类实现</h2><p>1- 准备详细模版</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;home-category&quot;&gt;</span><br><span class="line">    &lt;ul class=&quot;menu&quot;&gt;</span><br><span class="line">      &lt;li v-for=&quot;item in 9&quot; :key=&quot;item&quot;&gt;</span><br><span class="line">        &lt;RouterLink to=&quot;/&quot;&gt;居家&lt;/RouterLink&gt;</span><br><span class="line">        &lt;RouterLink v-for=&quot;i in 2&quot; :key=&quot;i&quot; to=&quot;/&quot;&gt;南北干货&lt;/RouterLink&gt;</span><br><span class="line">        &lt;!-- 弹层layer位置 --&gt;</span><br><span class="line">        &lt;div class=&quot;layer&quot;&gt;</span><br><span class="line">          &lt;h4&gt;分类推荐 &lt;small&gt;根据您的购买或浏览记录推荐&lt;/small&gt;&lt;/h4&gt;</span><br><span class="line">          &lt;ul&gt;</span><br><span class="line">            &lt;li v-for=&quot;i in 5&quot; :key=&quot;i&quot;&gt;</span><br><span class="line">              &lt;RouterLink to=&quot;/&quot;&gt;</span><br><span class="line">                &lt;img alt=&quot;&quot; /&gt;</span><br><span class="line">                &lt;div class=&quot;info&quot;&gt;</span><br><span class="line">                  &lt;p class=&quot;name ellipsis-2&quot;&gt;</span><br><span class="line">                    男士外套</span><br><span class="line">                  &lt;/p&gt;</span><br><span class="line">                  &lt;p class=&quot;desc ellipsis&quot;&gt;男士外套，冬季必选&lt;/p&gt;</span><br><span class="line">                  &lt;p class=&quot;price&quot;&gt;&lt;i&gt;¥&lt;/i&gt;200.00&lt;/p&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">              &lt;/RouterLink&gt;</span><br><span class="line">            &lt;/li&gt;</span><br><span class="line">          &lt;/ul&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/li&gt;</span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;style scoped lang=&#x27;scss&#x27;&gt;</span><br><span class="line">.home-category &#123;</span><br><span class="line">  width: 250px;</span><br><span class="line">  height: 500px;</span><br><span class="line">  background: rgba(0, 0, 0, 0.8);</span><br><span class="line">  position: relative;</span><br><span class="line">  z-index: 99;</span><br><span class="line"></span><br><span class="line">  .menu &#123;</span><br><span class="line">    li &#123;</span><br><span class="line">      padding-left: 40px;</span><br><span class="line">      height: 55px;</span><br><span class="line">      line-height: 55px;</span><br><span class="line"></span><br><span class="line">      &amp;:hover &#123;</span><br><span class="line">        background: $xtxColor;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      a &#123;</span><br><span class="line">        margin-right: 4px;</span><br><span class="line">        color: #fff;</span><br><span class="line"></span><br><span class="line">        &amp;:first-child &#123;</span><br><span class="line">          font-size: 16px;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      .layer &#123;</span><br><span class="line">        width: 990px;</span><br><span class="line">        height: 500px;</span><br><span class="line">        background: rgba(255, 255, 255, 0.8);</span><br><span class="line">        position: absolute;</span><br><span class="line">        left: 250px;</span><br><span class="line">        top: 0;</span><br><span class="line">        display: none;</span><br><span class="line">        padding: 0 15px;</span><br><span class="line"></span><br><span class="line">        h4 &#123;</span><br><span class="line">          font-size: 20px;</span><br><span class="line">          font-weight: normal;</span><br><span class="line">          line-height: 80px;</span><br><span class="line"></span><br><span class="line">          small &#123;</span><br><span class="line">            font-size: 16px;</span><br><span class="line">            color: #666;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        ul &#123;</span><br><span class="line">          display: flex;</span><br><span class="line">          flex-wrap: wrap;</span><br><span class="line"></span><br><span class="line">          li &#123;</span><br><span class="line">            width: 310px;</span><br><span class="line">            height: 120px;</span><br><span class="line">            margin-right: 15px;</span><br><span class="line">            margin-bottom: 15px;</span><br><span class="line">            border: 1px solid #eee;</span><br><span class="line">            border-radius: 4px;</span><br><span class="line">            background: #fff;</span><br><span class="line"></span><br><span class="line">            &amp;:nth-child(3n) &#123;</span><br><span class="line">              margin-right: 0;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            a &#123;</span><br><span class="line">              display: flex;</span><br><span class="line">              width: 100%;</span><br><span class="line">              height: 100%;</span><br><span class="line">              align-items: center;</span><br><span class="line">              padding: 10px;</span><br><span class="line"></span><br><span class="line">              &amp;:hover &#123;</span><br><span class="line">                background: #e3f9f4;</span><br><span class="line">              &#125;</span><br><span class="line"></span><br><span class="line">              img &#123;</span><br><span class="line">                width: 95px;</span><br><span class="line">                height: 95px;</span><br><span class="line">              &#125;</span><br><span class="line"></span><br><span class="line">              .info &#123;</span><br><span class="line">                padding-left: 10px;</span><br><span class="line">                line-height: 24px;</span><br><span class="line">                overflow: hidden;</span><br><span class="line"></span><br><span class="line">                .name &#123;</span><br><span class="line">                  font-size: 16px;</span><br><span class="line">                  color: #666;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                .desc &#123;</span><br><span class="line">                  color: #999;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                .price &#123;</span><br><span class="line">                  font-size: 22px;</span><br><span class="line">                  color: $priceColor;</span><br><span class="line"></span><br><span class="line">                  i &#123;</span><br><span class="line">                    font-size: 16px;</span><br><span class="line">                  &#125;</span><br><span class="line">                &#125;</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      // 关键样式  hover状态下的layer盒子变成block</span><br><span class="line">      &amp;:hover &#123;</span><br><span class="line">        .layer &#123;</span><br><span class="line">          display: block;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<p>2- 完成代码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; useCategoryStore &#125; from &#x27;@/stores/category&#x27;</span><br><span class="line"></span><br><span class="line">const categoryStore = useCategoryStore()</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;home-category&quot;&gt;</span><br><span class="line">    &lt;ul class=&quot;menu&quot;&gt;</span><br><span class="line">      &lt;li v-for=&quot;item in categoryStore.categoryList&quot; :key=&quot;item.id&quot;&gt;</span><br><span class="line">        &lt;RouterLink to=&quot;/&quot;&gt;&#123;&#123; item.name &#125;&#125;&lt;/RouterLink&gt;</span><br><span class="line">        &lt;RouterLink v-for=&quot;i in item.children.slice(0, 2)&quot; :key=&quot;i&quot; to=&quot;/&quot;&gt;&#123;&#123; i.name &#125;&#125;&lt;/RouterLink&gt;</span><br><span class="line">        &lt;!-- 弹层layer位置 --&gt;</span><br><span class="line">        &lt;div class=&quot;layer&quot;&gt;</span><br><span class="line">          &lt;h4&gt;分类推荐 &lt;small&gt;根据您的购买或浏览记录推荐&lt;/small&gt;&lt;/h4&gt;</span><br><span class="line">          &lt;ul&gt;</span><br><span class="line">            &lt;li v-for=&quot;i in item.goods&quot; :key=&quot;i.id&quot;&gt;</span><br><span class="line">              &lt;RouterLink to=&quot;/&quot;&gt;</span><br><span class="line">                &lt;img :src=&quot;i.picture&quot; alt=&quot;&quot; /&gt;</span><br><span class="line">                &lt;div class=&quot;info&quot;&gt;</span><br><span class="line">                  &lt;p class=&quot;name ellipsis-2&quot;&gt;</span><br><span class="line">                    &#123;&#123; i.name &#125;&#125;</span><br><span class="line">                  &lt;/p&gt;</span><br><span class="line">                  &lt;p class=&quot;desc ellipsis&quot;&gt;&#123;&#123; i.desc &#125;&#125;&lt;/p&gt;</span><br><span class="line">                  &lt;p class=&quot;price&quot;&gt;&lt;i&gt;¥&lt;/i&gt;&#123;&#123; i.price &#125;&#125;&lt;/p&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">              &lt;/RouterLink&gt;</span><br><span class="line">            &lt;/li&gt;</span><br><span class="line">          &lt;/ul&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/li&gt;</span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure>

<h1 id="banner轮播图实现"><a href="#banner轮播图实现" class="headerlink" title="banner轮播图实现"></a>banner轮播图实现</h1><h2 id="1-熟悉组件"><a href="#1-熟悉组件" class="headerlink" title="1. 熟悉组件"></a>1. 熟悉组件</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;home-banner&quot;&gt;</span><br><span class="line">    &lt;el-carousel height=&quot;500px&quot;&gt;</span><br><span class="line">      &lt;el-carousel-item v-for=&quot;item in 4&quot; :key=&quot;item&quot;&gt;</span><br><span class="line">        &lt;img src=&quot;http://yjy-xiaotuxian-dev.oss-cn-beijing.aliyuncs.com/picture/2021-04-15/6d202d8e-bb47-4f92-9523-f32ab65754f4.jpg&quot; alt=&quot;&quot;&gt;</span><br><span class="line">      &lt;/el-carousel-item&gt;</span><br><span class="line">    &lt;/el-carousel&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;style scoped lang=&#x27;scss&#x27;&gt;</span><br><span class="line">.home-banner &#123;</span><br><span class="line">  width: 1240px;</span><br><span class="line">  height: 500px;</span><br><span class="line">  position: absolute;</span><br><span class="line">  left: 0;</span><br><span class="line">  top: 0;</span><br><span class="line">  z-index: 98;</span><br><span class="line"></span><br><span class="line">  img &#123;</span><br><span class="line">    width: 100%;</span><br><span class="line">    height: 500px;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<h2 id="2-获取数据渲染组件"><a href="#2-获取数据渲染组件" class="headerlink" title="2. 获取数据渲染组件"></a>2. 获取数据渲染组件</h2><p>1- 封装接口</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: 获取banner图</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">*</span>&#125;</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> &#123;<span class="type">*</span>&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">import</span>  httpInstance  <span class="keyword">from</span> <span class="string">&#x27;@/utils/http&#x27;</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getBannerAPI</span> (<span class="params"></span>)&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>:<span class="string">&#x27;home/banner&#x27;</span></span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>2- 获取数据渲染模版</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; getBannerAPI &#125; from &#x27;@/apis/home&#x27;</span><br><span class="line">import &#123; onMounted, ref &#125; from &#x27;vue&#x27;</span><br><span class="line"></span><br><span class="line">const bannerList = ref([])</span><br><span class="line"></span><br><span class="line">const getBanner = async () =&gt; &#123;</span><br><span class="line">  const res = await getBannerAPI()</span><br><span class="line">  console.log(res)</span><br><span class="line">  bannerList.value = res.result</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">onMounted(() =&gt; getBanner())</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;home-banner&quot;&gt;</span><br><span class="line">    &lt;el-carousel height=&quot;500px&quot;&gt;</span><br><span class="line">      &lt;el-carousel-item v-for=&quot;item in bannerList&quot; :key=&quot;item.id&quot;&gt;</span><br><span class="line">        &lt;img :src=&quot;item.imgUrl&quot; alt=&quot;&quot;&gt;</span><br><span class="line">      &lt;/el-carousel-item&gt;</span><br><span class="line">    &lt;/el-carousel&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h1 id="面板组件封装"><a href="#面板组件封装" class="headerlink" title="面板组件封装"></a>面板组件封装</h1><h2 id="1-纯静态结构"><a href="#1-纯静态结构" class="headerlink" title="1. 纯静态结构"></a>1. 纯静态结构</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;home-panel&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;container&quot;&gt;</span><br><span class="line">      &lt;div class=&quot;head&quot;&gt;</span><br><span class="line">         &lt;!-- 主标题和副标题 --&gt;</span><br><span class="line">        &lt;h3&gt;</span><br><span class="line">          新鲜好物&lt;small&gt;新鲜出炉 品质靠谱&lt;/small&gt;</span><br><span class="line">        &lt;/h3&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;!-- 主体内容区域 --&gt;</span><br><span class="line">      &lt;div&gt; 主体内容 &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped lang=&#x27;scss&#x27;&gt;</span><br><span class="line">.home-panel &#123;</span><br><span class="line">  background-color: #fff;</span><br><span class="line"></span><br><span class="line">  .head &#123;</span><br><span class="line">    padding: 40px 0;</span><br><span class="line">    display: flex;</span><br><span class="line">    align-items: flex-end;</span><br><span class="line"></span><br><span class="line">    h3 &#123;</span><br><span class="line">      flex: 1;</span><br><span class="line">      font-size: 32px;</span><br><span class="line">      font-weight: normal;</span><br><span class="line">      margin-left: 6px;</span><br><span class="line">      height: 35px;</span><br><span class="line">      line-height: 35px;</span><br><span class="line"></span><br><span class="line">      small &#123;</span><br><span class="line">        font-size: 16px;</span><br><span class="line">        color: #999;</span><br><span class="line">        margin-left: 20px;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<h2 id="2-完整代码"><a href="#2-完整代码" class="headerlink" title="2. 完整代码"></a>2. 完整代码</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line"></span><br><span class="line">defineProps(&#123;</span><br><span class="line">  title: &#123;</span><br><span class="line">    type: String,</span><br><span class="line">    default: &#x27;&#x27;</span><br><span class="line">  &#125;,</span><br><span class="line">  subTitle: &#123;</span><br><span class="line">    type: String,</span><br><span class="line">    default: &#x27;&#x27;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;home-panel&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;container&quot;&gt;</span><br><span class="line">      &lt;div class=&quot;head&quot;&gt;</span><br><span class="line">        &lt;!-- 主标题和副标题 --&gt;</span><br><span class="line">        &lt;h3&gt;</span><br><span class="line">          &#123;&#123; title &#125;&#125;&lt;small&gt;&#123;&#123; subTitle &#125;&#125;&lt;/small&gt;</span><br><span class="line">        &lt;/h3&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;!-- 主体内容区域 --&gt;</span><br><span class="line">      &lt;slot name=&quot;main&quot; /&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;style scoped lang=&#x27;scss&#x27;&gt;</span><br><span class="line">.home-panel &#123;</span><br><span class="line">  background-color: #fff;</span><br><span class="line"></span><br><span class="line">  .head &#123;</span><br><span class="line">    padding: 40px 0;</span><br><span class="line">    display: flex;</span><br><span class="line">    align-items: flex-end;</span><br><span class="line"></span><br><span class="line">    h3 &#123;</span><br><span class="line">      flex: 1;</span><br><span class="line">      font-size: 32px;</span><br><span class="line">      font-weight: normal;</span><br><span class="line">      margin-left: 6px;</span><br><span class="line">      height: 35px;</span><br><span class="line">      line-height: 35px;</span><br><span class="line"></span><br><span class="line">      small &#123;</span><br><span class="line">        font-size: 16px;</span><br><span class="line">        color: #999;</span><br><span class="line">        margin-left: 20px;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<h1 id="新鲜好物实现"><a href="#新鲜好物实现" class="headerlink" title="新鲜好物实现"></a>新鲜好物实现</h1><h2 id="1-准备模版"><a href="#1-准备模版" class="headerlink" title="1. 准备模版"></a>1. 准备模版</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;&lt;/div&gt;</span><br><span class="line">  &lt;!-- 下面是插槽主体内容模版</span><br><span class="line">  &lt;ul class=&quot;goods-list&quot;&gt;</span><br><span class="line">    &lt;li v-for=&quot;item in newList&quot; :key=&quot;item.id&quot;&gt;</span><br><span class="line">      &lt;RouterLink to=&quot;/&quot;&gt;</span><br><span class="line">        &lt;img :src=&quot;item.picture&quot; alt=&quot;&quot; /&gt;</span><br><span class="line">        &lt;p class=&quot;name&quot;&gt;&#123;&#123; item.name &#125;&#125;&lt;/p&gt;</span><br><span class="line">        &lt;p class=&quot;price&quot;&gt;&amp;yen;&#123;&#123; item.price &#125;&#125;&lt;/p&gt;</span><br><span class="line">      &lt;/RouterLink&gt;</span><br><span class="line">    &lt;/li&gt;</span><br><span class="line">  &lt;/ul&gt;</span><br><span class="line">  --&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;style scoped lang=&#x27;scss&#x27;&gt;</span><br><span class="line">.goods-list &#123;</span><br><span class="line">  display: flex;</span><br><span class="line">  justify-content: space-between;</span><br><span class="line">  height: 406px;</span><br><span class="line"></span><br><span class="line">  li &#123;</span><br><span class="line">    width: 306px;</span><br><span class="line">    height: 406px;</span><br><span class="line"></span><br><span class="line">    background: #f0f9f4;</span><br><span class="line">    transition: all .5s;</span><br><span class="line"></span><br><span class="line">    &amp;:hover &#123;</span><br><span class="line">      transform: translate3d(0, -3px, 0);</span><br><span class="line">      box-shadow: 0 3px 8px rgb(0 0 0 / 20%);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    img &#123;</span><br><span class="line">      width: 306px;</span><br><span class="line">      height: 306px;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    p &#123;</span><br><span class="line">      font-size: 22px;</span><br><span class="line">      padding-top: 12px;</span><br><span class="line">      text-align: center;</span><br><span class="line">      text-overflow: ellipsis;</span><br><span class="line">      overflow: hidden;</span><br><span class="line">      white-space: nowrap;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .price &#123;</span><br><span class="line">      color: $priceColor;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<h2 id="2-封装接口"><a href="#2-封装接口" class="headerlink" title="2. 封装接口"></a>2. 封装接口</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: 获取新鲜好物</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">*</span>&#125;</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> &#123;<span class="type">*</span>&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">findNewAPI</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">httpInstance</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>:<span class="string">&#x27;/home/new&#x27;</span></span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="3-获取数据渲染模版"><a href="#3-获取数据渲染模版" class="headerlink" title="3. 获取数据渲染模版"></a>3. 获取数据渲染模版</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">import HomePanel from &#x27;./HomePanel.vue&#x27;</span><br><span class="line">import &#123; getNewAPI &#125; from &#x27;@/apis/home&#x27;</span><br><span class="line">import &#123; ref &#125; from &#x27;vue&#x27;</span><br><span class="line">const newList = ref([])</span><br><span class="line">const getNewList = async () =&gt; &#123;</span><br><span class="line">  const res = await getNewAPI()</span><br><span class="line">  newList.value = res.result</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">getNewList()</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;HomePanel title=&quot;新鲜好物&quot; sub-title=&quot;新鲜出炉 品质靠谱&quot;&gt;</span><br><span class="line">    &lt;template #main&gt;</span><br><span class="line">      &lt;ul class=&quot;goods-list&quot;&gt;</span><br><span class="line">        &lt;li v-for=&quot;item in newList&quot; :key=&quot;item.id&quot;&gt;</span><br><span class="line">          &lt;RouterLink :to=&quot;`/detail/$&#123;item.id&#125;`&quot;&gt;</span><br><span class="line">            &lt;img :src=&quot;item.picture&quot; alt=&quot;&quot; /&gt;</span><br><span class="line">            &lt;p class=&quot;name&quot;&gt;&#123;&#123; item.name &#125;&#125;&lt;/p&gt;</span><br><span class="line">            &lt;p class=&quot;price&quot;&gt;&amp;yen;&#123;&#123; item.price &#125;&#125;&lt;/p&gt;</span><br><span class="line">          &lt;/RouterLink&gt;</span><br><span class="line">        &lt;/li&gt;</span><br><span class="line">      &lt;/ul&gt;</span><br><span class="line">    &lt;/template&gt;</span><br><span class="line">  &lt;/HomePanel&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure>

<h1 id="人气推荐实现"><a href="#人气推荐实现" class="headerlink" title="人气推荐实现"></a>人气推荐实现</h1><h2 id="1-封装接口"><a href="#1-封装接口" class="headerlink" title="1. 封装接口"></a>1. 封装接口</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: 获取人气推荐</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">*</span>&#125;</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> &#123;<span class="type">*</span>&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">getHotAPI</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span>  <span class="title function_">httpInstance</span>(<span class="string">&#x27;home/hot&#x27;</span>, <span class="string">&#x27;get&#x27;</span>, &#123;&#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="2-获取数据渲染模版"><a href="#2-获取数据渲染模版" class="headerlink" title="2. 获取数据渲染模版"></a>2. 获取数据渲染模版</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">import HomePanel from &#x27;./HomePanel.vue&#x27;</span><br><span class="line">import &#123; getHotAPI &#125; from &#x27;@/apis/home&#x27;</span><br><span class="line">import &#123; ref &#125; from &#x27;vue&#x27;</span><br><span class="line">const hotList = ref([])</span><br><span class="line">const getHotList = async () =&gt; &#123;</span><br><span class="line">  const res = await getHotAPI()</span><br><span class="line">  hotList.value = res.result</span><br><span class="line">&#125;</span><br><span class="line">getHotList()</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;HomePanel title=&quot;人气推荐&quot; sub-title=&quot;人气爆款 不容错过&quot;&gt;</span><br><span class="line">      &lt;ul class=&quot;goods-list&quot;&gt;</span><br><span class="line">        &lt;li v-for=&quot;item in hotList&quot; :key=&quot;item.id&quot;&gt;</span><br><span class="line">          &lt;RouterLink to=&quot;/&quot;&gt;</span><br><span class="line">            &lt;img v-img-lazy=&quot;item.picture&quot; alt=&quot;&quot;&gt;</span><br><span class="line">            &lt;p class=&quot;name&quot;&gt;&#123;&#123; item.title &#125;&#125;&lt;/p&gt;</span><br><span class="line">            &lt;p class=&quot;desc&quot;&gt;&#123;&#123; item.alt &#125;&#125;&lt;/p&gt;</span><br><span class="line">          &lt;/RouterLink&gt;</span><br><span class="line">        &lt;/li&gt;</span><br><span class="line">      &lt;/ul&gt;</span><br><span class="line">  &lt;/HomePanel&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped lang=&#x27;scss&#x27;&gt;</span><br><span class="line">.goods-list &#123;</span><br><span class="line">  display: flex;</span><br><span class="line">  justify-content: space-between;</span><br><span class="line">  height: 426px;</span><br><span class="line"></span><br><span class="line">  li &#123;</span><br><span class="line">    width: 306px;</span><br><span class="line">    height: 406px;</span><br><span class="line">    transition: all .5s;</span><br><span class="line"></span><br><span class="line">    &amp;:hover &#123;</span><br><span class="line">      transform: translate3d(0, -3px, 0);</span><br><span class="line">      box-shadow: 0 3px 8px rgb(0 0 0 / 20%);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    img &#123;</span><br><span class="line">      width: 306px;</span><br><span class="line">      height: 306px;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    p &#123;</span><br><span class="line">      font-size: 22px;</span><br><span class="line">      padding-top: 12px;</span><br><span class="line">      text-align: center;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .desc &#123;</span><br><span class="line">      color: #999;</span><br><span class="line">      font-size: 18px;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<h1 id="懒加载指令实现"><a href="#懒加载指令实现" class="headerlink" title="懒加载指令实现"></a>懒加载指令实现</h1><h2 id="1-封装全局指令"><a href="#1-封装全局指令" class="headerlink" title="1. 封装全局指令"></a>1. 封装全局指令</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 定义懒加载插件</span></span><br><span class="line"><span class="keyword">import</span> &#123; useIntersectionObserver &#125; <span class="keyword">from</span> <span class="string">&#x27;@vueuse/core&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> lazyPlugin = &#123;</span><br><span class="line">  <span class="title function_">install</span> (app) &#123;</span><br><span class="line">    <span class="comment">// 懒加载指令逻辑</span></span><br><span class="line">    app.<span class="title function_">directive</span>(<span class="string">&#x27;img-lazy&#x27;</span>, &#123;</span><br><span class="line">      <span class="title function_">mounted</span> (el, binding) &#123;</span><br><span class="line">        <span class="comment">// el: 指令绑定的那个元素 img</span></span><br><span class="line">        <span class="comment">// binding: binding.value  指令等于号后面绑定的表达式的值  图片url</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(el, binding.<span class="property">value</span>)</span><br><span class="line">        <span class="keyword">const</span> &#123; stop &#125; = <span class="title function_">useIntersectionObserver</span>(</span><br><span class="line">          el,</span><br><span class="line">          <span class="function">(<span class="params">[&#123; isIntersecting &#125;]</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(isIntersecting)</span><br><span class="line">            <span class="keyword">if</span> (isIntersecting) &#123;</span><br><span class="line">              <span class="comment">// 进入视口区域</span></span><br><span class="line">              el.<span class="property">src</span> = binding.<span class="property">value</span></span><br><span class="line">              <span class="title function_">stop</span>()</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;,</span><br><span class="line">        )</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="2-注册全局指令"><a href="#2-注册全局指令" class="headerlink" title="2. 注册全局指令"></a>2. 注册全局指令</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 全局指令注册</span></span><br><span class="line"><span class="keyword">import</span> &#123; directivePlugin &#125; <span class="keyword">from</span> <span class="string">&#x27;@/directives&#x27;</span></span><br><span class="line">app.<span class="title function_">use</span>(directivePlugin)</span><br></pre></td></tr></table></figure>

<h1 id="Product产品列表实现"><a href="#Product产品列表实现" class="headerlink" title="Product产品列表实现"></a>Product产品列表实现</h1><h2 id="1-基础数据渲染"><a href="#1-基础数据渲染" class="headerlink" title="1. 基础数据渲染"></a>1. 基础数据渲染</h2><p>1- 准备静态模版</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">import HomePanel from &#x27;./HomePanel.vue&#x27;</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;home-product&quot;&gt;</span><br><span class="line">    &lt;!-- &lt;HomePanel :title=&quot;cate.name&quot; v-for=&quot;cate in goodsProduct&quot; :key=&quot;cate.id&quot;&gt;</span><br><span class="line">      &lt;div class=&quot;box&quot;&gt;</span><br><span class="line">        &lt;RouterLink class=&quot;cover&quot; to=&quot;/&quot;&gt;</span><br><span class="line">          &lt;img :src=&quot;cate.picture&quot; /&gt;</span><br><span class="line">          &lt;strong class=&quot;label&quot;&gt;</span><br><span class="line">            &lt;span&gt;&#123;&#123; cate.name &#125;&#125;馆&lt;/span&gt;</span><br><span class="line">            &lt;span&gt;&#123;&#123; cate.saleInfo &#125;&#125;&lt;/span&gt;</span><br><span class="line">          &lt;/strong&gt;</span><br><span class="line">        &lt;/RouterLink&gt;</span><br><span class="line">        &lt;ul class=&quot;goods-list&quot;&gt;</span><br><span class="line">          &lt;li v-for=&quot;good in cate.goods&quot; :key=&quot;good.id&quot;&gt;</span><br><span class="line">            &lt;RouterLink to=&quot;/&quot; class=&quot;goods-item&quot;&gt;</span><br><span class="line">              &lt;img :src=&quot;good.picture&quot; alt=&quot;&quot; /&gt;</span><br><span class="line">              &lt;p class=&quot;name ellipsis&quot;&gt;&#123;&#123; good.name &#125;&#125;&lt;/p&gt;</span><br><span class="line">              &lt;p class=&quot;desc ellipsis&quot;&gt;&#123;&#123; good.desc &#125;&#125;&lt;/p&gt;</span><br><span class="line">              &lt;p class=&quot;price&quot;&gt;&amp;yen;&#123;&#123; good.price &#125;&#125;&lt;/p&gt;</span><br><span class="line">            &lt;/RouterLink&gt;</span><br><span class="line">          &lt;/li&gt;</span><br><span class="line">        &lt;/ul&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/HomePanel&gt; --&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped lang=&#x27;scss&#x27;&gt;</span><br><span class="line">.home-product &#123;</span><br><span class="line">  background: #fff;</span><br><span class="line">  margin-top: 20px;</span><br><span class="line">  .sub &#123;</span><br><span class="line">    margin-bottom: 2px;</span><br><span class="line"></span><br><span class="line">    a &#123;</span><br><span class="line">      padding: 2px 12px;</span><br><span class="line">      font-size: 16px;</span><br><span class="line">      border-radius: 4px;</span><br><span class="line"></span><br><span class="line">      &amp;:hover &#123;</span><br><span class="line">        background: $xtxColor;</span><br><span class="line">        color: #fff;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      &amp;:last-child &#123;</span><br><span class="line">        margin-right: 80px;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .box &#123;</span><br><span class="line">    display: flex;</span><br><span class="line"></span><br><span class="line">    .cover &#123;</span><br><span class="line">      width: 240px;</span><br><span class="line">      height: 610px;</span><br><span class="line">      margin-right: 10px;</span><br><span class="line">      position: relative;</span><br><span class="line"></span><br><span class="line">      img &#123;</span><br><span class="line">        width: 100%;</span><br><span class="line">        height: 100%;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      .label &#123;</span><br><span class="line">        width: 188px;</span><br><span class="line">        height: 66px;</span><br><span class="line">        display: flex;</span><br><span class="line">        font-size: 18px;</span><br><span class="line">        color: #fff;</span><br><span class="line">        line-height: 66px;</span><br><span class="line">        font-weight: normal;</span><br><span class="line">        position: absolute;</span><br><span class="line">        left: 0;</span><br><span class="line">        top: 50%;</span><br><span class="line">        transform: translate3d(0, -50%, 0);</span><br><span class="line"></span><br><span class="line">        span &#123;</span><br><span class="line">          text-align: center;</span><br><span class="line"></span><br><span class="line">          &amp;:first-child &#123;</span><br><span class="line">            width: 76px;</span><br><span class="line">            background: rgba(0, 0, 0, 0.9);</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">          &amp;:last-child &#123;</span><br><span class="line">            flex: 1;</span><br><span class="line">            background: rgba(0, 0, 0, 0.7);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .goods-list &#123;</span><br><span class="line">      width: 990px;</span><br><span class="line">      display: flex;</span><br><span class="line">      flex-wrap: wrap;</span><br><span class="line"></span><br><span class="line">      li &#123;</span><br><span class="line">        width: 240px;</span><br><span class="line">        height: 300px;</span><br><span class="line">        margin-right: 10px;</span><br><span class="line">        margin-bottom: 10px;</span><br><span class="line"></span><br><span class="line">        &amp;:nth-last-child(-n + 4) &#123;</span><br><span class="line">          margin-bottom: 0;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        &amp;:nth-child(4n) &#123;</span><br><span class="line">          margin-right: 0;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .goods-item &#123;</span><br><span class="line">      display: block;</span><br><span class="line">      width: 220px;</span><br><span class="line">      padding: 20px 30px;</span><br><span class="line">      text-align: center;</span><br><span class="line">      transition: all .5s;</span><br><span class="line"></span><br><span class="line">      &amp;:hover &#123;</span><br><span class="line">        transform: translate3d(0, -3px, 0);</span><br><span class="line">        box-shadow: 0 3px 8px rgb(0 0 0 / 20%);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      img &#123;</span><br><span class="line">        width: 160px;</span><br><span class="line">        height: 160px;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      p &#123;</span><br><span class="line">        padding-top: 10px;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      .name &#123;</span><br><span class="line">        font-size: 16px;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      .desc &#123;</span><br><span class="line">        color: #999;</span><br><span class="line">        height: 29px;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      .price &#123;</span><br><span class="line">        color: $priceColor;</span><br><span class="line">        font-size: 20px;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<p>2- 封装接口</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: 获取所有商品模块</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">*</span>&#125;</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> &#123;<span class="type">*</span>&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">getGoodsAPI</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">httpInstance</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">&#x27;/home/goods&#x27;</span></span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>3- 获取并渲染数据</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">import HomePanel from &#x27;./HomePanel.vue&#x27;</span><br><span class="line">import &#123; getGoodsAPI &#125; from &#x27;@/apis/home&#x27;</span><br><span class="line">import &#123; ref &#125; from &#x27;vue&#x27;</span><br><span class="line">const goodsProduct = ref([])</span><br><span class="line">const getGoods = async () =&gt; &#123;</span><br><span class="line">  const &#123; result &#125; = await getGoodsAPI()</span><br><span class="line">  goodsProduct.value = result</span><br><span class="line">&#125;</span><br><span class="line">onMounted( ()=&gt; getGoods() )</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;home-product&quot;&gt;</span><br><span class="line">    &lt;HomePanel :title=&quot;cate.name&quot; v-for=&quot;cate in goodsProduct&quot; :key=&quot;cate.id&quot;&gt;</span><br><span class="line">      &lt;div class=&quot;box&quot;&gt;</span><br><span class="line">        &lt;RouterLink class=&quot;cover&quot; to=&quot;/&quot;&gt;</span><br><span class="line">          &lt;img :src=&quot;cate.picture&quot; /&gt;</span><br><span class="line">          &lt;strong class=&quot;label&quot;&gt;</span><br><span class="line">            &lt;span&gt;&#123;&#123; cate.name &#125;&#125;馆&lt;/span&gt;</span><br><span class="line">            &lt;span&gt;&#123;&#123; cate.saleInfo &#125;&#125;&lt;/span&gt;</span><br><span class="line">          &lt;/strong&gt;</span><br><span class="line">        &lt;/RouterLink&gt;</span><br><span class="line">        &lt;ul class=&quot;goods-list&quot;&gt;</span><br><span class="line">          &lt;li v-for=&quot;goods in cate.goods&quot; :key=&quot;good.id&quot;&gt;</span><br><span class="line">            &lt;RouterLink to=&quot;/&quot; class=&quot;goods-item&quot;&gt;</span><br><span class="line">              &lt;img :src=&quot;goods.picture&quot; alt=&quot;&quot; /&gt;</span><br><span class="line">              &lt;p class=&quot;name ellipsis&quot;&gt;&#123;&#123; goods.name &#125;&#125;&lt;/p&gt;</span><br><span class="line">              &lt;p class=&quot;desc ellipsis&quot;&gt;&#123;&#123; goods.desc &#125;&#125;&lt;/p&gt;</span><br><span class="line">              &lt;p class=&quot;price&quot;&gt;&amp;yen;&#123;&#123; goods.price &#125;&#125;&lt;/p&gt;</span><br><span class="line">            &lt;/RouterLink&gt;</span><br><span class="line">          &lt;/li&gt;</span><br><span class="line">        &lt;/ul&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/HomePanel&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure>

<h2 id="2-图片懒加载"><a href="#2-图片懒加载" class="headerlink" title="2. 图片懒加载"></a>2. 图片懒加载</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;home-product&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">HomePanel</span> <span class="attr">:title</span>=<span class="string">&quot;cate.name&quot;</span> <span class="attr">v-for</span>=<span class="string">&quot;cate in goodsProduct&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;cate.id&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">RouterLink</span> <span class="attr">class</span>=<span class="string">&quot;cover&quot;</span> <span class="attr">to</span>=<span class="string">&quot;/&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 指令替换 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">v-img-lazy</span>=<span class="string">&quot;cate.picture&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">RouterLink</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;goods-list&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;goods in cate.goods&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;goods.id&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">RouterLink</span> <span class="attr">to</span>=<span class="string">&quot;/&quot;</span> <span class="attr">class</span>=<span class="string">&quot;goods-item&quot;</span>&gt;</span></span><br><span class="line">             <span class="comment">&lt;!-- 指令替换 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">v-img-lazy</span>=<span class="string">&quot;goods.picture&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">RouterLink</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">HomePanel</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h1 id="GoodsItem组件封装"><a href="#GoodsItem组件封装" class="headerlink" title="GoodsItem组件封装"></a>GoodsItem组件封装</h1><h2 id="1-封装组件"><a href="#1-封装组件" class="headerlink" title="1. 封装组件"></a>1. 封装组件</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">defineProps(&#123;</span><br><span class="line">  goods: &#123;</span><br><span class="line">    type: Object,</span><br><span class="line">    default: () =&gt; &#123; &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;RouterLink to=&quot;/&quot; class=&quot;goods-item&quot;&gt;</span><br><span class="line">    &lt;img :src=&quot;goods.picture&quot; alt=&quot;&quot; /&gt;</span><br><span class="line">    &lt;p class=&quot;name ellipsis&quot;&gt;&#123;&#123; goods.name &#125;&#125;&lt;/p&gt;</span><br><span class="line">    &lt;p class=&quot;desc ellipsis&quot;&gt;&#123;&#123; goods.desc &#125;&#125;&lt;/p&gt;</span><br><span class="line">    &lt;p class=&quot;price&quot;&gt;&amp;yen;&#123;&#123; goods.price &#125;&#125;&lt;/p&gt;</span><br><span class="line">  &lt;/RouterLink&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;style scoped lang=&quot;scss&quot;&gt;</span><br><span class="line">.goods-item &#123;</span><br><span class="line">  display: block;</span><br><span class="line">  width: 220px;</span><br><span class="line">  padding: 20px 30px;</span><br><span class="line">  text-align: center;</span><br><span class="line">  transition: all .5s;</span><br><span class="line"></span><br><span class="line">  &amp;:hover &#123;</span><br><span class="line">    transform: translate3d(0, -3px, 0);</span><br><span class="line">    box-shadow: 0 3px 8px rgb(0 0 0 / 20%);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  img &#123;</span><br><span class="line">    width: 160px;</span><br><span class="line">    height: 160px;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  p &#123;</span><br><span class="line">    padding-top: 10px;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .name &#123;</span><br><span class="line">    font-size: 16px;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .desc &#123;</span><br><span class="line">    color: #999;</span><br><span class="line">    height: 29px;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .price &#123;</span><br><span class="line">    color: $priceColor;</span><br><span class="line">    font-size: 20px;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<h2 id="2-使用组件"><a href="#2-使用组件" class="headerlink" title="2. 使用组件"></a>2. 使用组件</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;ul class=&quot;goods-list&quot;&gt;</span><br><span class="line">  &lt;li v-for=&quot;goods in cate.goods&quot; :key=&quot;item.id&quot;&gt;</span><br><span class="line">    &lt;GoodsItem :goods=&quot;goods&quot; /&gt;</span><br><span class="line">  &lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br></pre></td></tr></table></figure>




<h1 id="静态结构搭建和路由配置"><a href="#静态结构搭建和路由配置" class="headerlink" title="静态结构搭建和路由配置"></a>静态结构搭建和路由配置</h1><h2 id="1-准备分类组件"><a href="#1-准备分类组件" class="headerlink" title="1. 准备分类组件"></a>1. 准备分类组件</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&#x27;top-category&#x27;&gt;</span><br><span class="line">    我是分类</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure>

<h2 id="2-配置路由"><a href="#2-配置路由" class="headerlink" title="2. 配置路由"></a>2. 配置路由</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createRouter, createWebHashHistory &#125; <span class="keyword">from</span> <span class="string">&#x27;vue-router&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Layout</span> <span class="keyword">from</span> <span class="string">&#x27;@/views/Layout/index.vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Home</span> <span class="keyword">from</span> <span class="string">&#x27;@/views/Home/index.vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Category</span> <span class="keyword">from</span> <span class="string">&#x27;@/views/Category/index.vue&#x27;</span></span><br><span class="line"><span class="keyword">const</span> router = <span class="title function_">createRouter</span>(&#123;</span><br><span class="line">  <span class="attr">history</span>: <span class="title function_">createWebHashHistory</span>(<span class="keyword">import</span>.<span class="property">meta</span>.<span class="property">env</span>.<span class="property">BASE_URL</span>),</span><br><span class="line">  <span class="attr">routes</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&#x27;/&#x27;</span>,</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&#x27;layout&#x27;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="title class_">Layout</span>,</span><br><span class="line">      <span class="attr">children</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">path</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&#x27;home&#x27;</span>,</span><br><span class="line">          <span class="attr">component</span>: <span class="title class_">Home</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">path</span>: <span class="string">&#x27;category/:id&#x27;</span>,</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&#x27;category&#x27;</span>,</span><br><span class="line">          <span class="attr">component</span>: <span class="title class_">Category</span></span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&#x27;/login&#x27;</span>,</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&#x27;login&#x27;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="title class_">Login</span></span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">  ]</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router</span><br></pre></td></tr></table></figure>

<h2 id="3-配置导航区域链接"><a href="#3-配置导航区域链接" class="headerlink" title="3. 配置导航区域链接"></a>3. 配置导航区域链接</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;item in categoryStore.categoryList&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;item.id&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">RouterLink</span> <span class="attr">active-class</span>=<span class="string">&quot;active&quot;</span> <span class="attr">:to</span>=<span class="string">&quot;`/category/$&#123;item.id&#125;`&quot;</span>&gt;</span></span><br><span class="line">    &#123;&#123; item.name &#125;&#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">RouterLink</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h1 id="面包屑导航渲染"><a href="#面包屑导航渲染" class="headerlink" title="面包屑导航渲染"></a>面包屑导航渲染</h1><h2 id="1-认识组件准备模版"><a href="#1-认识组件准备模版" class="headerlink" title="1. 认识组件准备模版"></a>1. 认识组件准备模版</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;top-category&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;container m-top-20&quot;&gt;</span><br><span class="line">      &lt;!-- 面包屑 --&gt;</span><br><span class="line">      &lt;div class=&quot;bread-container&quot;&gt;</span><br><span class="line">        &lt;el-breadcrumb separator=&quot;&gt;&quot;&gt;</span><br><span class="line">          &lt;el-breadcrumb-item :to=&quot;&#123; path: &#x27;/&#x27; &#125;&quot;&gt;首页&lt;/el-breadcrumb-item&gt;</span><br><span class="line">          &lt;el-breadcrumb-item&gt;居家&lt;/el-breadcrumb-item&gt;</span><br><span class="line">        &lt;/el-breadcrumb&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;style scoped lang=&quot;scss&quot;&gt;</span><br><span class="line">.top-category &#123;</span><br><span class="line">  h3 &#123;</span><br><span class="line">    font-size: 28px;</span><br><span class="line">    color: #666;</span><br><span class="line">    font-weight: normal;</span><br><span class="line">    text-align: center;</span><br><span class="line">    line-height: 100px;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .sub-list &#123;</span><br><span class="line">    margin-top: 20px;</span><br><span class="line">    background-color: #fff;</span><br><span class="line"></span><br><span class="line">    ul &#123;</span><br><span class="line">      display: flex;</span><br><span class="line">      padding: 0 32px;</span><br><span class="line">      flex-wrap: wrap;</span><br><span class="line"></span><br><span class="line">      li &#123;</span><br><span class="line">        width: 168px;</span><br><span class="line">        height: 160px;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        a &#123;</span><br><span class="line">          text-align: center;</span><br><span class="line">          display: block;</span><br><span class="line">          font-size: 16px;</span><br><span class="line"></span><br><span class="line">          img &#123;</span><br><span class="line">            width: 100px;</span><br><span class="line">            height: 100px;</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">          p &#123;</span><br><span class="line">            line-height: 40px;</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">          &amp;:hover &#123;</span><br><span class="line">            color: $xtxColor;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .ref-goods &#123;</span><br><span class="line">    background-color: #fff;</span><br><span class="line">    margin-top: 20px;</span><br><span class="line">    position: relative;</span><br><span class="line"></span><br><span class="line">    .head &#123;</span><br><span class="line">      .xtx-more &#123;</span><br><span class="line">        position: absolute;</span><br><span class="line">        top: 20px;</span><br><span class="line">        right: 20px;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      .tag &#123;</span><br><span class="line">        text-align: center;</span><br><span class="line">        color: #999;</span><br><span class="line">        font-size: 20px;</span><br><span class="line">        position: relative;</span><br><span class="line">        top: -20px;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .body &#123;</span><br><span class="line">      display: flex;</span><br><span class="line">      justify-content: space-around;</span><br><span class="line">      padding: 0 40px 30px;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .bread-container &#123;</span><br><span class="line">    padding: 25px 0;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<h2 id="2-封装接口-1"><a href="#2-封装接口-1" class="headerlink" title="2. 封装接口"></a>2. 封装接口</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> request <span class="keyword">from</span> <span class="string">&#x27;@/utils/request&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: 获取分类数据</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">*</span>&#125; id 分类id </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> &#123;<span class="type">*</span>&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">getTopCategoryAPI</span> = (<span class="params">id</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>:<span class="string">&#x27;/category&#x27;</span>,</span><br><span class="line">    <span class="attr">params</span>:&#123;</span><br><span class="line">      id</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="3-渲染面包屑导航"><a href="#3-渲染面包屑导航" class="headerlink" title="3. 渲染面包屑导航"></a>3. 渲染面包屑导航</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">  import &#123; findTopCategoryAPI &#125; from &#x27;@/apis/category&#x27;</span><br><span class="line">  const categoryData = ref(&#123;&#125;)</span><br><span class="line">  const route = useRoute()</span><br><span class="line">  const getCategory = async (id) =&gt; &#123;</span><br><span class="line">    // 如何在setup中获取路由参数 useRoute() -&gt; route 等价于this.$route</span><br><span class="line">    const res = await findTopCategoryAPI(id)</span><br><span class="line">    categoryData.value = res.result</span><br><span class="line">  &#125;</span><br><span class="line">  getCategory(route.params.id)</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;bread-container&quot;&gt;</span><br><span class="line">    &lt;el-breadcrumb separator=&quot;&gt;&quot;&gt;</span><br><span class="line">      &lt;el-breadcrumb-item :to=&quot;&#123; path: &#x27;/&#x27; &#125;&quot;&gt;首页&lt;/el-breadcrumb-item&gt;</span><br><span class="line">      &lt;el-breadcrumb-item&gt;&#123;&#123; categoryData.name &#125;&#125;&lt;/el-breadcrumb-item&gt;</span><br><span class="line">    &lt;/el-breadcrumb&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure>

<h1 id="分类Banner渲染"><a href="#分类Banner渲染" class="headerlink" title="分类Banner渲染"></a>分类Banner渲染</h1><h2 id="1-适配接口"><a href="#1-适配接口" class="headerlink" title="1. 适配接口"></a>1. 适配接口</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">getBannerAPI</span> (<span class="params">params = &#123;&#125;</span>) &#123;</span><br><span class="line">  <span class="comment">// 默认为1 商品为2</span></span><br><span class="line">  <span class="keyword">const</span> &#123; distributionSite = <span class="string">&#x27;1&#x27;</span> &#125; = params</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">httpInstance</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">&#x27;/home/banner&#x27;</span>,</span><br><span class="line">    <span class="attr">params</span>: &#123;</span><br><span class="line">      distributionSite</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="2-迁移首页Banner逻辑"><a href="#2-迁移首页Banner逻辑" class="headerlink" title="2. 迁移首页Banner逻辑"></a>2. 迁移首页Banner逻辑</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">// 部分代码省略</span><br><span class="line">import &#123; getBannerAPI &#125; from &#x27;@/apis/home&#x27;</span><br><span class="line"></span><br><span class="line">// 获取banner</span><br><span class="line">const bannerList = ref([])</span><br><span class="line"></span><br><span class="line">const getBanner = async () =&gt; &#123;</span><br><span class="line">  const res = await getBannerAPI(&#123;</span><br><span class="line">    distributionSite: &#x27;2&#x27;</span><br><span class="line">  &#125;)</span><br><span class="line">  console.log(res)</span><br><span class="line">  bannerList.value = res.result</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">onMounted(() =&gt; getBanner())</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;top-category&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;container m-top-20&quot;&gt;</span><br><span class="line">      &lt;!-- 面包屑 --&gt;</span><br><span class="line">      &lt;div class=&quot;bread-container&quot;&gt;</span><br><span class="line">        &lt;el-breadcrumb separator=&quot;&gt;&quot;&gt;</span><br><span class="line">          &lt;el-breadcrumb-item :to=&quot;&#123; path: &#x27;/&#x27; &#125;&quot;&gt;首页&lt;/el-breadcrumb-item&gt;</span><br><span class="line">          &lt;el-breadcrumb-item&gt;&#123;&#123; categoryData.name &#125;&#125;&lt;/el-breadcrumb-item&gt;</span><br><span class="line">        &lt;/el-breadcrumb&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;!-- 轮播图 --&gt;</span><br><span class="line">      &lt;div class=&quot;home-banner&quot;&gt;</span><br><span class="line">        &lt;el-carousel height=&quot;500px&quot;&gt;</span><br><span class="line">          &lt;el-carousel-item v-for=&quot;item in bannerList&quot; :key=&quot;item.id&quot;&gt;</span><br><span class="line">            &lt;img :src=&quot;item.imgUrl&quot; alt=&quot;&quot;&gt;</span><br><span class="line">          &lt;/el-carousel-item&gt;</span><br><span class="line">        &lt;/el-carousel&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;style scoped lang=&quot;scss&quot;&gt;</span><br><span class="line">// 部分代码省略</span><br><span class="line">.home-banner &#123;</span><br><span class="line">  width: 1240px;</span><br><span class="line">  height: 500px;</span><br><span class="line">  margin: 0 auto;</span><br><span class="line">  img &#123;</span><br><span class="line">    width: 100%;</span><br><span class="line">    height: 500px;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<h1 id="导航激活设置分类列表渲染"><a href="#导航激活设置分类列表渲染" class="headerlink" title="导航激活设置分类列表渲染"></a>导航激活设置分类列表渲染</h1><h2 id="1-导航激活状态设置"><a href="#1-导航激活状态设置" class="headerlink" title="1. 导航激活状态设置"></a>1. 导航激活状态设置</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;RouterLink active-class=&quot;active&quot; :to=&quot;`/category/$&#123;item.id&#125;`&quot;&gt;&#123;&#123; item.name &#125;&#125;&lt;/RouterLink&gt;</span><br></pre></td></tr></table></figure>

<h2 id="2-分类数据模版"><a href="#2-分类数据模版" class="headerlink" title="2. 分类数据模版"></a>2. 分类数据模版</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;sub-list&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h3</span>&gt;</span>全部分类<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;i in categoryData.children&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;i.id&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">RouterLink</span> <span class="attr">to</span>=<span class="string">&quot;/&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">:src</span>=<span class="string">&quot;i.picture&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123; i.name &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">RouterLink</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;ref-goods&quot;</span> <span class="attr">v-for</span>=<span class="string">&quot;item in categoryData.children&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;item.id&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;head&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>- &#123;&#123; item.name &#125;&#125;-<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;body&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">GoodsItem</span> <span class="attr">v-for</span>=<span class="string">&quot;good in item.goods&quot;</span> <span class="attr">:goods</span>=<span class="string">&quot;good&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;good.id&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h1 id="★路由缓存问题解决（重要）"><a href="#★路由缓存问题解决（重要）" class="headerlink" title="★路由缓存问题解决（重要）"></a>★路由缓存问题解决（重要）</h1><blockquote>
<p>缓存问题：当路由path一样，参数不同的时候会选择直接复用路由对应的组件</p>
<p>​				☆例如从&#x2F;users&#x2F;johnny导航到&#x2F;users&#x2F;jolyne时，相同的组件实例将被复用。同时生命周期钩子不会被调用，也就是不会重新渲染了。</p>
<p>​				比如之前写的一级路由的切换</p>
<p>解决方案：</p>
<ol>
<li>给 routerv-view 添加key属性，破坏缓存（让组件实例不复用，强制销毁重建），太过粗暴，存在浪费</li>
<li>使用 onBeforeRouteUpdate钩子函数，做精确更新（监听路由变化，变化之后执行数据更新操作）</li>
</ol>
</blockquote>
<h1 id="基于业务逻辑的函数拆分"><a href="#基于业务逻辑的函数拆分" class="headerlink" title="基于业务逻辑的函数拆分"></a>基于业务逻辑的函数拆分</h1><blockquote>
<p>基本思想：把组件内独立的业务逻辑通过 <code>useXXX</code> 函数做封装处理，在组件中做组合使用</p>
</blockquote>
<p><img data-src="https://cdn.nlark.com/yuque/0/2023/png/274425/1678250904174-3f8c3ae9-288e-4642-809f-8d7c778f5c2a.png#averageHue=%23d2cbaa&clientId=uf5787126-9590-4&from=paste&height=320&id=udfd85dc7&name=image.png&originHeight=640&originWidth=1126&originalType=binary&ratio=2&rotation=0&showTitle=false&size=21921&status=done&style=none&taskId=u732464b9-cc95-482d-a474-4795b9345ad&title=&width=563" alt="image.png"></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 封装分类数据业务相关代码</span></span><br><span class="line"><span class="keyword">import</span> &#123; onMounted, ref &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; getCategoryAPI &#125; <span class="keyword">from</span> <span class="string">&#x27;@/apis/category&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; useRoute &#125; <span class="keyword">from</span> <span class="string">&#x27;vue-router&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; onBeforeRouteUpdate &#125; <span class="keyword">from</span> <span class="string">&#x27;vue-router&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">useCategory</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="comment">// 获取分类数据</span></span><br><span class="line">  <span class="keyword">const</span> categoryData = <span class="title function_">ref</span>(&#123;&#125;)</span><br><span class="line">  <span class="keyword">const</span> route = <span class="title function_">useRoute</span>()</span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">getCategory</span> = <span class="keyword">async</span> (<span class="params">id = route.params.id</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> res = <span class="keyword">await</span> <span class="title function_">getCategoryAPI</span>(id)</span><br><span class="line">    categoryData.<span class="property">value</span> = res.<span class="property">result</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="title function_">onMounted</span>(<span class="function">() =&gt;</span> <span class="title function_">getCategory</span>())</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 目标:路由参数变化的时候 可以把分类数据接口重新发送</span></span><br><span class="line">  <span class="title function_">onBeforeRouteUpdate</span>(<span class="function">(<span class="params">to</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 存在问题：使用最新的路由参数请求最新的分类数据</span></span><br><span class="line">    <span class="title function_">getCategory</span>(to.<span class="property">params</span>.<span class="property">id</span>)</span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    categoryData</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 封装banner轮播图相关的业务代码</span></span><br><span class="line"><span class="keyword">import</span> &#123; ref, onMounted &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; getBannerAPI &#125; <span class="keyword">from</span> <span class="string">&#x27;@/apis/home&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">useBanner</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> bannerList = <span class="title function_">ref</span>([])</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">getBanner</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> res = <span class="keyword">await</span> <span class="title function_">getBannerAPI</span>(&#123;</span><br><span class="line">      <span class="attr">distributionSite</span>: <span class="string">&#x27;2&#x27;</span></span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(res)</span><br><span class="line">    bannerList.<span class="property">value</span> = res.<span class="property">result</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">onMounted</span>(<span class="function">() =&gt;</span> <span class="title function_">getBanner</span>())</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    bannerList</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line"></span><br><span class="line">import GoodsItem from &#x27;../Home/components/GoodsItem.vue&#x27;</span><br><span class="line">import &#123; useBanner &#125; from &#x27;./composables/useBanner&#x27;</span><br><span class="line">import &#123; useCategory &#125; from &#x27;./composables/useCategory&#x27;</span><br><span class="line">const &#123; bannerList &#125; = useBanner()</span><br><span class="line">const &#123; categoryData &#125; = useCategory()</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>


<h1 id="整体业务认识和路由配置"><a href="#整体业务认识和路由配置" class="headerlink" title="整体业务认识和路由配置"></a>整体业务认识和路由配置</h1><h2 id="1-准备组件模版"><a href="#1-准备组件模版" class="headerlink" title="1. 准备组件模版"></a>1. 准备组件模版</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;container &quot;&gt;</span><br><span class="line">    &lt;!-- 面包屑 --&gt;</span><br><span class="line">    &lt;div class=&quot;bread-container&quot;&gt;</span><br><span class="line">      &lt;el-breadcrumb separator=&quot;&gt;&quot;&gt;</span><br><span class="line">        &lt;el-breadcrumb-item :to=&quot;&#123; path: &#x27;/&#x27; &#125;&quot;&gt;首页&lt;/el-breadcrumb-item&gt;</span><br><span class="line">        &lt;el-breadcrumb-item :to=&quot;&#123; path: &#x27;/&#x27; &#125;&quot;&gt;居家</span><br><span class="line">        &lt;/el-breadcrumb-item&gt;</span><br><span class="line">        &lt;el-breadcrumb-item&gt;居家生活用品&lt;/el-breadcrumb-item&gt;</span><br><span class="line">      &lt;/el-breadcrumb&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;sub-container&quot;&gt;</span><br><span class="line">      &lt;el-tabs&gt;</span><br><span class="line">        &lt;el-tab-pane label=&quot;最新商品&quot; name=&quot;publishTime&quot;&gt;&lt;/el-tab-pane&gt;</span><br><span class="line">        &lt;el-tab-pane label=&quot;最高人气&quot; name=&quot;orderNum&quot;&gt;&lt;/el-tab-pane&gt;</span><br><span class="line">        &lt;el-tab-pane label=&quot;评论最多&quot; name=&quot;evaluateNum&quot;&gt;&lt;/el-tab-pane&gt;</span><br><span class="line">      &lt;/el-tabs&gt;</span><br><span class="line">      &lt;div class=&quot;body&quot;&gt;</span><br><span class="line">         &lt;!-- 商品列表--&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;style lang=&quot;scss&quot; scoped&gt;</span><br><span class="line">.bread-container &#123;</span><br><span class="line">  padding: 25px 0;</span><br><span class="line">  color: #666;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.sub-container &#123;</span><br><span class="line">  padding: 20px 10px;</span><br><span class="line">  background-color: #fff;</span><br><span class="line"></span><br><span class="line">  .body &#123;</span><br><span class="line">    display: flex;</span><br><span class="line">    flex-wrap: wrap;</span><br><span class="line">    padding: 0 10px;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .goods-item &#123;</span><br><span class="line">    display: block;</span><br><span class="line">    width: 220px;</span><br><span class="line">    margin-right: 20px;</span><br><span class="line">    padding: 20px 30px;</span><br><span class="line">    text-align: center;</span><br><span class="line"></span><br><span class="line">    img &#123;</span><br><span class="line">      width: 160px;</span><br><span class="line">      height: 160px;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    p &#123;</span><br><span class="line">      padding-top: 10px;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .name &#123;</span><br><span class="line">      font-size: 16px;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .desc &#123;</span><br><span class="line">      color: #999;</span><br><span class="line">      height: 29px;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .price &#123;</span><br><span class="line">      color: $priceColor;</span><br><span class="line">      font-size: 20px;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .pagination-container &#123;</span><br><span class="line">    margin-top: 20px;</span><br><span class="line">    display: flex;</span><br><span class="line">    justify-content: center;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<h2 id="2-配置路由关系"><a href="#2-配置路由关系" class="headerlink" title="2. 配置路由关系"></a>2. 配置路由关系</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createRouter, createWebHashHistory &#125; <span class="keyword">from</span> <span class="string">&#x27;vue-router&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Layout</span> <span class="keyword">from</span> <span class="string">&#x27;@/views/Layout/index.vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Home</span> <span class="keyword">from</span> <span class="string">&#x27;@/views/Home/index.vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Category</span> <span class="keyword">from</span> <span class="string">&#x27;@/views/Category/index.vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">SubCategory</span> <span class="keyword">from</span> <span class="string">&#x27;@/views/SubCategory/index.vue&#x27;</span></span><br><span class="line"><span class="keyword">const</span> router = <span class="title function_">createRouter</span>(&#123;</span><br><span class="line">  <span class="attr">history</span>: <span class="title function_">createWebHashHistory</span>(<span class="keyword">import</span>.<span class="property">meta</span>.<span class="property">env</span>.<span class="property">BASE_URL</span>),</span><br><span class="line">  <span class="attr">routes</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&#x27;/&#x27;</span>,</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&#x27;layout&#x27;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="title class_">Layout</span>,</span><br><span class="line">      <span class="attr">children</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">path</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&#x27;home&#x27;</span>,</span><br><span class="line">          <span class="attr">component</span>: <span class="title class_">Home</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">path</span>: <span class="string">&#x27;category/:id&#x27;</span>,</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&#x27;category&#x27;</span>,</span><br><span class="line">          <span class="attr">component</span>: <span class="title class_">Category</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">path</span>: <span class="string">&#x27;category/sub/:id&#x27;</span>,</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&#x27;subCategory&#x27;</span>,</span><br><span class="line">          <span class="attr">component</span>: <span class="title class_">SubCategory</span></span><br><span class="line">        &#125;,</span><br><span class="line">      ]</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&#x27;/login&#x27;</span>,</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&#x27;login&#x27;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="title class_">Login</span></span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">  ]</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router</span><br></pre></td></tr></table></figure>

<h2 id="3-跳转配置"><a href="#3-跳转配置" class="headerlink" title="3. 跳转配置"></a>3. 跳转配置</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;sub-list&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h3</span>&gt;</span>全部分类<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;i in categoryData.children&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;i.id&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">RouterLink</span> <span class="attr">:to</span>=<span class="string">&quot;`/category/sub/$&#123;i.id&#125;`&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">:src</span>=<span class="string">&quot;i.picture&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123; i.name &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">RouterLink</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h1 id="面包屑导航实现"><a href="#面包屑导航实现" class="headerlink" title="面包屑导航实现"></a>面包屑导航实现</h1><h2 id="1-准备接口"><a href="#1-准备接口" class="headerlink" title="1. 准备接口"></a>1. 准备接口</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: 获取二级分类列表数据</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">*</span>&#125; id 分类id </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> &#123;<span class="type">*</span>&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">getCategoryFilterAPI</span> = (<span class="params">id</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>:<span class="string">&#x27;/category/sub/filter&#x27;</span>,</span><br><span class="line">    <span class="attr">params</span>:&#123;</span><br><span class="line">      id</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="2-获取数据渲染模版-1"><a href="#2-获取数据渲染模版-1" class="headerlink" title="2. 获取数据渲染模版"></a>2. 获取数据渲染模版</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; getCategoryFilterAPI &#125; from &#x27;@/apis/category&#x27;</span><br><span class="line">// 获取面包屑导航数据</span><br><span class="line">const filterData = ref(&#123;&#125;)</span><br><span class="line">const getFilterData = async () =&gt; &#123;</span><br><span class="line">  const res = await getCategoryFilterAPI(route.params.id)</span><br><span class="line">  filterData.value = res.result</span><br><span class="line">&#125;</span><br><span class="line">getFilterData()</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;bread-container&quot;&gt;</span><br><span class="line">    &lt;el-breadcrumb separator=&quot;&gt;&quot;&gt;</span><br><span class="line">      &lt;el-breadcrumb-item :to=&quot;&#123; path: &#x27;/&#x27; &#125;&quot;&gt;首页&lt;/el-breadcrumb-item&gt;</span><br><span class="line">      &lt;el-breadcrumb-item :to=&quot;&#123; path: `/category/$&#123;filterData.parentId&#125;` &#125;&quot;&gt;&#123;&#123; filterData.parentName &#125;&#125;</span><br><span class="line">      &lt;/el-breadcrumb-item&gt;</span><br><span class="line">      &lt;el-breadcrumb-item&gt;&#123;&#123; filterData.name &#125;&#125;&lt;/el-breadcrumb-item&gt;</span><br><span class="line">    &lt;/el-breadcrumb&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure>

<h1 id="分类基础列表实现"><a href="#分类基础列表实现" class="headerlink" title="分类基础列表实现"></a>分类基础列表实现</h1><h2 id="1-准备接口-1"><a href="#1-准备接口-1" class="headerlink" title="1. 准备接口"></a>1. 准备接口</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: 获取导航数据</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> &#123;<span class="type"> </span></span></span><br><span class="line"><span class="type"><span class="comment">     categoryId: 1005000 ,</span></span></span><br><span class="line"><span class="type"><span class="comment">     page: 1,</span></span></span><br><span class="line"><span class="type"><span class="comment">     pageSize: 20,</span></span></span><br><span class="line"><span class="type"><span class="comment">     sortField: &#x27;publishTime&#x27; | &#x27;orderNum&#x27; | &#x27;evaluateNum&#x27;</span></span></span><br><span class="line"><span class="type"><span class="comment">   </span>&#125; </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> &#123;<span class="type">*</span>&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">getSubCategoryAPI</span> = (<span class="params">data</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>:<span class="string">&#x27;/category/goods/temporary&#x27;</span>,</span><br><span class="line">    <span class="attr">method</span>:<span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line">    data</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="2-获取数据列表"><a href="#2-获取数据列表" class="headerlink" title="2. 获取数据列表"></a>2. 获取数据列表</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">  </span><br><span class="line">// 获取基础列表数据渲染</span><br><span class="line">const goodList = ref([])</span><br><span class="line">const reqData = ref(&#123;</span><br><span class="line">  categoryId: route.params.id,</span><br><span class="line">  page: 1,</span><br><span class="line">  pageSize: 20,</span><br><span class="line">  sortField: &#x27;publishTime&#x27;</span><br><span class="line">&#125;)</span><br><span class="line">  </span><br><span class="line">const getGoodList = async () =&gt; &#123;</span><br><span class="line">  const res = await getSubCategoryAPI(reqData.value)</span><br><span class="line">  console.log(res)</span><br><span class="line">  goodList.value = res.result.items</span><br><span class="line">&#125;</span><br><span class="line">  </span><br><span class="line">onMounted(() =&gt; getGoodList())</span><br><span class="line">  </span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<h1 id="列表筛选实现"><a href="#列表筛选实现" class="headerlink" title="列表筛选实现"></a>列表筛选实现</h1><blockquote>
<p>思路：tab组件切换时修改reqData中的sortField字段，重新拉取接口列表</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">// tab切换回调</span><br><span class="line">const tabChange = () =&gt; &#123;</span><br><span class="line">  console.log(&#x27;tab切换了&#x27;, reqData.value.sortField)</span><br><span class="line">  reqData.value.page = 1</span><br><span class="line">  getGoodList()</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;el-tabs v-model=&quot;reqData.sortField&quot; @tab-change=&quot;tabChange&quot;&gt;</span><br><span class="line">    &lt;el-tab-pane label=&quot;最新商品&quot; name=&quot;publishTime&quot;&gt;&lt;/el-tab-pane&gt;</span><br><span class="line">    &lt;el-tab-pane label=&quot;最高人气&quot; name=&quot;orderNum&quot;&gt;&lt;/el-tab-pane&gt;</span><br><span class="line">    &lt;el-tab-pane label=&quot;评论最多&quot; name=&quot;evaluateNum&quot;&gt;&lt;/el-tab-pane&gt;</span><br><span class="line">  &lt;/el-tabs&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure>

<h1 id="无限加载实现"><a href="#无限加载实现" class="headerlink" title="无限加载实现"></a>无限加载实现</h1><blockquote>
<p>基础思路</p>
<ol>
<li>触底条件满足之后 page++，拉取下一页数据</li>
<li>新老数据做数组拼接</li>
<li>判断是否已经全部加载完毕，停止监听</li>
</ol>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 加载更多</span></span><br><span class="line"><span class="keyword">const</span> disabled = <span class="title function_">ref</span>(<span class="literal">false</span>)</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">load</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;加载更多数据咯&#x27;</span>)</span><br><span class="line">  <span class="comment">// 获取下一页的数据</span></span><br><span class="line">  reqData.<span class="property">value</span>.<span class="property">page</span>++</span><br><span class="line">  <span class="keyword">const</span> res = <span class="keyword">await</span> <span class="title function_">getSubCategoryAPI</span>(reqData.<span class="property">value</span>)</span><br><span class="line">  goodList.<span class="property">value</span> = [...goodList.<span class="property">value</span>, ...res.<span class="property">result</span>.<span class="property">items</span>]</span><br><span class="line">  <span class="comment">// 加载完毕 停止监听</span></span><br><span class="line">  <span class="keyword">if</span> (res.<span class="property">result</span>.<span class="property">items</span>.<span class="property">length</span> === <span class="number">0</span>) &#123;</span><br><span class="line">    disabled.<span class="property">value</span> = <span class="literal">true</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h1 id="整体认识和路由配置"><a href="#整体认识和路由配置" class="headerlink" title="整体认识和路由配置"></a>整体认识和路由配置</h1><h2 id="1-准备组件模版-1"><a href="#1-准备组件模版-1" class="headerlink" title="1. 准备组件模版"></a>1. 准备组件模版</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;xtx-goods-page&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;container&quot;&gt;</span><br><span class="line">      &lt;div class=&quot;bread-container&quot;&gt;</span><br><span class="line">        &lt;el-breadcrumb separator=&quot;&gt;&quot;&gt;</span><br><span class="line">          &lt;el-breadcrumb-item :to=&quot;&#123; path: &#x27;/&#x27; &#125;&quot;&gt;首页&lt;/el-breadcrumb-item&gt;</span><br><span class="line">          &lt;el-breadcrumb-item :to=&quot;&#123; path: &#x27;/&#x27; &#125;&quot;&gt;母婴</span><br><span class="line">          &lt;/el-breadcrumb-item&gt;</span><br><span class="line">          &lt;el-breadcrumb-item :to=&quot;&#123; path: &#x27;/&#x27; &#125;&quot;&gt;跑步鞋</span><br><span class="line">          &lt;/el-breadcrumb-item&gt;</span><br><span class="line">          &lt;el-breadcrumb-item&gt;抓绒保暖，毛毛虫子儿童运动鞋&lt;/el-breadcrumb-item&gt;</span><br><span class="line">        &lt;/el-breadcrumb&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;!-- 商品信息 --&gt;</span><br><span class="line">      &lt;div class=&quot;info-container&quot;&gt;</span><br><span class="line">        &lt;div&gt;</span><br><span class="line">          &lt;div class=&quot;goods-info&quot;&gt;</span><br><span class="line">            &lt;div class=&quot;media&quot;&gt;</span><br><span class="line">              &lt;!-- 图片预览区 --&gt;</span><br><span class="line"></span><br><span class="line">              &lt;!-- 统计数量 --&gt;</span><br><span class="line">              &lt;ul class=&quot;goods-sales&quot;&gt;</span><br><span class="line">                &lt;li&gt;</span><br><span class="line">                  &lt;p&gt;销量人气&lt;/p&gt;</span><br><span class="line">                  &lt;p&gt; 100+ &lt;/p&gt;</span><br><span class="line">                  &lt;p&gt;&lt;i class=&quot;iconfont icon-task-filling&quot;&gt;&lt;/i&gt;销量人气&lt;/p&gt;</span><br><span class="line">                &lt;/li&gt;</span><br><span class="line">                &lt;li&gt;</span><br><span class="line">                  &lt;p&gt;商品评价&lt;/p&gt;</span><br><span class="line">                  &lt;p&gt;200+&lt;/p&gt;</span><br><span class="line">                  &lt;p&gt;&lt;i class=&quot;iconfont icon-comment-filling&quot;&gt;&lt;/i&gt;查看评价&lt;/p&gt;</span><br><span class="line">                &lt;/li&gt;</span><br><span class="line">                &lt;li&gt;</span><br><span class="line">                  &lt;p&gt;收藏人气&lt;/p&gt;</span><br><span class="line">                  &lt;p&gt;300+&lt;/p&gt;</span><br><span class="line">                  &lt;p&gt;&lt;i class=&quot;iconfont icon-favorite-filling&quot;&gt;&lt;/i&gt;收藏商品&lt;/p&gt;</span><br><span class="line">                &lt;/li&gt;</span><br><span class="line">                &lt;li&gt;</span><br><span class="line">                  &lt;p&gt;品牌信息&lt;/p&gt;</span><br><span class="line">                  &lt;p&gt;400+&lt;/p&gt;</span><br><span class="line">                  &lt;p&gt;&lt;i class=&quot;iconfont icon-dynamic-filling&quot;&gt;&lt;/i&gt;品牌主页&lt;/p&gt;</span><br><span class="line">                &lt;/li&gt;</span><br><span class="line">              &lt;/ul&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;spec&quot;&gt;</span><br><span class="line">              &lt;!-- 商品信息区 --&gt;</span><br><span class="line">              &lt;p class=&quot;g-name&quot;&gt; 抓绒保暖，毛毛虫儿童鞋 &lt;/p&gt;</span><br><span class="line">              &lt;p class=&quot;g-desc&quot;&gt;好穿 &lt;/p&gt;</span><br><span class="line">              &lt;p class=&quot;g-price&quot;&gt;</span><br><span class="line">                &lt;span&gt;200&lt;/span&gt;</span><br><span class="line">                &lt;span&gt; 100&lt;/span&gt;</span><br><span class="line">              &lt;/p&gt;</span><br><span class="line">              &lt;div class=&quot;g-service&quot;&gt;</span><br><span class="line">                &lt;dl&gt;</span><br><span class="line">                  &lt;dt&gt;促销&lt;/dt&gt;</span><br><span class="line">                  &lt;dd&gt;12月好物放送，App领券购买直降120元&lt;/dd&gt;</span><br><span class="line">                &lt;/dl&gt;</span><br><span class="line">                &lt;dl&gt;</span><br><span class="line">                  &lt;dt&gt;服务&lt;/dt&gt;</span><br><span class="line">                  &lt;dd&gt;</span><br><span class="line">                    &lt;span&gt;无忧退货&lt;/span&gt;</span><br><span class="line">                    &lt;span&gt;快速退款&lt;/span&gt;</span><br><span class="line">                    &lt;span&gt;免费包邮&lt;/span&gt;</span><br><span class="line">                    &lt;a href=&quot;javascript:;&quot;&gt;了解详情&lt;/a&gt;</span><br><span class="line">                  &lt;/dd&gt;</span><br><span class="line">                &lt;/dl&gt;</span><br><span class="line">              &lt;/div&gt;</span><br><span class="line">              &lt;!-- sku组件 --&gt;</span><br><span class="line"></span><br><span class="line">              &lt;!-- 数据组件 --&gt;</span><br><span class="line"></span><br><span class="line">              &lt;!-- 按钮组件 --&gt;</span><br><span class="line">              &lt;div&gt;</span><br><span class="line">                &lt;el-button size=&quot;large&quot; class=&quot;btn&quot;&gt;</span><br><span class="line">                  加入购物车</span><br><span class="line">                &lt;/el-button&gt;</span><br><span class="line">              &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">          &lt;div class=&quot;goods-footer&quot;&gt;</span><br><span class="line">            &lt;div class=&quot;goods-article&quot;&gt;</span><br><span class="line">              &lt;!-- 商品详情 --&gt;</span><br><span class="line">              &lt;div class=&quot;goods-tabs&quot;&gt;</span><br><span class="line">                &lt;nav&gt;</span><br><span class="line">                  &lt;a&gt;商品详情&lt;/a&gt;</span><br><span class="line">                &lt;/nav&gt;</span><br><span class="line">                &lt;div class=&quot;goods-detail&quot;&gt;</span><br><span class="line">                  &lt;!-- 属性 --&gt;</span><br><span class="line">                  &lt;ul class=&quot;attrs&quot;&gt;</span><br><span class="line">                    &lt;li v-for=&quot;item in 3&quot; :key=&quot;item.value&quot;&gt;</span><br><span class="line">                      &lt;span class=&quot;dt&quot;&gt;白色&lt;/span&gt;</span><br><span class="line">                      &lt;span class=&quot;dd&quot;&gt;纯棉&lt;/span&gt;</span><br><span class="line">                    &lt;/li&gt;</span><br><span class="line">                  &lt;/ul&gt;</span><br><span class="line">                  &lt;!-- 图片 --&gt;</span><br><span class="line"></span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">              &lt;/div&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;!-- 24热榜+专题推荐 --&gt;</span><br><span class="line">            &lt;div class=&quot;goods-aside&quot;&gt;</span><br><span class="line"></span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;style scoped lang=&#x27;scss&#x27;&gt;</span><br><span class="line">.xtx-goods-page &#123;</span><br><span class="line">  .goods-info &#123;</span><br><span class="line">    min-height: 600px;</span><br><span class="line">    background: #fff;</span><br><span class="line">    display: flex;</span><br><span class="line"></span><br><span class="line">    .media &#123;</span><br><span class="line">      width: 580px;</span><br><span class="line">      height: 600px;</span><br><span class="line">      padding: 30px 50px;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .spec &#123;</span><br><span class="line">      flex: 1;</span><br><span class="line">      padding: 30px 30px 30px 0;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .goods-footer &#123;</span><br><span class="line">    display: flex;</span><br><span class="line">    margin-top: 20px;</span><br><span class="line"></span><br><span class="line">    .goods-article &#123;</span><br><span class="line">      width: 940px;</span><br><span class="line">      margin-right: 20px;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .goods-aside &#123;</span><br><span class="line">      width: 280px;</span><br><span class="line">      min-height: 1000px;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .goods-tabs &#123;</span><br><span class="line">    min-height: 600px;</span><br><span class="line">    background: #fff;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .goods-warn &#123;</span><br><span class="line">    min-height: 600px;</span><br><span class="line">    background: #fff;</span><br><span class="line">    margin-top: 20px;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .number-box &#123;</span><br><span class="line">    display: flex;</span><br><span class="line">    align-items: center;</span><br><span class="line"></span><br><span class="line">    .label &#123;</span><br><span class="line">      width: 60px;</span><br><span class="line">      color: #999;</span><br><span class="line">      padding-left: 10px;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .g-name &#123;</span><br><span class="line">    font-size: 22px;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .g-desc &#123;</span><br><span class="line">    color: #999;</span><br><span class="line">    margin-top: 10px;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .g-price &#123;</span><br><span class="line">    margin-top: 10px;</span><br><span class="line"></span><br><span class="line">    span &#123;</span><br><span class="line">      &amp;::before &#123;</span><br><span class="line">        content: &quot;¥&quot;;</span><br><span class="line">        font-size: 14px;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      &amp;:first-child &#123;</span><br><span class="line">        color: $priceColor;</span><br><span class="line">        margin-right: 10px;</span><br><span class="line">        font-size: 22px;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      &amp;:last-child &#123;</span><br><span class="line">        color: #999;</span><br><span class="line">        text-decoration: line-through;</span><br><span class="line">        font-size: 16px;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .g-service &#123;</span><br><span class="line">    background: #f5f5f5;</span><br><span class="line">    width: 500px;</span><br><span class="line">    padding: 20px 10px 0 10px;</span><br><span class="line">    margin-top: 10px;</span><br><span class="line"></span><br><span class="line">    dl &#123;</span><br><span class="line">      padding-bottom: 20px;</span><br><span class="line">      display: flex;</span><br><span class="line">      align-items: center;</span><br><span class="line"></span><br><span class="line">      dt &#123;</span><br><span class="line">        width: 50px;</span><br><span class="line">        color: #999;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      dd &#123;</span><br><span class="line">        color: #666;</span><br><span class="line"></span><br><span class="line">        &amp;:last-child &#123;</span><br><span class="line">          span &#123;</span><br><span class="line">            margin-right: 10px;</span><br><span class="line"></span><br><span class="line">            &amp;::before &#123;</span><br><span class="line">              content: &quot;•&quot;;</span><br><span class="line">              color: $xtxColor;</span><br><span class="line">              margin-right: 2px;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">          a &#123;</span><br><span class="line">            color: $xtxColor;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .goods-sales &#123;</span><br><span class="line">    display: flex;</span><br><span class="line">    width: 400px;</span><br><span class="line">    align-items: center;</span><br><span class="line">    text-align: center;</span><br><span class="line">    height: 140px;</span><br><span class="line"></span><br><span class="line">    li &#123;</span><br><span class="line">      flex: 1;</span><br><span class="line">      position: relative;</span><br><span class="line"></span><br><span class="line">      ~li::after &#123;</span><br><span class="line">        position: absolute;</span><br><span class="line">        top: 10px;</span><br><span class="line">        left: 0;</span><br><span class="line">        height: 60px;</span><br><span class="line">        border-left: 1px solid #e4e4e4;</span><br><span class="line">        content: &quot;&quot;;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      p &#123;</span><br><span class="line">        &amp;:first-child &#123;</span><br><span class="line">          color: #999;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        &amp;:nth-child(2) &#123;</span><br><span class="line">          color: $priceColor;</span><br><span class="line">          margin-top: 10px;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        &amp;:last-child &#123;</span><br><span class="line">          color: #666;</span><br><span class="line">          margin-top: 10px;</span><br><span class="line"></span><br><span class="line">          i &#123;</span><br><span class="line">            color: $xtxColor;</span><br><span class="line">            font-size: 14px;</span><br><span class="line">            margin-right: 2px;</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">          &amp;:hover &#123;</span><br><span class="line">            color: $xtxColor;</span><br><span class="line">            cursor: pointer;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.goods-tabs &#123;</span><br><span class="line">  min-height: 600px;</span><br><span class="line">  background: #fff;</span><br><span class="line"></span><br><span class="line">  nav &#123;</span><br><span class="line">    height: 70px;</span><br><span class="line">    line-height: 70px;</span><br><span class="line">    display: flex;</span><br><span class="line">    border-bottom: 1px solid #f5f5f5;</span><br><span class="line"></span><br><span class="line">    a &#123;</span><br><span class="line">      padding: 0 40px;</span><br><span class="line">      font-size: 18px;</span><br><span class="line">      position: relative;</span><br><span class="line"></span><br><span class="line">      &gt;span &#123;</span><br><span class="line">        color: $priceColor;</span><br><span class="line">        font-size: 16px;</span><br><span class="line">        margin-left: 10px;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.goods-detail &#123;</span><br><span class="line">  padding: 40px;</span><br><span class="line"></span><br><span class="line">  .attrs &#123;</span><br><span class="line">    display: flex;</span><br><span class="line">    flex-wrap: wrap;</span><br><span class="line">    margin-bottom: 30px;</span><br><span class="line"></span><br><span class="line">    li &#123;</span><br><span class="line">      display: flex;</span><br><span class="line">      margin-bottom: 10px;</span><br><span class="line">      width: 50%;</span><br><span class="line"></span><br><span class="line">      .dt &#123;</span><br><span class="line">        width: 100px;</span><br><span class="line">        color: #999;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      .dd &#123;</span><br><span class="line">        flex: 1;</span><br><span class="line">        color: #666;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  &gt;img &#123;</span><br><span class="line">    width: 100%;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.btn &#123;</span><br><span class="line">  margin-top: 20px;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.bread-container &#123;</span><br><span class="line">  padding: 25px 0;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<h2 id="2-配置路由-1"><a href="#2-配置路由-1" class="headerlink" title="2. 配置路由"></a>2. 配置路由</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> router = <span class="title function_">createRouter</span>(&#123;</span><br><span class="line">  <span class="attr">history</span>: <span class="title function_">createWebHistory</span>(<span class="keyword">import</span>.<span class="property">meta</span>.<span class="property">env</span>.<span class="property">BASE_URL</span>),</span><br><span class="line">  <span class="comment">// path和component对应关系的位置</span></span><br><span class="line">  <span class="attr">routes</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&#x27;/&#x27;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="title class_">Layout</span>,</span><br><span class="line">      <span class="attr">children</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">path</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">          <span class="attr">component</span>: <span class="title class_">Home</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">path</span>: <span class="string">&#x27;category/:id&#x27;</span>,</span><br><span class="line">          <span class="attr">component</span>: <span class="title class_">Category</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">path</span>: <span class="string">&#x27;category/sub/:id&#x27;</span>,</span><br><span class="line">          <span class="attr">component</span>: <span class="title class_">SubCategory</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">path</span>: <span class="string">&#x27;detail/:id&#x27;</span>,</span><br><span class="line">          <span class="attr">component</span>: <span class="title class_">Detail</span></span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&#x27;/login&#x27;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="title class_">Login</span></span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="comment">// 路由滚动行为定制</span></span><br><span class="line">  <span class="title function_">scrollBehavior</span> () &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">top</span>: <span class="number">0</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h2 id="3-绑定模版测试跳转"><a href="#3-绑定模版测试跳转" class="headerlink" title="3. 绑定模版测试跳转"></a>3. 绑定模版测试跳转</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">RouterLink</span> <span class="attr">:to</span>=<span class="string">&quot;`/detail/$&#123;item.id&#125;`&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">img</span> <span class="attr">:src</span>=<span class="string">&quot;item.picture&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;name&quot;</span>&gt;</span>&#123;&#123; item.name &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;price&quot;</span>&gt;</span><span class="symbol">&amp;yen;</span>&#123;&#123; item.price &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">RouterLink</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h1 id="渲染基础数据"><a href="#渲染基础数据" class="headerlink" title="渲染基础数据"></a>渲染基础数据</h1><h2 id="1-封装接口-1"><a href="#1-封装接口-1" class="headerlink" title="1. 封装接口"></a>1. 封装接口</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> request <span class="keyword">from</span> <span class="string">&#x27;@/utils/http&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">getDetail</span> = (<span class="params">id</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">&#x27;/goods&#x27;</span>,</span><br><span class="line">    <span class="attr">params</span>: &#123;</span><br><span class="line">      id</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="2-获取数据渲染模版-2"><a href="#2-获取数据渲染模版-2" class="headerlink" title="2. 获取数据渲染模版"></a>2. 获取数据渲染模版</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; getDetail &#125; from &#x27;@/apis/detail&#x27;</span><br><span class="line">import &#123; onMounted, ref &#125; from &#x27;vue&#x27;</span><br><span class="line">import &#123; useRoute &#125; from &#x27;vue-router&#x27;</span><br><span class="line">const goods = ref(&#123;&#125;)</span><br><span class="line">const route = useRoute()</span><br><span class="line">const getGoods = async () =&gt; &#123;</span><br><span class="line">  const res = await getDetail(route.params.id)</span><br><span class="line">  goods.value = res.result</span><br><span class="line">&#125;</span><br><span class="line">onMounted(() =&gt; getGoods())</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;xtx-goods-page&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;container&quot; v-if=&quot;goods.details&quot;&gt;</span><br><span class="line">      &lt;div class=&quot;bread-container&quot;&gt;</span><br><span class="line">        &lt;el-breadcrumb separator=&quot;&gt;&quot;&gt;</span><br><span class="line">          &lt;el-breadcrumb-item :to=&quot;&#123; path: &#x27;/&#x27; &#125;&quot;&gt;首页&lt;/el-breadcrumb-item&gt;</span><br><span class="line">          &lt;!-- </span><br><span class="line">            错误原因：goods一开始&#123;&#125;  &#123;&#125;.categories -&gt; undefined  -&gt; undefined[1]</span><br><span class="line">            1. 可选链的语法?. </span><br><span class="line">            2. v-if手动控制渲染时机 保证只有数据存在才渲染</span><br><span class="line">           --&gt;</span><br><span class="line">          &lt;el-breadcrumb-item :to=&quot;&#123; path: `/category/$&#123;goods.categories[1].id&#125;` &#125;&quot;&gt;&#123;&#123; goods.categories[1].name &#125;&#125;</span><br><span class="line">          &lt;/el-breadcrumb-item&gt;</span><br><span class="line">          &lt;el-breadcrumb-item :to=&quot;&#123; path: `/category/sub/$&#123;goods.categories[0].id&#125;` &#125;&quot;&gt;&#123;&#123;</span><br><span class="line">            goods.categories[0].name</span><br><span class="line">          &#125;&#125;</span><br><span class="line">          &lt;/el-breadcrumb-item&gt;</span><br><span class="line">          &lt;el-breadcrumb-item&gt;抓绒保暖，毛毛虫子儿童运动鞋&lt;/el-breadcrumb-item&gt;</span><br><span class="line">        &lt;/el-breadcrumb&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;!-- 商品信息 --&gt;</span><br><span class="line">      &lt;div class=&quot;info-container&quot;&gt;</span><br><span class="line">        &lt;div&gt;</span><br><span class="line">          &lt;div class=&quot;goods-info&quot;&gt;</span><br><span class="line">            &lt;div class=&quot;media&quot;&gt;</span><br><span class="line">              &lt;!-- 图片预览区 --&gt;</span><br><span class="line"></span><br><span class="line">              &lt;!-- 统计数量 --&gt;</span><br><span class="line">              &lt;ul class=&quot;goods-sales&quot;&gt;</span><br><span class="line">                &lt;li&gt;</span><br><span class="line">                  &lt;p&gt;销量人气&lt;/p&gt;</span><br><span class="line">                  &lt;p&gt; &#123;&#123; goods.salesCount &#125;&#125;+ &lt;/p&gt;</span><br><span class="line">                  &lt;p&gt;&lt;i class=&quot;iconfont icon-task-filling&quot;&gt;&lt;/i&gt;销量人气&lt;/p&gt;</span><br><span class="line">                &lt;/li&gt;</span><br><span class="line">                &lt;li&gt;</span><br><span class="line">                  &lt;p&gt;商品评价&lt;/p&gt;</span><br><span class="line">                  &lt;p&gt;&#123;&#123; goods.commentCount &#125;&#125;+&lt;/p&gt;</span><br><span class="line">                  &lt;p&gt;&lt;i class=&quot;iconfont icon-comment-filling&quot;&gt;&lt;/i&gt;查看评价&lt;/p&gt;</span><br><span class="line">                &lt;/li&gt;</span><br><span class="line">                &lt;li&gt;</span><br><span class="line">                  &lt;p&gt;收藏人气&lt;/p&gt;</span><br><span class="line">                  &lt;p&gt;&#123;&#123; goods.collectCount &#125;&#125;+&lt;/p&gt;</span><br><span class="line">                  &lt;p&gt;&lt;i class=&quot;iconfont icon-favorite-filling&quot;&gt;&lt;/i&gt;收藏商品&lt;/p&gt;</span><br><span class="line">                &lt;/li&gt;</span><br><span class="line">                &lt;li&gt;</span><br><span class="line">                  &lt;p&gt;品牌信息&lt;/p&gt;</span><br><span class="line">                  &lt;p&gt;&#123;&#123; goods.brand.name &#125;&#125;&lt;/p&gt;</span><br><span class="line">                  &lt;p&gt;&lt;i class=&quot;iconfont icon-dynamic-filling&quot;&gt;&lt;/i&gt;品牌主页&lt;/p&gt;</span><br><span class="line">                &lt;/li&gt;</span><br><span class="line">              &lt;/ul&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;spec&quot;&gt;</span><br><span class="line">              &lt;!-- 商品信息区 --&gt;</span><br><span class="line">              &lt;p class=&quot;g-name&quot;&gt; &#123;&#123; goods.name &#125;&#125; &lt;/p&gt;</span><br><span class="line">              &lt;p class=&quot;g-desc&quot;&gt;&#123;&#123; goods.desc &#125;&#125; &lt;/p&gt;</span><br><span class="line">              &lt;p class=&quot;g-price&quot;&gt;</span><br><span class="line">                &lt;span&gt;&#123;&#123; goods.oldPrice &#125;&#125;&lt;/span&gt;</span><br><span class="line">                &lt;span&gt; &#123;&#123; goods.price &#125;&#125;&lt;/span&gt;</span><br><span class="line">              &lt;/p&gt;</span><br><span class="line">              &lt;div class=&quot;g-service&quot;&gt;</span><br><span class="line">                &lt;dl&gt;</span><br><span class="line">                  &lt;dt&gt;促销&lt;/dt&gt;</span><br><span class="line">                  &lt;dd&gt;12月好物放送，App领券购买直降120元&lt;/dd&gt;</span><br><span class="line">                &lt;/dl&gt;</span><br><span class="line">                &lt;dl&gt;</span><br><span class="line">                  &lt;dt&gt;服务&lt;/dt&gt;</span><br><span class="line">                  &lt;dd&gt;</span><br><span class="line">                    &lt;span&gt;无忧退货&lt;/span&gt;</span><br><span class="line">                    &lt;span&gt;快速退款&lt;/span&gt;</span><br><span class="line">                    &lt;span&gt;免费包邮&lt;/span&gt;</span><br><span class="line">                    &lt;a href=&quot;javascript:;&quot;&gt;了解详情&lt;/a&gt;</span><br><span class="line">                  &lt;/dd&gt;</span><br><span class="line">                &lt;/dl&gt;</span><br><span class="line">              &lt;/div&gt;</span><br><span class="line">              &lt;!-- sku组件 --&gt;</span><br><span class="line"></span><br><span class="line">              &lt;!-- 数据组件 --&gt;</span><br><span class="line"></span><br><span class="line">              &lt;!-- 按钮组件 --&gt;</span><br><span class="line">              &lt;div&gt;</span><br><span class="line">                &lt;el-button size=&quot;large&quot; class=&quot;btn&quot;&gt;</span><br><span class="line">                  加入购物车</span><br><span class="line">                &lt;/el-button&gt;</span><br><span class="line">              &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">          &lt;div class=&quot;goods-footer&quot;&gt;</span><br><span class="line">            &lt;div class=&quot;goods-article&quot;&gt;</span><br><span class="line">              &lt;!-- 商品详情 --&gt;</span><br><span class="line">              &lt;div class=&quot;goods-tabs&quot;&gt;</span><br><span class="line">                &lt;nav&gt;</span><br><span class="line">                  &lt;a&gt;商品详情&lt;/a&gt;</span><br><span class="line">                &lt;/nav&gt;</span><br><span class="line">                &lt;div class=&quot;goods-detail&quot;&gt;</span><br><span class="line">                  &lt;!-- 属性 --&gt;</span><br><span class="line">                  &lt;ul class=&quot;attrs&quot;&gt;</span><br><span class="line">                    &lt;li v-for=&quot;item in goods.details.properties&quot; :key=&quot;item.value&quot;&gt;</span><br><span class="line">                      &lt;span class=&quot;dt&quot;&gt;&#123;&#123; item.name &#125;&#125;&lt;/span&gt;</span><br><span class="line">                      &lt;span class=&quot;dd&quot;&gt;&#123;&#123; item.value &#125;&#125;&lt;/span&gt;</span><br><span class="line">                    &lt;/li&gt;</span><br><span class="line">                  &lt;/ul&gt;</span><br><span class="line">                  &lt;!-- 图片 --&gt;</span><br><span class="line">                  &lt;img v-for=&quot;img in goods.details.pictures&quot; :src=&quot;img&quot; :key=&quot;img&quot; alt=&quot;&quot;&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">              &lt;/div&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;!-- 24热榜+专题推荐 --&gt;</span><br><span class="line">            &lt;div class=&quot;goods-aside&quot;&gt;</span><br><span class="line"></span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure>


<h1 id="热榜区域"><a href="#热榜区域" class="headerlink" title="热榜区域"></a>热榜区域</h1><h2 id="1-渲染基础热榜数据"><a href="#1-渲染基础热榜数据" class="headerlink" title="1. 渲染基础热榜数据"></a>1. 渲染基础热榜数据</h2><p>1- 准备模版</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;goods-hot&quot;&gt;</span><br><span class="line">    &lt;h3&gt;周日榜单&lt;/h3&gt;</span><br><span class="line">    &lt;!-- 商品区块 --&gt;</span><br><span class="line">    &lt;RouterLink to=&quot;/&quot; class=&quot;goods-item&quot; v-for=&quot;item in 3&quot; :key=&quot;item.id&quot;&gt;</span><br><span class="line">      &lt;img :src=&quot;item.picture&quot; alt=&quot;&quot; /&gt;</span><br><span class="line">      &lt;p class=&quot;name ellipsis&quot;&gt;一双男鞋&lt;/p&gt;</span><br><span class="line">      &lt;p class=&quot;desc ellipsis&quot;&gt;一双好穿的男鞋&lt;/p&gt;</span><br><span class="line">      &lt;p class=&quot;price&quot;&gt;&amp;yen;200.00&lt;/p&gt;</span><br><span class="line">    &lt;/RouterLink&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;style scoped lang=&quot;scss&quot;&gt;</span><br><span class="line">.goods-hot &#123;</span><br><span class="line">  h3 &#123;</span><br><span class="line">    height: 70px;</span><br><span class="line">    background: $helpColor;</span><br><span class="line">    color: #fff;</span><br><span class="line">    font-size: 18px;</span><br><span class="line">    line-height: 70px;</span><br><span class="line">    padding-left: 25px;</span><br><span class="line">    margin-bottom: 10px;</span><br><span class="line">    font-weight: normal;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .goods-item &#123;</span><br><span class="line">    display: block;</span><br><span class="line">    padding: 20px 30px;</span><br><span class="line">    text-align: center;</span><br><span class="line">    background: #fff;</span><br><span class="line"></span><br><span class="line">    img &#123;</span><br><span class="line">      width: 160px;</span><br><span class="line">      height: 160px;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    p &#123;</span><br><span class="line">      padding-top: 10px;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .name &#123;</span><br><span class="line">      font-size: 16px;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .desc &#123;</span><br><span class="line">      color: #999;</span><br><span class="line">      height: 29px;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .price &#123;</span><br><span class="line">      color: $priceColor;</span><br><span class="line">      font-size: 20px;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<p>2- 封装接口</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取热榜商品</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">Number</span>&#125; <span class="variable">id</span> - 商品id</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">Number</span>&#125; <span class="variable">type</span> - 1代表24小时热销榜 2代表周热销榜</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">Number</span>&#125; <span class="variable">limit</span> - 获取个数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">fetchHotGoodsAPI</span> = (<span class="params">&#123; id, type, limit = <span class="number">3</span> &#125;</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>:<span class="string">&#x27;/goods/hot&#x27;</span>,</span><br><span class="line">    <span class="attr">params</span>:&#123;</span><br><span class="line">      id, </span><br><span class="line">      type, </span><br><span class="line">      limit</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>3- 获取基础数据渲染模版</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; ref &#125; from &#x27;vue&#x27;</span><br><span class="line">import &#123; getHotGoodsAPI &#125; from &#x27;@/apis/detail&#x27;</span><br><span class="line">import &#123; useRoute &#125; from &#x27;vue-router&#x27;</span><br><span class="line"></span><br><span class="line">const goodList = ref([])</span><br><span class="line">const route = useRoute()</span><br><span class="line">const getHotList = async () =&gt; &#123;</span><br><span class="line">  const res = await getHotGoodsAPI(&#123;</span><br><span class="line">    id: route.params.id,</span><br><span class="line">    type: 1</span><br><span class="line">  &#125;)</span><br><span class="line">  goodList.value = res.result</span><br><span class="line">&#125;</span><br><span class="line">getHotList()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;goods-hot&quot;&gt;</span><br><span class="line">    &lt;h3&gt; 24小时热榜 &lt;/h3&gt;</span><br><span class="line">    &lt;!-- 商品区块 --&gt;</span><br><span class="line">    &lt;RouterLink :to=&quot;`/detail/$&#123;item.id&#125;`&quot; class=&quot;goods-item&quot; v-for=&quot;item in goodList&quot; :key=&quot;item.id&quot;&gt;</span><br><span class="line">      &lt;img :src=&quot;item.picture&quot; alt=&quot;&quot; /&gt;</span><br><span class="line">      &lt;p class=&quot;name ellipsis&quot;&gt;&#123;&#123; item.name &#125;&#125;&lt;/p&gt;</span><br><span class="line">      &lt;p class=&quot;desc ellipsis&quot;&gt;&#123;&#123; item.desc &#125;&#125;&lt;/p&gt;</span><br><span class="line">      &lt;p class=&quot;price&quot;&gt;&amp;yen;&#123;&#123; item.price &#125;&#125;&lt;/p&gt;</span><br><span class="line">    &lt;/RouterLink&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure>

<h2 id="2-适配热榜类型"><a href="#2-适配热榜类型" class="headerlink" title="2. 适配热榜类型"></a>2. 适配热榜类型</h2><p>1- 设计props参数type</p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="comment">// type适配不同类型热榜数据</span></span><br><span class="line"><span class="keyword">const</span> props = <span class="title function_">defineProps</span>(&#123;</span><br><span class="line">  <span class="attr">type</span>: &#123;</span><br><span class="line">    <span class="attr">type</span>: <span class="title class_">Number</span>, <span class="comment">// 1代表24小时热销榜 2代表周热销榜 3代表总热销榜 可以使用type去适配title和数据列表</span></span><br><span class="line">    <span class="attr">default</span>: <span class="number">1</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> <span class="keyword">const</span> res = <span class="keyword">await</span> <span class="title function_">fetchHotGoodsAPI</span>(&#123;</span><br><span class="line">    <span class="attr">id</span>: route.<span class="property">params</span>.<span class="property">id</span>,</span><br><span class="line">    <span class="attr">type</span>: props.<span class="property">type</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<p>2- 使用组件传入不同的type</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!-- 24小时热榜 --&gt;</span><br><span class="line">&lt;GoodHot :type=&quot;1&quot; /&gt;</span><br><span class="line">&lt;!-- 周热榜 --&gt;</span><br><span class="line">&lt;GoodHot :type=&quot;2&quot; /&gt;</span><br></pre></td></tr></table></figure>

<h2 id="3-适配热榜title"><a href="#3-适配热榜title" class="headerlink" title="3. 适配热榜title"></a>3. 适配热榜title</h2><figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="variable constant_">TITLEMAP</span> = &#123;</span><br><span class="line">  <span class="number">1</span>: <span class="string">&#x27;24小时热榜&#x27;</span>,</span><br><span class="line">  <span class="number">2</span>: <span class="string">&#x27;周热榜&#x27;</span>, </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> title = <span class="title function_">computed</span>(<span class="function">() =&gt;</span> <span class="variable constant_">TITLEMAP</span>[props.<span class="property">type</span>])</span><br><span class="line"></span><br><span class="line">&lt;h3&gt;&#123;&#123; title &#125;&#125;&lt;/h3&gt;</span><br></pre></td></tr></table></figure>

<h1 id="图片预览组件封装"><a href="#图片预览组件封装" class="headerlink" title="图片预览组件封装"></a>图片预览组件封装</h1><h2 id="1-小图切换大图显示"><a href="#1-小图切换大图显示" class="headerlink" title="1. 小图切换大图显示"></a>1. 小图切换大图显示</h2><p>1- 准备模版</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">// 图片列表</span><br><span class="line">const imageList = [</span><br><span class="line">  &quot;https://yanxuan-item.nosdn.127.net/d917c92e663c5ed0bb577c7ded73e4ec.png&quot;,</span><br><span class="line">  &quot;https://yanxuan-item.nosdn.127.net/e801b9572f0b0c02a52952b01adab967.jpg&quot;,</span><br><span class="line">  &quot;https://yanxuan-item.nosdn.127.net/b52c447ad472d51adbdde1a83f550ac2.jpg&quot;,</span><br><span class="line">  &quot;https://yanxuan-item.nosdn.127.net/f93243224dc37674dfca5874fe089c60.jpg&quot;,</span><br><span class="line">  &quot;https://yanxuan-item.nosdn.127.net/f881cfe7de9a576aaeea6ee0d1d24823.jpg&quot;</span><br><span class="line">]</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;goods-image&quot;&gt;</span><br><span class="line">    &lt;!-- 左侧大图--&gt;</span><br><span class="line">    &lt;div class=&quot;middle&quot; ref=&quot;target&quot;&gt;</span><br><span class="line">      &lt;img :src=&quot;imageList[0]&quot; alt=&quot;&quot; /&gt;</span><br><span class="line">      &lt;!-- 蒙层小滑块 --&gt;</span><br><span class="line">      &lt;div class=&quot;layer&quot; :style=&quot;&#123; left: `0px`, top: `0px` &#125;&quot;&gt;&lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;!-- 小图列表 --&gt;</span><br><span class="line">    &lt;ul class=&quot;small&quot;&gt;</span><br><span class="line">      &lt;li v-for=&quot;(img, i) in imageList&quot; :key=&quot;i&quot;&gt;</span><br><span class="line">        &lt;img :src=&quot;img&quot; alt=&quot;&quot; /&gt;</span><br><span class="line">      &lt;/li&gt;</span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line">    &lt;!-- 放大镜大图 --&gt;</span><br><span class="line">    &lt;div class=&quot;large&quot; :style=&quot;[</span><br><span class="line">      &#123;</span><br><span class="line">        backgroundImage: `url($&#123;imageList[0]&#125;)`,</span><br><span class="line">        backgroundPositionX: `0px`,</span><br><span class="line">        backgroundPositionY: `0px`,</span><br><span class="line">      &#125;,</span><br><span class="line">    ]&quot; v-show=&quot;false&quot;&gt;&lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped lang=&quot;scss&quot;&gt;</span><br><span class="line">.goods-image &#123;</span><br><span class="line">  width: 480px;</span><br><span class="line">  height: 400px;</span><br><span class="line">  position: relative;</span><br><span class="line">  display: flex;</span><br><span class="line"></span><br><span class="line">  .middle &#123;</span><br><span class="line">    width: 400px;</span><br><span class="line">    height: 400px;</span><br><span class="line">    background: #f5f5f5;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .large &#123;</span><br><span class="line">    position: absolute;</span><br><span class="line">    top: 0;</span><br><span class="line">    left: 412px;</span><br><span class="line">    width: 400px;</span><br><span class="line">    height: 400px;</span><br><span class="line">    z-index: 500;</span><br><span class="line">    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);</span><br><span class="line">    background-repeat: no-repeat;</span><br><span class="line">    // 背景图:盒子的大小 = 2:1  将来控制背景图的移动来实现放大的效果查看 background-position</span><br><span class="line">    background-size: 800px 800px;</span><br><span class="line">    background-color: #f8f8f8;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .layer &#123;</span><br><span class="line">    width: 200px;</span><br><span class="line">    height: 200px;</span><br><span class="line">    background: rgba(0, 0, 0, 0.2);</span><br><span class="line">    // 绝对定位 然后跟随咱们鼠标控制left和top属性就可以让滑块移动起来</span><br><span class="line">    left: 0;</span><br><span class="line">    top: 0;</span><br><span class="line">    position: absolute;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .small &#123;</span><br><span class="line">    width: 80px;</span><br><span class="line"></span><br><span class="line">    li &#123;</span><br><span class="line">      width: 68px;</span><br><span class="line">      height: 68px;</span><br><span class="line">      margin-left: 12px;</span><br><span class="line">      margin-bottom: 15px;</span><br><span class="line">      cursor: pointer;</span><br><span class="line"></span><br><span class="line">      &amp;:hover,</span><br><span class="line">      &amp;.active &#123;</span><br><span class="line">        border: 2px solid $xtxColor;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<p>2- 实现逻辑</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; ref &#125; from &#x27;vue&#x27;</span><br><span class="line"></span><br><span class="line">// 实现鼠标移入交互</span><br><span class="line">const curIndex = ref(0)</span><br><span class="line">const mouseEnterFn = (i) =&gt; curIndex.value = i</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;goods-image&quot;&gt;</span><br><span class="line">    &lt;!-- 小图列表 --&gt;</span><br><span class="line">    &lt;ul class=&quot;small&quot;&gt;</span><br><span class="line">      &lt;li v-for=&quot;(img, i) in imageList&quot; </span><br><span class="line">        :key=&quot;i&quot; </span><br><span class="line">        @mouseenter=&quot;mouseEnterFn(i)&quot; </span><br><span class="line">        :class=&quot;&#123; active: i === curIndex &#125;&quot;&gt;</span><br><span class="line">        &lt;img :src=&quot;img&quot; alt=&quot;&quot; /&gt;</span><br><span class="line">      &lt;/li&gt;</span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure>

<h2 id="2-放大镜效果实现"><a href="#2-放大镜效果实现" class="headerlink" title="2. 放大镜效果实现"></a>2. 放大镜效果实现</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; ref, watch &#125; from &#x27;vue&#x27;</span><br><span class="line">import &#123; useMouseInElement &#125; from &#x27;@vueuse/core&#x27;</span><br><span class="line"></span><br><span class="line">// 图片列表</span><br><span class="line">const imageList = [</span><br><span class="line">  &quot;https://yanxuan-item.nosdn.127.net/d917c92e663c5ed0bb577c7ded73e4ec.png&quot;,</span><br><span class="line">  &quot;https://yanxuan-item.nosdn.127.net/e801b9572f0b0c02a52952b01adab967.jpg&quot;,</span><br><span class="line">  &quot;https://yanxuan-item.nosdn.127.net/b52c447ad472d51adbdde1a83f550ac2.jpg&quot;,</span><br><span class="line">  &quot;https://yanxuan-item.nosdn.127.net/f93243224dc37674dfca5874fe089c60.jpg&quot;,</span><br><span class="line">  &quot;https://yanxuan-item.nosdn.127.net/f881cfe7de9a576aaeea6ee0d1d24823.jpg&quot;</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">// 1.小图切换大图显示</span><br><span class="line">const activeIndex = ref(0)</span><br><span class="line"></span><br><span class="line">const enterhandler = (i) =&gt; &#123;</span><br><span class="line">  activeIndex.value = i</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 2. 获取鼠标相对位置</span><br><span class="line">const target = ref(null)</span><br><span class="line">const &#123; elementX, elementY, isOutside &#125; = useMouseInElement(target)</span><br><span class="line"></span><br><span class="line">// 3. 控制滑块跟随鼠标移动（监听elementX/Y变化，一旦变化 重新设置left/top）</span><br><span class="line">const left = ref(0)</span><br><span class="line">const top = ref(0)</span><br><span class="line"></span><br><span class="line">const positionX = ref(0)</span><br><span class="line">const positionY = ref(0)</span><br><span class="line">watch([elementX, elementY, isOutside], () =&gt; &#123;</span><br><span class="line">  console.log(&#x27;xy变化了&#x27;)</span><br><span class="line">  // 如果鼠标没有移入到盒子里面 直接不执行后面的逻辑</span><br><span class="line">  if (isOutside.value) return</span><br><span class="line">  console.log(&#x27;后续逻辑执行了&#x27;)</span><br><span class="line">  // 有效范围内控制滑块距离</span><br><span class="line">  // 横向</span><br><span class="line">  if (elementX.value &gt; 100 &amp;&amp; elementX.value &lt; 300) &#123;</span><br><span class="line">    left.value = elementX.value - 100</span><br><span class="line">  &#125;</span><br><span class="line">  // 纵向</span><br><span class="line">  if (elementY.value &gt; 100 &amp;&amp; elementY.value &lt; 300) &#123;</span><br><span class="line">    top.value = elementY.value - 100</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  // 处理边界</span><br><span class="line">  if (elementX.value &gt; 300) &#123; left.value = 200 &#125;</span><br><span class="line">  if (elementX.value &lt; 100) &#123; left.value = 0 &#125;</span><br><span class="line"></span><br><span class="line">  if (elementY.value &gt; 300) &#123; top.value = 200 &#125;</span><br><span class="line">  if (elementY.value &lt; 100) &#123; top.value = 0 &#125;</span><br><span class="line"></span><br><span class="line">  // 控制大图的显示</span><br><span class="line">  positionX.value = -left.value * 2</span><br><span class="line">  positionY.value = -top.value * 2</span><br><span class="line"></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;goods-image&quot;&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 左侧大图--&gt;</span><br><span class="line">    &lt;div class=&quot;middle&quot; ref=&quot;target&quot;&gt;</span><br><span class="line">      &lt;img :src=&quot;imageList[activeIndex]&quot; alt=&quot;&quot; /&gt;</span><br><span class="line">      &lt;!-- 蒙层小滑块 --&gt;</span><br><span class="line">      &lt;div class=&quot;layer&quot; v-show=&quot;!isOutside&quot; :style=&quot;&#123; left: `$&#123;left&#125;px`, top: `$&#123;top&#125;px` &#125;&quot;&gt;&lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;!-- 小图列表 --&gt;</span><br><span class="line">    &lt;ul class=&quot;small&quot;&gt;</span><br><span class="line">      &lt;li v-for=&quot;(img, i) in imageList&quot; :key=&quot;i&quot; @mouseenter=&quot;enterhandler(i)&quot; :class=&quot;&#123; active: i === activeIndex &#125;&quot;&gt;</span><br><span class="line">        &lt;img :src=&quot;img&quot; alt=&quot;&quot; /&gt;</span><br><span class="line">      &lt;/li&gt;</span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line">    &lt;!-- 放大镜大图 --&gt;</span><br><span class="line">    &lt;div class=&quot;large&quot; :style=&quot;[</span><br><span class="line">      &#123;</span><br><span class="line">        backgroundImage: `url($&#123;imageList[0]&#125;)`,</span><br><span class="line">        backgroundPositionX: `$&#123;positionX&#125;px`,</span><br><span class="line">        backgroundPositionY: `$&#123;positionY&#125;px`,</span><br><span class="line">      &#125;,</span><br><span class="line">    ]&quot; v-show=&quot;!isOutside&quot;&gt;&lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped lang=&quot;scss&quot;&gt;</span><br><span class="line">.goods-image &#123;</span><br><span class="line">  width: 480px;</span><br><span class="line">  height: 400px;</span><br><span class="line">  position: relative;</span><br><span class="line">  display: flex;</span><br><span class="line"></span><br><span class="line">  .middle &#123;</span><br><span class="line">    width: 400px;</span><br><span class="line">    height: 400px;</span><br><span class="line">    background: #f5f5f5;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .large &#123;</span><br><span class="line">    position: absolute;</span><br><span class="line">    top: 0;</span><br><span class="line">    left: 412px;</span><br><span class="line">    width: 400px;</span><br><span class="line">    height: 400px;</span><br><span class="line">    z-index: 500;</span><br><span class="line">    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);</span><br><span class="line">    background-repeat: no-repeat;</span><br><span class="line">    // 背景图:盒子的大小 = 2:1  将来控制背景图的移动来实现放大的效果查看 background-position</span><br><span class="line">    background-size: 800px 800px;</span><br><span class="line">    background-color: #f8f8f8;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .layer &#123;</span><br><span class="line">    width: 200px;</span><br><span class="line">    height: 200px;</span><br><span class="line">    background: rgba(0, 0, 0, 0.2);</span><br><span class="line">    // 绝对定位 然后跟随咱们鼠标控制left和top属性就可以让滑块移动起来</span><br><span class="line">    left: 0;</span><br><span class="line">    top: 0;</span><br><span class="line">    position: absolute;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .small &#123;</span><br><span class="line">    width: 80px;</span><br><span class="line"></span><br><span class="line">    li &#123;</span><br><span class="line">      width: 68px;</span><br><span class="line">      height: 68px;</span><br><span class="line">      margin-left: 12px;</span><br><span class="line">      margin-bottom: 15px;</span><br><span class="line">      cursor: pointer;</span><br><span class="line"></span><br><span class="line">      &amp;:hover,</span><br><span class="line">      &amp;.active &#123;</span><br><span class="line">        border: 2px solid $xtxColor;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<h1 id="SKU组件熟悉"><a href="#SKU组件熟悉" class="headerlink" title="SKU组件熟悉"></a>SKU组件熟悉</h1><h1 id="全局组件统一插件化"><a href="#全局组件统一插件化" class="headerlink" title="全局组件统一插件化"></a>全局组件统一插件化</h1><h2 id="1-插件化开发"><a href="#1-插件化开发" class="headerlink" title="1. 插件化开发"></a>1. 插件化开发</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 把components中的所组件都进行全局化注册</span></span><br><span class="line"><span class="comment">// 通过插件的方式</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">ImageView</span> <span class="keyword">from</span> <span class="string">&#x27;./ImageView/index.vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Sku</span> <span class="keyword">from</span> <span class="string">&#x27;./XtxSku/index.vue&#x27;</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> componentPlugin = &#123;</span><br><span class="line">  <span class="title function_">install</span> (app) &#123;</span><br><span class="line">    <span class="comment">// app.component(&#x27;组件名字&#x27;，组件配置对象)</span></span><br><span class="line">    app.<span class="title function_">component</span>(<span class="string">&#x27;XtxImageView&#x27;</span>, <span class="title class_">ImageView</span>)</span><br><span class="line">    app.<span class="title function_">component</span>(<span class="string">&#x27;XtxSku&#x27;</span>, <span class="title class_">Sku</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="2-插件注册"><a href="#2-插件注册" class="headerlink" title="2. 插件注册"></a>2. 插件注册</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// 引入全局组件插件</span><br><span class="line">import &#123; componentPlugin &#125; from &#x27;@/components&#x27;</span><br><span class="line"></span><br><span class="line">app.use(componentPlugin)</span><br></pre></td></tr></table></figure>


<h1 id="整体认识和路由配置-1"><a href="#整体认识和路由配置-1" class="headerlink" title="整体认识和路由配置"></a>整体认识和路由配置</h1><h2 id="1-准备模版-1"><a href="#1-准备模版-1" class="headerlink" title="1. 准备模版"></a>1. 准备模版</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;header class=&quot;login-header&quot;&gt;</span><br><span class="line">      &lt;div class=&quot;container m-top-20&quot;&gt;</span><br><span class="line">        &lt;h1 class=&quot;logo&quot;&gt;</span><br><span class="line">          &lt;RouterLink to=&quot;/&quot;&gt;小兔鲜&lt;/RouterLink&gt;</span><br><span class="line">        &lt;/h1&gt;</span><br><span class="line">        &lt;RouterLink class=&quot;entry&quot; to=&quot;/&quot;&gt;</span><br><span class="line">          进入网站首页</span><br><span class="line">          &lt;i class=&quot;iconfont icon-angle-right&quot;&gt;&lt;/i&gt;</span><br><span class="line">          &lt;i class=&quot;iconfont icon-angle-right&quot;&gt;&lt;/i&gt;</span><br><span class="line">        &lt;/RouterLink&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/header&gt;</span><br><span class="line">    &lt;section class=&quot;login-section&quot;&gt;</span><br><span class="line">      &lt;div class=&quot;wrapper&quot;&gt;</span><br><span class="line">        &lt;nav&gt;</span><br><span class="line">          &lt;a href=&quot;javascript:;&quot;&gt;账户登录&lt;/a&gt;</span><br><span class="line">        &lt;/nav&gt;</span><br><span class="line">        &lt;div class=&quot;account-box&quot;&gt;</span><br><span class="line">          &lt;div class=&quot;form&quot;&gt;</span><br><span class="line">            &lt;el-form label-position=&quot;right&quot; label-width=&quot;60px&quot;</span><br><span class="line">              status-icon&gt;</span><br><span class="line">              &lt;el-form-item  label=&quot;账户&quot;&gt;</span><br><span class="line">                &lt;el-input/&gt;</span><br><span class="line">              &lt;/el-form-item&gt;</span><br><span class="line">              &lt;el-form-item label=&quot;密码&quot;&gt;</span><br><span class="line">                &lt;el-input/&gt;</span><br><span class="line">              &lt;/el-form-item&gt;</span><br><span class="line">              &lt;el-form-item label-width=&quot;22px&quot;&gt;</span><br><span class="line">                &lt;el-checkbox  size=&quot;large&quot;&gt;</span><br><span class="line">                  我已同意隐私条款和服务条款</span><br><span class="line">                &lt;/el-checkbox&gt;</span><br><span class="line">              &lt;/el-form-item&gt;</span><br><span class="line">              &lt;el-button size=&quot;large&quot; class=&quot;subBtn&quot;&gt;点击登录&lt;/el-button&gt;</span><br><span class="line">            &lt;/el-form&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/section&gt;</span><br><span class="line"></span><br><span class="line">    &lt;footer class=&quot;login-footer&quot;&gt;</span><br><span class="line">      &lt;div class=&quot;container&quot;&gt;</span><br><span class="line">        &lt;p&gt;</span><br><span class="line">          &lt;a href=&quot;javascript:;&quot;&gt;关于我们&lt;/a&gt;</span><br><span class="line">          &lt;a href=&quot;javascript:;&quot;&gt;帮助中心&lt;/a&gt;</span><br><span class="line">          &lt;a href=&quot;javascript:;&quot;&gt;售后服务&lt;/a&gt;</span><br><span class="line">          &lt;a href=&quot;javascript:;&quot;&gt;配送与验收&lt;/a&gt;</span><br><span class="line">          &lt;a href=&quot;javascript:;&quot;&gt;商务合作&lt;/a&gt;</span><br><span class="line">          &lt;a href=&quot;javascript:;&quot;&gt;搜索推荐&lt;/a&gt;</span><br><span class="line">          &lt;a href=&quot;javascript:;&quot;&gt;友情链接&lt;/a&gt;</span><br><span class="line">        &lt;/p&gt;</span><br><span class="line">        &lt;p&gt;CopyRight &amp;copy; 小兔鲜儿&lt;/p&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/footer&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped lang=&#x27;scss&#x27;&gt;</span><br><span class="line">.login-header &#123;</span><br><span class="line">  background: #fff;</span><br><span class="line">  border-bottom: 1px solid #e4e4e4;</span><br><span class="line"></span><br><span class="line">  .container &#123;</span><br><span class="line">    display: flex;</span><br><span class="line">    align-items: flex-end;</span><br><span class="line">    justify-content: space-between;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .logo &#123;</span><br><span class="line">    width: 200px;</span><br><span class="line"></span><br><span class="line">    a &#123;</span><br><span class="line">      display: block;</span><br><span class="line">      height: 132px;</span><br><span class="line">      width: 100%;</span><br><span class="line">      text-indent: -9999px;</span><br><span class="line">      background: url(&quot;@/assets/images/logo.png&quot;) no-repeat center 18px / contain;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .sub &#123;</span><br><span class="line">    flex: 1;</span><br><span class="line">    font-size: 24px;</span><br><span class="line">    font-weight: normal;</span><br><span class="line">    margin-bottom: 38px;</span><br><span class="line">    margin-left: 20px;</span><br><span class="line">    color: #666;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .entry &#123;</span><br><span class="line">    width: 120px;</span><br><span class="line">    margin-bottom: 38px;</span><br><span class="line">    font-size: 16px;</span><br><span class="line"></span><br><span class="line">    i &#123;</span><br><span class="line">      font-size: 14px;</span><br><span class="line">      color: $xtxColor;</span><br><span class="line">      letter-spacing: -5px;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.login-section &#123;</span><br><span class="line">  background: url(&#x27;@/assets/images/login-bg.png&#x27;) no-repeat center / cover;</span><br><span class="line">  height: 488px;</span><br><span class="line">  position: relative;</span><br><span class="line"></span><br><span class="line">  .wrapper &#123;</span><br><span class="line">    width: 380px;</span><br><span class="line">    background: #fff;</span><br><span class="line">    position: absolute;</span><br><span class="line">    left: 50%;</span><br><span class="line">    top: 54px;</span><br><span class="line">    transform: translate3d(100px, 0, 0);</span><br><span class="line">    box-shadow: 0 0 10px rgba(0, 0, 0, 0.15);</span><br><span class="line"></span><br><span class="line">    nav &#123;</span><br><span class="line">      font-size: 14px;</span><br><span class="line">      height: 55px;</span><br><span class="line">      margin-bottom: 20px;</span><br><span class="line">      border-bottom: 1px solid #f5f5f5;</span><br><span class="line">      display: flex;</span><br><span class="line">      padding: 0 40px;</span><br><span class="line">      text-align: right;</span><br><span class="line">      align-items: center;</span><br><span class="line"></span><br><span class="line">      a &#123;</span><br><span class="line">        flex: 1;</span><br><span class="line">        line-height: 1;</span><br><span class="line">        display: inline-block;</span><br><span class="line">        font-size: 18px;</span><br><span class="line">        position: relative;</span><br><span class="line">        text-align: center;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.login-footer &#123;</span><br><span class="line">  padding: 30px 0 50px;</span><br><span class="line">  background: #fff;</span><br><span class="line"></span><br><span class="line">  p &#123;</span><br><span class="line">    text-align: center;</span><br><span class="line">    color: #999;</span><br><span class="line">    padding-top: 20px;</span><br><span class="line"></span><br><span class="line">    a &#123;</span><br><span class="line">      line-height: 1;</span><br><span class="line">      padding: 0 10px;</span><br><span class="line">      color: #999;</span><br><span class="line">      display: inline-block;</span><br><span class="line"></span><br><span class="line">      ~a &#123;</span><br><span class="line">        border-left: 1px solid #ccc;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.account-box &#123;</span><br><span class="line">  .toggle &#123;</span><br><span class="line">    padding: 15px 40px;</span><br><span class="line">    text-align: right;</span><br><span class="line"></span><br><span class="line">    a &#123;</span><br><span class="line">      color: $xtxColor;</span><br><span class="line"></span><br><span class="line">      i &#123;</span><br><span class="line">        font-size: 14px;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .form &#123;</span><br><span class="line">    padding: 0 20px 20px 20px;</span><br><span class="line"></span><br><span class="line">    &amp;-item &#123;</span><br><span class="line">      margin-bottom: 28px;</span><br><span class="line"></span><br><span class="line">      .input &#123;</span><br><span class="line">        position: relative;</span><br><span class="line">        height: 36px;</span><br><span class="line"></span><br><span class="line">        &gt;i &#123;</span><br><span class="line">          width: 34px;</span><br><span class="line">          height: 34px;</span><br><span class="line">          background: #cfcdcd;</span><br><span class="line">          color: #fff;</span><br><span class="line">          position: absolute;</span><br><span class="line">          left: 1px;</span><br><span class="line">          top: 1px;</span><br><span class="line">          text-align: center;</span><br><span class="line">          line-height: 34px;</span><br><span class="line">          font-size: 18px;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        input &#123;</span><br><span class="line">          padding-left: 44px;</span><br><span class="line">          border: 1px solid #cfcdcd;</span><br><span class="line">          height: 36px;</span><br><span class="line">          line-height: 36px;</span><br><span class="line">          width: 100%;</span><br><span class="line"></span><br><span class="line">          &amp;.error &#123;</span><br><span class="line">            border-color: $priceColor;</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">          &amp;.active,</span><br><span class="line">          &amp;:focus &#123;</span><br><span class="line">            border-color: $xtxColor;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .code &#123;</span><br><span class="line">          position: absolute;</span><br><span class="line">          right: 1px;</span><br><span class="line">          top: 1px;</span><br><span class="line">          text-align: center;</span><br><span class="line">          line-height: 34px;</span><br><span class="line">          font-size: 14px;</span><br><span class="line">          background: #f5f5f5;</span><br><span class="line">          color: #666;</span><br><span class="line">          width: 90px;</span><br><span class="line">          height: 34px;</span><br><span class="line">          cursor: pointer;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      &gt;.error &#123;</span><br><span class="line">        position: absolute;</span><br><span class="line">        font-size: 12px;</span><br><span class="line">        line-height: 28px;</span><br><span class="line">        color: $priceColor;</span><br><span class="line"></span><br><span class="line">        i &#123;</span><br><span class="line">          font-size: 14px;</span><br><span class="line">          margin-right: 2px;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .agree &#123;</span><br><span class="line">      a &#123;</span><br><span class="line">        color: #069;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .btn &#123;</span><br><span class="line">      display: block;</span><br><span class="line">      width: 100%;</span><br><span class="line">      height: 40px;</span><br><span class="line">      color: #fff;</span><br><span class="line">      text-align: center;</span><br><span class="line">      line-height: 40px;</span><br><span class="line">      background: $xtxColor;</span><br><span class="line"></span><br><span class="line">      &amp;.disabled &#123;</span><br><span class="line">        background: #cfcdcd;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .action &#123;</span><br><span class="line">    padding: 20px 40px;</span><br><span class="line">    display: flex;</span><br><span class="line">    justify-content: space-between;</span><br><span class="line">    align-items: center;</span><br><span class="line"></span><br><span class="line">    .url &#123;</span><br><span class="line">      a &#123;</span><br><span class="line">        color: #999;</span><br><span class="line">        margin-left: 10px;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.subBtn &#123;</span><br><span class="line">  background: $xtxColor;</span><br><span class="line">  width: 100%;</span><br><span class="line">  color: #fff;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<h2 id="2-配置路由跳转"><a href="#2-配置路由跳转" class="headerlink" title="2. 配置路由跳转"></a>2. 配置路由跳转</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;li&gt;&lt;a href=&quot;javascript:;&quot; @click=&quot;router.push(&#x27;/login&#x27;)&quot;&gt;请先登录&lt;/a&gt;&lt;/li&gt;</span><br></pre></td></tr></table></figure>

<h1 id="表单校验实现"><a href="#表单校验实现" class="headerlink" title="表单校验实现"></a>表单校验实现</h1><h2 id="1-校验要求"><a href="#1-校验要求" class="headerlink" title="1. 校验要求"></a>1. 校验要求</h2><blockquote>
<p>用户名：不能为空，字段名为 account<br>密码：不能为空且为6-14个字符，字段名为 password<br>同意协议：必选，字段名为 agree    </p>
</blockquote>
<p>用户名和密码只需简单配置</p>
<p>同意协议 使用自定义规则 	validator：(rule,value,callback) &#x3D;&gt;{}    无错就直接callback()	有错callback(new Error(错误信息))</p>
<p>登陆之前表单进行统一校验，通过调用form表单实例对象的方法validate</p>
<h2 id="2-代码实现"><a href="#2-代码实现" class="headerlink" title="2. 代码实现"></a>2. 代码实现</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; ref &#125; from &#x27;vue&#x27;</span><br><span class="line">// 表单数据对象</span><br><span class="line">const userInfo = ref(&#123;</span><br><span class="line">  account: &#x27;1311111111&#x27;,</span><br><span class="line">  password: &#x27;123456&#x27;,</span><br><span class="line">  agree: true</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">// 规则数据对象</span><br><span class="line">const rules = &#123;</span><br><span class="line">  account: [</span><br><span class="line">    &#123; required: true, message: &#x27;用户名不能为空&#x27; &#125;</span><br><span class="line">  ],</span><br><span class="line">  password: [</span><br><span class="line">    &#123; required: true, message: &#x27;密码不能为空&#x27; &#125;,</span><br><span class="line">    &#123; min: 6, max: 24, message: &#x27;密码长度要求6-14个字符&#x27; &#125;</span><br><span class="line">  ],</span><br><span class="line">  agree: [</span><br><span class="line">    &#123;</span><br><span class="line">      validator: (rule, val, callback) =&gt; &#123;</span><br><span class="line">        return val ? callback() : new Error(&#x27;请先同意协议&#x27;)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div class=&quot;form&quot;&gt;</span><br><span class="line">      &lt;el-form ref=&quot;formRef&quot; :model=&quot;userInfo&quot; :rules=&quot;rules&quot; status-icon&gt;</span><br><span class="line">        &lt;el-form-item prop=&quot;account&quot; label=&quot;账户&quot;&gt;</span><br><span class="line">          &lt;el-input v-model=&quot;userInfo.account&quot; /&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item prop=&quot;password&quot; label=&quot;密码&quot;&gt;</span><br><span class="line">          &lt;el-input v-model=&quot;userInfo.password&quot; /&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item prop=&quot;agree&quot; label-width=&quot;22px&quot;&gt;</span><br><span class="line">          &lt;el-checkbox v-model=&quot;userInfo.agree&quot; size=&quot;large&quot;&gt;</span><br><span class="line">            我已同意隐私条款和服务条款</span><br><span class="line">          &lt;/el-checkbox&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-button size=&quot;large&quot; class=&quot;subBtn&quot; &gt;点击登录&lt;/el-button&gt;</span><br><span class="line">      &lt;/el-form&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h1 id="登录基础业务实现"><a href="#登录基础业务实现" class="headerlink" title="登录基础业务实现"></a>登录基础业务实现</h1><blockquote>
<p>基础思想</p>
<ol>
<li>调用登录接口获取用户信息</li>
<li>提示用户当前是否成功</li>
<li>跳转到首页</li>
</ol>
</blockquote>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ElMessage</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;element-plus&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;element-plus/theme-chalk/el-message.css&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">doLogin</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; account, password &#125; = form.<span class="property">value</span></span><br><span class="line">  <span class="comment">// 调用实例方法</span></span><br><span class="line">  formRef.<span class="property">value</span>.<span class="title function_">validate</span>(<span class="title function_">async</span> (valid) =&gt; &#123;</span><br><span class="line">    <span class="comment">// valid: 所有表单都通过校验  才为true</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(valid)</span><br><span class="line">    <span class="comment">// 以valid做为判断条件 如果通过校验才执行登录逻辑</span></span><br><span class="line">    <span class="keyword">if</span> (valid) &#123;</span><br><span class="line">      <span class="comment">// TODO LOGIN</span></span><br><span class="line">      <span class="keyword">await</span> <span class="title function_">loginAPI</span>(&#123; account, password &#125;)</span><br><span class="line">      <span class="comment">// 1. 提示用户</span></span><br><span class="line">      <span class="title class_">ElMessage</span>(&#123; <span class="attr">type</span>: <span class="string">&#x27;success&#x27;</span>, <span class="attr">message</span>: <span class="string">&#x27;登录成功&#x27;</span> &#125;)</span><br><span class="line">      <span class="comment">// 2. 跳转首页</span></span><br><span class="line">      router.<span class="title function_">replace</span>(&#123; <span class="attr">path</span>: <span class="string">&#x27;/&#x27;</span> &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="Pinia管理用户数据"><a href="#Pinia管理用户数据" class="headerlink" title="Pinia管理用户数据"></a>Pinia管理用户数据</h1><blockquote>
<p>基本思想：Pinia负责用户数据相关的state和action，组件中只负责触发action函数并传递参数</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 管理用户数据相关</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; defineStore &#125; <span class="keyword">from</span> <span class="string">&#x27;pinia&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; ref &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; loginAPI &#125; <span class="keyword">from</span> <span class="string">&#x27;@/apis/user&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> useUserStore = <span class="title function_">defineStore</span>(<span class="string">&#x27;user&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 1. 定义管理用户数据的state</span></span><br><span class="line">  <span class="keyword">const</span> userInfo = <span class="title function_">ref</span>(&#123;&#125;)</span><br><span class="line">  <span class="comment">// 2. 定义获取接口数据的action函数</span></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">getUserInfo</span> = <span class="keyword">async</span> (<span class="params">&#123; account, password &#125;</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> res = <span class="keyword">await</span> <span class="title function_">loginAPI</span>(&#123; account, password &#125;)</span><br><span class="line">    userInfo.<span class="property">value</span> = res.<span class="property">result</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 3. 以对象的格式把state和action return</span></span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    getUserInfo</span><br><span class="line">  &#125;</span><br><span class="line">&#125;, &#123;</span><br><span class="line">  <span class="attr">persist</span>: <span class="literal">true</span>,</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h1 id="请求拦截器携带token"><a href="#请求拦截器携带token" class="headerlink" title="请求拦截器携带token"></a>请求拦截器携带token</h1><blockquote>
<p>基础思想：很多接口如果想要获取数据必须要带着有效的Token信息才可以，拦截器中做一次，用到axios实例的其他都可以拿到</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// axios请求拦截器</span></span><br><span class="line">httpInstance.<span class="property">interceptors</span>.<span class="property">request</span>.<span class="title function_">use</span>(<span class="function"><span class="params">config</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 1. 从pinia获取token数据</span></span><br><span class="line">  <span class="keyword">const</span> userStore = <span class="title function_">useUserStore</span>()</span><br><span class="line">  <span class="comment">// 2. 按照后端的要求拼接token数据</span></span><br><span class="line">  <span class="keyword">const</span> token = userStore.<span class="property">userInfo</span>.<span class="property">token</span></span><br><span class="line">  <span class="keyword">if</span> (token) &#123;</span><br><span class="line">    config.<span class="property">headers</span>.<span class="property">Authorization</span> = <span class="string">`Bearer <span class="subst">$&#123;token&#125;</span>`</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> config</span><br><span class="line">&#125;, <span class="function"><span class="params">e</span> =&gt;</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(e))</span><br></pre></td></tr></table></figure>

<h1 id="退出登录实现"><a href="#退出登录实现" class="headerlink" title="退出登录实现"></a>退出登录实现</h1><blockquote>
<p>基础思想：</p>
<ol>
<li>清除用户信息</li>
<li>跳转到登录页</li>
</ol>
</blockquote>
<p>1- 新增清除用户信息action</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 退出时清除用户信息</span></span><br><span class="line"> <span class="keyword">const</span> <span class="title function_">clearUserInfo</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">   userInfo.<span class="property">value</span> = &#123;&#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>

<p>2- 组件中执行业务逻辑</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; useUserStore &#125; from &#x27;@/stores/userStore&#x27;</span><br><span class="line">import &#123; useRouter &#125; from &#x27;vue-router&#x27;</span><br><span class="line">const userStore = useUserStore()</span><br><span class="line">const router = useRouter()</span><br><span class="line">const confirm = () =&gt; &#123;</span><br><span class="line">  console.log(&#x27;用户要退出登录了&#x27;)</span><br><span class="line">  // 退出登录业务逻辑实现</span><br><span class="line">  // 1.清除用户信息 触发action</span><br><span class="line">  userStore.clearUserInfo()</span><br><span class="line">  // 2.跳转到登录页</span><br><span class="line">  router.push(&#x27;/login&#x27;)</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>



<h1 id="本地购物车"><a href="#本地购物车" class="headerlink" title="本地购物车"></a>本地购物车</h1><h2 id="1-添加购物车"><a href="#1-添加购物车" class="headerlink" title="1. 添加购物车"></a>1. 添加购物车</h2><blockquote>
<p>基础思想：如果已经添加过相同的商品，就在其数量count上加一，如果没有添加过，就直接push到购物车列表中</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 封装购物车模块</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; defineStore &#125; <span class="keyword">from</span> <span class="string">&#x27;pinia&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; ref &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> useCartStore = <span class="title function_">defineStore</span>(<span class="string">&#x27;cart&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 1. 定义state - cartList</span></span><br><span class="line">  <span class="keyword">const</span> cartList = <span class="title function_">ref</span>([])</span><br><span class="line">  <span class="comment">// 2. 定义action - addCart</span></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">addCart</span> = (<span class="params">goods</span>) =&gt; &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;添加&#x27;</span>, goods)</span><br><span class="line">    <span class="comment">// 添加购物车操作</span></span><br><span class="line">    <span class="comment">// 已添加过 - count + 1</span></span><br><span class="line">    <span class="comment">// 没有添加过 - 直接push</span></span><br><span class="line">    <span class="comment">// 思路：通过匹配传递过来的商品对象中的skuId能不能在cartList中找到，找到了就是添加过</span></span><br><span class="line">    <span class="keyword">const</span> item = cartList.<span class="property">value</span>.<span class="title function_">find</span>(<span class="function">(<span class="params">item</span>) =&gt;</span> goods.<span class="property">skuId</span> === item.<span class="property">skuId</span>)</span><br><span class="line">    <span class="keyword">if</span> (item) &#123;</span><br><span class="line">      <span class="comment">// 找到了</span></span><br><span class="line">      item.<span class="property">count</span>++</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="comment">// 没找到</span></span><br><span class="line">      cartList.<span class="property">value</span>.<span class="title function_">push</span>(goods)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    cartList,</span><br><span class="line">    addCart</span><br><span class="line">  &#125;</span><br><span class="line">&#125;, &#123;</span><br><span class="line">  <span class="attr">persist</span>: <span class="literal">true</span>,</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h2 id="2-头部购物车"><a href="#2-头部购物车" class="headerlink" title="2. 头部购物车"></a>2. 头部购物车</h2><h3 id="2-1-头部购物车组件模版"><a href="#2-1-头部购物车组件模版" class="headerlink" title="2.1. 头部购物车组件模版"></a>2.1. 头部购物车组件模版</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;cart&quot;&gt;</span><br><span class="line">    &lt;a class=&quot;curr&quot; href=&quot;javascript:;&quot;&gt;</span><br><span class="line">      &lt;i class=&quot;iconfont icon-cart&quot;&gt;&lt;/i&gt;&lt;em&gt;2&lt;/em&gt;</span><br><span class="line">    &lt;/a&gt;</span><br><span class="line">    &lt;div class=&quot;layer&quot;&gt;</span><br><span class="line">      &lt;div class=&quot;list&quot;&gt;</span><br><span class="line">        &lt;!--</span><br><span class="line">        &lt;div class=&quot;item&quot; v-for=&quot;i in cartList&quot; :key=&quot;i&quot;&gt;</span><br><span class="line">          &lt;RouterLink to=&quot;&quot;&gt;</span><br><span class="line">            &lt;img :src=&quot;i.picture&quot; alt=&quot;&quot; /&gt;</span><br><span class="line">            &lt;div class=&quot;center&quot;&gt;</span><br><span class="line">              &lt;p class=&quot;name ellipsis-2&quot;&gt;</span><br><span class="line">                &#123;&#123; i.name &#125;&#125;</span><br><span class="line">              &lt;/p&gt;</span><br><span class="line">              &lt;p class=&quot;attr ellipsis&quot;&gt;&#123;&#123; i.attrsText &#125;&#125;&lt;/p&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;right&quot;&gt;</span><br><span class="line">              &lt;p class=&quot;price&quot;&gt;&amp;yen;&#123;&#123; i.price &#125;&#125;&lt;/p&gt;</span><br><span class="line">              &lt;p class=&quot;count&quot;&gt;x&#123;&#123; i.count &#125;&#125;&lt;/p&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">          &lt;/RouterLink&gt;</span><br><span class="line">          &lt;i class=&quot;iconfont icon-close-new&quot; @click=&quot;store.delCart(i.skuId)&quot;&gt;&lt;/i&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        --&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;div class=&quot;foot&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;total&quot;&gt;</span><br><span class="line">          &lt;p&gt;共 10 件商品&lt;/p&gt;</span><br><span class="line">          &lt;p&gt;&amp;yen; 100.00 &lt;/p&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;el-button size=&quot;large&quot; type=&quot;primary&quot; &gt;去购物车结算&lt;/el-button&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped lang=&quot;scss&quot;&gt;</span><br><span class="line">.cart &#123;</span><br><span class="line">  width: 50px;</span><br><span class="line">  position: relative;</span><br><span class="line">  z-index: 600;</span><br><span class="line"></span><br><span class="line">  .curr &#123;</span><br><span class="line">    height: 32px;</span><br><span class="line">    line-height: 32px;</span><br><span class="line">    text-align: center;</span><br><span class="line">    position: relative;</span><br><span class="line">    display: block;</span><br><span class="line"></span><br><span class="line">    .icon-cart &#123;</span><br><span class="line">      font-size: 22px;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    em &#123;</span><br><span class="line">      font-style: normal;</span><br><span class="line">      position: absolute;</span><br><span class="line">      right: 0;</span><br><span class="line">      top: 0;</span><br><span class="line">      padding: 1px 6px;</span><br><span class="line">      line-height: 1;</span><br><span class="line">      background: $helpColor;</span><br><span class="line">      color: #fff;</span><br><span class="line">      font-size: 12px;</span><br><span class="line">      border-radius: 10px;</span><br><span class="line">      font-family: Arial;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  &amp;:hover &#123;</span><br><span class="line">    .layer &#123;</span><br><span class="line">      opacity: 1;</span><br><span class="line">      transform: none;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .layer &#123;</span><br><span class="line">    opacity: 0;</span><br><span class="line">    transition: all 0.4s 0.2s;</span><br><span class="line">    transform: translateY(-200px) scale(1, 0);</span><br><span class="line">    width: 400px;</span><br><span class="line">    height: 400px;</span><br><span class="line">    position: absolute;</span><br><span class="line">    top: 50px;</span><br><span class="line">    right: 0;</span><br><span class="line">    box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);</span><br><span class="line">    background: #fff;</span><br><span class="line">    border-radius: 4px;</span><br><span class="line">    padding-top: 10px;</span><br><span class="line"></span><br><span class="line">    &amp;::before &#123;</span><br><span class="line">      content: &quot;&quot;;</span><br><span class="line">      position: absolute;</span><br><span class="line">      right: 14px;</span><br><span class="line">      top: -10px;</span><br><span class="line">      width: 20px;</span><br><span class="line">      height: 20px;</span><br><span class="line">      background: #fff;</span><br><span class="line">      transform: scale(0.6, 1) rotate(45deg);</span><br><span class="line">      box-shadow: -3px -3px 5px rgba(0, 0, 0, 0.1);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .foot &#123;</span><br><span class="line">      position: absolute;</span><br><span class="line">      left: 0;</span><br><span class="line">      bottom: 0;</span><br><span class="line">      height: 70px;</span><br><span class="line">      width: 100%;</span><br><span class="line">      padding: 10px;</span><br><span class="line">      display: flex;</span><br><span class="line">      justify-content: space-between;</span><br><span class="line">      background: #f8f8f8;</span><br><span class="line">      align-items: center;</span><br><span class="line"></span><br><span class="line">      .total &#123;</span><br><span class="line">        padding-left: 10px;</span><br><span class="line">        color: #999;</span><br><span class="line"></span><br><span class="line">        p &#123;</span><br><span class="line">          &amp;:last-child &#123;</span><br><span class="line">            font-size: 18px;</span><br><span class="line">            color: $priceColor;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .list &#123;</span><br><span class="line">    height: 310px;</span><br><span class="line">    overflow: auto;</span><br><span class="line">    padding: 0 10px;</span><br><span class="line"></span><br><span class="line">    &amp;::-webkit-scrollbar &#123;</span><br><span class="line">      width: 10px;</span><br><span class="line">      height: 10px;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &amp;::-webkit-scrollbar-track &#123;</span><br><span class="line">      background: #f8f8f8;</span><br><span class="line">      border-radius: 2px;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &amp;::-webkit-scrollbar-thumb &#123;</span><br><span class="line">      background: #eee;</span><br><span class="line">      border-radius: 10px;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &amp;::-webkit-scrollbar-thumb:hover &#123;</span><br><span class="line">      background: #ccc;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .item &#123;</span><br><span class="line">      border-bottom: 1px solid #f5f5f5;</span><br><span class="line">      padding: 10px 0;</span><br><span class="line">      position: relative;</span><br><span class="line"></span><br><span class="line">      i &#123;</span><br><span class="line">        position: absolute;</span><br><span class="line">        bottom: 38px;</span><br><span class="line">        right: 0;</span><br><span class="line">        opacity: 0;</span><br><span class="line">        color: #666;</span><br><span class="line">        transition: all 0.5s;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      &amp;:hover &#123;</span><br><span class="line">        i &#123;</span><br><span class="line">          opacity: 1;</span><br><span class="line">          cursor: pointer;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      a &#123;</span><br><span class="line">        display: flex;</span><br><span class="line">        align-items: center;</span><br><span class="line"></span><br><span class="line">        img &#123;</span><br><span class="line">          height: 80px;</span><br><span class="line">          width: 80px;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .center &#123;</span><br><span class="line">          padding: 0 10px;</span><br><span class="line">          width: 200px;</span><br><span class="line"></span><br><span class="line">          .name &#123;</span><br><span class="line">            font-size: 16px;</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">          .attr &#123;</span><br><span class="line">            color: #999;</span><br><span class="line">            padding-top: 5px;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .right &#123;</span><br><span class="line">          width: 100px;</span><br><span class="line">          padding-right: 20px;</span><br><span class="line">          text-align: center;</span><br><span class="line"></span><br><span class="line">          .price &#123;</span><br><span class="line">            font-size: 16px;</span><br><span class="line">            color: $priceColor;</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">          .count &#123;</span><br><span class="line">            color: #999;</span><br><span class="line">            margin-top: 5px;</span><br><span class="line">            font-size: 16px;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<h3 id="2-2-渲染头部购物车数据"><a href="#2-2-渲染头部购物车数据" class="headerlink" title="2.2 渲染头部购物车数据"></a>2.2 渲染头部购物车数据</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; useCartStore &#125; from &#x27;@/stores/cartStore&#x27;</span><br><span class="line">const cartStore = useCartStore()</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;cart&quot;&gt;</span><br><span class="line">    &lt;a class=&quot;curr&quot; href=&quot;javascript:;&quot;&gt;</span><br><span class="line">      &lt;i class=&quot;iconfont icon-cart&quot;&gt;&lt;/i&gt;&lt;em&gt;&#123;&#123; cartStore.cartList.length &#125;&#125;&lt;/em&gt;</span><br><span class="line">    &lt;/a&gt;</span><br><span class="line">    &lt;div class=&quot;layer&quot;&gt;</span><br><span class="line">      &lt;div class=&quot;list&quot;&gt;</span><br><span class="line"></span><br><span class="line">        &lt;div class=&quot;item&quot; v-for=&quot;i in cartStore.cartList&quot; :key=&quot;i&quot;&gt;</span><br><span class="line">          &lt;RouterLink to=&quot;&quot;&gt;</span><br><span class="line">            &lt;img :src=&quot;i.picture&quot; alt=&quot;&quot; /&gt;</span><br><span class="line">            &lt;div class=&quot;center&quot;&gt;</span><br><span class="line">              &lt;p class=&quot;name ellipsis-2&quot;&gt;</span><br><span class="line">                &#123;&#123; i.name &#125;&#125;</span><br><span class="line">              &lt;/p&gt;</span><br><span class="line">              &lt;p class=&quot;attr ellipsis&quot;&gt;&#123;&#123; i.attrsText &#125;&#125;&lt;/p&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;right&quot;&gt;</span><br><span class="line">              &lt;p class=&quot;price&quot;&gt;&amp;yen;&#123;&#123; i.price &#125;&#125;&lt;/p&gt;</span><br><span class="line">              &lt;p class=&quot;count&quot;&gt;x&#123;&#123; i.count &#125;&#125;&lt;/p&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">          &lt;/RouterLink&gt;</span><br><span class="line">          &lt;i class=&quot;iconfont icon-close-new&quot; @click=&quot;cartStore.delCart(i.skuId)&quot;&gt;&lt;/i&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;div class=&quot;foot&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;total&quot;&gt;</span><br><span class="line">          &lt;p&gt;共 &#123;&#123; cartStore.allCount &#125;&#125; 件商品&lt;/p&gt;</span><br><span class="line">          &lt;p&gt;&amp;yen; &#123;&#123; cartStore.allPrice.toFixed(2) &#125;&#125; &lt;/p&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;el-button size=&quot;large&quot; type=&quot;primary&quot; @click=&quot;$router.push(&#x27;/cartlist&#x27;)&quot;&gt;去购物车结算&lt;/el-button&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure>

<h3 id="2-3-删除功能实现"><a href="#2-3-删除功能实现" class="headerlink" title="2.3 删除功能实现"></a>2.3 删除功能实现</h3><p>1- 添加删除action函数</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 删除购物车</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">delCart</span> = <span class="keyword">async</span> (<span class="params">skuId</span>) =&gt; &#123;</span><br><span class="line">    <span class="comment">// 思路：</span></span><br><span class="line">    <span class="comment">// 1. 找到要删除项的下标值 - splice</span></span><br><span class="line">    <span class="comment">// 2. 使用数组的过滤方法 - filter</span></span><br><span class="line">    <span class="keyword">const</span> idx = cartList.<span class="property">value</span>.<span class="title function_">findIndex</span>(<span class="function">(<span class="params">item</span>) =&gt;</span> skuId === item.<span class="property">skuId</span>)</span><br><span class="line">    cartList.<span class="property">value</span>.<span class="title function_">splice</span>(idx, <span class="number">1</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>2- 组件触发action函数并传递参数</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;i class=&quot;iconfont icon-close-new&quot; @click=&quot;cartStore.delCart(i.skuId)&quot;&gt;&lt;/i&gt;</span><br></pre></td></tr></table></figure>

<h2 id="3-列表购物车-基础内容渲染"><a href="#3-列表购物车-基础内容渲染" class="headerlink" title="3. 列表购物车-基础内容渲染"></a>3. 列表购物车-基础内容渲染</h2><h3 id="3-1-准备模版"><a href="#3-1-准备模版" class="headerlink" title="3.1. 准备模版"></a>3.1. 准备模版</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">const cartList = []</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;xtx-cart-page&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;container m-top-20&quot;&gt;</span><br><span class="line">      &lt;div class=&quot;cart&quot;&gt;</span><br><span class="line">        &lt;table&gt;</span><br><span class="line">          &lt;thead&gt;</span><br><span class="line">            &lt;tr&gt;</span><br><span class="line">              &lt;th width=&quot;120&quot;&gt;</span><br><span class="line">                &lt;el-checkbox/&gt;</span><br><span class="line">              &lt;/th&gt;</span><br><span class="line">              &lt;th width=&quot;400&quot;&gt;商品信息&lt;/th&gt;</span><br><span class="line">              &lt;th width=&quot;220&quot;&gt;单价&lt;/th&gt;</span><br><span class="line">              &lt;th width=&quot;180&quot;&gt;数量&lt;/th&gt;</span><br><span class="line">              &lt;th width=&quot;180&quot;&gt;小计&lt;/th&gt;</span><br><span class="line">              &lt;th width=&quot;140&quot;&gt;操作&lt;/th&gt;</span><br><span class="line">            &lt;/tr&gt;</span><br><span class="line">          &lt;/thead&gt;</span><br><span class="line">          &lt;!-- 商品列表 --&gt;</span><br><span class="line">          &lt;tbody&gt;</span><br><span class="line">            &lt;tr v-for=&quot;i in cartList&quot; :key=&quot;i.id&quot;&gt;</span><br><span class="line">              &lt;td&gt;</span><br><span class="line">                &lt;el-checkbox /&gt;</span><br><span class="line">              &lt;/td&gt;</span><br><span class="line">              &lt;td&gt;</span><br><span class="line">                &lt;div class=&quot;goods&quot;&gt;</span><br><span class="line">                  &lt;RouterLink to=&quot;/&quot;&gt;&lt;img :src=&quot;i.picture&quot; alt=&quot;&quot; /&gt;&lt;/RouterLink&gt;</span><br><span class="line">                  &lt;div&gt;</span><br><span class="line">                    &lt;p class=&quot;name ellipsis&quot;&gt;</span><br><span class="line">                      &#123;&#123; i.name &#125;&#125;</span><br><span class="line">                    &lt;/p&gt;</span><br><span class="line">                  &lt;/div&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">              &lt;/td&gt;</span><br><span class="line">              &lt;td class=&quot;tc&quot;&gt;</span><br><span class="line">                &lt;p&gt;&amp;yen;&#123;&#123; i.price &#125;&#125;&lt;/p&gt;</span><br><span class="line">              &lt;/td&gt;</span><br><span class="line">              &lt;td class=&quot;tc&quot;&gt;</span><br><span class="line">                &lt;el-input-number v-model=&quot;i.count&quot; /&gt;</span><br><span class="line">              &lt;/td&gt;</span><br><span class="line">              &lt;td class=&quot;tc&quot;&gt;</span><br><span class="line">                &lt;p class=&quot;f16 red&quot;&gt;&amp;yen;&#123;&#123; (i.price * i.count).toFixed(2) &#125;&#125;&lt;/p&gt;</span><br><span class="line">              &lt;/td&gt;</span><br><span class="line">              &lt;td class=&quot;tc&quot;&gt;</span><br><span class="line">                &lt;p&gt;</span><br><span class="line">                  &lt;el-popconfirm title=&quot;确认删除吗?&quot; confirm-button-text=&quot;确认&quot; cancel-button-text=&quot;取消&quot; @confirm=&quot;delCart(i)&quot;&gt;</span><br><span class="line">                    &lt;template #reference&gt;</span><br><span class="line">                      &lt;a href=&quot;javascript:;&quot;&gt;删除&lt;/a&gt;</span><br><span class="line">                    &lt;/template&gt;</span><br><span class="line">                  &lt;/el-popconfirm&gt;</span><br><span class="line">                &lt;/p&gt;</span><br><span class="line">              &lt;/td&gt;</span><br><span class="line">            &lt;/tr&gt;</span><br><span class="line">            &lt;tr v-if=&quot;cartList.length === 0&quot;&gt;</span><br><span class="line">              &lt;td colspan=&quot;6&quot;&gt;</span><br><span class="line">                &lt;div class=&quot;cart-none&quot;&gt;</span><br><span class="line">                  &lt;el-empty description=&quot;购物车列表为空&quot;&gt;</span><br><span class="line">                    &lt;el-button type=&quot;primary&quot;&gt;随便逛逛&lt;/el-button&gt;</span><br><span class="line">                  &lt;/el-empty&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">              &lt;/td&gt;</span><br><span class="line">            &lt;/tr&gt;</span><br><span class="line">          &lt;/tbody&gt;</span><br><span class="line"></span><br><span class="line">        &lt;/table&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;!-- 操作栏 --&gt;</span><br><span class="line">      &lt;div class=&quot;action&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;batch&quot;&gt;</span><br><span class="line">          共 10 件商品，已选择 2 件，商品合计：</span><br><span class="line">          &lt;span class=&quot;red&quot;&gt;¥ 200.00 &lt;/span&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;total&quot;&gt;</span><br><span class="line">          &lt;el-button size=&quot;large&quot; type=&quot;primary&quot; &gt;下单结算&lt;/el-button&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped lang=&quot;scss&quot;&gt;</span><br><span class="line">.xtx-cart-page &#123;</span><br><span class="line">  margin-top: 20px;</span><br><span class="line"></span><br><span class="line">  .cart &#123;</span><br><span class="line">    background: #fff;</span><br><span class="line">    color: #666;</span><br><span class="line"></span><br><span class="line">    table &#123;</span><br><span class="line">      border-spacing: 0;</span><br><span class="line">      border-collapse: collapse;</span><br><span class="line">      line-height: 24px;</span><br><span class="line"></span><br><span class="line">      th,</span><br><span class="line">      td &#123;</span><br><span class="line">        padding: 10px;</span><br><span class="line">        border-bottom: 1px solid #f5f5f5;</span><br><span class="line"></span><br><span class="line">        &amp;:first-child &#123;</span><br><span class="line">          text-align: left;</span><br><span class="line">          padding-left: 30px;</span><br><span class="line">          color: #999;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      th &#123;</span><br><span class="line">        font-size: 16px;</span><br><span class="line">        font-weight: normal;</span><br><span class="line">        line-height: 50px;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .cart-none &#123;</span><br><span class="line">    text-align: center;</span><br><span class="line">    padding: 120px 0;</span><br><span class="line">    background: #fff;</span><br><span class="line"></span><br><span class="line">    p &#123;</span><br><span class="line">      color: #999;</span><br><span class="line">      padding: 20px 0;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .tc &#123;</span><br><span class="line">    text-align: center;</span><br><span class="line"></span><br><span class="line">    a &#123;</span><br><span class="line">      color: $xtxColor;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .xtx-numbox &#123;</span><br><span class="line">      margin: 0 auto;</span><br><span class="line">      width: 120px;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .red &#123;</span><br><span class="line">    color: $priceColor;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .green &#123;</span><br><span class="line">    color: $xtxColor;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .f16 &#123;</span><br><span class="line">    font-size: 16px;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .goods &#123;</span><br><span class="line">    display: flex;</span><br><span class="line">    align-items: center;</span><br><span class="line"></span><br><span class="line">    img &#123;</span><br><span class="line">      width: 100px;</span><br><span class="line">      height: 100px;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &gt;div &#123;</span><br><span class="line">      width: 280px;</span><br><span class="line">      font-size: 16px;</span><br><span class="line">      padding-left: 10px;</span><br><span class="line"></span><br><span class="line">      .attr &#123;</span><br><span class="line">        font-size: 14px;</span><br><span class="line">        color: #999;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .action &#123;</span><br><span class="line">    display: flex;</span><br><span class="line">    background: #fff;</span><br><span class="line">    margin-top: 20px;</span><br><span class="line">    height: 80px;</span><br><span class="line">    align-items: center;</span><br><span class="line">    font-size: 16px;</span><br><span class="line">    justify-content: space-between;</span><br><span class="line">    padding: 0 30px;</span><br><span class="line"></span><br><span class="line">    .xtx-checkbox &#123;</span><br><span class="line">      color: #999;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .batch &#123;</span><br><span class="line">      a &#123;</span><br><span class="line">        margin-left: 20px;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .red &#123;</span><br><span class="line">      font-size: 18px;</span><br><span class="line">      margin-right: 20px;</span><br><span class="line">      font-weight: bold;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .tit &#123;</span><br><span class="line">    color: #666;</span><br><span class="line">    font-size: 16px;</span><br><span class="line">    font-weight: normal;</span><br><span class="line">    line-height: 50px;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<h3 id="3-2-绑定路由"><a href="#3-2-绑定路由" class="headerlink" title="3.2. 绑定路由"></a>3.2. 绑定路由</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">CartList</span> <span class="keyword">from</span> <span class="string">&#x27;@/views/CartList/index.vue&#x27;</span></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">path</span>: <span class="string">&#x27;cartlist&#x27;</span>,</span><br><span class="line">  <span class="attr">component</span>: <span class="title class_">CartList</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="3-3-渲染列表"><a href="#3-3-渲染列表" class="headerlink" title="3.3. 渲染列表"></a>3.3. 渲染列表</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; useCartStore &#125; from &#x27;@/stores/cartStore&#x27;</span><br><span class="line">const cartStore = useCartStore()</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;xtx-cart-page&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;container m-top-20&quot;&gt;</span><br><span class="line">      &lt;div class=&quot;cart&quot;&gt;</span><br><span class="line">        &lt;table&gt;</span><br><span class="line">          &lt;thead&gt;</span><br><span class="line">            &lt;tr&gt;</span><br><span class="line">              &lt;th width=&quot;120&quot;&gt;</span><br><span class="line">                &lt;el-checkbox /&gt;</span><br><span class="line">              &lt;/th&gt;</span><br><span class="line">              &lt;th width=&quot;400&quot;&gt;商品信息&lt;/th&gt;</span><br><span class="line">              &lt;th width=&quot;220&quot;&gt;单价&lt;/th&gt;</span><br><span class="line">              &lt;th width=&quot;180&quot;&gt;数量&lt;/th&gt;</span><br><span class="line">              &lt;th width=&quot;180&quot;&gt;小计&lt;/th&gt;</span><br><span class="line">              &lt;th width=&quot;140&quot;&gt;操作&lt;/th&gt;</span><br><span class="line">            &lt;/tr&gt;</span><br><span class="line">          &lt;/thead&gt;</span><br><span class="line">          &lt;!-- 商品列表 --&gt;</span><br><span class="line">          &lt;tbody&gt;</span><br><span class="line">            &lt;tr v-for=&quot;i in cartStore.cartList&quot; :key=&quot;i.id&quot;&gt;</span><br><span class="line">              &lt;td&gt;</span><br><span class="line">                &lt;!-- 单选框 --&gt;</span><br><span class="line">                &lt;el-checkbox/&gt;</span><br><span class="line">              &lt;/td&gt;</span><br><span class="line">              &lt;td&gt;</span><br><span class="line">                &lt;div class=&quot;goods&quot;&gt;</span><br><span class="line">                  &lt;RouterLink to=&quot;/&quot;&gt;&lt;img :src=&quot;i.picture&quot; alt=&quot;&quot; /&gt;&lt;/RouterLink&gt;</span><br><span class="line">                  &lt;div&gt;</span><br><span class="line">                    &lt;p class=&quot;name ellipsis&quot;&gt;</span><br><span class="line">                      &#123;&#123; i.name &#125;&#125;</span><br><span class="line">                    &lt;/p&gt;</span><br><span class="line">                  &lt;/div&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">              &lt;/td&gt;</span><br><span class="line">              &lt;td class=&quot;tc&quot;&gt;</span><br><span class="line">                &lt;p&gt;&amp;yen;&#123;&#123; i.price &#125;&#125;&lt;/p&gt;</span><br><span class="line">              &lt;/td&gt;</span><br><span class="line">              &lt;td class=&quot;tc&quot;&gt;</span><br><span class="line">                &lt;el-input-number v-model=&quot;i.count&quot; /&gt;</span><br><span class="line">              &lt;/td&gt;</span><br><span class="line">              &lt;td class=&quot;tc&quot;&gt;</span><br><span class="line">                &lt;p class=&quot;f16 red&quot;&gt;&amp;yen;&#123;&#123; (i.price * i.count).toFixed(2) &#125;&#125;&lt;/p&gt;</span><br><span class="line">              &lt;/td&gt;</span><br><span class="line">              &lt;td class=&quot;tc&quot;&gt;</span><br><span class="line">                &lt;p&gt;</span><br><span class="line">                  &lt;el-popconfirm title=&quot;确认删除吗?&quot; confirm-button-text=&quot;确认&quot; cancel-button-text=&quot;取消&quot; @confirm=&quot;delCart(i)&quot;&gt;</span><br><span class="line">                    &lt;template #reference&gt;</span><br><span class="line">                      &lt;a href=&quot;javascript:;&quot;&gt;删除&lt;/a&gt;</span><br><span class="line">                    &lt;/template&gt;</span><br><span class="line">                  &lt;/el-popconfirm&gt;</span><br><span class="line">                &lt;/p&gt;</span><br><span class="line">              &lt;/td&gt;</span><br><span class="line">            &lt;/tr&gt;</span><br><span class="line">            &lt;tr v-if=&quot;cartStore.cartList.length === 0&quot;&gt;</span><br><span class="line">              &lt;td colspan=&quot;6&quot;&gt;</span><br><span class="line">                &lt;div class=&quot;cart-none&quot;&gt;</span><br><span class="line">                  &lt;el-empty description=&quot;购物车列表为空&quot;&gt;</span><br><span class="line">                    &lt;el-button type=&quot;primary&quot;&gt;随便逛逛&lt;/el-button&gt;</span><br><span class="line">                  &lt;/el-empty&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">              &lt;/td&gt;</span><br><span class="line">            &lt;/tr&gt;</span><br><span class="line">          &lt;/tbody&gt;</span><br><span class="line"></span><br><span class="line">        &lt;/table&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;!-- 操作栏 --&gt;</span><br><span class="line">      &lt;div class=&quot;action&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;batch&quot;&gt;</span><br><span class="line">          共 10 件商品，已选择 2 件，商品合计：</span><br><span class="line">          &lt;span class=&quot;red&quot;&gt;¥ 200.00 &lt;/span&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;total&quot;&gt;</span><br><span class="line">          &lt;el-button size=&quot;large&quot; type=&quot;primary&quot; &gt;下单结算&lt;/el-button&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure>

<h2 id="4-列表购物车-单选功能实现"><a href="#4-列表购物车-单选功能实现" class="headerlink" title="4. 列表购物车-单选功能实现"></a>4. 列表购物车-单选功能实现</h2><blockquote>
<p>基本思想：通过skuId找到要进行单选操作的商品，把控制是否选中的selected字段修改为当前单选框的状态</p>
</blockquote>
<p>1- 添加单选action</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 单选功能</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">singleCheck</span> = (<span class="params">skuId, selected</span>) =&gt; &#123;</span><br><span class="line">  <span class="comment">// 通过skuId找到要修改的那一项 然后把它的selected修改为传过来的selected</span></span><br><span class="line">  <span class="keyword">const</span> item = cartList.<span class="property">value</span>.<span class="title function_">find</span>(<span class="function">(<span class="params">item</span>) =&gt;</span> item.<span class="property">skuId</span> === skuId)</span><br><span class="line">  item.<span class="property">selected</span> = selected</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>2- 触发action函数</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">// 单选回调</span><br><span class="line">const singleCheck = (i, selected) =&gt; &#123;</span><br><span class="line">  console.log(i, selected)</span><br><span class="line">  // store cartList 数组 无法知道要修改谁的选中状态？</span><br><span class="line">  // 除了selected补充一个用来筛选的参数 - skuId</span><br><span class="line">  cartStore.singleCheck(i.skuId, selected)</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;td&gt;</span><br><span class="line">    &lt;!-- 单选框 --&gt;</span><br><span class="line">    &lt;el-checkbox :model-value=&quot;i.selected&quot; @change=&quot;(selected) =&gt; singleCheck(i, selected)&quot; /&gt;</span><br><span class="line">  &lt;/td&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure>

<h2 id="5-列表购物车-全选功能实现"><a href="#5-列表购物车-全选功能实现" class="headerlink" title="5. 列表购物车-全选功能实现"></a>5. 列表购物车-全选功能实现</h2><blockquote>
<p>基础思想：</p>
<ol>
<li>全选状态决定单选框状态 - 遍历cartList把每一项的selected都设置为何全选框状态一致</li>
<li>单选框状态决定全选状态 - 只有所有单选框的selected都为true, 全选框才为true</li>
</ol>
</blockquote>
<p>1- store中定义action和计算属性</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 全选功能action</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">allCheck</span> = (<span class="params">selected</span>) =&gt; &#123;</span><br><span class="line">  <span class="comment">// 把cartList中的每一项的selected都设置为当前的全选框状态</span></span><br><span class="line">  cartList.<span class="property">value</span>.<span class="title function_">forEach</span>(<span class="function"><span class="params">item</span> =&gt;</span> item.<span class="property">selected</span> = selected)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 是否全选计算属性</span></span><br><span class="line"><span class="keyword">const</span> isAll = <span class="title function_">computed</span>(<span class="function">() =&gt;</span> cartList.<span class="property">value</span>.<span class="title function_">every</span>(<span class="function">(<span class="params">item</span>) =&gt;</span> item.<span class="property">selected</span>))</span><br></pre></td></tr></table></figure>

<p>2- 组件中触发aciton和使用计算属性</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">const allCheck = (selected) =&gt; &#123;</span><br><span class="line">  cartStore.allCheck(selected)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;!-- 全选框 --&gt;</span><br><span class="line">  &lt;el-checkbox :model-value=&quot;cartStore.isAll&quot; @change=&quot;allCheck&quot; /&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure>

<h2 id="6-列表购物车-统计数据功能实现"><a href="#6-列表购物车-统计数据功能实现" class="headerlink" title="6. 列表购物车-统计数据功能实现"></a>6. 列表购物车-统计数据功能实现</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 3. 已选择数量</span></span><br><span class="line"><span class="keyword">const</span> selectedCount = <span class="title function_">computed</span>(<span class="function">() =&gt;</span> cartList.<span class="property">value</span>.<span class="title function_">filter</span>(<span class="function"><span class="params">item</span> =&gt;</span> item.<span class="property">selected</span>).<span class="title function_">reduce</span>(<span class="function">(<span class="params">a, c</span>) =&gt;</span> a + c.<span class="property">count</span>, <span class="number">0</span>))</span><br><span class="line"><span class="comment">// 4. 已选择商品价钱合计</span></span><br><span class="line"><span class="keyword">const</span> selectedPrice = <span class="title function_">computed</span>(<span class="function">() =&gt;</span> cartList.<span class="property">value</span>.<span class="title function_">filter</span>(<span class="function"><span class="params">item</span> =&gt;</span> item.<span class="property">selected</span>).<span class="title function_">reduce</span>(<span class="function">(<span class="params">a, c</span>) =&gt;</span> a + c.<span class="property">count</span> * c.<span class="property">price</span>, <span class="number">0</span>))</span><br></pre></td></tr></table></figure>

<h1 id="接口购物车"><a href="#接口购物车" class="headerlink" title="接口购物车"></a>接口购物车</h1><h2 id="1-加入购物车"><a href="#1-加入购物车" class="headerlink" title="1. 加入购物车"></a>1. 加入购物车</h2><p>1-接口封装</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 加入购物车</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">insertCartAPI</span> = (<span class="params">&#123; skuId, count &#125;</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">&#x27;/member/cart&#x27;</span>,</span><br><span class="line">    <span class="attr">method</span>: <span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line">    <span class="attr">data</span>: &#123;</span><br><span class="line">      skuId,</span><br><span class="line">      count</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>2- action中适配登录和非登录</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; defineStore &#125; <span class="keyword">from</span> <span class="string">&#x27;pinia&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; useUserStore &#125; <span class="keyword">from</span> <span class="string">&#x27;./userStore&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; insertCartAPI &#125; <span class="keyword">from</span> <span class="string">&#x27;@/apis/cart&#x27;</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> useCartStore = <span class="title function_">defineStore</span>(<span class="string">&#x27;cart&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> userStore = <span class="title function_">useUserStore</span>()</span><br><span class="line">  <span class="keyword">const</span> isLogin = <span class="title function_">computed</span>(<span class="function">() =&gt;</span> userStore.<span class="property">userInfo</span>.<span class="property">token</span>)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">addCart</span> = <span class="keyword">async</span> (<span class="params">goods</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; skuId, count &#125; = goods</span><br><span class="line">    <span class="comment">// 登录</span></span><br><span class="line">    <span class="keyword">if</span> (isLogin.<span class="property">value</span>) &#123;</span><br><span class="line">      <span class="comment">// 登录之后的加入购车逻辑</span></span><br><span class="line">      <span class="keyword">await</span> <span class="title function_">insertCartAPI</span>(&#123; skuId, count &#125;)</span><br><span class="line">      <span class="title function_">updateNewList</span>()</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="comment">// 未登录</span></span><br><span class="line">      <span class="keyword">const</span> item = cartList.<span class="property">value</span>.<span class="title function_">find</span>(<span class="function">(<span class="params">item</span>) =&gt;</span> goods.<span class="property">skuId</span> === item.<span class="property">skuId</span>)</span><br><span class="line">      <span class="keyword">if</span> (item) &#123;</span><br><span class="line">        <span class="comment">// 找到了</span></span><br><span class="line">        item.<span class="property">count</span>++</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// 没找到</span></span><br><span class="line">        cartList.<span class="property">value</span>.<span class="title function_">push</span>(goods)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;, &#123;</span><br><span class="line">  <span class="attr">persist</span>: <span class="literal">true</span>,</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h2 id="2-删除购物车"><a href="#2-删除购物车" class="headerlink" title="2. 删除购物车"></a>2. 删除购物车</h2><p>1- 封装接口</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 删除购物车</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">delCartAPI</span> = (<span class="params">ids</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">&#x27;/member/cart&#x27;</span>,</span><br><span class="line">    <span class="attr">method</span>: <span class="string">&#x27;DELETE&#x27;</span>,</span><br><span class="line">    <span class="attr">data</span>: &#123;</span><br><span class="line">      ids</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>2- action中适配登录和非登录</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 删除购物车</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">delCart</span> = <span class="keyword">async</span> (<span class="params">skuId</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">if</span> (isLogin.<span class="property">value</span>) &#123;</span><br><span class="line">    <span class="comment">// 调用接口实现接口购物车中的删除功能</span></span><br><span class="line">    <span class="keyword">await</span> <span class="title function_">delCartAPI</span>([skuId])</span><br><span class="line">    <span class="title function_">updateNewList</span>()</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// 思路：</span></span><br><span class="line">    <span class="comment">// 1. 找到要删除项的下标值 - splice</span></span><br><span class="line">    <span class="comment">// 2. 使用数组的过滤方法 - filter</span></span><br><span class="line">    <span class="keyword">const</span> idx = cartList.<span class="property">value</span>.<span class="title function_">findIndex</span>(<span class="function">(<span class="params">item</span>) =&gt;</span> skuId === item.<span class="property">skuId</span>)</span><br><span class="line">    cartList.<span class="property">value</span>.<span class="title function_">splice</span>(idx, <span class="number">1</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h1 id="路由配置和基础数据渲染"><a href="#路由配置和基础数据渲染" class="headerlink" title="路由配置和基础数据渲染"></a>路由配置和基础数据渲染</h1><h2 id="1-准备组件模版-2"><a href="#1-准备组件模版-2" class="headerlink" title="1. 准备组件模版"></a>1. 准备组件模版</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">const checkInfo = &#123;&#125;  // 订单对象</span><br><span class="line">const curAddress = &#123;&#125;  // 地址对象</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;xtx-pay-checkout-page&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;container&quot;&gt;</span><br><span class="line">      &lt;div class=&quot;wrapper&quot;&gt;</span><br><span class="line">        &lt;!-- 收货地址 --&gt;</span><br><span class="line">        &lt;h3 class=&quot;box-title&quot;&gt;收货地址&lt;/h3&gt;</span><br><span class="line">        &lt;div class=&quot;box-body&quot;&gt;</span><br><span class="line">          &lt;div class=&quot;address&quot;&gt;</span><br><span class="line">            &lt;div class=&quot;text&quot;&gt;</span><br><span class="line">              &lt;div class=&quot;none&quot; v-if=&quot;!curAddress&quot;&gt;您需要先添加收货地址才可提交订单。&lt;/div&gt;</span><br><span class="line">              &lt;ul v-else&gt;</span><br><span class="line">                &lt;li&gt;&lt;span&gt;收&lt;i /&gt;货&lt;i /&gt;人：&lt;/span&gt;&#123;&#123; curAddress.receiver &#125;&#125;&lt;/li&gt;</span><br><span class="line">                &lt;li&gt;&lt;span&gt;联系方式：&lt;/span&gt;&#123;&#123; curAddress.contact &#125;&#125;&lt;/li&gt;</span><br><span class="line">                &lt;li&gt;&lt;span&gt;收货地址：&lt;/span&gt;&#123;&#123; curAddress.fullLocation &#125;&#125; &#123;&#123; curAddress.address &#125;&#125;&lt;/li&gt;</span><br><span class="line">              &lt;/ul&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;action&quot;&gt;</span><br><span class="line">              &lt;el-button size=&quot;large&quot; @click=&quot;toggleFlag = true&quot;&gt;切换地址&lt;/el-button&gt;</span><br><span class="line">              &lt;el-button size=&quot;large&quot; @click=&quot;addFlag = true&quot;&gt;添加地址&lt;/el-button&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;!-- 商品信息 --&gt;</span><br><span class="line">        &lt;h3 class=&quot;box-title&quot;&gt;商品信息&lt;/h3&gt;</span><br><span class="line">        &lt;div class=&quot;box-body&quot;&gt;</span><br><span class="line">          &lt;table class=&quot;goods&quot;&gt;</span><br><span class="line">            &lt;thead&gt;</span><br><span class="line">              &lt;tr&gt;</span><br><span class="line">                &lt;th width=&quot;520&quot;&gt;商品信息&lt;/th&gt;</span><br><span class="line">                &lt;th width=&quot;170&quot;&gt;单价&lt;/th&gt;</span><br><span class="line">                &lt;th width=&quot;170&quot;&gt;数量&lt;/th&gt;</span><br><span class="line">                &lt;th width=&quot;170&quot;&gt;小计&lt;/th&gt;</span><br><span class="line">                &lt;th width=&quot;170&quot;&gt;实付&lt;/th&gt;</span><br><span class="line">              &lt;/tr&gt;</span><br><span class="line">            &lt;/thead&gt;</span><br><span class="line">            &lt;tbody&gt;</span><br><span class="line">              &lt;tr v-for=&quot;i in checkInfo.goods&quot; :key=&quot;i.id&quot;&gt;</span><br><span class="line">                &lt;td&gt;</span><br><span class="line">                  &lt;a href=&quot;javascript:;&quot; class=&quot;info&quot;&gt;</span><br><span class="line">                    &lt;img :src=&quot;i.picture&quot; alt=&quot;&quot;&gt;</span><br><span class="line">                    &lt;div class=&quot;right&quot;&gt;</span><br><span class="line">                      &lt;p&gt;&#123;&#123; i.name &#125;&#125;&lt;/p&gt;</span><br><span class="line">                      &lt;p&gt;&#123;&#123; i.attrsText &#125;&#125;&lt;/p&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                  &lt;/a&gt;</span><br><span class="line">                &lt;/td&gt;</span><br><span class="line">                &lt;td&gt;&amp;yen;&#123;&#123; i.price &#125;&#125;&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;&#123;&#123; i.price &#125;&#125;&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;&amp;yen;&#123;&#123; i.totalPrice &#125;&#125;&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;&amp;yen;&#123;&#123; i.totalPayPrice &#125;&#125;&lt;/td&gt;</span><br><span class="line">              &lt;/tr&gt;</span><br><span class="line">            &lt;/tbody&gt;</span><br><span class="line">          &lt;/table&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;!-- 配送时间 --&gt;</span><br><span class="line">        &lt;h3 class=&quot;box-title&quot;&gt;配送时间&lt;/h3&gt;</span><br><span class="line">        &lt;div class=&quot;box-body&quot;&gt;</span><br><span class="line">          &lt;a class=&quot;my-btn active&quot; href=&quot;javascript:;&quot;&gt;不限送货时间：周一至周日&lt;/a&gt;</span><br><span class="line">          &lt;a class=&quot;my-btn&quot; href=&quot;javascript:;&quot;&gt;工作日送货：周一至周五&lt;/a&gt;</span><br><span class="line">          &lt;a class=&quot;my-btn&quot; href=&quot;javascript:;&quot;&gt;双休日、假日送货：周六至周日&lt;/a&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;!-- 支付方式 --&gt;</span><br><span class="line">        &lt;h3 class=&quot;box-title&quot;&gt;支付方式&lt;/h3&gt;</span><br><span class="line">        &lt;div class=&quot;box-body&quot;&gt;</span><br><span class="line">          &lt;a class=&quot;my-btn active&quot; href=&quot;javascript:;&quot;&gt;在线支付&lt;/a&gt;</span><br><span class="line">          &lt;a class=&quot;my-btn&quot; href=&quot;javascript:;&quot;&gt;货到付款&lt;/a&gt;</span><br><span class="line">          &lt;span style=&quot;color:#999&quot;&gt;货到付款需付5元手续费&lt;/span&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;!-- 金额明细 --&gt;</span><br><span class="line">        &lt;h3 class=&quot;box-title&quot;&gt;金额明细&lt;/h3&gt;</span><br><span class="line">        &lt;div class=&quot;box-body&quot;&gt;</span><br><span class="line">          &lt;div class=&quot;total&quot;&gt;</span><br><span class="line">            &lt;dl&gt;</span><br><span class="line">              &lt;dt&gt;商品件数：&lt;/dt&gt;</span><br><span class="line">              &lt;dd&gt;&#123;&#123; checkInfo.summary?.goodsCount &#125;&#125;件&lt;/dd&gt;</span><br><span class="line">            &lt;/dl&gt;</span><br><span class="line">            &lt;dl&gt;</span><br><span class="line">              &lt;dt&gt;商品总价：&lt;/dt&gt;</span><br><span class="line">              &lt;dd&gt;¥&#123;&#123; checkInfo.summary?.totalPrice.toFixed(2) &#125;&#125;&lt;/dd&gt;</span><br><span class="line">            &lt;/dl&gt;</span><br><span class="line">            &lt;dl&gt;</span><br><span class="line">              &lt;dt&gt;运&lt;i&gt;&lt;/i&gt;费：&lt;/dt&gt;</span><br><span class="line">              &lt;dd&gt;¥&#123;&#123; checkInfo.summary?.postFee.toFixed(2) &#125;&#125;&lt;/dd&gt;</span><br><span class="line">            &lt;/dl&gt;</span><br><span class="line">            &lt;dl&gt;</span><br><span class="line">              &lt;dt&gt;应付总额：&lt;/dt&gt;</span><br><span class="line">              &lt;dd class=&quot;price&quot;&gt;&#123;&#123; checkInfo.summary?.totalPayPrice.toFixed(2) &#125;&#125;&lt;/dd&gt;</span><br><span class="line">            &lt;/dl&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;!-- 提交订单 --&gt;</span><br><span class="line">        &lt;div class=&quot;submit&quot;&gt;</span><br><span class="line">          &lt;el-button type=&quot;primary&quot; size=&quot;large&quot; &gt;提交订单&lt;/el-button&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">  &lt;!-- 切换地址 --&gt;</span><br><span class="line">  &lt;!-- 添加地址 --&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped lang=&quot;scss&quot;&gt;</span><br><span class="line">.xtx-pay-checkout-page &#123;</span><br><span class="line">  margin-top: 20px;</span><br><span class="line"></span><br><span class="line">  .wrapper &#123;</span><br><span class="line">    background: #fff;</span><br><span class="line">    padding: 0 20px;</span><br><span class="line"></span><br><span class="line">    .box-title &#123;</span><br><span class="line">      font-size: 16px;</span><br><span class="line">      font-weight: normal;</span><br><span class="line">      padding-left: 10px;</span><br><span class="line">      line-height: 70px;</span><br><span class="line">      border-bottom: 1px solid #f5f5f5;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .box-body &#123;</span><br><span class="line">      padding: 20px 0;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.address &#123;</span><br><span class="line">  border: 1px solid #f5f5f5;</span><br><span class="line">  display: flex;</span><br><span class="line">  align-items: center;</span><br><span class="line"></span><br><span class="line">  .text &#123;</span><br><span class="line">    flex: 1;</span><br><span class="line">    min-height: 90px;</span><br><span class="line">    display: flex;</span><br><span class="line">    align-items: center;</span><br><span class="line"></span><br><span class="line">    .none &#123;</span><br><span class="line">      line-height: 90px;</span><br><span class="line">      color: #999;</span><br><span class="line">      text-align: center;</span><br><span class="line">      width: 100%;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &gt;ul &#123;</span><br><span class="line">      flex: 1;</span><br><span class="line">      padding: 20px;</span><br><span class="line"></span><br><span class="line">      li &#123;</span><br><span class="line">        line-height: 30px;</span><br><span class="line"></span><br><span class="line">        span &#123;</span><br><span class="line">          color: #999;</span><br><span class="line">          margin-right: 5px;</span><br><span class="line"></span><br><span class="line">          &gt;i &#123;</span><br><span class="line">            width: 0.5em;</span><br><span class="line">            display: inline-block;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &gt;a &#123;</span><br><span class="line">      color: $xtxColor;</span><br><span class="line">      width: 160px;</span><br><span class="line">      text-align: center;</span><br><span class="line">      height: 90px;</span><br><span class="line">      line-height: 90px;</span><br><span class="line">      border-right: 1px solid #f5f5f5;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .action &#123;</span><br><span class="line">    width: 420px;</span><br><span class="line">    text-align: center;</span><br><span class="line"></span><br><span class="line">    .btn &#123;</span><br><span class="line">      width: 140px;</span><br><span class="line">      height: 46px;</span><br><span class="line">      line-height: 44px;</span><br><span class="line">      font-size: 14px;</span><br><span class="line"></span><br><span class="line">      &amp;:first-child &#123;</span><br><span class="line">        margin-right: 10px;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.goods &#123;</span><br><span class="line">  width: 100%;</span><br><span class="line">  border-collapse: collapse;</span><br><span class="line">  border-spacing: 0;</span><br><span class="line"></span><br><span class="line">  .info &#123;</span><br><span class="line">    display: flex;</span><br><span class="line">    text-align: left;</span><br><span class="line"></span><br><span class="line">    img &#123;</span><br><span class="line">      width: 70px;</span><br><span class="line">      height: 70px;</span><br><span class="line">      margin-right: 20px;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .right &#123;</span><br><span class="line">      line-height: 24px;</span><br><span class="line"></span><br><span class="line">      p &#123;</span><br><span class="line">        &amp;:last-child &#123;</span><br><span class="line">          color: #999;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  tr &#123;</span><br><span class="line">    th &#123;</span><br><span class="line">      background: #f5f5f5;</span><br><span class="line">      font-weight: normal;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    td,</span><br><span class="line">    th &#123;</span><br><span class="line">      text-align: center;</span><br><span class="line">      padding: 20px;</span><br><span class="line">      border-bottom: 1px solid #f5f5f5;</span><br><span class="line"></span><br><span class="line">      &amp;:first-child &#123;</span><br><span class="line">        border-left: 1px solid #f5f5f5;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      &amp;:last-child &#123;</span><br><span class="line">        border-right: 1px solid #f5f5f5;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.my-btn &#123;</span><br><span class="line">  width: 228px;</span><br><span class="line">  height: 50px;</span><br><span class="line">  border: 1px solid #e4e4e4;</span><br><span class="line">  text-align: center;</span><br><span class="line">  line-height: 48px;</span><br><span class="line">  margin-right: 25px;</span><br><span class="line">  color: #666666;</span><br><span class="line">  display: inline-block;</span><br><span class="line"></span><br><span class="line">  &amp;.active,</span><br><span class="line">  &amp;:hover &#123;</span><br><span class="line">    border-color: $xtxColor;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.total &#123;</span><br><span class="line">  dl &#123;</span><br><span class="line">    display: flex;</span><br><span class="line">    justify-content: flex-end;</span><br><span class="line">    line-height: 50px;</span><br><span class="line"></span><br><span class="line">    dt &#123;</span><br><span class="line">      i &#123;</span><br><span class="line">        display: inline-block;</span><br><span class="line">        width: 2em;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    dd &#123;</span><br><span class="line">      width: 240px;</span><br><span class="line">      text-align: right;</span><br><span class="line">      padding-right: 70px;</span><br><span class="line"></span><br><span class="line">      &amp;.price &#123;</span><br><span class="line">        font-size: 20px;</span><br><span class="line">        color: $priceColor;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.submit &#123;</span><br><span class="line">  text-align: right;</span><br><span class="line">  padding: 60px;</span><br><span class="line">  border-top: 1px solid #f5f5f5;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.addressWrapper &#123;</span><br><span class="line">  max-height: 500px;</span><br><span class="line">  overflow-y: auto;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.text &#123;</span><br><span class="line">  flex: 1;</span><br><span class="line">  min-height: 90px;</span><br><span class="line">  display: flex;</span><br><span class="line">  align-items: center;</span><br><span class="line"></span><br><span class="line">  &amp;.item &#123;</span><br><span class="line">    border: 1px solid #f5f5f5;</span><br><span class="line">    margin-bottom: 10px;</span><br><span class="line">    cursor: pointer;</span><br><span class="line"></span><br><span class="line">    &amp;.active,</span><br><span class="line">    &amp;:hover &#123;</span><br><span class="line">      border-color: $xtxColor;</span><br><span class="line">      background: lighten($xtxColor, 50%);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &gt;ul &#123;</span><br><span class="line">      padding: 10px;</span><br><span class="line">      font-size: 14px;</span><br><span class="line">      line-height: 30px;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<h2 id="2-配置路由-2"><a href="#2-配置路由-2" class="headerlink" title="2. 配置路由"></a>2. 配置路由</h2><h2 id="3-封装接口"><a href="#3-封装接口" class="headerlink" title="3. 封装接口"></a>3. 封装接口</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> request <span class="keyword">from</span> <span class="string">&#x27;@/utils/request&#x27;</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取结算信息</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">getCheckoutInfoAPI</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>:<span class="string">&#x27;/member/order/pre&#x27;</span></span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="4-渲染数据"><a href="#4-渲染数据" class="headerlink" title="4. 渲染数据"></a>4. 渲染数据</h2><h1 id="切换地址-打开弹框交互"><a href="#切换地址-打开弹框交互" class="headerlink" title="切换地址-打开弹框交互"></a>切换地址-打开弹框交互</h1><h2 id="1-准备弹框模版"><a href="#1-准备弹框模版" class="headerlink" title="1. 准备弹框模版"></a>1. 准备弹框模版</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-dialog</span> <span class="attr">title</span>=<span class="string">&quot;切换收货地址&quot;</span> <span class="attr">width</span>=<span class="string">&quot;30%&quot;</span> <span class="attr">center</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;addressWrapper&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;text item&quot;</span> <span class="attr">v-for</span>=<span class="string">&quot;item in checkInfo.userAddresses&quot;</span>  <span class="attr">:key</span>=<span class="string">&quot;item.id&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>收<span class="tag">&lt;<span class="name">i</span> /&gt;</span>货<span class="tag">&lt;<span class="name">i</span> /&gt;</span>人：<span class="tag">&lt;/<span class="name">span</span>&gt;</span>&#123;&#123; item.receiver &#125;&#125; <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>联系方式：<span class="tag">&lt;/<span class="name">span</span>&gt;</span>&#123;&#123; item.contact &#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>收货地址：<span class="tag">&lt;/<span class="name">span</span>&gt;</span>&#123;&#123; item.fullLocation + item.address &#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">template</span> #<span class="attr">footer</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;dialog-footer&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-button</span>&gt;</span>取消<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span>&gt;</span>确定<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-dialog</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="2-控制弹框打开"><a href="#2-控制弹框打开" class="headerlink" title="2. 控制弹框打开"></a>2. 控制弹框打开</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">const showDialog = ref(false)</span><br><span class="line"></span><br><span class="line">&lt;el-button size=&quot;large&quot; @click=&quot;showDialog = true&quot;&gt;切换地址&lt;/el-button&gt;</span><br><span class="line"></span><br><span class="line">&lt;el-dialog v-model=&quot;showDialog&quot; title=&quot;切换收货地址&quot; width=&quot;30%&quot; center&gt;</span><br><span class="line">    &lt;!-- 省略 --&gt;</span><br><span class="line">&lt;/el-dialog&gt;</span><br></pre></td></tr></table></figure>

<h1 id="切换地址-地址切换交互"><a href="#切换地址-地址切换交互" class="headerlink" title="切换地址-地址切换交互"></a>切换地址-地址切换交互</h1><blockquote>
<p>基础思想：记录当前点击项，通过动态class判断当前div是否有激活类名</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">// 切换地址</span><br><span class="line">const activeAddress = ref(&#123;&#125;)</span><br><span class="line">const switchAddress = (item) =&gt; &#123;</span><br><span class="line">  activeAddress.value = item</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">&lt;div class=&quot;text item&quot; </span><br><span class="line">  :class=&quot;&#123; active: activeAddress.id === item.id &#125;&quot; </span><br><span class="line">  @click=&quot;switchAddress(item)&quot;</span><br><span class="line">  :key=&quot;item.id&quot;&gt;</span><br><span class="line">  &lt;!-- 省略... --&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure>

<h1 id="创建订单生成订单ID"><a href="#创建订单生成订单ID" class="headerlink" title="创建订单生成订单ID"></a>创建订单生成订单ID</h1><h2 id="1-准备支付页组件并绑定路由"><a href="#1-准备支付页组件并绑定路由" class="headerlink" title="1. 准备支付页组件并绑定路由"></a>1. 准备支付页组件并绑定路由</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">const payInfo = &#123;&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;xtx-pay-page&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;container&quot;&gt;</span><br><span class="line">      &lt;!-- 付款信息 --&gt;</span><br><span class="line">      &lt;div class=&quot;pay-info&quot;&gt;</span><br><span class="line">        &lt;span class=&quot;icon iconfont icon-queren2&quot;&gt;&lt;/span&gt;</span><br><span class="line">        &lt;div class=&quot;tip&quot;&gt;</span><br><span class="line">          &lt;p&gt;订单提交成功！请尽快完成支付。&lt;/p&gt;</span><br><span class="line">          &lt;p&gt;支付还剩 &lt;span&gt;24分30秒&lt;/span&gt;, 超时后将取消订单&lt;/p&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;amount&quot;&gt;</span><br><span class="line">          &lt;span&gt;应付总额：&lt;/span&gt;</span><br><span class="line">          &lt;span&gt;¥&#123;&#123; payInfo.payMoney?.toFixed(2) &#125;&#125;&lt;/span&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;!-- 付款方式 --&gt;</span><br><span class="line">      &lt;div class=&quot;pay-type&quot;&gt;</span><br><span class="line">        &lt;p class=&quot;head&quot;&gt;选择以下支付方式付款&lt;/p&gt;</span><br><span class="line">        &lt;div class=&quot;item&quot;&gt;</span><br><span class="line">          &lt;p&gt;支付平台&lt;/p&gt;</span><br><span class="line">          &lt;a class=&quot;btn wx&quot; href=&quot;javascript:;&quot;&gt;&lt;/a&gt;</span><br><span class="line">          &lt;a class=&quot;btn alipay&quot; :href=&quot;payUrl&quot;&gt;&lt;/a&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;item&quot;&gt;</span><br><span class="line">          &lt;p&gt;支付方式&lt;/p&gt;</span><br><span class="line">          &lt;a class=&quot;btn&quot; href=&quot;javascript:;&quot;&gt;招商银行&lt;/a&gt;</span><br><span class="line">          &lt;a class=&quot;btn&quot; href=&quot;javascript:;&quot;&gt;工商银行&lt;/a&gt;</span><br><span class="line">          &lt;a class=&quot;btn&quot; href=&quot;javascript:;&quot;&gt;建设银行&lt;/a&gt;</span><br><span class="line">          &lt;a class=&quot;btn&quot; href=&quot;javascript:;&quot;&gt;农业银行&lt;/a&gt;</span><br><span class="line">          &lt;a class=&quot;btn&quot; href=&quot;javascript:;&quot;&gt;交通银行&lt;/a&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped lang=&quot;scss&quot;&gt;</span><br><span class="line">.xtx-pay-page &#123;</span><br><span class="line">  margin-top: 20px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.pay-info &#123;</span><br><span class="line"></span><br><span class="line">  background: #fff;</span><br><span class="line">  display: flex;</span><br><span class="line">  align-items: center;</span><br><span class="line">  height: 240px;</span><br><span class="line">  padding: 0 80px;</span><br><span class="line"></span><br><span class="line">  .icon &#123;</span><br><span class="line">    font-size: 80px;</span><br><span class="line">    color: #1dc779;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .tip &#123;</span><br><span class="line">    padding-left: 10px;</span><br><span class="line">    flex: 1;</span><br><span class="line"></span><br><span class="line">    p &#123;</span><br><span class="line">      &amp;:first-child &#123;</span><br><span class="line">        font-size: 20px;</span><br><span class="line">        margin-bottom: 5px;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      &amp;:last-child &#123;</span><br><span class="line">        color: #999;</span><br><span class="line">        font-size: 16px;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .amount &#123;</span><br><span class="line">    span &#123;</span><br><span class="line">      &amp;:first-child &#123;</span><br><span class="line">        font-size: 16px;</span><br><span class="line">        color: #999;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      &amp;:last-child &#123;</span><br><span class="line">        color: $priceColor;</span><br><span class="line">        font-size: 20px;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.pay-type &#123;</span><br><span class="line">  margin-top: 20px;</span><br><span class="line">  background-color: #fff;</span><br><span class="line">  padding-bottom: 70px;</span><br><span class="line"></span><br><span class="line">  p &#123;</span><br><span class="line">    line-height: 70px;</span><br><span class="line">    height: 70px;</span><br><span class="line">    padding-left: 30px;</span><br><span class="line">    font-size: 16px;</span><br><span class="line"></span><br><span class="line">    &amp;.head &#123;</span><br><span class="line">      border-bottom: 1px solid #f5f5f5;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .btn &#123;</span><br><span class="line">    width: 150px;</span><br><span class="line">    height: 50px;</span><br><span class="line">    border: 1px solid #e4e4e4;</span><br><span class="line">    text-align: center;</span><br><span class="line">    line-height: 48px;</span><br><span class="line">    margin-left: 30px;</span><br><span class="line">    color: #666666;</span><br><span class="line">    display: inline-block;</span><br><span class="line"></span><br><span class="line">    &amp;.active,</span><br><span class="line">    &amp;:hover &#123;</span><br><span class="line">      border-color: $xtxColor;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &amp;.alipay &#123;</span><br><span class="line">      background: url(https://cdn.cnbj1.fds.api.mi-img.com/mi-mall/7b6b02396368c9314528c0bbd85a2e06.png) no-repeat center / contain;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &amp;.wx &#123;</span><br><span class="line">      background: url(https://cdn.cnbj1.fds.api.mi-img.com/mi-mall/c66f98cff8649bd5ba722c2e8067c6ca.jpg) no-repeat center / contain;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<h2 id="2-准备生成订单接口"><a href="#2-准备生成订单接口" class="headerlink" title="2. 准备生成订单接口"></a>2. 准备生成订单接口</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 创建订单</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">createOrderAPI</span> = (<span class="params">data</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">&#x27;/member/order&#x27;</span>,</span><br><span class="line">    <span class="attr">method</span>: <span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line">    data</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="3-调用接口携带id跳转路由"><a href="#3-调用接口携带id跳转路由" class="headerlink" title="3. 调用接口携带id跳转路由"></a>3. 调用接口携带id跳转路由</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; createOrderAPI &#125; from &#x27;@/apis/checkout&#x27;</span><br><span class="line"></span><br><span class="line">// 创建订单</span><br><span class="line">const createOrder = async () =&gt; &#123;</span><br><span class="line">  const res = await createOrderAPI(&#123;</span><br><span class="line">    deliveryTimeType: 1,</span><br><span class="line">    payType: 1,</span><br><span class="line">    payChannel: 1,</span><br><span class="line">    buyerMessage: &#x27;&#x27;,</span><br><span class="line">    goods: checkInfo.value.goods.map(item =&gt; &#123;</span><br><span class="line">      return &#123;</span><br><span class="line">        skuId: item.skuId,</span><br><span class="line">        count: item.count</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;),</span><br><span class="line">    addressId: curAddress.value.id</span><br><span class="line">  &#125;)</span><br><span class="line">  const orderId = res.result.id</span><br><span class="line">  router.push(&#123;</span><br><span class="line">    path: &#x27;/pay&#x27;,</span><br><span class="line">    query: &#123;</span><br><span class="line">      id: orderId</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;!-- 提交订单 --&gt;</span><br><span class="line">    &lt;div class=&quot;submit&quot;&gt;</span><br><span class="line">      &lt;el-button @click=&quot;createOrder&quot; type=&quot;primary&quot; size=&quot;large&quot;&gt;提交订单&lt;/el-button&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure>




<h1 id=""><a href="#" class="headerlink" title=""></a><img data-src="https://cdn.nlark.com/yuque/0/2023/png/274425/1677761581263-68132341-71bc-44ad-87f1-a6f312237313.png#averageHue=%23fcfbfb&clientId=ua6735e6d-591d-4&from=paste&height=607&id=u90ca97d3&name=image.png&originHeight=1214&originWidth=2524&originalType=binary&ratio=2&rotation=0&showTitle=false&size=151442&status=done&style=none&taskId=uc2352a02-c706-49ca-ad9e-52afc5e87d8&title=&width=1262" alt="image.png"></h1><h1 id="基础数据渲染"><a href="#基础数据渲染" class="headerlink" title="基础数据渲染"></a>基础数据渲染</h1><h2 id="1-准备接口-2"><a href="#1-准备接口-2" class="headerlink" title="1. 准备接口"></a>1. 准备接口</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> request <span class="keyword">from</span> <span class="string">&#x27;@/utils/http&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">getOrderAPI</span> = (<span class="params">id</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">`/member/order/<span class="subst">$&#123;id&#125;</span>`</span></span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="2-获取数据渲染内容"><a href="#2-获取数据渲染内容" class="headerlink" title="2. 获取数据渲染内容"></a>2. 获取数据渲染内容</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; getOrderAPI &#125; from &#x27;@/apis/pay&#x27;</span><br><span class="line">import &#123; onMounted, ref &#125; from &#x27;vue&#x27;</span><br><span class="line">import &#123; useRoute &#125; from &#x27;vue-router&#x27;</span><br><span class="line">// 获取订单数据</span><br><span class="line">const route = useRoute()</span><br><span class="line">const payInfo = ref(&#123;&#125;)</span><br><span class="line">const getPayInfo = async () =&gt; &#123;</span><br><span class="line">  const res = await getOrderAPI(route.query.id)</span><br><span class="line">  payInfo.value = res.result</span><br><span class="line">&#125;</span><br><span class="line">onMounted(() =&gt; getPayInfo())</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;xtx-pay-page&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;container&quot;&gt;</span><br><span class="line">      &lt;!-- 付款信息 --&gt;</span><br><span class="line">      &lt;div class=&quot;pay-info&quot;&gt;</span><br><span class="line">        &lt;span class=&quot;icon iconfont icon-queren2&quot;&gt;&lt;/span&gt;</span><br><span class="line">        &lt;div class=&quot;tip&quot;&gt;</span><br><span class="line">          &lt;p&gt;订单提交成功！请尽快完成支付。&lt;/p&gt;</span><br><span class="line">          &lt;p&gt;支付还剩 &lt;span&gt;&#123;&#123; formatTime &#125;&#125;&lt;/span&gt;, 超时后将取消订单&lt;/p&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;amount&quot;&gt;</span><br><span class="line">          &lt;span&gt;应付总额：&lt;/span&gt;</span><br><span class="line">          &lt;span&gt;¥&#123;&#123; payInfo.payMoney?.toFixed(2) &#125;&#125;&lt;/span&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;!-- 付款方式 --&gt;</span><br><span class="line">      &lt;div class=&quot;pay-type&quot;&gt;</span><br><span class="line">        &lt;p class=&quot;head&quot;&gt;选择以下支付方式付款&lt;/p&gt;</span><br><span class="line">        &lt;div class=&quot;item&quot;&gt;</span><br><span class="line">          &lt;p&gt;支付平台&lt;/p&gt;</span><br><span class="line">          &lt;a class=&quot;btn wx&quot; href=&quot;javascript:;&quot;&gt;&lt;/a&gt;</span><br><span class="line">          &lt;a class=&quot;btn alipay&quot; :href=&quot;payUrl&quot;&gt;&lt;/a&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;item&quot;&gt;</span><br><span class="line">          &lt;p&gt;支付方式&lt;/p&gt;</span><br><span class="line">          &lt;a class=&quot;btn&quot; href=&quot;javascript:;&quot;&gt;招商银行&lt;/a&gt;</span><br><span class="line">          &lt;a class=&quot;btn&quot; href=&quot;javascript:;&quot;&gt;工商银行&lt;/a&gt;</span><br><span class="line">          &lt;a class=&quot;btn&quot; href=&quot;javascript:;&quot;&gt;建设银行&lt;/a&gt;</span><br><span class="line">          &lt;a class=&quot;btn&quot; href=&quot;javascript:;&quot;&gt;农业银行&lt;/a&gt;</span><br><span class="line">          &lt;a class=&quot;btn&quot; href=&quot;javascript:;&quot;&gt;交通银行&lt;/a&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure>

<h1 id="支付功能实现"><a href="#支付功能实现" class="headerlink" title="支付功能实现"></a>支付功能实现</h1><h2 id="1-支付携带参数"><a href="#1-支付携带参数" class="headerlink" title="1. 支付携带参数"></a>1. 支付携带参数</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 支付地址</span></span><br><span class="line"><span class="keyword">const</span> baseURL = <span class="string">&#x27;http://pcapi-xiaotuxian-front-devtest.itheima.net/&#x27;</span></span><br><span class="line"><span class="keyword">const</span> backURL = <span class="string">&#x27;http://127.0.0.1:5173/paycallback&#x27;</span></span><br><span class="line"><span class="keyword">const</span> redirectUrl = <span class="built_in">encodeURIComponent</span>(backURL)</span><br><span class="line"><span class="keyword">const</span> payUrl = <span class="string">`<span class="subst">$&#123;baseURL&#125;</span>pay/aliPay?orderId=<span class="subst">$&#123;route.query.id&#125;</span>&amp;redirect=<span class="subst">$&#123;redirectUrl&#125;</span>`</span></span><br></pre></td></tr></table></figure>

<h2 id="2-支付宝沙箱账号信息"><a href="#2-支付宝沙箱账号信息" class="headerlink" title="2. 支付宝沙箱账号信息"></a>2. 支付宝沙箱账号信息</h2><table>
<thead>
<tr>
<th>账号</th>
<th><a href="mailto:jfjbwb4477@sandbox.com">jfjbwb4477@sandbox.com</a></th>
</tr>
</thead>
<tbody><tr>
<td>登录密码</td>
<td>111111</td>
</tr>
<tr>
<td>支付密码</td>
<td>111111</td>
</tr>
</tbody></table>
<h1 id="支付结果页展示"><a href="#支付结果页展示" class="headerlink" title="支付结果页展示"></a>支付结果页展示</h1><h2 id="1-准备模版-2"><a href="#1-准备模版-2" class="headerlink" title="1. 准备模版"></a>1. 准备模版</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;xtx-pay-page&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;container&quot;&gt;</span><br><span class="line">      &lt;!-- 支付结果 --&gt;</span><br><span class="line">      &lt;div class=&quot;pay-result&quot;&gt;</span><br><span class="line">        &lt;span class=&quot;iconfont icon-queren2 green&quot;&gt;&lt;/span&gt;</span><br><span class="line">        &lt;span class=&quot;iconfont icon-shanchu red&quot;&gt;&lt;/span&gt;</span><br><span class="line">        &lt;p class=&quot;tit&quot;&gt;支付成功&lt;/p&gt;</span><br><span class="line">        &lt;p class=&quot;tip&quot;&gt;我们将尽快为您发货，收货期间请保持手机畅通&lt;/p&gt;</span><br><span class="line">        &lt;p&gt;支付方式：&lt;span&gt;支付宝&lt;/span&gt;&lt;/p&gt;</span><br><span class="line">        &lt;p&gt;支付金额：&lt;span&gt;¥200.00&lt;/span&gt;&lt;/p&gt;</span><br><span class="line">        &lt;div class=&quot;btn&quot;&gt;</span><br><span class="line">          &lt;el-button type=&quot;primary&quot; style=&quot;margin-right:20px&quot;&gt;查看订单&lt;/el-button&gt;</span><br><span class="line">          &lt;el-button&gt;进入首页&lt;/el-button&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;p class=&quot;alert&quot;&gt;</span><br><span class="line">          &lt;span class=&quot;iconfont icon-tip&quot;&gt;&lt;/span&gt;</span><br><span class="line">          温馨提示：小兔鲜儿不会以订单异常、系统升级为由要求您点击任何网址链接进行退款操作，保护资产、谨慎操作。</span><br><span class="line">        &lt;/p&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped lang=&quot;scss&quot;&gt;</span><br><span class="line">.pay-result &#123;</span><br><span class="line">  padding: 100px 0;</span><br><span class="line">  background: #fff;</span><br><span class="line">  text-align: center;</span><br><span class="line">  margin-top: 20px;</span><br><span class="line"></span><br><span class="line">  &gt;.iconfont &#123;</span><br><span class="line">    font-size: 100px;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .green &#123;</span><br><span class="line">    color: #1dc779;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .red &#123;</span><br><span class="line">    color: $priceColor;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .tit &#123;</span><br><span class="line">    font-size: 24px;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .tip &#123;</span><br><span class="line">    color: #999;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  p &#123;</span><br><span class="line">    line-height: 40px;</span><br><span class="line">    font-size: 16px;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .btn &#123;</span><br><span class="line">    margin-top: 50px;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .alert &#123;</span><br><span class="line">    font-size: 12px;</span><br><span class="line">    color: #999;</span><br><span class="line">    margin-top: 50px;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<h2 id="2-绑定路由"><a href="#2-绑定路由" class="headerlink" title="2. 绑定路由"></a>2. 绑定路由</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">path</span>: <span class="string">&#x27;paycallback&#x27;</span>, <span class="comment">// 注意路径，必须是paycallback</span></span><br><span class="line">  <span class="attr">component</span>: <span class="title class_">PayBack</span></span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>

<h2 id="3-渲染数据"><a href="#3-渲染数据" class="headerlink" title="3. 渲染数据"></a>3. 渲染数据</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; getOrderAPI &#125; from &#x27;@/apis/pay&#x27;</span><br><span class="line">import &#123; onMounted, ref &#125; from &#x27;vue&#x27;</span><br><span class="line">import &#123; useRoute &#125; from &#x27;vue-router&#x27;</span><br><span class="line">const route = useRoute()</span><br><span class="line">const orderInfo = ref(&#123;&#125;)</span><br><span class="line"></span><br><span class="line">const getOrderInfo = async () =&gt; &#123;</span><br><span class="line">  const res = await getOrderAPI(route.query.orderId)</span><br><span class="line">  orderInfo.value = res.result</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">onMounted(() =&gt; getOrderInfo())</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;xtx-pay-page&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;container&quot;&gt;</span><br><span class="line">      &lt;!-- 支付结果 --&gt;</span><br><span class="line">      &lt;div class=&quot;pay-result&quot;&gt;</span><br><span class="line">        &lt;!-- 路由参数获取到的是字符串而不是布尔值 --&gt;</span><br><span class="line">        &lt;span class=&quot;iconfont icon-queren2 green&quot; v-if=&quot;$route.query.payResult === &#x27;true&#x27;&quot;&gt;&lt;/span&gt;</span><br><span class="line">        &lt;span class=&quot;iconfont icon-shanchu red&quot; v-else&gt;&lt;/span&gt;</span><br><span class="line">        &lt;p class=&quot;tit&quot;&gt;支付&#123;&#123; $route.query.payResult === &#x27;true&#x27; ? &#x27;成功&#x27; : &#x27;失败&#x27; &#125;&#125;&lt;/p&gt;</span><br><span class="line">        &lt;p class=&quot;tip&quot;&gt;我们将尽快为您发货，收货期间请保持手机畅通&lt;/p&gt;</span><br><span class="line">        &lt;p&gt;支付方式：&lt;span&gt;支付宝&lt;/span&gt;&lt;/p&gt;</span><br><span class="line">        &lt;p&gt;支付金额：&lt;span&gt;¥&#123;&#123; orderInfo.payMoney?.toFixed(2) &#125;&#125;&lt;/span&gt;&lt;/p&gt;</span><br><span class="line">        &lt;div class=&quot;btn&quot;&gt;</span><br><span class="line">          &lt;el-button type=&quot;primary&quot; style=&quot;margin-right:20px&quot;&gt;查看订单&lt;/el-button&gt;</span><br><span class="line">          &lt;el-button&gt;进入首页&lt;/el-button&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;p class=&quot;alert&quot;&gt;</span><br><span class="line">          &lt;span class=&quot;iconfont icon-tip&quot;&gt;&lt;/span&gt;</span><br><span class="line">          温馨提示：小兔鲜儿不会以订单异常、系统升级为由要求您点击任何网址链接进行退款操作，保护资产、谨慎操作。</span><br><span class="line">        &lt;/p&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure>

<h1 id="倒计时逻辑函数封装"><a href="#倒计时逻辑函数封装" class="headerlink" title="倒计时逻辑函数封装"></a>倒计时逻辑函数封装</h1><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 封装倒计时逻辑函数</span></span><br><span class="line"><span class="keyword">import</span> &#123; computed, onUnmounted, ref &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> dayjs <span class="keyword">from</span> <span class="string">&#x27;dayjs&#x27;</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">useCountDown</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="comment">// 1. 响应式的数据</span></span><br><span class="line">  <span class="keyword">let</span> timer = <span class="literal">null</span></span><br><span class="line">  <span class="keyword">const</span> time = <span class="title function_">ref</span>(<span class="number">0</span>)</span><br><span class="line">  <span class="comment">// 格式化时间 为 xx分xx秒</span></span><br><span class="line">  <span class="keyword">const</span> formatTime = <span class="title function_">computed</span>(<span class="function">() =&gt;</span> dayjs.<span class="title function_">unix</span>(time.<span class="property">value</span>).<span class="title function_">format</span>(<span class="string">&#x27;mm分ss秒&#x27;</span>))</span><br><span class="line">  <span class="comment">// 2. 开启倒计时的函数</span></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">start</span> = (<span class="params">currentTime</span>) =&gt; &#123;</span><br><span class="line">    <span class="comment">// 开始倒计时的逻辑</span></span><br><span class="line">    <span class="comment">// 核心逻辑的编写：每隔1s就减一</span></span><br><span class="line">    time.<span class="property">value</span> = currentTime</span><br><span class="line">    timer = <span class="built_in">setInterval</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      time.<span class="property">value</span>--</span><br><span class="line">    &#125;, <span class="number">1000</span>)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 组件销毁时清除定时器</span></span><br><span class="line">  <span class="title function_">onUnmounted</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    timer &amp;&amp; <span class="built_in">clearInterval</span>(timer)</span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    formatTime,</span><br><span class="line">    start</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<h1 id="-1"><a href="#-1" class="headerlink" title=""></a><img data-src="https://cdn.nlark.com/yuque/0/2023/png/274425/1677760336386-fed69c18-9d79-4960-b4ec-8c4324c6673b.png#averageHue=%23ceba82&clientId=u225ca3dc-98f1-4&from=paste&height=568&id=udd60da26&name=image.png&originHeight=1136&originWidth=2494&originalType=binary&ratio=2&rotation=0&showTitle=false&size=1009328&status=done&style=none&taskId=ue64b7d72-2c83-40f9-9225-e3cf23b34e3&title=&width=1247" alt="image.png"></h1><h1 id="路由配置"><a href="#路由配置" class="headerlink" title="路由配置"></a>路由配置</h1><h2 id="1-准备路由模版"><a href="#1-准备路由模版" class="headerlink" title="1. 准备路由模版"></a>1. 准备路由模版</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt; &lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;container&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;xtx-member-aside&quot;&gt;</span><br><span class="line">      &lt;div class=&quot;user-manage&quot;&gt;</span><br><span class="line">        &lt;h4&gt;我的账户&lt;/h4&gt;</span><br><span class="line">        &lt;div class=&quot;links&quot;&gt;</span><br><span class="line">          &lt;RouterLink to=&quot;/member/user&quot;&gt;个人中心&lt;/RouterLink&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;h4&gt;交易管理&lt;/h4&gt;</span><br><span class="line">        &lt;div class=&quot;links&quot;&gt;</span><br><span class="line">          &lt;RouterLink to=&quot;/member/order&quot;&gt;我的订单&lt;/RouterLink&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;article&quot;&gt;</span><br><span class="line">      &lt;!-- 三级路由的挂载点 --&gt;</span><br><span class="line">      &lt;!-- &lt;RouterView /&gt; --&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped lang=&quot;scss&quot;&gt;</span><br><span class="line">.container &#123;</span><br><span class="line">  display: flex;</span><br><span class="line">  padding-top: 20px;</span><br><span class="line"></span><br><span class="line">  .xtx-member-aside &#123;</span><br><span class="line">    width: 220px;</span><br><span class="line">    margin-right: 20px;</span><br><span class="line">    border-radius: 2px;</span><br><span class="line">    background-color: #fff;</span><br><span class="line"></span><br><span class="line">    .user-manage &#123;</span><br><span class="line">      background-color: #fff;</span><br><span class="line"></span><br><span class="line">      h4 &#123;</span><br><span class="line">        font-size: 18px;</span><br><span class="line">        font-weight: 400;</span><br><span class="line">        padding: 20px 52px 5px;</span><br><span class="line">        border-top: 1px solid #f6f6f6;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      .links &#123;</span><br><span class="line">        padding: 0 52px 10px;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      a &#123;</span><br><span class="line">        display: block;</span><br><span class="line">        line-height: 1;</span><br><span class="line">        padding: 15px 0;</span><br><span class="line">        font-size: 14px;</span><br><span class="line">        color: #666;</span><br><span class="line">        position: relative;</span><br><span class="line"></span><br><span class="line">        &amp;:hover &#123;</span><br><span class="line">          color: $xtxColor;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        &amp;.active,</span><br><span class="line">        &amp;.router-link-exact-active &#123;</span><br><span class="line">          color: $xtxColor;</span><br><span class="line"></span><br><span class="line">          &amp;:before &#123;</span><br><span class="line">            display: block;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        &amp;:before &#123;</span><br><span class="line">          content: &#x27;&#x27;;</span><br><span class="line">          display: none;</span><br><span class="line">          width: 6px;</span><br><span class="line">          height: 6px;</span><br><span class="line">          border-radius: 50%;</span><br><span class="line">          position: absolute;</span><br><span class="line">          top: 19px;</span><br><span class="line">          left: -16px;</span><br><span class="line">          background-color: $xtxColor;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .article &#123;</span><br><span class="line">    width: 1000px;</span><br><span class="line">    background-color: #fff;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<h2 id="2-配置路由-3"><a href="#2-配置路由-3" class="headerlink" title="2. 配置路由"></a>2. 配置路由</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Member</span> <span class="keyword">from</span> <span class="string">&#x27;@/views/Member/index.vue&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&#x27;/member&#x27;</span>,</span><br><span class="line">    <span class="attr">component</span>: <span class="title class_">Member</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="3-准备个人信息和我的订单路由组件"><a href="#3-准备个人信息和我的订单路由组件" class="headerlink" title="3. 准备个人信息和我的订单路由组件"></a>3. 准备个人信息和我的订单路由组件</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">const userStore = &#123;&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;home-overview&quot;&gt;</span><br><span class="line">    &lt;!-- 用户信息 --&gt;</span><br><span class="line">    &lt;div class=&quot;user-meta&quot;&gt;</span><br><span class="line">      &lt;div class=&quot;avatar&quot;&gt;</span><br><span class="line">        &lt;img :src=&quot;userStore.userInfo?.avatar&quot; /&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;h4&gt;&#123;&#123; userStore.userInfo?.account &#125;&#125;&lt;/h4&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;item&quot;&gt;</span><br><span class="line">      &lt;a href=&quot;javascript:;&quot;&gt;</span><br><span class="line">        &lt;span class=&quot;iconfont icon-hy&quot;&gt;&lt;/span&gt;</span><br><span class="line">        &lt;p&gt;会员中心&lt;/p&gt;</span><br><span class="line">      &lt;/a&gt;</span><br><span class="line">      &lt;a href=&quot;javascript:;&quot;&gt;</span><br><span class="line">        &lt;span class=&quot;iconfont icon-aq&quot;&gt;&lt;/span&gt;</span><br><span class="line">        &lt;p&gt;安全设置&lt;/p&gt;</span><br><span class="line">      &lt;/a&gt;</span><br><span class="line">      &lt;a href=&quot;javascript:;&quot;&gt;</span><br><span class="line">        &lt;span class=&quot;iconfont icon-dw&quot;&gt;&lt;/span&gt;</span><br><span class="line">        &lt;p&gt;地址管理&lt;/p&gt;</span><br><span class="line">      &lt;/a&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">  &lt;div class=&quot;like-container&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;home-panel&quot;&gt;</span><br><span class="line">      &lt;div class=&quot;header&quot;&gt;</span><br><span class="line">        &lt;h4 data-v-bcb266e0=&quot;&quot;&gt;猜你喜欢&lt;/h4&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;div class=&quot;goods-list&quot;&gt;</span><br><span class="line">        &lt;!-- &lt;GoodsItem v-for=&quot;good in likeList&quot; :key=&quot;good.id&quot; :good=&quot;good&quot; /&gt; --&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped lang=&quot;scss&quot;&gt;</span><br><span class="line">.home-overview &#123;</span><br><span class="line">  height: 132px;</span><br><span class="line">  background: url(@/assets/images/center-bg.png) no-repeat center / cover;</span><br><span class="line">  display: flex;</span><br><span class="line"></span><br><span class="line">  .user-meta &#123;</span><br><span class="line">    flex: 1;</span><br><span class="line">    display: flex;</span><br><span class="line">    align-items: center;</span><br><span class="line"></span><br><span class="line">    .avatar &#123;</span><br><span class="line">      width: 85px;</span><br><span class="line">      height: 85px;</span><br><span class="line">      border-radius: 50%;</span><br><span class="line">      overflow: hidden;</span><br><span class="line">      margin-left: 60px;</span><br><span class="line"></span><br><span class="line">      img &#123;</span><br><span class="line">        width: 100%;</span><br><span class="line">        height: 100%;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    h4 &#123;</span><br><span class="line">      padding-left: 26px;</span><br><span class="line">      font-size: 18px;</span><br><span class="line">      font-weight: normal;</span><br><span class="line">      color: white;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .item &#123;</span><br><span class="line">    flex: 1;</span><br><span class="line">    display: flex;</span><br><span class="line">    align-items: center;</span><br><span class="line">    justify-content: space-around;</span><br><span class="line"></span><br><span class="line">    &amp;:first-child &#123;</span><br><span class="line">      border-right: 1px solid #f4f4f4;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    a &#123;</span><br><span class="line">      color: white;</span><br><span class="line">      font-size: 16px;</span><br><span class="line">      text-align: center;</span><br><span class="line"></span><br><span class="line">      .iconfont &#123;</span><br><span class="line">        font-size: 32px;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      p &#123;</span><br><span class="line">        line-height: 32px;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.like-container &#123;</span><br><span class="line">  margin-top: 20px;</span><br><span class="line">  border-radius: 4px;</span><br><span class="line">  background-color: #fff;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.home-panel &#123;</span><br><span class="line">  background-color: #fff;</span><br><span class="line">  padding: 0 20px;</span><br><span class="line">  margin-top: 20px;</span><br><span class="line">  height: 400px;</span><br><span class="line"></span><br><span class="line">  .header &#123;</span><br><span class="line">    height: 66px;</span><br><span class="line">    border-bottom: 1px solid #f5f5f5;</span><br><span class="line">    padding: 18px 0;</span><br><span class="line">    display: flex;</span><br><span class="line">    justify-content: space-between;</span><br><span class="line">    align-items: baseline;</span><br><span class="line"></span><br><span class="line">    h4 &#123;</span><br><span class="line">      font-size: 22px;</span><br><span class="line">      font-weight: 400;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .goods-list &#123;</span><br><span class="line">    display: flex;</span><br><span class="line">    justify-content: space-around;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">// tab列表</span><br><span class="line">const tabTypes = [</span><br><span class="line">  &#123; name: &quot;all&quot;, label: &quot;全部订单&quot; &#125;,</span><br><span class="line">  &#123; name: &quot;unpay&quot;, label: &quot;待付款&quot; &#125;,</span><br><span class="line">  &#123; name: &quot;deliver&quot;, label: &quot;待发货&quot; &#125;,</span><br><span class="line">  &#123; name: &quot;receive&quot;, label: &quot;待收货&quot; &#125;,</span><br><span class="line">  &#123; name: &quot;comment&quot;, label: &quot;待评价&quot; &#125;,</span><br><span class="line">  &#123; name: &quot;complete&quot;, label: &quot;已完成&quot; &#125;,</span><br><span class="line">  &#123; name: &quot;cancel&quot;, label: &quot;已取消&quot; &#125;</span><br><span class="line">]</span><br><span class="line">// 订单列表</span><br><span class="line">const orderList = []</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;order-container&quot;&gt;</span><br><span class="line">    &lt;el-tabs&gt;</span><br><span class="line">      &lt;!-- tab切换 --&gt;</span><br><span class="line">      &lt;el-tab-pane v-for=&quot;item in tabTypes&quot; :key=&quot;item.name&quot; :label=&quot;item.label&quot; /&gt;</span><br><span class="line"></span><br><span class="line">      &lt;div class=&quot;main-container&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;holder-container&quot; v-if=&quot;orderList.length === 0&quot;&gt;</span><br><span class="line">          &lt;el-empty description=&quot;暂无订单数据&quot; /&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div v-else&gt;</span><br><span class="line">          &lt;!-- 订单列表 --&gt;</span><br><span class="line">          &lt;div class=&quot;order-item&quot; v-for=&quot;order in orderList&quot; :key=&quot;order.id&quot;&gt;</span><br><span class="line">            &lt;div class=&quot;head&quot;&gt;</span><br><span class="line">              &lt;span&gt;下单时间：&#123;&#123; order.createTime &#125;&#125;&lt;/span&gt;</span><br><span class="line">              &lt;span&gt;订单编号：&#123;&#123; order.id &#125;&#125;&lt;/span&gt;</span><br><span class="line">              &lt;!-- 未付款，倒计时时间还有 --&gt;</span><br><span class="line">              &lt;span class=&quot;down-time&quot; v-if=&quot;order.orderState === 1&quot;&gt;</span><br><span class="line">                &lt;i class=&quot;iconfont icon-down-time&quot;&gt;&lt;/i&gt;</span><br><span class="line">                &lt;b&gt;付款截止: &#123;&#123;order.countdown&#125;&#125;&lt;/b&gt;</span><br><span class="line">              &lt;/span&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;body&quot;&gt;</span><br><span class="line">              &lt;div class=&quot;column goods&quot;&gt;</span><br><span class="line">                &lt;ul&gt;</span><br><span class="line">                  &lt;li v-for=&quot;item in order.skus&quot; :key=&quot;item.id&quot;&gt;</span><br><span class="line">                    &lt;a class=&quot;image&quot; href=&quot;javascript:;&quot;&gt;</span><br><span class="line">                      &lt;img :src=&quot;item.image&quot; alt=&quot;&quot; /&gt;</span><br><span class="line">                    &lt;/a&gt;</span><br><span class="line">                    &lt;div class=&quot;info&quot;&gt;</span><br><span class="line">                      &lt;p class=&quot;name ellipsis-2&quot;&gt;</span><br><span class="line">                        &#123;&#123; item.name &#125;&#125;</span><br><span class="line">                      &lt;/p&gt;</span><br><span class="line">                      &lt;p class=&quot;attr ellipsis&quot;&gt;</span><br><span class="line">                        &lt;span&gt;&#123;&#123; item.attrsText &#125;&#125;&lt;/span&gt;</span><br><span class="line">                      &lt;/p&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                    &lt;div class=&quot;price&quot;&gt;¥&#123;&#123; item.realPay?.toFixed(2) &#125;&#125;&lt;/div&gt;</span><br><span class="line">                    &lt;div class=&quot;count&quot;&gt;x&#123;&#123; item.quantity &#125;&#125;&lt;/div&gt;</span><br><span class="line">                  &lt;/li&gt;</span><br><span class="line">                &lt;/ul&gt;</span><br><span class="line">              &lt;/div&gt;</span><br><span class="line">              &lt;div class=&quot;column state&quot;&gt;</span><br><span class="line">                &lt;p&gt;&#123;&#123; order.orderState &#125;&#125;&lt;/p&gt;</span><br><span class="line">                &lt;p v-if=&quot;order.orderState === 3&quot;&gt;</span><br><span class="line">                  &lt;a href=&quot;javascript:;&quot; class=&quot;green&quot;&gt;查看物流&lt;/a&gt;</span><br><span class="line">                &lt;/p&gt;</span><br><span class="line">                &lt;p v-if=&quot;order.orderState === 4&quot;&gt;</span><br><span class="line">                  &lt;a href=&quot;javascript:;&quot; class=&quot;green&quot;&gt;评价商品&lt;/a&gt;</span><br><span class="line">                &lt;/p&gt;</span><br><span class="line">                &lt;p v-if=&quot;order.orderState === 5&quot;&gt;</span><br><span class="line">                  &lt;a href=&quot;javascript:;&quot; class=&quot;green&quot;&gt;查看评价&lt;/a&gt;</span><br><span class="line">                &lt;/p&gt;</span><br><span class="line">              &lt;/div&gt;</span><br><span class="line">              &lt;div class=&quot;column amount&quot;&gt;</span><br><span class="line">                &lt;p class=&quot;red&quot;&gt;¥&#123;&#123; order.payMoney?.toFixed(2) &#125;&#125;&lt;/p&gt;</span><br><span class="line">                &lt;p&gt;（含运费：¥&#123;&#123; order.postFee?.toFixed(2) &#125;&#125;）&lt;/p&gt;</span><br><span class="line">                &lt;p&gt;在线支付&lt;/p&gt;</span><br><span class="line">              &lt;/div&gt;</span><br><span class="line">              &lt;div class=&quot;column action&quot;&gt;</span><br><span class="line">                &lt;el-button  v-if=&quot;order.orderState === 1&quot; type=&quot;primary&quot;</span><br><span class="line">                  size=&quot;small&quot;&gt;</span><br><span class="line">                  立即付款</span><br><span class="line">                &lt;/el-button&gt;</span><br><span class="line">                &lt;el-button v-if=&quot;order.orderState === 3&quot; type=&quot;primary&quot; size=&quot;small&quot;&gt;</span><br><span class="line">                  确认收货</span><br><span class="line">                &lt;/el-button&gt;</span><br><span class="line">                &lt;p&gt;&lt;a href=&quot;javascript:;&quot;&gt;查看详情&lt;/a&gt;&lt;/p&gt;</span><br><span class="line">                &lt;p v-if=&quot;[2, 3, 4, 5].includes(order.orderState)&quot;&gt;</span><br><span class="line">                  &lt;a href=&quot;javascript:;&quot;&gt;再次购买&lt;/a&gt;</span><br><span class="line">                &lt;/p&gt;</span><br><span class="line">                &lt;p v-if=&quot;[4, 5].includes(order.orderState)&quot;&gt;</span><br><span class="line">                  &lt;a href=&quot;javascript:;&quot;&gt;申请售后&lt;/a&gt;</span><br><span class="line">                &lt;/p&gt;</span><br><span class="line">                &lt;p v-if=&quot;order.orderState === 1&quot;&gt;&lt;a href=&quot;javascript:;&quot;&gt;取消订单&lt;/a&gt;&lt;/p&gt;</span><br><span class="line">              &lt;/div&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">          &lt;!-- 分页 --&gt;</span><br><span class="line">          &lt;div class=&quot;pagination-container&quot;&gt;</span><br><span class="line">            &lt;el-pagination background layout=&quot;prev, pager, next&quot; /&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;/el-tabs&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped lang=&quot;scss&quot;&gt;</span><br><span class="line">.order-container &#123;</span><br><span class="line">  padding: 10px 20px;</span><br><span class="line"></span><br><span class="line">  .pagination-container &#123;</span><br><span class="line">    display: flex;</span><br><span class="line">    justify-content: center;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .main-container &#123;</span><br><span class="line">    min-height: 500px;</span><br><span class="line"></span><br><span class="line">    .holder-container &#123;</span><br><span class="line">      min-height: 500px;</span><br><span class="line">      display: flex;</span><br><span class="line">      justify-content: center;</span><br><span class="line">      align-items: center;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.order-item &#123;</span><br><span class="line">  margin-bottom: 20px;</span><br><span class="line">  border: 1px solid #f5f5f5;</span><br><span class="line"></span><br><span class="line">  .head &#123;</span><br><span class="line">    height: 50px;</span><br><span class="line">    line-height: 50px;</span><br><span class="line">    background: #f5f5f5;</span><br><span class="line">    padding: 0 20px;</span><br><span class="line">    overflow: hidden;</span><br><span class="line"></span><br><span class="line">    span &#123;</span><br><span class="line">      margin-right: 20px;</span><br><span class="line"></span><br><span class="line">      &amp;.down-time &#123;</span><br><span class="line">        margin-right: 0;</span><br><span class="line">        float: right;</span><br><span class="line"></span><br><span class="line">        i &#123;</span><br><span class="line">          vertical-align: middle;</span><br><span class="line">          margin-right: 3px;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        b &#123;</span><br><span class="line">          vertical-align: middle;</span><br><span class="line">          font-weight: normal;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .del &#123;</span><br><span class="line">      margin-right: 0;</span><br><span class="line">      float: right;</span><br><span class="line">      color: #999;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .body &#123;</span><br><span class="line">    display: flex;</span><br><span class="line">    align-items: stretch;</span><br><span class="line"></span><br><span class="line">    .column &#123;</span><br><span class="line">      border-left: 1px solid #f5f5f5;</span><br><span class="line">      text-align: center;</span><br><span class="line">      padding: 20px;</span><br><span class="line"></span><br><span class="line">      &gt;p &#123;</span><br><span class="line">        padding-top: 10px;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      &amp;:first-child &#123;</span><br><span class="line">        border-left: none;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      &amp;.goods &#123;</span><br><span class="line">        flex: 1;</span><br><span class="line">        padding: 0;</span><br><span class="line">        align-self: center;</span><br><span class="line"></span><br><span class="line">        ul &#123;</span><br><span class="line">          li &#123;</span><br><span class="line">            border-bottom: 1px solid #f5f5f5;</span><br><span class="line">            padding: 10px;</span><br><span class="line">            display: flex;</span><br><span class="line"></span><br><span class="line">            &amp;:last-child &#123;</span><br><span class="line">              border-bottom: none;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            .image &#123;</span><br><span class="line">              width: 70px;</span><br><span class="line">              height: 70px;</span><br><span class="line">              border: 1px solid #f5f5f5;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            .info &#123;</span><br><span class="line">              width: 220px;</span><br><span class="line">              text-align: left;</span><br><span class="line">              padding: 0 10px;</span><br><span class="line"></span><br><span class="line">              p &#123;</span><br><span class="line">                margin-bottom: 5px;</span><br><span class="line"></span><br><span class="line">                &amp;.name &#123;</span><br><span class="line">                  height: 38px;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                &amp;.attr &#123;</span><br><span class="line">                  color: #999;</span><br><span class="line">                  font-size: 12px;</span><br><span class="line"></span><br><span class="line">                  span &#123;</span><br><span class="line">                    margin-right: 5px;</span><br><span class="line">                  &#125;</span><br><span class="line">                &#125;</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            .price &#123;</span><br><span class="line">              width: 100px;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            .count &#123;</span><br><span class="line">              width: 80px;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      &amp;.state &#123;</span><br><span class="line">        width: 120px;</span><br><span class="line"></span><br><span class="line">        .green &#123;</span><br><span class="line">          color: $xtxColor;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      &amp;.amount &#123;</span><br><span class="line">        width: 200px;</span><br><span class="line"></span><br><span class="line">        .red &#123;</span><br><span class="line">          color: $priceColor;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      &amp;.action &#123;</span><br><span class="line">        width: 140px;</span><br><span class="line"></span><br><span class="line">        a &#123;</span><br><span class="line">          display: block;</span><br><span class="line"></span><br><span class="line">          &amp;:hover &#123;</span><br><span class="line">            color: $xtxColor;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<h2 id="4-配置三级路由"><a href="#4-配置三级路由" class="headerlink" title="4. 配置三级路由"></a>4. 配置三级路由</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">MemberInfo</span> <span class="keyword">from</span> <span class="string">&#x27;@/views/Member/components/UserInfo.vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">MemberOrder</span> <span class="keyword">from</span> <span class="string">&#x27;@/views/Member/components/UserOrder.vue&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">path</span>: <span class="string">&#x27;/member&#x27;</span>,</span><br><span class="line">  <span class="attr">component</span>: <span class="title class_">Member</span>,</span><br><span class="line">  <span class="attr">children</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="title class_">MemberInfo</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&#x27;order&#x27;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="title class_">MemberOrder</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="个人中心信息渲染"><a href="#个人中心信息渲染" class="headerlink" title="个人中心信息渲染"></a>个人中心信息渲染</h1><h2 id="1-使用Pinia数据渲染个人信息"><a href="#1-使用Pinia数据渲染个人信息" class="headerlink" title="1. 使用Pinia数据渲染个人信息"></a>1. 使用Pinia数据渲染个人信息</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">// 导入userStore</span><br><span class="line">import &#123; useUserStore &#125; from &#x27;@/stores/userStore&#x27;</span><br><span class="line">const userStore = useUserStore()</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;!-- 用户信息 --&gt;</span><br><span class="line">  &lt;div class=&quot;user-meta&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;avatar&quot;&gt;</span><br><span class="line">      &lt;img :src=&quot;userStore.userInfo?.avatar&quot; /&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;h4&gt;&#123;&#123; userStore.userInfo?.account &#125;&#125;&lt;/h4&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure>

<h2 id="2-封装猜你喜欢接口"><a href="#2-封装猜你喜欢接口" class="headerlink" title="2. 封装猜你喜欢接口"></a>2. 封装猜你喜欢接口</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">getLikeListAPI</span> = (<span class="params">&#123; limit = <span class="number">4</span> &#125;</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>:<span class="string">&#x27;/goods/relevant&#x27;</span>,</span><br><span class="line">    <span class="attr">params</span>: &#123;</span><br><span class="line">      limit </span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="3-渲染猜你喜欢数据"><a href="#3-渲染猜你喜欢数据" class="headerlink" title="3. 渲染猜你喜欢数据"></a>3. 渲染猜你喜欢数据</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; onMounted, ref &#125; from &#x27;vue&#x27;</span><br><span class="line">// 导入GoodsItem组件</span><br><span class="line">import GoodsItem from &#x27;@/views/Home/components/GoodsItem.vue&#x27;</span><br><span class="line">// 获取猜你喜欢列表</span><br><span class="line">const likeList = ref([])</span><br><span class="line">const getLikeList = async () =&gt; &#123;</span><br><span class="line">  const res = await getLikeListAPI(&#123; limit: 4 &#125;)</span><br><span class="line">  likeList.value = res.result</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">onMounted(() =&gt; getLikeList())</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">   &lt;div class=&quot;goods-list&quot;&gt;</span><br><span class="line">      &lt;GoodsItem v-for=&quot;good in likeList&quot; :key=&quot;good.id&quot; :goods=&quot;good&quot; /&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure>

<h1 id="我的订单"><a href="#我的订单" class="headerlink" title="我的订单"></a>我的订单</h1><h2 id="1-基础列表渲染"><a href="#1-基础列表渲染" class="headerlink" title="1. 基础列表渲染"></a>1. 基础列表渲染</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">params: &#123;</span></span><br><span class="line"><span class="comment">	orderState:0,</span></span><br><span class="line"><span class="comment">  page:1,</span></span><br><span class="line"><span class="comment">  pageSize:2</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">getUserOrder</span> = (<span class="params">params</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>:<span class="string">&#x27;/member/order&#x27;</span>,</span><br><span class="line">    <span class="attr">method</span>:<span class="string">&#x27;GET&#x27;</span>,</span><br><span class="line">    params</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; getUserOrder &#125; from &#x27;@/apis/order&#x27;</span><br><span class="line">import &#123; onMounted, ref &#125; from &#x27;vue&#x27;</span><br><span class="line"></span><br><span class="line">// 获取订单列表</span><br><span class="line">const orderList = ref([])</span><br><span class="line">const params = ref(&#123;</span><br><span class="line">  orderState: 0,</span><br><span class="line">  page: 1,</span><br><span class="line">  pageSize: 2</span><br><span class="line">&#125;)</span><br><span class="line">const getOrderList = async () =&gt; &#123;</span><br><span class="line">  const res = await getUserOrder(params.value)</span><br><span class="line">  orderList.value = res.result.items</span><br><span class="line">  total.value = res.result.counts</span><br><span class="line">&#125;</span><br><span class="line">onMounted(() =&gt; getOrderList())</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<h2 id="2-tab切换实现"><a href="#2-tab切换实现" class="headerlink" title="2. tab切换实现"></a>2. tab切换实现</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">// tab列表</span><br><span class="line">const tabTypes = [</span><br><span class="line">  &#123; name: &quot;all&quot;, label: &quot;全部订单&quot; &#125;,</span><br><span class="line">  &#123; name: &quot;unpay&quot;, label: &quot;待付款&quot; &#125;,</span><br><span class="line">  &#123; name: &quot;deliver&quot;, label: &quot;待发货&quot; &#125;,</span><br><span class="line">  &#123; name: &quot;receive&quot;, label: &quot;待收货&quot; &#125;,</span><br><span class="line">  &#123; name: &quot;comment&quot;, label: &quot;待评价&quot; &#125;,</span><br><span class="line">  &#123; name: &quot;complete&quot;, label: &quot;已完成&quot; &#125;,</span><br><span class="line">  &#123; name: &quot;cancel&quot;, label: &quot;已取消&quot; &#125;</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">// tab切换</span><br><span class="line">const tabChange = (type) =&gt; &#123;</span><br><span class="line">  params.value.orderState = type</span><br><span class="line">  getOrderList()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;el-tabs @tab-change=&quot;tabChange&quot;&gt;</span><br><span class="line">    &lt;!-- 省略... --&gt;</span><br><span class="line">  &lt;/el-tabs&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure>

<h2 id="3-分页逻实现"><a href="#3-分页逻实现" class="headerlink" title="3. 分页逻实现"></a>3. 分页逻实现</h2><blockquote>
<p>页数 &#x3D; 总条数 &#x2F; 每页条数</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">// 补充总条数</span><br><span class="line">const total = ref(0)</span><br><span class="line">const getOrderList = async () =&gt; &#123;</span><br><span class="line">  const res = await getUserOrder(params.value)</span><br><span class="line">  // 存入总条数</span><br><span class="line">  total.value = res.result.counts</span><br><span class="line">&#125;</span><br><span class="line">// 页数切换</span><br><span class="line">const pageChange = (page) =&gt; &#123;</span><br><span class="line">  params.value.page = page</span><br><span class="line">  getOrderList()</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">   &lt;el-pagination </span><br><span class="line">     :total=&quot;total&quot; </span><br><span class="line">     @current-change=&quot;pageChange&quot; </span><br><span class="line">     :page-size=&quot;params.pageSize&quot; </span><br><span class="line">     background</span><br><span class="line">     layout=&quot;prev, pager, next&quot; /&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure>

<h1 id="细节优化"><a href="#细节优化" class="headerlink" title="细节优化"></a>细节优化</h1><h2 id="1-默认三级路由设置"><a href="#1-默认三级路由设置" class="headerlink" title="1. 默认三级路由设置"></a>1. 默认三级路由设置</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">path</span>: <span class="string">&#x27;member&#x27;</span>,</span><br><span class="line">  <span class="attr">component</span>: <span class="title class_">Member</span>,</span><br><span class="line">  <span class="attr">children</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&#x27;&#x27;</span>, <span class="comment">// 置空path</span></span><br><span class="line">      <span class="attr">component</span>: <span class="title class_">UserInfo</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&#x27;order&#x27;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="title class_">UserOrder</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="2-订单状态显示适配"><a href="#2-订单状态显示适配" class="headerlink" title="2. 订单状态显示适配"></a>2. 订单状态显示适配</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">  // 创建格式化函数</span><br><span class="line">  const fomartPayState = (payState) =&gt; &#123;</span><br><span class="line">    const stateMap = &#123;</span><br><span class="line">      1: &#x27;待付款&#x27;,</span><br><span class="line">      2: &#x27;待发货&#x27;,</span><br><span class="line">      3: &#x27;待收货&#x27;,</span><br><span class="line">      4: &#x27;待评价&#x27;,</span><br><span class="line">      5: &#x27;已完成&#x27;,</span><br><span class="line">      6: &#x27;已取消&#x27;</span><br><span class="line">    &#125;</span><br><span class="line">    return stateMap[payState]</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;!-- 调用函数适配显示 --&gt;</span><br><span class="line">  &lt;p&gt;&#123;&#123; fomartPayState(order.orderState)&#125;&#125;&lt;/p&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure>


<h1 id="Sku组件封装"><a href="#Sku组件封装" class="headerlink" title="Sku组件封装"></a>Sku组件封装</h1><h2 id="1-准备模版渲染规格数据"><a href="#1-准备模版渲染规格数据" class="headerlink" title="1. 准备模版渲染规格数据"></a>1. 准备模版渲染规格数据</h2><blockquote>
<p>使用Vite快速创建一个Vue项目，在项目中添加请求插件axios，然后新增一个SKU组件，在根组件中把它渲染出来，下面是规格内容的基础模板</p>
</blockquote>
<p><img data-src="https://cdn.nlark.com/yuque/0/2023/png/274425/1677821818707-dc5529c0-fa8f-442a-af7a-43ad258106f2.png#averageHue=%23fcfcfc&clientId=u7dedb4ef-4c0b-4&from=paste&height=360&id=nGWnP&name=image.png&originHeight=480&originWidth=826&originalType=binary&ratio=2&rotation=0&showTitle=false&size=21008&status=done&style=none&taskId=u14f439b0-74a9-4b91-9de8-14ffcf66166&title=&width=620" alt="image.png"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; onMounted, ref &#125; from &#x27;vue&#x27;</span><br><span class="line">import axios from &#x27;axios&#x27;</span><br><span class="line">// 商品数据</span><br><span class="line">const goods = ref(&#123;&#125;)</span><br><span class="line">const getGoods = async () =&gt; &#123;</span><br><span class="line">  // 1135076  初始化就有无库存的规格</span><br><span class="line">  // 1369155859933827074 更新之后有无库存项（蓝色-20cm-中国）</span><br><span class="line">  const res = await axios.get(&#x27;http://pcapi-xiaotuxian-front-devtest.itheima.net/goods?id=1369155859933827074&#x27;)</span><br><span class="line">  goods.value = res.data.result</span><br><span class="line">&#125;</span><br><span class="line">onMounted(() =&gt; getGoods())</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;goods-sku&quot;&gt;</span><br><span class="line">    &lt;dl v-for=&quot;item in goods.specs&quot; :key=&quot;item.id&quot;&gt;</span><br><span class="line">      &lt;dt&gt;&#123;&#123; item.name &#125;&#125;&lt;/dt&gt;</span><br><span class="line">      &lt;dd&gt;</span><br><span class="line">        &lt;template v-for=&quot;val in item.values&quot; :key=&quot;val.name&quot;&gt;</span><br><span class="line">          &lt;!-- 图片类型规格 --&gt;</span><br><span class="line">          &lt;img v-if=&quot;val.picture&quot; :src=&quot;val.picture&quot; :title=&quot;val.name&quot;&gt;</span><br><span class="line">          &lt;!-- 文字类型规格 --&gt;</span><br><span class="line">          &lt;span v-else&gt;&#123;&#123; val.name &#125;&#125;&lt;/span&gt;</span><br><span class="line">        &lt;/template&gt;</span><br><span class="line">      &lt;/dd&gt;</span><br><span class="line">    &lt;/dl&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped lang=&quot;scss&quot;&gt;</span><br><span class="line">@mixin sku-state-mixin &#123;</span><br><span class="line">  border: 1px solid #e4e4e4;</span><br><span class="line">  margin-right: 10px;</span><br><span class="line">  cursor: pointer;</span><br><span class="line"></span><br><span class="line">  &amp;.selected &#123;</span><br><span class="line">    border-color: #27ba9b;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  &amp;.disabled &#123;</span><br><span class="line">    opacity: 0.6;</span><br><span class="line">    border-style: dashed;</span><br><span class="line">    cursor: not-allowed;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.goods-sku &#123;</span><br><span class="line">  padding-left: 10px;</span><br><span class="line">  padding-top: 20px;</span><br><span class="line"></span><br><span class="line">  dl &#123;</span><br><span class="line">    display: flex;</span><br><span class="line">    padding-bottom: 20px;</span><br><span class="line">    align-items: center;</span><br><span class="line"></span><br><span class="line">    dt &#123;</span><br><span class="line">      width: 50px;</span><br><span class="line">      color: #999;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    dd &#123;</span><br><span class="line">      flex: 1;</span><br><span class="line">      color: #666;</span><br><span class="line"></span><br><span class="line">      &gt;img &#123;</span><br><span class="line">        width: 50px;</span><br><span class="line">        height: 50px;</span><br><span class="line">        margin-bottom: 4px;</span><br><span class="line">        @include sku-state-mixin;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      &gt;span &#123;</span><br><span class="line">        display: inline-block;</span><br><span class="line">        height: 30px;</span><br><span class="line">        line-height: 28px;</span><br><span class="line">        padding: 0 20px;</span><br><span class="line">        margin-bottom: 4px;</span><br><span class="line">        @include sku-state-mixin;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<h2 id="2-选中和取消选中实现"><a href="#2-选中和取消选中实现" class="headerlink" title="2. 选中和取消选中实现"></a>2. 选中和取消选中实现</h2><blockquote>
<p>基本思路：</p>
<ol>
<li>每一个规格按钮都拥有自己的选中状态数据-selected，true为选中，false为取消选中</li>
<li>配合动态class，把选中状态selected作为判断条件，true让active类名显示，false让active类名不显示</li>
<li>点击的是未选中，把同一个规格的其他取消选中，当前点击项选中；点击的是已选中，直接取消</li>
</ol>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">// 省略代码</span><br><span class="line"></span><br><span class="line">// 选中和取消选中实现</span><br><span class="line">const changeSku = (item, val) =&gt; &#123;</span><br><span class="line">  // 点击的是未选中，把同一个规格的其他取消选中，当前点击项选中，点击的是已选中，直接取消</span><br><span class="line">  if (val.selected) &#123;</span><br><span class="line">    val.selected = false</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    item.values.forEach(valItem =&gt; valItem.selected = false)</span><br><span class="line">    val.selected = true</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;goods-sku&quot;&gt;</span><br><span class="line">    &lt;dl v-for=&quot;item in goods.specs&quot; :key=&quot;item.id&quot;&gt;</span><br><span class="line">      &lt;dt&gt;&#123;&#123; item.name &#125;&#125;&lt;/dt&gt;</span><br><span class="line">      &lt;dd&gt;</span><br><span class="line">        &lt;template v-for=&quot;val in item.values&quot; :key=&quot;val.name&quot;&gt;</span><br><span class="line">          &lt;img v-if=&quot;val.picture&quot; </span><br><span class="line">            @click=&quot;changeSku(item, val)&quot; </span><br><span class="line">            :class=&quot;&#123; selected: val.selected &#125;&quot; </span><br><span class="line">            :src=&quot;val.picture&quot;</span><br><span class="line">            :title=&quot;val.name&quot;&gt;</span><br><span class="line">          &lt;span v-else </span><br><span class="line">            @click=&quot;changeSku(val)&quot; </span><br><span class="line">            :class=&quot;&#123; selected: val.selected &#125;&quot;&gt;&#123;&#123; val.name &#125;&#125;&lt;/span&gt;</span><br><span class="line">        &lt;/template&gt;</span><br><span class="line">      &lt;/dd&gt;</span><br><span class="line">    &lt;/dl&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure>

<h2 id="3-规格禁用功能实现"><a href="#3-规格禁用功能实现" class="headerlink" title="3. 规格禁用功能实现"></a>3. 规格禁用功能实现</h2><h3 id="整体思路分析"><a href="#整体思路分析" class="headerlink" title="整体思路分析"></a>整体思路分析</h3><p><img data-src="https://cdn.nlark.com/yuque/0/2023/png/274425/1677747580985-234fe1bd-483d-49eb-a9cd-42e3a009a375.png#averageHue=%23f6f5f5&clientId=ucecf252d-b9c3-4&from=drop&id=ufb3b1ddd&name=1.png&originHeight=1590&originWidth=1668&originalType=binary&ratio=2&rotation=0&showTitle=false&size=292918&status=done&style=none&taskId=u676b6dfb-8657-4890-8cf8-763b4a35c62&title=" alt="1.png"></p>
<h3 id="生成路径字典"><a href="#生成路径字典" class="headerlink" title="生成路径字典"></a>生成路径字典</h3><p>幂集算法</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">function</span> <span class="title function_">bwPowerSet</span> (<span class="params">originalSet</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> subSets = []</span><br><span class="line"></span><br><span class="line">  <span class="comment">// We will have 2^n possible combinations (where n is a length of original set).</span></span><br><span class="line">  <span class="comment">// It is because for every element of original set we will decide whether to include</span></span><br><span class="line">  <span class="comment">// it or not (2 options for each set element).</span></span><br><span class="line">  <span class="keyword">const</span> numberOfCombinations = <span class="number">2</span> ** originalSet.<span class="property">length</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// Each number in binary representation in a range from 0 to 2^n does exactly what we need:</span></span><br><span class="line">  <span class="comment">// it shows by its bits (0 or 1) whether to include related element from the set or not.</span></span><br><span class="line">  <span class="comment">// For example, for the set &#123;1, 2, 3&#125; the binary number of 0b010 would mean that we need to</span></span><br><span class="line">  <span class="comment">// include only &quot;2&quot; to the current set.</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> combinationIndex = <span class="number">0</span>; combinationIndex &lt; numberOfCombinations; combinationIndex += <span class="number">1</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> subSet = []</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> setElementIndex = <span class="number">0</span>; setElementIndex &lt; originalSet.<span class="property">length</span>; setElementIndex += <span class="number">1</span>) &#123;</span><br><span class="line">      <span class="comment">// Decide whether we need to include current element into the subset or not.</span></span><br><span class="line">      <span class="keyword">if</span> (combinationIndex &amp; (<span class="number">1</span> &lt;&lt; setElementIndex)) &#123;</span><br><span class="line">        subSet.<span class="title function_">push</span>(originalSet[setElementIndex])</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Add current subset to the list of all subsets.</span></span><br><span class="line">    subSets.<span class="title function_">push</span>(subSet)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> subSets</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 创建生成路径字典对象函数</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">getPathMap</span> = (<span class="params">goods</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> pathMap = &#123;&#125;</span><br><span class="line">  <span class="comment">// 1. 得到所有有效的Sku集合 </span></span><br><span class="line">  <span class="keyword">const</span> effectiveSkus = goods.<span class="property">skus</span>.<span class="title function_">filter</span>(<span class="function"><span class="params">sku</span> =&gt;</span> sku.<span class="property">inventory</span> &gt; <span class="number">0</span>)</span><br><span class="line">  <span class="comment">// 2. 根据有效的Sku集合使用powerSet算法得到所有子集 [1,2] =&gt; [[1], [2], [1,2]]</span></span><br><span class="line">  effectiveSkus.<span class="title function_">forEach</span>(<span class="function"><span class="params">sku</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 2.1 获取可选规格值数组</span></span><br><span class="line">    <span class="keyword">const</span> selectedValArr = sku.<span class="property">specs</span>.<span class="title function_">map</span>(<span class="function"><span class="params">val</span> =&gt;</span> val.<span class="property">valueName</span>)</span><br><span class="line">    <span class="comment">// 2.2 获取可选值数组的子集</span></span><br><span class="line">    <span class="keyword">const</span> valueArrPowerSet = <span class="title function_">powerSet</span>(selectedValArr)</span><br><span class="line">    <span class="comment">// 3. 根据子集生成路径字典对象</span></span><br><span class="line">    <span class="comment">// 3.1 遍历子集 往pathMap中插入数据</span></span><br><span class="line">    valueArrPowerSet.<span class="title function_">forEach</span>(<span class="function"><span class="params">arr</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="comment">// 根据Arr得到字符串的key，约定使用-分割 [&#x27;蓝色&#x27;，&#x27;美国&#x27;] =&gt; &#x27;蓝色-美国&#x27;</span></span><br><span class="line">      <span class="keyword">const</span> key = arr.<span class="title function_">join</span>(<span class="string">&#x27;-&#x27;</span>)</span><br><span class="line">      <span class="comment">// 给pathMap设置数据</span></span><br><span class="line">      <span class="keyword">if</span> (pathMap[key]) &#123;</span><br><span class="line">        pathMap[key].<span class="title function_">push</span>(sku.<span class="property">id</span>)</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        pathMap[key] = [sku.<span class="property">id</span>]</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="keyword">return</span> pathMap</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 数据获取完毕生成路径字典</span></span><br><span class="line"><span class="keyword">let</span> pathMap = &#123;&#125;</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">getGoods</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="comment">// 1135076  初始化就有无库存的规格</span></span><br><span class="line">  <span class="comment">// 1369155859933827074 更新之后有无库存项（蓝色-20cm-中国）</span></span><br><span class="line">  <span class="keyword">const</span> res = <span class="keyword">await</span> axios.<span class="title function_">get</span>(<span class="string">&#x27;http://pcapi-xiaotuxian-front-devtest.itheima.net/goods?id=1135076&#x27;</span>)</span><br><span class="line">  goods.<span class="property">value</span> = res.<span class="property">data</span>.<span class="property">result</span></span><br><span class="line">  pathMap = <span class="title function_">getPathMap</span>(goods.<span class="property">value</span>)</span><br><span class="line">  <span class="comment">// 初始化更新按钮状态</span></span><br><span class="line">  <span class="title function_">initDisabledState</span>(goods.<span class="property">value</span>.<span class="property">specs</span>, pathMap)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="根据路径字典设置初始化状态"><a href="#根据路径字典设置初始化状态" class="headerlink" title="根据路径字典设置初始化状态"></a>根据路径字典设置初始化状态</h3><blockquote>
<p>思路：判断规格的name属性是否能在有效路径字典中找到，如果找不到就禁用</p>
</blockquote>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 1. 定义初始化函数</span></span><br><span class="line"><span class="comment">// specs：商品源数据 pathMap：路径字典</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">initDisabledState</span> = (<span class="params">specs, pathMap</span>) =&gt; &#123;</span><br><span class="line">  <span class="comment">// 约定：每一个按钮的状态由自身的disabled进行控制</span></span><br><span class="line">  specs.<span class="title function_">forEach</span>(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span><br><span class="line">    item.<span class="property">values</span>.<span class="title function_">forEach</span>(<span class="function"><span class="params">val</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="comment">// 路径字典中查找是否有数据 有-可以点击 没有-禁用</span></span><br><span class="line">      val.<span class="property">disabled</span> = !pathMap[val.<span class="property">name</span>]</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2. 在数据返回后进行初始化处理</span></span><br><span class="line"><span class="keyword">let</span> patchMap = &#123;&#125;</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">getGoods</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="comment">// 1135076  初始化就有无库存的规格</span></span><br><span class="line">  <span class="comment">// 1369155859933827074 更新之后有无库存项（蓝色-20cm-中国）</span></span><br><span class="line">  <span class="keyword">const</span> res = <span class="keyword">await</span> axios.<span class="title function_">get</span>(<span class="string">&#x27;http://pcapi-xiaotuxian-front-devtest.itheima.net/goods?id=1135076&#x27;</span>)</span><br><span class="line">  goods.<span class="property">value</span> = res.<span class="property">data</span>.<span class="property">result</span></span><br><span class="line">  pathMap = <span class="title function_">getPathMap</span>(goods.<span class="property">value</span>)</span><br><span class="line">  <span class="comment">// 初始化更新按钮状态</span></span><br><span class="line">  <span class="title function_">initDisabledState</span>(goods.<span class="property">value</span>.<span class="property">specs</span>, pathMap)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 3. 适配模板显示</span></span><br><span class="line">&lt;img :<span class="keyword">class</span>=<span class="string">&quot;&#123; selected: val.selected, disabled: val.disabled &#125;&quot;</span>/&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">span</span> <span class="attr">:class</span>=<span class="string">&quot;&#123; selected: val.selected, disabled: val.disabled &#125;&quot;</span>&gt;</span>&#123;&#123;val.name &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<h3 id="根据路径字典设置组合状态"><a href="#根据路径字典设置组合状态" class="headerlink" title="根据路径字典设置组合状态"></a>根据路径字典设置组合状态</h3><blockquote>
<p>思路：</p>
<ol>
<li>根据当前选中规格，生成顺序规格数组 &#x3D;&gt;  [‘黑色’, undefined, undefined ]</li>
<li>遍历每一个规格按钮</li>
</ol>
<p>如何规格按钮已经选中，忽略判断<br>如果规格按钮未选中，拿着按钮的name值按顺序套入匹配数组对应的位置，最后过滤掉没有值的选项，通过-进行拼接成字符串key, 去路径字典中查找，没有找到则把当前规格按钮禁用</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 获取选中匹配数组 [&#x27;黑色&#x27;,undefined,undefined]</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">getSelectedValues</span> = (<span class="params">specs</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> arr = []</span><br><span class="line">  specs.<span class="title function_">forEach</span>(<span class="function"><span class="params">spec</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> selectedVal = spec.<span class="property">values</span>.<span class="title function_">find</span>(<span class="function"><span class="params">value</span> =&gt;</span> value.<span class="property">selected</span>)</span><br><span class="line">    arr.<span class="title function_">push</span>(selectedVal ? selectedVal.<span class="property">name</span> : <span class="literal">undefined</span>)</span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="keyword">return</span> arr</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">updateDisabledState</span> = (<span class="params">specs, pathMap</span>) =&gt; &#123;</span><br><span class="line">  <span class="comment">// 约定：每一个按钮的状态由自身的disabled进行控制</span></span><br><span class="line">  specs.<span class="title function_">forEach</span>(<span class="function">(<span class="params">item, i</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> selectedValues = <span class="title function_">getSelectedValues</span>(specs)</span><br><span class="line">    item.<span class="property">values</span>.<span class="title function_">forEach</span>(<span class="function"><span class="params">val</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (val.<span class="property">selected</span>) <span class="keyword">return</span></span><br><span class="line">      <span class="keyword">const</span> _seletedValues = [...selectedValues]</span><br><span class="line">      _seletedValues[i] = val.<span class="property">name</span></span><br><span class="line">      <span class="keyword">const</span> key = _seletedValues.<span class="title function_">filter</span>(<span class="function"><span class="params">value</span> =&gt;</span> value).<span class="title function_">join</span>(<span class="string">&#x27;*&#x27;</span>)</span><br><span class="line">      <span class="comment">// 路径字典中查找是否有数据 有-可以点击 没有-禁用</span></span><br><span class="line">      val.<span class="property">disabled</span> = !pathMap[key]</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;)  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="4-产出Prop数据"><a href="#4-产出Prop数据" class="headerlink" title="4. 产出Prop数据"></a>4. 产出Prop数据</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">changeSku</span> = (<span class="params">item, val</span>) =&gt; &#123;</span><br><span class="line">  <span class="comment">// 省略...</span></span><br><span class="line">  <span class="comment">// 产出SKU对象数据</span></span><br><span class="line">  <span class="keyword">const</span> index = <span class="title function_">getSelectedValues</span>(goods.<span class="property">value</span>.<span class="property">specs</span>).<span class="title function_">findIndex</span>(<span class="function"><span class="params">item</span> =&gt;</span> item === <span class="literal">undefined</span>)</span><br><span class="line">  <span class="keyword">if</span> (index &gt; -<span class="number">1</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;找到了，信息不完整&#x27;</span>)</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;没有找到，信息完整，可以产出&#x27;</span>)</span><br><span class="line">    <span class="comment">// 获取sku对象</span></span><br><span class="line">    <span class="keyword">const</span> key = <span class="title function_">getSelectedValues</span>(goods.<span class="property">value</span>.<span class="property">specs</span>).<span class="title function_">join</span>(<span class="string">&#x27;*&#x27;</span>)</span><br><span class="line">    <span class="keyword">const</span> skuIds = pathMap[key]</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(skuIds)</span><br><span class="line">    <span class="comment">// 以skuId作为匹配项去goods.value.skus数组中找</span></span><br><span class="line">    <span class="keyword">const</span> skuObj = goods.<span class="property">value</span>.<span class="property">skus</span>.<span class="title function_">find</span>(<span class="function"><span class="params">item</span> =&gt;</span> item.<span class="property">id</span> === skuIds[<span class="number">0</span>])</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;sku对象为&#x27;</span>, skuObj)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>前端</category>
        <category>Vue</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>Vue3.0</tag>
        <tag>项目实践</tag>
      </tags>
  </entry>
</search>
